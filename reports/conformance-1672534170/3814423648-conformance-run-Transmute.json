{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "702eb545-6c05-4a8c-931f-bb7480234f11",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f9c60005-864f-4c82-a01d-6c60f7c9759f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef3f7663-709c-4404-861d-fedc06c6a870",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "52698cf1-0715-40d0-9024-cac1431eaf31"
                }
              }
            ]
          },
          {
            "id": "849f3b9e-3baf-462f-9164-f0da22f46fab",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "764e18cb-4987-4852-bd5e-b66dacaaee26",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "825167eb-9159-44e5-ab71-6cdb473d1f8f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "eac30cef-39b5-41b3-a966-c8b418bbd9d8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b4a7e376-a7d9-4fdb-ba12-c2f71668f97a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79c7bd5a-5515-46c1-a84b-151d114c09e3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eca88823-d8c2-42db-971b-52bbb5fc7b52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a39a1a46-cd66-41d2-a48a-ed898c533a5f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4bd2a189-9fb5-4765-a218-a2bd9c8afed2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9516c1ed-693d-4664-bcc1-583ef8a47fe7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b63c3ea9-5ffe-4fd0-8ffc-5107fdac93b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93f22c79-0020-4311-90e2-e02e6cfdf2b8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "520fc8c4-db7b-43e0-859f-378d7b6022ed",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f12b9f7b-be32-4a44-9878-cb5045e5ab5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98c14d59-8168-4b2f-a851-fe1b8eaec313",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1312717-220a-40eb-9b11-4f51b6963365"
            }
          }
        ]
      },
      {
        "id": "627e3907-6bad-4d20-b504-449690bfb05b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "61d34bb7-cb3a-40ec-b39e-fb21c3134a2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d31385fe-b181-458c-a328-c7c50a41352a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "acb77a3e-3e0b-4100-969b-be1d994cf864",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfacb415-254a-45b7-bbea-c5cfc965a21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab8c9ef5-9b73-4134-a90c-fb96dd00ca1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37da6c8-3fd0-412d-baf8-96699028d9e8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e331ec4-55ae-4293-868e-be37f838f960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4493ddc-703d-4e38-89c3-45e8051b27fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a283d0b6-a61d-4c90-8ef1-6f5a02c012a9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc5b966-33c1-4f60-bf05-6ccbb122fe8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25827c86-f745-4d66-a152-d98e6b61db96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45f5aed7-cf1e-4472-803c-56974e62ada1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a85f57f-30bd-4947-8bfa-14cc85c22ef7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3206d07-b235-469b-afeb-ec993b33e19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cde145c6-57c3-48c0-a76b-ad36de452363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301f5cc9-ea22-40f0-8041-1d6c759a1cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655e3bca-6e41-4be2-96e1-f5bd8bc3d576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cbe6bf-b472-4038-87d9-cbdc33cac99e",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84222958-b932-4eca-930c-b71c28ec667c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7253cd2b-a39b-46a1-9878-a56f6f80ffd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613cc8fe-200b-40b5-92bd-ba95141df028",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1690beed-41a0-4575-96a4-66f141fa318e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "348aaf5b-9666-4e75-b07d-b598c897a0e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b3fbcbb-3f4b-490a-8535-25eb36a3e29c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5e41d0f-f781-4563-81b4-7bf69c7e6102",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ddf08047-611e-498a-a9b4-1b10b4a88866"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04b6e584-8495-462a-9407-4af3286b846b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "20e4a312-e449-4ea9-a64e-48a51b4d8697"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94aefcef-e392-4ed0-86d2-4485b64c83ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f699355-e11a-42c6-9f63-1cb211f58903"
            }
          }
        ]
      },
      {
        "id": "60cc232b-7553-4a9c-84c4-e3169d80752d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6db9af73-4abe-4545-9586-99e4c9488b4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5d9c269-ffbb-49c4-b93d-938ebd5f5342",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7135e086-7fe9-4468-b947-046839966077",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26567aca-8382-4e4b-ad5f-54a22493b692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb893e7-7b83-41de-b29d-b48c8b7c2cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da25b799-3493-45d8-9e71-b72efb807c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d9893bc-1f7c-4792-9a48-f912c71e1021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d7fd83-c9bb-4d85-8f91-be9b0d65e762",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd4c8af-19b1-4a96-b6a3-586c99582f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ab64b8-6c06-4d62-b359-812dfa762710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd466fcd-d09e-43eb-bd2d-7760c0759246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5ce78aa-7ae3-432e-9c5b-acec8add5eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee8416e-c56b-4cad-a756-cf8b01dd88d0",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f06e83-8bc2-498e-900c-448ba11b0b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f111cef-e486-4833-a05e-bcf6b5e35799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0ee804-3bbb-4800-a276-aafc22f7f803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2872f70-1968-4441-aa67-5f92332f7760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5319850-c355-41f1-ac2a-cc26d876ed4c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6d8539-e2a5-4c69-aeef-89451ba49674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb300d2-9279-4c8d-a14c-134de1e6ef6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee6823e-51c4-436d-be73-679de807cc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaa625dd-c04b-44b1-a757-5631e6a68bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fba66c-ee51-488c-9abf-8a200f7d35dd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e1749c-46bd-4f41-8f1f-2b88a94bb891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f896c3-541e-4b5c-9141-b30f1209f111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf888bc-590d-4075-a99e-bff94454d741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7ee01f2-940b-4b75-b9aa-d6dccf308e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918f0630-ac21-43f9-887a-3906c05c5f12",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4eddbc6-1970-47fd-b566-725cb245c8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f757187-f282-4dde-986c-5294c6a2bb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a24010-9ecc-4e42-9de5-8287439b189c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbf4564b-0c53-45b0-9b89-2cc3e5c7c67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054b3625-47a4-4266-b18b-de4b77ec36d7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e9972b-7563-4935-829f-9bb1ebe4eeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf30197-9871-4912-8425-0e4170bf590e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbac568-adfb-409f-950f-098923e134e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a380ce4-e1fb-4419-945f-7f16a95aa98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9267b805-d04e-4757-8f3b-47bf91a5625e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97f0c6a-fa9a-45ad-8cc9-4bec4f3ecd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74c179d-ade9-41f3-b45e-c1e8f37b944b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc133d57-700f-4063-91cd-5c26a1a622d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "395198c6-395e-4e14-9064-be7e2194313b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416ec8d8-728a-463f-8978-882cbb3ed1d3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6519de4b-34e6-4ef2-8348-a6a162330f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b84b2c-2f39-44fc-8cf2-5ac6f20b4b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9b1026-13db-49bb-aad7-5699e5205c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99b5833d-fa82-4c56-ac9b-cef1446c0b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b154d1d1-c55b-40bb-a84e-c0d24f003d72",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677a11ae-bdc8-42f2-92aa-f185ab3cba52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554dcafa-67f5-4ce3-9c5d-0aac21dcd0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c67031-5389-45db-b738-850b5893d88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64544a87-810f-4fae-ae0e-0fed5d5266ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4041dfc2-e24a-482e-a9b0-ef9ed1d4f55c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833aa454-7a0d-42b4-a144-015c5b1fa663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b90572a-57eb-4a49-9921-be784dac2633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eee3c41-13cb-4e4a-be4d-0d2c48e36694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fb133ad-a074-4137-82e2-feae50da2119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38744b2-d633-40eb-89a5-9f77a39f1819",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3762473f-503d-457e-aec9-31e8455e4c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b343a5ba-6569-411c-9784-98d565f64ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa12cda3-4e9d-4f2a-8605-fd0d794872d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "184fb666-7f52-4831-9eff-035df8e0134a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1085ee0f-3f68-464d-9a12-5e92f804f756",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b365651-d5fc-4d6d-8063-33a368f60f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e478a64c-8da5-4e55-b7ac-6c5c5da86033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1870bffa-26aa-4fcf-8544-6abd8561da7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f9b04e3-cfa7-4f81-9546-72c9fa4f783a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594a487d-b21d-452c-b51e-1e618dddf621",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31bf6da-53c1-43a2-a987-9e8ca1b9ab5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee6aafa-1880-4739-9997-f256a896e073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6fb8bd-24db-4296-a59e-acf2dfae8225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d034610-304d-4c71-a834-dc1476f41c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90850a73-3196-4cdc-a95a-c9f914dedb2b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970030a0-131f-485a-bef5-5f17f86aca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ca11df-7b04-4dc5-a7af-655bec556f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fca8ed-f769-46b9-a5a0-14354bdf8c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a74723e4-bb86-439f-a167-f3cd82310335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb86da1-9bcf-4bb0-8071-dbddb068e6ab",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cb0161-d8bc-4c9a-9cb1-1e244e4ef048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8249ebf-6c68-4987-b2ee-adb04b29ac6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09579792-610f-4873-9a1f-d6db9123f656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "898e5ca1-9f5a-4cab-8984-2169646e3a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0860cf09-6ebb-4357-bb29-f21aef39331d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65aff36d-b63b-4615-9e73-e2f25a6f8e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba89076b-5e7f-4dd0-858b-17c085bfd4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e715c3-30de-4a8d-9cdd-0df5907142b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bca6895-552d-43f1-8f0f-c1e3e43f3fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84931b17-bca1-4b96-b5da-4a63c59b4481",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74bfd80-afed-4749-b5d3-eb81d9b69a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f279d475-8191-4f34-a1f5-1104fb24b208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28950772-eea1-42b6-8bc3-36279d1d6afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4672e003-c202-400b-b64e-7db62098cece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6de789b-6dbf-4ec9-ab97-12fefef3324d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b361ae61-25cd-4bc3-961a-39f01486e5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e4432e-986a-4db5-b20b-920e18880af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1245b10-2e28-4871-8b5c-d253356f38d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5b7b762-494e-479c-993e-0aac0edde0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2bfd0c-c8b0-44fe-8117-9831217fa394",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ce7157-8c8a-49bf-a6d7-ee4801128b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea7b4da-6ce8-4ed5-b212-7aabf3d01a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df120eb-c78d-4dc4-84dc-5fe39adc4243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f996e5-3d10-4bd6-861e-b49b038792f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a6e0b3-5a44-4233-b4ba-cbd60500e106",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78abbbda-b052-4868-b1a7-6a58e4869807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a898a7c-80fa-4b25-b706-b2e3b196358f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7a110e-74df-42a2-b4c0-d01509de787f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f742cd79-1f29-49e5-b767-ac9facf2922b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414747bf-702a-4be0-b0ae-d7be54779497",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d265797-a962-471b-8842-92e347f7ea7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b796ed0b-d5ab-4e1a-81a1-b9598b0e7416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b04090b-a8b9-4adc-9223-4cef0a4b7416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c4072c-197d-4a2a-8fde-ba4714c32679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaf5cf9-0b79-4a58-a855-550b06601a28",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4b3127-4b47-493c-b295-e5b5204e9acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9458de1e-bcc7-46fd-9d6b-46039bdc02b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d513872c-ef58-4504-8349-5a959479fc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c24aa4a5-e540-45e5-bc34-03be58540e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6b24e4-32e2-471a-8c7c-06b390d93e93",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cd717f-4361-44aa-b043-ee87608c35bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3653fea-bbd5-4d33-b3c6-b6612773c09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a40613e-0e07-49e0-af17-a474597e0176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0147e5-7090-4abb-b265-e348248668ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef40cf9-52dd-466e-8848-552dfbd20f8a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d8e9e7-f0ea-4ce5-8598-69ddbe47040d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d793b2-9bfc-44a1-bc78-178007b69a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7261a78-ada5-44d1-aa4b-6a51f590ed22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28c256af-7e68-4448-b1b7-c7f468ed83cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7daee3-bb02-4665-be7b-dceed40fe5d0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85337607-dbd4-49fd-98ce-5671bc3a1b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6d1841-bfda-4039-9c1a-c44cfc0658d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0151f857-e56e-432c-aa60-3a136aa5ab6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ee3696-57e6-4abe-9648-60005106319d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d1db66-9afe-46bd-9d9e-4661217e30d6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751cef93-d272-4ede-bc78-4d53c1091e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441a7463-4268-41ca-9064-8d209fa0943b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f318687-7ef3-4da2-bc01-391bc0f76854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e9f011-abd6-4ef1-96c1-870240092f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282e8520-805a-4006-a83b-1376ba22b6e3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f21c7e0-02db-42f3-bec5-2012cda60824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd01e96-213c-4b45-ad9a-d780b27f149d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a721a6-ce72-4473-82a1-6c74f5a5bb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1008b338-6d2a-41ea-9991-e335b3725e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff7a58f-58d1-4ce9-80e7-23537e1bf1e9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5937066-91fb-4602-b2b4-2e1688e2e5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcac72e7-fece-457d-be2d-b299450217d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41c1bbc-506a-4665-9778-e74436c7d97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7edffb-eba4-480e-a30a-a3c449326866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cda4230-41bd-49fe-877e-f721681b3f42",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2910f624-ec31-4f4b-bc83-9dda7d618d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1772864-bf09-45fa-85c5-50a91913e9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919a9a44-100a-4f78-9154-1e3336bb5288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebaad93-9452-4460-ad24-a0e6907b9e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3df69b9-3b97-4653-b0e8-25fe8c1d1718",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2e335b-d872-46ef-abde-1d603ad0ad3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80bcf92-5c4a-443b-8e47-0cf7c880c096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3462fb-776e-4101-a8f0-03e3eb65357a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b30219-8899-4c97-a95d-506453435515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e2d1f5-c0d3-4951-908e-e22be3a5f5fc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365f29e7-0d6e-47fa-8498-63aee96a3f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8a52f1-db90-4a61-a4ef-8a7d263914ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b48d921-1835-4cdf-855b-4b2ce28a578d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6862140b-6174-47a1-92b6-9cfeba4c11e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda6e35d-f8da-4540-a007-bd439226c27c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bee3e3-40ae-4d48-a8a7-2ca4f4384380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f082afd-1b13-4e30-82e8-d8b5d58e9f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4c0ba3-9952-4896-b4be-a3b499cc9045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbac56fa-3f84-4eb6-a2d0-e2827a4e5767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce5fe45-500a-456d-b4ab-e5c9e37de65a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e09eac-2a9e-485a-a418-a8c6dc546736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a422ff0d-20a9-4ac7-b81c-3e15cd337b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75a2578-db97-488f-865a-61ea9aa7aec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbff6ebc-b013-42b4-a09f-fe3db4b42d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a3c1fc-7855-4277-ba97-071ec6b13c4b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9840e061-3537-43f0-b007-29b90e01a48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feba9b9a-724d-4223-a549-e0507860235b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bb92a2-1a09-4abd-a047-28653100d543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07616ad0-99c1-4a6a-a731-82f9df6ae482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945cd8a1-09ec-4a30-9e77-09cae93afbe7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8784cad-38f4-45ab-b90c-a4f62fa312d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d46793b-b32e-4e41-8a37-f18949b6611a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f31ea7-e049-4db7-918e-de67d5c11bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5524f4b-d10a-400b-8150-2dd1c80b8d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052394d0-fb51-41f3-b46d-057b56d93af9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a811e7e0-bae3-407f-9227-91e67677cbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2a9f5a-eb4c-4d4f-914d-747d095b5820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87b5455-e024-4896-9c31-a6a92f55c1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff07887-8c4c-4833-80f2-70fefc6d14d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e33c8e7-f418-43bd-b687-5ca032c13e8a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887a692f-8811-4083-8e67-996beeab697b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d39d73f-5385-4e19-940e-92141467ec4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d607b307-c8c6-4b8c-9ec8-520b1f423482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca02449-5cdd-4e09-8c1c-f3b50a5e6559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9702fd34-da64-4d46-a83a-6b7fce211ce8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0670c83e-c65d-4925-a994-90b75c69a071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c142ee-8854-41ff-ad37-d5a97e53b925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4cd851-c8e6-4736-85aa-53a6ee0ea88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4a9e7a-9dd4-4006-91c4-69fa62f310e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d30074-901d-44c8-acff-0c1762817bef",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9248b0c1-2fd9-41dd-837c-5ec49a261e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ce99ea-6355-4a1a-9868-f89b559793a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc2eb75-b8e6-4c14-92d3-ddcda32671e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e91312a3-afb1-47f3-b5fb-9d60b9d55071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bac8e5-17d8-429e-95a5-7b28a2536555",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f88f5b-9c87-4d30-9d9e-02ebe5473f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6346cdf-4b5d-42b5-b0cb-ecdcb23cfdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a738cd0d-335a-4c19-8f64-0f700d1d1419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfc1f3c-2b4a-4ef8-b6c9-ec53bf62eaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2534a0-9f1a-4326-b6d4-4b934b421c5c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdee49e-23be-49fe-bb15-e5e1d7912686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae5f2bb-0c61-4d28-b48f-39530f1e0187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f984b5a1-aeee-4152-8446-c4e998986a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "64c815ae-64fb-4c08-946e-c37a85975df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ecb2d5-4a3c-455d-9979-95d8196bd0e5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03175e9d-18f6-4fdd-8476-2f9fb9e84887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7164bd-38e9-4db7-abbc-affa395780d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4448bdd3-f36c-4870-9ca9-ecabe2775b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c998c2a1-aeda-401c-959e-f8a3c6bdab04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dc62a2-b342-4ce8-ba13-9c47620e36b9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d79a38-507f-415a-8663-20277328cbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686f529a-131b-49b7-8725-ba3cf9129377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e71cb5-49b3-4234-a93a-876c02b7de39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6a6397ce-f354-4dbf-af53-2149089a0f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1756d193-859f-42fc-8603-2e5299bae13c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbf95aa-134b-4bc1-9b25-ca3edf1e77db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2456de30-1ed7-46e3-b607-da1f05872d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e159782f-622b-45de-9f51-38c06462cd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3301bc-0aa4-4b25-91c6-be382ad386e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09be503e-7282-42bf-b645-1ef85ff5760d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47880152-afa7-47df-9c78-43e2f2a4658c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3edfd59-7f15-4a63-b0dd-a0dd63f9b6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce355797-e9ea-43bd-9f76-8b45679071ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b16babc-048e-4182-953d-68f7dbc783b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c86924c-964a-4c87-8848-f557fd8c481c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7902a191-4753-4ddb-aaa4-b829fc1a7ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e967350-b80a-47e1-85d3-1e7d27347dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcb2f34-a1d8-4a28-b2ab-307b8d7187d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d749af08-3fd4-4b52-aef8-d344990817eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16660c2f-332f-4053-aa2f-f7fdeabf1edd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a756ea6-c8c6-4e82-96a7-2293d31317b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70896a27-fbd0-4c0e-b2a4-ecf4701cfb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193fe2a5-7361-40ce-89d6-3ce0eac162bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "961c8953-7fc6-427f-b1ac-1e2e69b7679b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9f9090-75f8-4bfb-ba20-482f3e4245ad",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4000a41-8ec3-4bdd-b408-b464b19bda33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37f7a71-2d60-42ba-a462-f9dae27e11f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dfec4a-0fa0-4680-afb0-fde4db1fad14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74734536-7b1c-4bc4-a2ce-fa5de8526bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03808d83-8c17-4f20-998d-b94cc293857a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe4d378-4c18-49d8-a69b-f670e3511426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f2313b-6708-4857-82f6-575593ccdd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62810e3-3c84-4dc6-8aca-5d4e368ea91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dad20c0c-9a27-4bce-a990-a08e94f36aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8650963e-f74a-4423-9a77-6fe19be8d716",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ff3c80-6dba-4de4-ba20-0a729aa757b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989edb89-51e7-4687-843e-898c88dfb5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cd01d1-44e3-42f4-a052-3c7e0dcb9e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fb4b0a-aab7-47e5-8e23-41cf0e97c32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4a6f79-afb8-4299-9edf-4553b33087d7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c5fd84-7fcf-4a78-be90-f968975242b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45635f18-63b4-43bb-8906-3369170b2ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0a94aa-d8a6-4bb1-84f6-1801fe559ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbeb7b46-5b03-424d-9f6f-92451895eab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e1c447-709b-4860-9b9e-c0079e67037f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d22a75b-fac8-426d-be41-e89614083c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3535427-4f90-4c4b-9b2c-ed80c93e2942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3f8e92-e28c-43c1-b58d-906682e4a946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1596cfa-3c31-4d65-bb54-7b154484bb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f130135-dc3b-4e62-86c8-130ed47873eb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a733b1b-4cf4-4611-bb82-9b3f58b1011e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac20ac9-7925-4fb8-ab6b-9ffcdbbdf3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b81e6d5-2a0a-411f-a016-de0876650246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6eb5e4-6070-40fd-9e82-5444cb35e47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6c5f1d-03f5-4605-9a5d-6f3a62969d00",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac70f8ac-ac93-4d1e-af9d-ec955ca37853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec50d89-06e0-4b9c-8f8b-70b5609cf978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e8f3d3-34dd-4483-aee1-65dc1d5efb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0fc9df0-8649-477b-a970-d03b3b94d886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc46765-7036-4f08-a0ea-60a4436579a6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7119625f-3ae7-4093-bc3a-fa5386621b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb80a1b-c8f5-4227-be2a-62c5a45e9a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c19d05-eab2-49a1-8009-25bc447dd2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cadf87-eef9-436a-9865-626fdd488adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acc0c9f-69c5-465b-87c4-a583fa8a5908",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bfe65b-7a95-4513-b06c-e82ab69e3076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3042ead3-39db-4c61-8635-c9f349e076fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99329fc-d756-4df5-848b-a410c8bfeba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17708076-e8d8-4079-8028-b7f6063724eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0979edf4-3ce0-4f41-8b68-588e7677c8e0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a191e8-1683-412d-a4a3-b68503a58e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df73b204-d7f9-4c10-9d83-4449c878303d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69a25b3-146a-417d-af06-577397bc0caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "80abe251-de80-479f-be0e-2824f6612d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57201c86-f39e-47ef-9fe1-7be9c212f221",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f03e9a1-5871-45b2-988a-4e3d9eb5a157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3594fc-5802-44e7-931a-bcab0c5e4f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec03cf5-f21f-4c0e-a513-f51c9d6824f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0acdfab7-6116-40d7-9c0f-291217d15308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177b8df5-1b0f-4601-a56e-403934b1ba8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd20e4ce-fbb8-403b-bb66-c0bd514877e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560c8a30-329d-4d33-914c-c1e77f6c263a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bae6cd-7ffe-4df0-9cdf-e3158cfd79e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "348ef5b2-1385-40d2-8884-e3c767f45391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64be4b8e-aa81-47be-b60a-61a837ff6afd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec89a1af-9e03-4a70-98a8-4c4170a4e011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149546ab-bdd0-4fde-ae2a-e9673ebd625d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6af2232-09b2-410f-bfe2-0293216e2eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2499d53-39fd-4561-b597-48932af79eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c2edd2-bbdd-4938-9979-bff188be0dae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc44ea05-9112-4bc4-9cba-2daf08559e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcb740d-80dd-42bb-a5e3-f7c777a5c067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb8cca9-2f22-4d14-a67b-d338ef203dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "108b59b2-6d2f-4289-a264-2ab027e28a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6945e5-9c8a-471c-9206-1a628f17b39f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4af81c-4ab5-48ba-9ff0-78a15d92351f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77222f1-3d96-4eec-882b-86d6b774dc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d8e919-cd13-4edf-88f0-81f10fe26f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0015a8de-c1a5-43f9-9d40-7c8ef57981bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c80101d-a9ac-4aab-8b14-96546a726915",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41ebe86-07d2-493a-aee9-0d2c91a0932b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08de21f-f929-40a0-a0cf-84cc15bf8a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9ac599-a498-49a1-a76d-9e0629c8814f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "00fc5053-e728-4531-9780-b0966682d149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f478ef-f36e-42bd-bd0f-7791e141b452",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8636c012-ec99-4c3b-8bb9-f5cf2ff20182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d7deaf-85f4-4a69-bf8f-a7ea441529e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3456adb6-e817-47a6-94d1-7241f2d55de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c67715-2a61-4182-b07c-c4e5b0d25535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63c85f5-bbed-474d-9116-8ffc6cd8fec8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606e7ff5-f28b-464c-a472-2c5bc21bf904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5aab93d-9b93-4479-bdd5-d5b1d28df478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0444cc3c-305c-40b9-8478-f04edca9b8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1581f0-98d9-4b03-a5c3-5e924a0ed2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17e4bd9-d7a8-4e25-882a-15b74f52454e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ddc92c-9d42-456d-bbee-ecd0b139411b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57aae9e0-712c-4061-9cfe-287ea31b45f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7748bc-72b1-4bba-9dad-6748d6e166da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54fb1bda-d5d8-43e1-8043-f1f9358a47ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f58e4d0-76b5-45a5-a872-f5fb7a7f4d69",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aab16f6-1f9a-4e06-8759-52ef3bac4e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c71141-f0bf-4e93-88a9-c7eae370aab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae6580f-93d7-4482-8ccf-c7923571c488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f986ad8-7012-4352-9e9d-5194e5e0bf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac235dd-4b1e-4b89-be61-16c51cbe2167",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5867f3bf-25d1-462e-a940-a5ec04787178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6965b9be-7afc-4c78-bcb1-eef3a1953c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dab8e0-f0b8-4338-b8e6-1adb11db6291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8659a1-916d-42c1-aa84-83104fe79191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9963ad1-acca-48f5-a9bc-c75463d2c2fb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c664fb32-996c-43b9-abf0-8dfc7cb44ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6510a726-d764-4f9d-8071-22dfef99975d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6516bbed-545f-4ad0-84ab-9beb49f23444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee1db83-ed00-482e-a5ec-c7d94b896c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccddb71f-5e37-418a-ba6b-ad586bdb2fe0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0415251f-b420-4aa8-bd05-17cf5bf1947e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f931c00-8641-4268-ac4b-cf2209b5dc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f171e3d0-cdf3-4519-8df6-a0da9fc4a551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "96761608-bb88-459c-bf62-748c43d077f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f29f40d-5b0b-43d0-ab3a-5bd89bc3e940",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986a303c-2963-403b-82ee-321d53dd1bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ce84cf-b678-4bd4-8182-537345319958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fa113a-2599-49e5-8472-03ea76d5790d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73671500-977b-4d57-95cb-ab5dff0887e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d3ac2a-f598-47a2-9310-6581762b044a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7472682-3603-415d-acbf-9a6aa61e3621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5544252-7dec-48b2-b452-868433166c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7939d29e-6e88-4f61-be77-5ea9aa0dfb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17430598-c27e-4418-8049-e4cbf922ef94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1223bd9-db7b-4979-9c5a-ef89ecccbcd4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb29e86-7f56-4d73-a2a6-67d331af1c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e645762-a2b8-49b0-b104-569c5c188117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f003c6-bf8e-4c9f-81f2-12719a9364ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0011ed6e-4b9b-4fb7-abc1-d5f56c03cd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1daa209-6252-4fc2-a56a-c49cd9db3345",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97851c3-b20f-4bb0-b93a-e34a38de0a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14c6159-af04-4293-9cbb-10479e895eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7665ef6-0914-48c8-a496-fa3b7f247f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78595e0f-38c4-4766-b67d-3f9f299195ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8df507a-d1fa-4bd3-b3e9-24889fee0bd1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432529ab-c3b7-442e-9ef1-d1a231e071d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089ba9d4-d449-4b2d-93ff-31b90bb979cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7794e30e-2e9a-477b-8685-59ba72e25b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2debfb0f-0424-4d24-bde1-ff30d7ebe02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d8cd5b-81af-4f05-a9d1-1b067fb387e4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595aa836-10ae-471f-9dea-493d02a5843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46824e1d-21c2-45fd-b688-fdd40690e542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7418c0e-d799-4946-b794-359e7adcd39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf2158e-e320-4d2a-b0a2-fa48df6cdda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e71e09-5cd1-4554-99d3-fe1143a9044e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682a3f3d-08a5-4a0f-9431-76fca54e1546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c18a067-7747-452d-9c57-1461e9890f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed65dfa-23a9-408a-9974-1b561f8c5b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6caa0f95-c579-4c51-98ad-6b51e10a24ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbf4ed2-9f66-47ac-b3fb-f212596e3e65",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9045b49f-a208-403c-9dde-62651815c6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f459d98-b06e-432f-b7fd-c90e0a87879f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e0bc9b-530d-476e-949e-042c31c20ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a70918c-1079-4d83-b1a2-3c5a6c46e967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325a3fb7-018e-4867-ace6-b2006c48258d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31176af6-d5b0-4a72-8e3e-d9b20e16cd17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4628ec09-9a8b-423a-8fe6-7a70576bf4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1aa19d-1b70-4f27-a23b-7a3b1b2ff7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "943b5418-21de-4220-8bab-67bb79164b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61814ff8-a92b-48ae-b576-fa19cc7e2079",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59a0bde-ce86-482b-9391-89b5be1ab6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51109c9c-e644-4dac-997d-0f310f9b2bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1572b6-d3d3-4344-a8da-64456ea99515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08a603cb-ea56-4c4d-8570-e7a59b9cf559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dad02e-357d-4e3f-b91a-873ad9611fc2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ea8bd2-e852-400d-8751-0117786f6c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b929219-cf0d-4ad2-8331-bbe9b95d380e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2ecabf-8b2a-4c3b-aa5c-6d65e1b300f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "028672c7-14d6-4366-bc52-481837a31730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c26c39b-256d-44bf-b142-8710f54a0102",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf80f64-f371-4f0d-b844-f7bda4f176ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e4cc50-5c11-4365-b737-0d1e14a9b548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4524aa-2a43-4fd4-b95d-04941842db73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6367fe3e-0d3b-4f19-a864-20a59c1fcf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a309d4f-e545-4bca-ab50-b5acbc457c72",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a16ba6-2360-4c56-a7b9-c93a18135070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc744eec-12da-40d5-b049-196bc964b8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6bee9c-07c2-43ae-af25-97c7e0c0ba3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0c0403-617e-4a9b-8e9e-9ecb0dea58b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bfa7bb-87a9-4c53-af4b-d7a069d2a081",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6cfa4e-433e-4a46-8fb5-a8e99703dccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5916c5e2-c417-4b83-aa34-00cb88dee55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393ffa1b-edf8-454c-b5d9-400b92f5b730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66801f73-7b8a-4a78-881d-87871a3b468f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa058e0-a1c8-48bc-a0ea-17eeff8ed141",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf929f8-4e17-4808-bfb3-3a1c04204f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b555b3-d246-4b40-97a1-bcb75e5095e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c56d80-5ca0-4687-9950-60a41f19193a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "735464a5-8004-4642-a98e-34cf0d1d6ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b012bb-156d-4718-94e0-101696159ed0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1772bf8-a1bd-4cd1-aed1-6b4946c38831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2dc707-c4d3-4fa4-b4ee-2c60142e0342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f27cba6-edcb-4f45-8154-b71d7c969871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c22a34-1613-4503-b2f2-915bdeb962b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e906335-edcc-4ff7-a513-4e28008e59ac",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed571195-364f-4f6f-9f38-a36bcfd37ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcaa9c1-01d1-430c-93fa-14d9929715a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bd8929-8809-458e-9726-a492c768bee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14ad3409-e183-459d-966a-755e3369f235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7b4149-cba8-403a-a524-a0c8c04efd32",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cf72b1-f49a-4f26-999a-60269c0f719f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935dcbad-2c2e-41ea-92db-18e3cf5e9cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e2c0cb-03eb-41de-9093-1d6ad3d9bef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "48835a10-574a-4ddc-be82-131e8f923a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d349b35a-c866-4a67-80ef-74d60efb1022",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ff71ea-fc1b-4130-a4fb-45c7ec9155a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5787478-afc7-4cee-a66a-ac7773eec92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64176903-ff74-459e-8949-1692db475555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d62237ce-57d6-46ad-9e34-d7fe0fa921b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1c1b4e-619c-4315-8c2f-6fef3a06de17",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df60e582-b834-47bd-aea7-c9126508b5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb77eaa-f3bc-492f-98ba-635dac9ff030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a230d7-f6fd-4423-9f32-dc1dbb406f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "637a2b76-4547-4073-909a-0a72c6b0893b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b218f01c-f5da-43df-9070-0ea003ece421",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1417a9f1-ea30-4bca-ab90-d296514a8a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e9fd85-ba95-41cc-9436-a9b0774cf819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d5cf48-93f4-431b-a41e-89f4997795a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "815c9004-8520-4c56-9bdc-aff7f4e6c37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7936c025-1424-462d-b32a-df560cd25a79",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa8fabd-caa4-4293-a0a1-0de61f3b6315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590f516b-2508-412f-ab74-bfe55afae5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c5aa84-78fa-4b49-984c-ac9d34e800df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4818d60-901a-452c-9581-e8e68d5090b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed11741-8119-45c6-833c-860dbd2e1629",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56865bcc-c892-49cb-b78e-b8ef2216714b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0b704a77-693a-4b79-aed0-5907b16ea4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a596ae-fab1-4e5d-901e-2f26aac0ef71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3a5995-1002-4422-a381-a199da870347"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c8d3e1e-f5f6-494b-84e0-f41a0e0c973d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27fe2eae-1a6c-4167-a438-5bd97d716167",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf8ad4d-89cd-4f7e-9230-c8adaeb77a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad29153a-d0f5-4fed-a8ff-10250cf84d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1642d4-1a60-4ff9-a40a-45e34b4dd9a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "2f6de217-46ef-4e16-a5b4-923511a70f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4108d2d6-6c0b-43aa-ab38-cba1efe44b56",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497d99b0-2309-49a4-aefc-6d38839dcd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "625172d0-2779-470c-859f-93935c0d8615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1761b6a9-19ec-409a-bb19-9c28685de1de",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c76c0b45-320e-4e0a-ac76-0c467f6bc222"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5398bff7-fcd0-49d4-a391-76c70370debe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04894438-51fc-4117-83a2-52a627d4cd7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3ba0315-c573-4db0-b703-ca0eb5129a42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "012197cd-50a9-4891-8333-7491542f6e3a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b063039f-cf5b-4291-9d02-b559464da39b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c974010a-852a-4be8-b0bc-aaceb39d0db2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0983e8cc-69fb-4df6-b82d-293200bb2ea5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41d8f862-9c25-4891-b2ab-1145cfc07ca6"
                }
              }
            ]
          },
          {
            "id": "9d7b3882-861b-4caf-a43d-d6b27c61b528",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0e9b5a05-3979-408e-9d72-a1255e3bdc61",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fff37ed1-4360-41a6-85f8-4aa76ac12eaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b97d7d5c-1ddc-4313-9111-9f3dbd1a2d67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9793546d-cdac-4b7a-85ca-24bbad915f98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67479e48-8f8a-412a-98db-e5c1bbba68cd"
                    }
                  }
                ]
              },
              {
                "id": "23447360-43bb-45d1-84d2-bd552f11394f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88394f51-7981-40c4-84a0-63733de5a168",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c27d23fe-0dad-4b66-9488-653930717114"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dc576f9-ca66-442b-bca4-db258df3734b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "70258b25-1379-42fb-b396-add1561e289f"
                    }
                  }
                ]
              },
              {
                "id": "bb31b5c8-2328-42e7-95ad-8556f306a18d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d8b9678-5838-4748-9848-e6a5c9fd783b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "201f9e8d-e933-4ecb-88f6-ae000b7250b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da859657-2b03-410a-9a9a-82b8844bf0a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ff935edd-3d49-46d1-bd5a-c83101a50f5b"
                    }
                  }
                ]
              },
              {
                "id": "14a00327-827b-4571-b7ce-7c43db8a7726",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe782208-0f42-4a27-b198-6538bd63bb15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bed72529-c525-4ad3-9fbe-2019fc39e9cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f208eaa-8177-4ceb-b372-c0803d099c9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a5f8fe30-a9a7-46a4-a123-6304ebc2c98d"
                    }
                  }
                ]
              },
              {
                "id": "23fc6fe1-65c1-4332-b735-923569977c47",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9ee847a-3c94-4107-96c9-d4b93864c775",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9271267b-b2de-4438-8325-739b84386ab8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5af0198-d711-4314-88b8-5733ee5cd85a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca21215f-440b-46df-b301-5c885d63ecbc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0f74cef-263a-487f-b8e5-91a29fc676e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6aebed78-6056-4c1b-9300-98e2045b2ea9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "341d2c4a-6a99-44f8-b6ce-8919e1442148",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "826e536c-f99e-4214-b2b0-feaae0ba8d50"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "739cccf8-93cd-4a7d-b515-36f9e5166b62",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bc33dcf2-b693-4cc0-bab2-3adf200ee349"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1aed89f-0712-4835-968f-fb027f3a308d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fc1c3fb-960a-4932-b2f4-8965795b3ea6"
            }
          }
        ]
      },
      {
        "id": "67d15fea-4030-4f0b-8719-74f9774600b6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "48d3caf2-b423-426d-9a3c-03cc5865f149",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b47ac49-2c16-4f0f-9af6-6c7b3b409f3c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86c1e028-62fe-4878-8cf0-5602e8444fd6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bf938e-1029-404f-b20b-0170e4b76991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a463b00-ea84-4273-9fe3-76e682d0a192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bbe280-18be-4c65-8513-3168aa5ff1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "890fadcd-a332-4b20-81d4-c8f71adaed60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e650421-d1ec-47e7-8450-dd252e882f80",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db83fc16-cffa-4003-b509-4cea402f02ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f410744-9690-49eb-9453-c7e5c7fffe1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a35c85-086c-4f93-a6c2-8c03dc9c8488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0388d8-a27e-4bef-8b71-a129aace521d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3542a4c9-838a-4fb3-ad9a-da9f87a3535f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac382d34-7027-400c-a2ab-4809f7ca9d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe3604b-a549-47f0-8598-7a4b332c90e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c32653-2a03-418f-995f-b510df9561f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc672e1-029e-417e-a331-e0068fdfe684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8619164-e69d-43e4-add6-a1c667344fe1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5361db-2334-43cc-86db-fc940e4afa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897cde43-1d01-4cde-85b1-39fe19d3db66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a6b755-1082-4fbc-8013-d0953c33f2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f12f32-0cb6-4dd3-a2df-52336924407c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cce5c2-bb5b-47e1-8737-930bd94d928b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00959530-faf4-45f9-9438-eace5fd19f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a687c5-1b17-4534-a1e8-56d92b2d3b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daea255c-ce16-4c58-bc0c-35054bf555e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ece0a80-4066-44d0-a107-1b9555dc5b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0fe823-ec47-48f2-bbd5-20329b2a9471",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d06b6be-eb09-40e5-a2b4-d612471b695f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693f3bb7-1906-453f-a09f-e9d1b159719c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba7af70-a7fb-45aa-bdb2-cad6e87d056a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf4af38-f855-4fc5-acb9-66352b662326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f53186-e77d-4175-808c-7fb06ac1afae",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3b8d21-42b0-4fd5-928d-8a65154ec048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae1e32b-41f9-4fb8-8a6b-60ce32b67dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fd64a4-6dae-446b-ae2a-71687d27bb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff033686-d302-42e1-a04c-527c1b0e57a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f6dc05-84e0-4c3b-98ee-008b498dabc5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6a7316-3319-4d3f-9aef-130af3c752f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ad9ed5-f516-464d-8948-fb84f31277b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a505b24d-bcd2-4610-8363-03eefec7aac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "868baa67-e5ed-48cf-82c1-a2a6d1c59e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db50a14-ed85-4853-80de-f006cc7a3ae2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd00e33a-d709-47a3-828b-8a8b13aacc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272b4005-4287-4f7e-aaaa-88b4b003caee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f498ef4-10fd-4a64-9248-1274e3582ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02db4ca6-671d-4969-9f81-a5481a4a1dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95543cc1-c467-49ce-b5c5-9c706232afc1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9671a3ff-e3f9-4bae-ab03-dd1e61650ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca1a1a1-a7a6-48c0-8848-4f6af968b66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4e5f98-220d-4c9c-9d56-264e4407cfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d4a932-fdc7-4eb3-bf08-09ce1fa21397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f398eb-979c-4e2e-b0f6-ddc8415c3c67",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf71131-267f-4632-aee5-9e113300e2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35a87e2-3558-411c-865f-14f9aefc2324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd03dda6-34a4-4deb-957b-90a92ecdcc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "46a75c5f-006e-4c85-8913-4bbe2a2c0a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84515154-1286-4dd7-a5b8-8a8b88ea08ce",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc22342-8d2a-4fa3-af0e-163ced6b6c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b889824b-46ac-409e-aef0-99ee3d2cea1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6c1a71-db12-40a7-b02f-f60781f5b52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af5a3dc5-e013-475c-9252-0ec473545417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4987980-d478-42ad-a4a3-74c54a932a9f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dca2d8-9458-4664-b252-707c58ba909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edd68b5-738c-4565-b10b-5cc7514a93be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c374be7e-b358-441e-92ce-a5abd1d80d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e60f4d7-c86e-4178-9aa1-14e944abde96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa2f83f-2c19-4435-b11c-4be662832863",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f6a7a2-7235-4009-a867-11ae9267d001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74ce94d-c427-420e-b133-bb26a82737bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fae365c-58df-429e-aca1-3587b11ef2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7ce7cd-2880-4fe4-907d-562d37d5bfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a50354-20cd-4f40-8a17-bc3f14a61d55",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3533ce94-05e7-4efd-9715-83082ec26014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38259f91-9844-44cb-9783-254f68011eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8206000-83ca-4380-9e1a-e4ffe1904d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "07b559cd-e424-466b-8d85-198bc153c55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb587c3-2a56-422e-8729-85f8e26c3dcc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e33617-659c-41da-ab01-1fd47ff83994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f3200c-8996-4711-8d0f-73b61e406e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0294dd5b-c7f5-4efe-82af-4d93c17304cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a80ce2b-f30b-4125-b7b5-0a0073e5ab4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea551e0-0cab-4d3d-9813-9d5b31033cef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2daf96-772c-4e08-b295-5747afbf1051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222641fe-b8da-430a-a394-3dccbce38641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56224aa-a094-45e8-a0ef-3bcbbdb6d40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "192a6d0c-37f7-454c-8940-a9e0a641760f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be06f2ef-17c0-47b2-bfd5-73a631e4d3d3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44911b80-a5b5-4345-804b-11289a5209f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46be14c-610b-4bdb-9a28-e26091535f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf220705-8639-42bb-a129-50173bdaf0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "96919c9d-8dbf-41f3-96bc-9d7de1e56a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9277c026-754d-4548-b512-7561d7d2c56d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a646a3c-b697-4b49-8da7-363ebc4c8fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9dbdd3-2670-4b4f-934c-ffb63b06f0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5122b53d-9237-4e94-a458-e0e4ba1044cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdfe390-4eaa-441f-b279-50c12d1ae5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb708989-29e9-47a4-97fd-8f75c66f6c7d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1a4e29-9e2c-480b-93df-829c239063da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09424b2f-529a-4bf6-b911-8740cb950017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee938ed5-6846-4c58-9d91-fd6f24b5b07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61057df-06da-4109-b74f-4152eb7034d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605e74dc-a15b-45a2-89f8-7760975913ee",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d66d9ca-2444-4cf8-8451-9c412774903b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3828924f-4f60-4097-950a-48d85cec1d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79710143-79a4-4c24-83ce-ce85f9ca124f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d38089b-ceae-4e71-82ea-035f037c3cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26122b43-1585-4020-aa26-015511c18700",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba92e8d-dc62-4ce5-a795-126bfb561a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0092e3bc-6872-4684-a8ec-ffd1b20fe76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ec1d86-5436-4112-80b0-12353d0e8982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "116129b0-18e2-4b16-9652-3c77db4068d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2155b240-4195-4a55-bfbd-b8c2112aadf0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad1e218-9462-48ba-b01c-27bc236fc0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5211013a-dfb7-4bea-9246-cde1b35f0a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e512979-1a93-4727-83a8-422ee4ee7802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fd7e79-af14-43ef-b958-616dace7498e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1269f35a-62b2-4155-bf34-e6a8a3048c93",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbec7ee-a581-4619-8e72-0784d79e6e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5eb9b54-1010-4d4f-8da1-e59f97f7bcc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5215be11-c9ac-431e-9ec5-e50075e39f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c62013d-9345-4347-b339-b2da0215827f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3918812a-bfd2-4c86-8c3d-735925c72c62",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26b118d-e647-4605-b960-0a5adea3825a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fa3b5e-33bd-4368-9533-050cbb54fe3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66949bc-6c68-4493-bde9-8a97f5c1d733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dab47d2-0ed8-4e95-8b30-f2592f4e21be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25bab6b-24ff-43d3-ab79-e104cc36d5e8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6f36ad-f90e-4047-985a-07d6db79e519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce932adf-d422-4be6-bb8d-c2f44178f622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b68d067-53e9-453d-882b-1f32fc67e8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d66debc7-9d2e-49cd-8e84-1901e7ffc6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e72b6f8-5ab4-42fc-bcb2-8f02bd3de189",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6e9950-0fbb-4185-b1fc-9473caef5eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049a6c28-d30d-4c84-8287-1ee2822c7106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4f8772-5f06-4c7a-83e1-53ad4a0fdbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d407ff-4e70-4bec-9ddc-d718fee4a7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67322632-5e07-4392-8271-78b71a951c97",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f40239-2d47-4a9d-8ea5-ad0c388b638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6708ce90-8e49-496a-b267-9e95a72290fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22aa942-62a1-44cd-b719-1e60e352103a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25928f7-f8a8-4800-877e-ec2738bfe84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4c4886-0224-454d-a6a9-abd615bef8ad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf247c0f-a789-4275-b9ba-ded053fa9cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c7e591-53ed-49b8-8984-0e29302fe24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b250ee-d388-4428-a35b-eeeb28d75023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beda94fb-be4b-4fc8-aeba-1e4cabd9696b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a736ee-37fe-4458-a6b6-7de26d710040",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0ff7ec-e586-41f1-b01e-6a83d6280e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4c27f5-5016-408b-92ef-b733e71b9a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48b8aa0-9f7c-4ffe-a635-12c55ebcd90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bd4d01-f558-4e2d-852b-e1089865d7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84053d0-149b-420a-a4ed-200aee68f5e5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f317f1-f236-4fb0-a9a6-1cb8e0e8ba65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc9c3aa-5287-403e-8d42-f270eba1d268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa121052-94e9-4450-a217-21b4dafa60fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e55ccfea-71b3-4c0c-8725-9a2c6e1a1f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5920e6ba-c2bb-4fa7-a5b0-6020fd7eba1f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea511ca-4e1d-4410-9271-65dc41bdc4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546df3cb-13fa-4de8-84d0-f59fb87e9c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42c4689-ff8c-49d9-8039-4c674da19dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc661c6-3c13-4023-b439-717d7d498745"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b4c1695-539d-4ea7-b219-7ad133a59a03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdbdb32b-6e21-4e85-bcc9-5b5ae7ac6418",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad51f49-cf9d-45fc-bf4f-053a8e92c896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acaff41f-94ec-4f48-a8cd-70bdcf411662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdcfccf-a364-4d82-b968-5edbf33d2bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a5c0450-b1e5-43ae-8f29-9a691cac7576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb97e635-bc8f-4326-ab1c-c1df06fc6a2e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc7d42d-badf-4bb9-a127-e4f81994d865",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "6b32eaf5-0cd7-4d3d-9ed3-bc6a87acdcc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0541ba4-33c7-4416-b461-00c58e8e8160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "729e9881-d4b4-4125-a6c7-9071a54a3343"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3826460-fdc4-4776-99d3-3acbb538c8c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5646c3ab-e981-462c-98ae-1097a8aedaa9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24655630-4d36-4bab-98d8-288bb71534a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d652be8b-e60e-4de3-bceb-ba92bb15b69a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdb84d65-0b70-4cab-97f9-e63d3975989d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ac87dcf-16b2-4a9e-94d1-21ae3faf6d19"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9820068c-0403-42f4-95e3-5e59161c5405",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a74d0f24-2b97-423d-a054-26b236936dca"
            }
          }
        ]
      },
      {
        "id": "8178101d-6229-4643-9c55-e6ac014a5f96",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2ef86cf9-6809-4a29-b98b-cce7ae9ef293",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0984943-2999-45b0-bf4b-8c60ff3047f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7236aee7-a8fe-4077-8967-5028865bd0ff",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780cd43f-409d-4d7c-a42a-f7b6957bb3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4d575c-c6c1-424d-8843-605edba950c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220eaf3f-e45b-4204-82cc-5c0cb4e6a783",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e8c47f-ec7c-424c-8915-0071ab11ce4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b37e462-32f6-41bb-aa61-d796c10c9007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb5f76e-bccd-4d39-8e7b-f37595bdea75",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad90900-d10a-4f21-abb4-248c1db0e3ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6295c7a-201c-4362-876d-e65ca3e7e18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892f26c2-0109-4696-beae-cd4aa3b87bc6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a642c62-1341-4353-9f3d-ff0d69cd78dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e213162-5b37-4ab5-85e1-1f58f7eecb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a96407-1269-4370-9144-c275b52464cc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c77967c-f40c-43af-8790-892aee09d837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e10b845-3cf0-4869-a8bc-0e7ba2502703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fa2deb-15f1-4184-ade9-37a20d285cc9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d5db18-5151-49c0-abf0-f710d19ba7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4269e9d5-1d02-4d87-9702-af5c181a6b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99e1c1d-7bad-48ee-ad49-ee2aeb9f6cbc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c84ea31-491a-4dcb-9ecd-d82fe22c7cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5463e040-f49d-4b23-8e35-f53ee902c2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79806ccd-69ce-45d0-a7dc-73fb1fd5f17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce285cb-9ceb-4219-b2d8-7dab1d18b203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c3c452-306e-405d-825c-e91d333e414f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b834d7c-5246-45e4-972a-c008b90a2c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31c6fd4-1da2-45a6-978b-cd08923cda72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a02107-0102-4814-823c-3b9083e21f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122a6095-51b6-4c1a-aaff-07c2a7844fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b991d383-1ef5-4487-b7a3-e3e18387aa74",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e849f1b0-dc50-4117-8788-6bf7779ae8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4482c3ac-f532-44e3-bb6b-e5472a63c3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0990e7-712e-4655-a01d-a6cc8416845e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f75216-157b-45ec-ac47-858b24621675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefbf9b5-ac87-4b4e-88fa-1a5370e6a191",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee4d9e4-fa61-42e4-a816-85732b7b1316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b0ece99-ee4c-4c06-a376-ab5d3ece75a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e6e08f-f58f-4a18-85dc-2db1fc9a885c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab74cb61-fc1d-4892-84aa-b82d9e9a6e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f280c31-e163-4100-a719-e89150333eeb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd26c4e-ee51-47cb-b3bb-8740eedd3839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6359f076-2a44-405b-9381-72fb14141e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d85b80-08fa-45b6-8b21-1fb56894a6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f03f27-be7a-4b72-975e-c28c270b5ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1959e275-3a30-4c5a-b4ae-cd9690a799fc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8cb879-97f2-4ca2-be06-2df281f7951c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1f8fa5-18c2-4882-a621-ac4f224803e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10c8bfe-4bf8-404f-955f-dd73412a1447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd320c7-7fa8-45ad-a7b5-04a41ded6d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328af9d8-23dd-4ea5-89f4-bc20c367df83",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a8f54b-d01d-4110-8676-036ae7ce7112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b71650-8f2c-4f3d-9560-2c39d260bc33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66e7ca5-90e9-47bf-98cd-9528b10e7e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8342ea3c-ead7-4a15-b316-15d24ecdfeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28d98b0-97a1-4466-ae87-8d0a74650c68",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92341ce-06ce-499c-917d-f3e52e8e107c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f733484a-fc17-4008-a0b1-fa0072542e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05692b77-c4ad-4057-9591-0804a15fbc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35652489-6562-404e-81e5-c7bfa4d05d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f682b55b-2a59-4936-8073-088455e7d53a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31890954-bdac-4c26-a599-e49b8722f460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "065d4fc9-ac2f-4c3c-949c-76f5b1b014cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7b5566-5942-44ca-a9e0-d6580677cc6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251da3d3-f1f1-422e-b964-fe2d1785dcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ddc7dc-73f4-4636-9351-5adcedd9cb27",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d74a59-bc32-4b72-9a97-404e0c2485fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5731312f-ae62-46fe-b400-2530ee97f026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981cdc3d-dfb6-454c-9402-c3d8f35ef543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798c7d02-9ef9-4086-bee8-798b31d264cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345f4203-c722-48ff-afe9-485ae526636c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001a8256-4e8a-4c36-be56-ad3588a9c15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395f1724-1dfe-4c68-b4a7-7d974043074a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b523768-9a1b-4ff2-a304-5446a5045449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af519041-7763-4fec-9bc3-57934dd85eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d059debc-fbc4-4664-9ff8-8f722546e05f",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78716be6-4231-402b-a0ab-c738a7d2fc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863e92c2-b892-492e-8eb7-fdcad2744ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8e9b8c-8acf-4a5f-b770-be8ff231f543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc9e8db-2702-42c7-b863-3ef5a1603ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2808ecab-0ceb-4fb5-ae9f-9d404a4f3b4e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a09226-8846-495d-9e53-247963fe876b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc50b4d-b9b5-40c0-b06b-115b4e7dd236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759c395f-3063-475b-be88-9a496611d691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5fa397-8eab-446f-a79e-d9458083c709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d76d7b-8c52-43f6-8178-771a9fd060eb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cfa232-e270-43cb-8372-657ba3950f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57b526b-6a2c-4087-97ab-350fba58d79f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ace51a5-f06c-4146-8cfe-88d6f3aeb937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2769e43c-ecbe-4bdb-b225-1ec8c079dd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5f8d04-e2f0-4b22-978f-ee55f7cf4210",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2662c12-62e8-436b-a428-b9143f218cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a7a754-e161-4c10-806c-eef6e396e5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da6b15a-6d2c-4c2b-bb05-3e62484cf5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e43ff9-1af4-4296-8657-37f163fc72ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2487c97-3dd6-4456-876d-efed967c30d1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dba6a5-a4c5-4b5c-891f-a0bdbbf931b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acb9d7e-cbf0-4157-bfba-a11da64f8e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0582582-57fb-48fd-9d92-b4ed0e21848d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a51e98-fbe2-4445-885f-3c17c70fd606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ba3d8c-6d2d-4f3c-a540-510943a705c3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e106f10-34ec-435e-a770-60dd50aa44e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c62cae5-8f90-4c43-8b59-9fbd139c624c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449b2720-46fa-481d-abad-39122d3ce831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546b08c2-5bbc-4ce2-912b-954ad2c394ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f02bdf7-b05a-4146-be91-bc7055a29b47",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a605c28b-7f3c-4fbc-99fb-06a587cbd4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97036145-dc04-4af2-8777-83b33ad4ee8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d8b4af-d910-4f48-97d5-e392f19722ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df220ea0-0985-43ea-bdb8-20e29c767dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7df02c-198c-4f5c-bfcf-1c4a43ce5cc4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5047a50-e1b8-4c01-91c0-a6ebfeeb6785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ddefb7-8add-428a-9ba7-731ad5b142a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce894c23-8251-4d70-952b-309712711fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876b27a7-b55f-4078-bb79-e6d272f76a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c144e1e3-e17f-4f07-8cef-2db67047ec48",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dc2119-419a-4548-b2f3-81a9d9eb2428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05cbea65-b754-4d6a-ac00-408120d46353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa04fcf8-40c3-4a05-8e06-38c593fdf01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a480bb7-885c-443c-96dd-e89d886b9d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309ab6e7-50e3-4b3c-a501-ca15977e92c8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dbe62e-bbd1-47d4-a7e5-b5657ea18e35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af7a5b90-7d41-4b40-89ed-2da6d0e609ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f58fb08-9fb4-4ba2-ba67-e36b09f22015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5bd1060-db62-4784-8474-71f817d8a76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab81ec3f-ee36-4271-94b2-17f4d51bb50e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c1197e-b4ec-41d9-957d-f942eb16ae49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9f0d696-e427-45d2-a71b-ea80cdadd2f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50fb899-cd55-4bf5-aea6-3adb057c4999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb08f72-2fcc-402f-aff2-76e768cd04df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733e60d2-9a3f-447f-b929-4d10376f5fda",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfe627f-21c2-4938-bfb4-f6907406c6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8608dacc-f07d-4d88-acad-d06ebd1f7762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe6e3ec-fe4e-43c0-9bed-bd27ad3ac5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcd73f2-7da9-4599-8d51-d8f731b198db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aca6ed7-e3e8-4b67-b794-37a5689ad46c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45bb5aa-5e96-4876-8441-9c96867c9630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9a4ba8-5da9-43d2-849b-23f889ec1af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3229ebcb-cb0e-4777-8ab5-eff0ee4e5b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5457e6-09d7-4527-ab6f-94a5c18710c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46670a3-ba19-43aa-b119-cd28350c1d4b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82725f68-1d6f-436f-b3c1-904f19195ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c9a81c-bdc2-4632-a250-d5c8126e0f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1a312b-4bb0-4783-8c00-0ef5aec72423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cdb84a-0fa4-491c-bfc8-d716a71ab005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af97523-8103-4cf8-93f5-1aca081309c9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e36992-beda-4216-946c-c20229feccee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a37a718-e085-4491-aa2a-0728ff9e331b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0904eb23-816c-40c2-b1cb-6a684a2a4fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d06bb3-518b-4719-8faa-b7884c49a9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7e5741-1981-4e0e-8a5b-1e43a08acde6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0ac67b-451d-4298-98de-dd2d765a9b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5270d9b2-2931-4678-99cc-7a219f750a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de6f0a5-c472-4573-a7fe-ca2155706a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2d85b9-e097-4709-8738-2f4112477ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca923f6-03ff-4325-9537-81a0ca46858f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d5cbb2-9e0d-4406-aee2-2b7ab94c2c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "950720a9-c336-43b0-85bd-64a37f1a342a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336a93f3-6ebf-4ad2-a0be-871cbbda611f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd49d09-6df3-4a60-9330-872541e4bc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e976ef-9976-46f2-a90a-c0a5dcac6224",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb46703-7c0e-493e-a91a-d93cc404b596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58023194-a348-41c8-950e-1582aaac400c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c2b93a-0513-4e3d-9d7f-9d356db159d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ce1f16-c005-46bb-a61e-3a45c05c41f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504bc9d4-e9ef-4796-a04e-90da3f54c690",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0973d665-f2c2-4f72-a20d-f624a906550a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b22f7d-8255-47b8-a9b1-d00097bb3af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a93250-c4a7-4ebc-8480-c96b518e5572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d531110-973f-4074-ad49-c0212c4938eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4003b2d6-2027-4d83-a3f7-7205e8bf335c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dd845c-d5d2-42e0-ba71-6e500cd76493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec97545-7239-4352-9523-7759e07da501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d7cf41-1f1f-4873-b9d0-f22826e43d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1317f01-2653-4e88-b1ab-280580dd2d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7250bf3-f514-4956-8bd0-ae5a18a1e246",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7b6048-42f5-49bd-bc1a-62a74b8ae7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f254fb-f8c0-4ec2-a01b-30feece8e01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0365da-ccf5-49d9-843f-16db565a2af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e0698b-a0fb-4d9e-bddf-17501c1c2be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4123d364-3240-4202-8d9d-b96fda688974",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517478d0-90d8-4290-a778-785d312eff40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cc8e7b-a75c-4609-845b-eb3360eb9eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb59a51-411f-4c1b-abe9-85cc33d0a0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9094b825-fe63-4dcb-a303-fde0ddf45039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d95ce7-695e-4927-9431-61d5cd6a5af6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448e44f3-9798-4f58-a370-f7b9b4bbec65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc64a2f5-893e-4ace-ab97-786f87de5951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754c8b1d-04db-41a6-ae73-9174d5324faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa3ffcc-0636-45bf-9405-d1d4dd401c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fa984e-7647-4d8d-8379-16e2693c5a9c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec6a034-04f3-45fe-a0b4-e09585e5d233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b181d7be-8206-4a4c-8024-161b807bd5c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ef0c0d-80fd-48a1-b689-0a1beaa05d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a33f47b-8e5e-4535-83f7-247e5478c646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a0893d-ad72-4072-b5b4-d0dc84c651f5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8678535-f334-4384-b17d-f727a314d484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fe2b1c-2aa5-4765-b236-7c4773ae3d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6247d663-f70e-4897-8080-b7b0336c5ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8be2b7-b556-462b-94b8-1ff8fc29b1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3603b8-e686-401d-ae54-7f72a1cf3a92",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c616641-2120-4b84-bd0d-a400cf482a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e08c82a-a4f5-4c4a-b658-2d39e26c6d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd83f975-70ae-4b15-aa65-72ebb793e577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0ad740-5b41-4c4c-a48b-46c08db8da62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dfa70c-a091-4c51-9924-7511229bce7f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b8f382-d1c2-44b4-abb4-f4c46de06831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b126d7b-9802-49d7-8a5f-28b91fbd688c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8a5419-2e38-4004-95ef-247a7c008b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e617f01e-34a5-4890-87b2-1ecdeb9a4b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f885b34-019f-427b-9566-f613f8503f2a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbd329c-93af-4c6a-9856-be87c540806e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217532d8-a5dc-448b-ac05-1013bdbb2286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b27d01b-f6cc-4671-85f2-9917774995ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f246037-7367-4abf-9a96-b94e8733aa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa54f559-7034-42d4-8d13-a41080368c02",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e768a0c-6037-47fe-bd21-e82bdd5ea4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56797a85-f50e-4a17-b969-d49be78e82fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c6bf05-2d49-49f2-ab65-5e78bebac5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3069c305-1ee3-4209-9d71-83aca33fa2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3cb87f-316d-417c-83ae-874362557129",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de50a4a-fc5b-4b83-a97b-f25d71a59e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a555932-63c5-4beb-82fe-9ebbd0279411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efc716b-6ac2-4906-9be3-28be6e922ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2eeee17-1077-4184-89d2-39982bc4ea2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727f1097-c81f-4f26-9414-44e5e5a189c1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3157a74f-ed12-4559-90da-8c561ed464bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a1cd19-7d1f-48c4-80f4-9af2166bda5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70f5e37-5c8e-4eb4-a7d3-27e47ac97556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd49cd31-4b4e-4743-b0d8-637b8907584d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6a5537-70c3-4474-a793-f2b5d7cb1a25",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c935a53d-ac5d-4753-ab10-d8635ccb2000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0066ae2b-b34d-44a8-a4ff-f7c72b299a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cee7e9c-a447-497a-abfb-08fab432ef53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0c4170-9d92-431c-83d7-7f699fd3f0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfe8365-6c45-4c73-97c1-144c1466774c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb6f3f7-09be-490f-9b2d-49e6a93cbdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4288f594-d57a-4384-b56b-9aa852b5f890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f68ae7-ff7e-4797-b0b8-b953cc5802bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e6bdb7-f6ae-40f7-bb0a-0fe3e7d3972d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085ac216-7f91-44b2-9080-0b758c52dbd4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a168ec2-5daf-45ce-b2cc-5f631be428e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede3341a-b3d0-43f6-a948-d4543852ac29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d278ec3-3016-4627-ac8d-04a5787926fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82b61e1-93f0-4d56-9aae-e5994c3bd024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af20a98-c353-49d4-a64a-1a8845e09dc1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c062e72a-a320-4263-817c-107dfa49576f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc6ffd9-0d03-4a9c-8699-3b4397cfd428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b116a59c-fa7e-41c6-b239-28d04494beb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615def23-5fdd-4897-ba7a-408966b05e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b4d24e-23c1-4959-a85b-0622110a6b57",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef547a53-4b79-4da8-a24d-93f99b51d99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac101cb-5241-4d33-bfec-c3f8f7614be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be662e3d-f5af-40c6-9c52-c55370c45a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88be8903-ed0f-4a4e-b288-d9d1eea905e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee196b05-ba2a-40f5-9910-d8a88e295e56",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc6c590-da5f-4dd3-a4bc-3083c54ece24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2069e954-32a6-4af2-96af-ffbfc046c5e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0423cb-5588-436c-b9b9-891a00d20995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0296b3-b3b9-4960-baf0-d422b7d5dbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2715bbe-07a1-431b-bece-0331e820111d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f883460b-fa3c-4f80-8c3c-ddce839e6d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2e0841-a562-43fd-821f-4e3a8c5282b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21ffba3-2e86-486e-b615-4fd482726a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a77cf8c-34a8-4f23-b67d-34f48a0ef454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782649e1-ffc5-4454-894d-690fe01c1d8b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5ab44f-e860-4950-9168-ef0da9507cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed871db0-db83-494f-8323-5b816d600bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7562c3-087b-4ef5-adf8-f2cab0414f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb4d8ea-57a0-42e7-b078-795970c378dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65d1458-df56-46f7-a854-4ab8c23d3285",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a13e90d-5b6c-4c1d-a161-2fc59b2bc849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e121eaf-93ec-4fe1-a7d5-41de180b6903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5df6e8d-9cc4-490a-9ed5-e5d4358e917c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463845a2-a710-4410-8346-ca25b93a9381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776e7f5c-4144-493a-b501-ed3f3cb91e16",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d50d5c-ab51-4589-a6d0-aa38f69a1c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e428d042-9526-4df0-bd4b-82eb2ae4bc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e4ca28-d1dc-45ab-bf1a-dae040e1e815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8acc79-a50d-416e-962b-0192fb98b6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4c369a-694d-4490-8ee9-7e9547e56b61",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51335ce2-284c-4843-859f-14c64827e61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41e650b-468a-422c-9ba5-cbbbf015ad7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947be791-a778-4129-8009-cfd1faf162b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce7384e-2c14-407b-88ed-69ddcb6b8766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86f16b7-91cd-4020-bba6-84af6f1a2ff8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da60db1-dc8f-4581-bafd-b5d302a87ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea551476-c325-44b7-8d7d-8a78786c4802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4ca79c-32eb-42cb-953b-d51869752f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7249bfc-dc23-46f8-bc77-41dc21dad7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c91fe9-bc68-4625-8782-cb1ba034c4e2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a484885-7f73-4acc-a532-f8e1e3e76826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb6d5cb-e89f-4ce5-9a99-58c41217c4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee7e689-5c80-44a4-bf2f-147c86c4cd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea817bd3-df5d-4d3d-8f7f-1263508004b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4c024f-7b5d-4f4c-a560-353d0ea53341",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c5ebc0-7dc7-4271-90b1-6df715584e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6a31b5-d173-4ee5-b689-82f1c34bd922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219027f1-21dc-4fa8-93a3-6ab24817afdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6103c061-316c-4d03-b651-40e66fcfde5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89ace10-2f65-491f-b4f8-564a33187c0c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3195f037-f6c5-46a7-86f4-66494a8850ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301f674a-3a3f-4c55-b6cc-8f105fb699b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c91647-84bb-442c-a861-5c230025a1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0af17e5-b1c2-4925-b786-4a423c815b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ebf299-5303-475a-82d4-d116babcb412",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa539dcf-4bd9-4b7b-a37c-329e7109f381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b9bbc6-4c47-4f3f-9b3b-0b76153a434d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bc3d13-6ab5-4431-82f9-326fc6d98774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d781e2-9509-4108-9d78-7d5d53de8726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3bc2e2-74f1-4d7d-833e-5a8d9f6280e6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccfb68a-ab15-40dc-891e-28af8b3900ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01383bf6-a534-4a18-9311-9e7e1f58112d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70302b9d-f656-49d8-b783-730161a39684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7d8749-99b9-4aa8-9f5c-fce1225d21b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab83c63-35a3-484e-9a1a-9b910f6dfb1d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b8eda3-e6de-4267-996c-3ac4500cb693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06c575ad-ecdd-46fa-a33b-00e7cd4e5a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a3de7f-bb6f-4fb6-8cb7-c950c1e928c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301f79a9-335c-4bc2-be11-b179aaed8739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c88c24-78b3-4fb6-9169-c00304f90a86",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df049737-6ab5-4ea1-9950-a430837945f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "962f71ee-8130-46a5-aa75-64b732819c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7073d0d7-fecb-42db-b1e9-bf155f7e9567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e875a63-5183-4fd6-8785-dcbd9b015ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a451e0-d868-41cd-9789-c0e48559f7d1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05248e5-346d-4f2e-b37d-9b82b0e1bfa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e0e7fba-75e3-46fb-9dfc-c6efae824c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969ae1ab-bcad-4a98-8654-a057ac933b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e861db50-f3ba-4732-bca9-65994d72368f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b704c4ae-57e8-4ad5-a07e-f51bcc6080dd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fc5bac-3b69-411d-9aa1-5e0cde5cb5fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f1e0282-20d2-4ff6-b7f1-318a69001d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9069ea1-d3ca-4e21-ad67-2a081bfdd3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0599c58-9536-4ccf-988f-d25551283c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e066fe6-3b73-4280-808d-66e75df48794",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5593c6-784b-42d7-a5e6-8d3aadc54807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a3d22b8-2367-4d9e-b5a0-b2936b123d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d7f8ad-1949-4da6-b508-91734377ceae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd2f71f-9d5d-4a27-884e-1c6bea0d115d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ab5960-9a0d-48a2-9e9d-aa56642cb3e2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970ab897-49bc-4dc2-8c87-ef8ef6f0d8a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a1f02a-c2b4-429a-a2a9-249a7fc21f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd55cf5f-a396-414f-8f9b-254fb53ea728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50f41b9-0970-4901-b9a7-8d50f18ed995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94253b07-e035-4f49-ad1c-209d61cfa6ea",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcc0cae-e95d-4838-97af-027fac5aba98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a974f7-dfa8-406e-9d71-cf5bfd9bd2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7687c406-f203-4cdd-a8f8-50c78d6bed5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07b564b-c230-40e6-bbe7-47a243bc6b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31fe233-3c7d-4d69-b11d-4a567d8d1a3a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3ee920-96eb-402e-96f6-51630c763181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31168556-910c-4db7-890b-a0e54fb89d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6ff66a-ec98-4e43-aabb-4882c126b365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbc655d-bf36-4eb2-88c7-a40cf62ee5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f56543-fa97-4913-884c-aceecc9f6b7e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f24d8b2-4bf4-4cae-aef5-c0eec75ef367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb53e30-ccbc-4958-934b-3e16400533a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed25561b-1d3f-41a8-a2d3-4f2474f271d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3aff6a-7678-42eb-ad73-ec0bcf5a9f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbb841a-049d-457d-9e75-060ba2522614",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba638491-9ba5-4d43-b1eb-bc6432ddce46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7abdaab2-a088-415b-8a3a-9492de2d616b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2f1f14-ea81-4f47-a440-dacaabd46442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680d64ce-960d-4b08-9db5-63389a30e2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98af8c42-02a3-4dcf-96e1-f56d139ffb67",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0246606b-096b-4246-a669-fa065de39032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3348eb6d-20e7-4bf7-b5b6-a174cf97ec6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99eb0f1-2cd1-41a1-babe-984487bbdefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c9d7e9-72df-48a0-bf2a-eff6955f1ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaf46dd-d458-480c-9a1e-1f803fac372e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8072b889-9378-4b0a-960e-ca1507220617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8f4934-cbeb-4be1-9bb1-c368b391e20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45dc8afc-8d04-480e-976c-8769f4990ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40839f7d-7538-4ee9-bf03-bec4713bb166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c6770f-b91a-4ad6-8632-df65a9fd6a14",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83a0b5a-718d-4559-8223-64e1e8670640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f24885-23ba-4319-a4e3-2789f6884300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79dd6e7-6187-483f-8474-efc30b36903f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4af7a1a-a29c-4297-9801-f8a3e7f00025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ebd108-6725-48f8-b0a1-1be9959f4ee3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b8224f-f0df-4c7d-8932-d850714ebacf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97dda3ae-34d9-43ef-b8f2-e789480e1fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46837fb-79a2-4173-ba64-e3bc3e87f63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58890628-7a84-4018-9fbd-f0e4b5befcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce013a5b-b93b-40c3-941e-8fa0cb5130e1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13e79fb-7776-454b-af1d-89a35d7cacd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17e597df-3837-4c26-a5d6-247b1b126217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c107e365-2a82-44b6-a01c-679339a46f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee4e283-5e71-4194-ba5f-d18db095b16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866eae5d-51af-4bbe-bd27-65e7d72a4278",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091c307b-5c1b-4c3f-8f6f-14c64043bc6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bebaf40-23f4-4931-a836-23383edbde19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7e2c1e-bf4c-49b6-b45c-f4b90b1e9bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed7ab74-b125-4a06-b1b6-5d5ab76800b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba42b1f-a9a0-4b27-8801-cfc0a7c337d0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad48bd7f-5d6e-46f1-ba33-49e873a4d419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ca5d0ba-30c6-4d3e-b5dc-64b61ac5796e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612dab9d-2180-4f0e-8a31-1bef21053f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8889227f-9db3-4780-a589-f5bd72bf888b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48117fda-1ede-4ee2-a99b-c4671da9706c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b568219-4144-43a6-a3cd-3bef61889e36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "532ea893-899b-4d87-8668-fea6c75053e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb149b4-75b0-47ae-98c5-73b7ace3153d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0939f679-737f-4717-b1ad-523198bea496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc12b50-67af-4071-8954-d473945cabc4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c4b375-efaf-4b4f-86d1-b756e1ad4392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50a3e856-31b1-4f3d-b738-34f9979d52eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec531a41-445b-4adb-b8fd-a9ce5fc9547c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e398c70c-bdb3-474c-b5a7-5f6a03768687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c49f4c-7567-4889-ae44-f752fcbb6b0d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e7df2f-6c9f-476b-971e-266e24f99da1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7e61a5-360c-4f39-8ff0-a71af086f7c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20103623-a654-45b9-a16f-f0e7b5243b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab0d120-1fb4-40b0-9d36-cd6afc4e9d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b063ed-cdc8-4393-8a8b-0d7cddac2fb3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac94e0f3-5dc0-4967-9260-e31d69c71850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f0190e-2840-43ae-8c14-36f4c2cca0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4a40f7-6db7-40d7-b558-bb62afc870e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156bd332-d361-4ad8-b791-f505ffee39ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363878bd-c545-444f-92f9-567051ad026d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0919a39d-55fe-4775-ae0b-11703faedae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06f368e-e7cb-40d2-ac79-74561622975f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bbdc30-2396-46ae-b483-39b3a44edd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa59bae-a64a-473b-9164-139ec7cd19fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89fb91e-6eb2-45af-a760-0a3516226829",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314411d9-5c52-4659-960c-69e1e267e931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1993c883-b693-4d3c-a48a-926f70df0db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5e4092-0d96-482c-8842-a88f36d18395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4406fa2c-1a5e-41a2-ac0a-82a6d97be18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ad6891-b7b5-4c09-bc75-ba3a09b18789",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6d39f8-d0f7-47e1-8787-ab6efebff446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf2e152-bf2d-4036-a3c2-9ff7068fb177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57408956-0c17-472f-8743-7f0231aca99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf33bc7-5eee-4e0a-9822-221b6974a5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61c4a8d-896e-4d33-be9a-7c15ffac72ac",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3c9301-0f29-4b48-8b02-b55e18808e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cd897ca-1dc5-46e4-8710-537caa01720f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a065e65-f5c7-4ea0-9f6d-c28814b4b0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3432ef4d-6b26-4a04-9815-99dafbb130de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc5a00c-421d-4553-8fa3-230afdd35ca1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b083a3-5777-4d1e-9ae9-fe4b61056b29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "846ca31d-5e28-48a6-b8ba-83263a4b0ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4219de7-e3fb-43cd-bed8-63290371f297",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0bbda3-0756-4fcf-9924-5133f53759d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da0aaa5-4df7-4f6c-a0d7-f93ea73c220f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63857e2-6f39-48a9-9884-9dfb44b713bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe63b6a-270a-475d-b9b0-e215304ac886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdefe7e-a947-480c-a9fc-c9f86dba266c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca88498-39dc-43f8-84a1-197b21e176ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0a51aa-7bc4-4430-9453-3eb00cf89c34",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3ccad9-c7a6-4986-8256-bdd0de57ea46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1d79bdf-7415-4242-9f66-072897480161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9c524d-1142-4016-9c7e-e7b5a7b235a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc13d2c-6557-4e1f-a66e-dfd505e1fa0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0a0f37-4f86-43c9-821b-24d645c76005",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6417c10c-17c2-4c92-8607-ee88924d5fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8e099c3-3924-49d6-a84c-b4dceb0f8f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac40fe45-1966-4a46-b1d5-6fe6c9c7c484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee2fdaf-e3c0-4fb2-b05f-92616a401c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8962f8a-f93f-4531-86e9-fcb32c2b977b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a05e1c-9750-4830-b2cb-102b16d7a9b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da5cd02-9a80-4c07-8999-3d7473a29f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d7d70a-b329-421a-beee-f04ddd29f0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a9c736-4210-4c45-bc7a-3666243be883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7920a9d7-e7a4-4e49-add7-961978df5e95",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7f89f6-438c-40d3-af1c-0f137cbac401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9077a11-f4fd-4d93-b36a-9c73575c53de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65e23f0-a99a-4458-a28d-e2a5c89779bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79711ea9-46c4-40b3-b2a3-fcf81bec2cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4023036-d47d-41bd-a152-7db864f616dc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4db6e5d-b282-4464-86f9-77798f5822fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ce20e3-85a8-4df6-b8a6-adc9958e77e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d5cbe2-1ba4-4285-a15e-967d5ac5c2d6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c418025b-5c44-4b37-b8a3-b491ed594b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd5a5d6-18f7-4d84-a894-204a644980db",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c11b9ca-2f87-4f67-ac35-e356428df79a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c568962-b0d8-4a79-a142-33d0e11f3697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a2a58b-4866-4c63-885e-7cdb45110ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb71d6a-3e8d-4d41-aa67-c15207b336bf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6a998b4-ebd2-4cb1-80ac-0c4167053a70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbe5331c-9088-4304-af82-8012e3a5506d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2102445c-91c3-4906-a5fa-66c5d98ed57c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bf1faa9-f790-488c-ad10-85827322044f"
                    }
                  }
                ]
              },
              {
                "id": "41579475-c6f3-4030-89ef-92ba3bf32f8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53ec41fc-c538-4f9b-a60d-9123afb348f4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e23d37-eb99-4703-96a7-951382e055e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7be4efa6-663b-4ec9-83ea-7ef3cd4ea447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b798a49f-e5f5-405a-b8e2-eac89f639297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea407be9-866a-4fea-abd3-794be9c21622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f08bf73-0a9f-46ec-9b95-d0dc0771f48c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f7112d-69b9-45c1-8fec-5137582fd1a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8756e802-7d5b-48b9-ba9d-ba4d42d0aab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db9766f-fbbf-4ef5-b0d4-f032b42f20f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ac23fb2-b845-4d36-978c-49d2842c9558"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06ac42e7-b4f6-4952-bf4b-d0aac1fdd79c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "172726e2-2cda-4e3e-83aa-93cb666e2bab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd823d6b-b5f4-4eff-8ee7-64e08129dd8c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9782688-d49e-4fda-bf8a-088c20ba1ded"
                    }
                  }
                ]
              },
              {
                "id": "2e636582-52d1-4af0-9c0e-073ef4eae4ec",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b850a184-98fc-4ab5-9825-91b75b5b54ab",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b99e86-d59f-41ab-9622-0572d5942e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cd58b4e2-eabe-46a8-9986-7817b91fa29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03de6ba7-ea49-4fef-98b5-a354a16868b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fce0d7-af5b-45f2-b7d0-d6235b06049e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a66bced8-8b42-46a9-bd96-d4e48dd173e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ff69171f-f178-49b4-b731-5be41f2ae6c1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28d326bc-9a0d-4169-8331-4f769475c0ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "00610e35-4cb4-4899-85e9-f317e5af6af5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8b346da-5cf0-4361-8da8-87e9c160ac4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "720538ca-6f92-4b28-8738-303a637cd711"
                    }
                  }
                ]
              },
              {
                "id": "39fb821d-d59d-45cc-898c-dce972f832b1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3835c078-c8d0-430e-9e9b-89d9cc41162f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "20a13c5f-daea-400a-80da-9a5168926250"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bdcb9bb-2fe2-481c-a56f-4947bf5cb66d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42da7c11-a76c-4ccd-ae02-b1d5773fcf50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf87e1cb-f9a6-4357-b73d-6e20fadbd951",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5287f328-4170-436d-a8f8-6875a7561f27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c481a71c-fd09-4395-9e7f-4b6d989e1dcb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99803caf-c370-462d-a3b0-30b53a88c281"
            }
          }
        ]
      },
      {
        "id": "7327efbe-a5f9-4590-aa8c-04f8e86e9ffd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b1799323-4a60-49ad-8fad-541c4e5732a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "605690e7-51ee-4bd7-816a-297958b1d232",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d639672-7099-4c9d-bc45-f14d43ac7968",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554e1136-20f1-4ca1-bd20-db2e36315793",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eba40a64-b2d2-4868-89c7-3091138d4612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8d6615-85a7-42da-a4db-c4d5512ff517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3b5b6ba-be6c-431c-a51e-a26836b1f389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a08890-39c9-44c9-99ad-e18211dd8ec7",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5d9059-53f3-4edd-95a1-2ae77d263f94",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "88caf941-c049-45f0-b2c4-b9fbb0b77931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43401062-c2a9-473a-8c1a-3aaf7873219f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fff67368-4a50-4487-ad8b-30a5ad49d41c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9695549-87b0-4a91-a2f8-058071335e9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b56333e-89d7-4d59-9ad2-4c99c48206b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75512478-e824-467a-a42b-19c8b811511f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93f2300a-36e1-49c7-a98c-2d862da367ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "913ecb5a-2d13-49af-9881-eaf315326673",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a118df18-f07d-434e-84fa-96f0509c7d09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d7f2294-d39f-4182-be65-50c4b96c60b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d66557b9-3022-4a6b-96e5-9af570cf162e"
            }
          }
        ]
      },
      {
        "id": "450f837e-8020-4fde-bffb-7538ab92bc9b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c80371bb-de73-4505-ac70-e87896793072",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e8d44a6-9c71-4f05-8834-c6ab7c6979d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4604aac1-0c7d-4f39-a331-cc3d488b7f56",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b39a87-1a24-45e5-9bb1-386781cacffa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1387c6d2-3a58-42c6-b1ba-748f6ccc9cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f003e97-08cd-4341-9b23-17fb3fb5e757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5df1b07a-9924-4d3a-bf4d-7ebcc696d909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0024b85-7d3d-44d3-9016-66ca7dda12bd",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50498cd9-8d17-4a40-a610-f267d793df60",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f7b9b11d-c4e3-436f-8a8e-6c9ea4e3a2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461cdbad-08cb-45eb-84e7-7b09d1133bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b06c5979-7837-4675-9cf9-b9e405eeb092"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0aacc50c-a954-4c2f-bc1d-81e10500ca03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69244fa5-e119-4490-b133-bd86eb1772c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca40d23e-bb62-4c84-b052-320e5116fcbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11ae378e-1d7a-4117-869d-96052c9e7445"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b5f9add-b284-45ab-a166-10d1a7be267d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fc03a7be-1c99-46b5-938b-510f43e0a3aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea36e36e-6fcd-4293-9ff9-ae9ce4fe75cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a37a6100-7bcb-450d-a298-c4c00780ba23"
            }
          }
        ]
      },
      {
        "id": "b93ded52-6ae9-4495-8e21-939eb7d6a8d8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "345e3c6a-f707-4ca6-8fa0-3411e355ccab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eaa33e9e-51d5-4e9f-ab16-fc70e7352dda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b555af3-0e59-4dd8-9246-1b12eaa4cdd6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c1752a-65ee-4631-a0b8-aaa45b40e543",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "424f7809-418c-41b1-ae78-896899b86e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7eae9f2-c86c-49cd-adef-517dd4c5d4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee3fca59-e7df-481f-8271-07cd4906cec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfdf263-2990-45e6-a2b2-adbb329ec781",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075298da-75f6-46a5-b14f-e64bd17ba5db",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "864115d2-f3f7-4c12-ac82-91e9b2a8f9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2ab520-fad5-4e19-9758-930da15b16cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "932d99f0-90b5-40ef-9225-ebb58c127ff2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57672dca-e95a-4ec4-905d-79ffe7ddf6bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80b64846-ccd7-4820-a6ae-3a982e70c1df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8ed8d05-dce6-40c9-ac0a-fb21679702d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e98d243-1928-4002-8b22-cbe49368c48e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "067397f1-8629-4ac2-8665-233113b0c5d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "100a1be8-b95a-4a44-967d-851606f04d5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b7a900f-2c1c-46c2-ada4-c7e5c3cfaa1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "046034c4-d924-4891-939c-02c55f67cf5d"
            }
          }
        ]
      },
      {
        "id": "980ce8ee-8a51-4bc9-88f4-110f868f7238",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec9802c0-dfc5-459e-a560-29cda41890fd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f87d440c-3a90-4f94-96b5-7c6eea995eec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1be408e0-accc-4b4d-adb5-e4a033e79e1b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "370936ce-29ba-4ac3-ae09-bfc058cd4f05",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84125239-7157-4b76-9e95-6afc14d4c38c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 598.477099236641,
      "responseMin": 15,
      "responseMax": 5648,
      "responseSd": 726.1440285776042,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672533769487,
      "completed": 1672533936588
    },
    "executions": [
      {
        "id": "f9c60005-864f-4c82-a01d-6c60f7c9759f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "aa08f01b-c63d-4cfe-b311-e451d32af9ed",
          "httpRequestId": "45638aa6-4560-4729-b0fc-1dd256ba226c"
        },
        "item": {
          "id": "f9c60005-864f-4c82-a01d-6c60f7c9759f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1bb4fe30-99cd-445f-98f9-67efb19f6461",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 0
        }
      },
      {
        "id": "849f3b9e-3baf-462f-9164-f0da22f46fab",
        "cursor": {
          "ref": "05b1f78e-63da-4baf-abb5-f648344117e3",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a2f30a18-acf5-4171-90c8-1715299a3b71"
        },
        "item": {
          "id": "849f3b9e-3baf-462f-9164-f0da22f46fab",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0badae94-4196-4708-8414-3fb685564b66",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "79c7bd5a-5515-46c1-a84b-151d114c09e3",
        "cursor": {
          "ref": "f99394b5-2174-4a87-9e59-1916fef89e48",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "04d5831c-f6d5-4881-a639-afa3a3fc32b5"
        },
        "item": {
          "id": "79c7bd5a-5515-46c1-a84b-151d114c09e3",
          "name": "did_json"
        },
        "response": {
          "id": "d3360ca0-b0ee-490d-9a4e-6f95ae047ef8",
          "status": "OK",
          "code": 200,
          "responseTime": 547,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb77a3e-3e0b-4100-969b-be1d994cf864",
        "cursor": {
          "ref": "51deb197-c335-4d8a-826c-90c0d940ac9a",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f8b53019-6f5d-4d49-823b-9779c2d59543"
        },
        "item": {
          "id": "acb77a3e-3e0b-4100-969b-be1d994cf864",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a6057b1-a2f9-4b82-b9d6-ce5ba0616c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb77a3e-3e0b-4100-969b-be1d994cf864",
        "cursor": {
          "ref": "51deb197-c335-4d8a-826c-90c0d940ac9a",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f8b53019-6f5d-4d49-823b-9779c2d59543"
        },
        "item": {
          "id": "acb77a3e-3e0b-4100-969b-be1d994cf864",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a6057b1-a2f9-4b82-b9d6-ce5ba0616c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37da6c8-3fd0-412d-baf8-96699028d9e8",
        "cursor": {
          "ref": "07189a94-4f69-4533-8e50-3bc00f277ffc",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "51b9bf07-b21c-409c-b060-cc01c0af3469"
        },
        "item": {
          "id": "d37da6c8-3fd0-412d-baf8-96699028d9e8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2de3c1d1-279e-4521-af33-484373da9f07",
          "status": "Not Found",
          "code": 404,
          "responseTime": 604,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a283d0b6-a61d-4c90-8ef1-6f5a02c012a9",
        "cursor": {
          "ref": "410f3a8e-3707-4431-9c2f-d40454266e94",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "19c70be7-468d-4af5-b151-6bb57f6f8127"
        },
        "item": {
          "id": "a283d0b6-a61d-4c90-8ef1-6f5a02c012a9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1aaf646c-2868-49f1-bd57-d43e7171819b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 524,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a85f57f-30bd-4947-8bfa-14cc85c22ef7",
        "cursor": {
          "ref": "705138a4-b66e-43c6-b941-4ef418893a56",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b23fbc13-57a8-44ec-8667-0cd243dc5861"
        },
        "item": {
          "id": "6a85f57f-30bd-4947-8bfa-14cc85c22ef7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0a4d4549-578b-4f82-bc8c-395f8e362ad2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cbe6bf-b472-4038-87d9-cbdc33cac99e",
        "cursor": {
          "ref": "a48cc364-9ed1-4aec-b614-f82f3e22d774",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a619f368-7af8-4ae5-8ad5-804c1588f338"
        },
        "item": {
          "id": "94cbe6bf-b472-4038-87d9-cbdc33cac99e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ab81242d-dbed-4bbe-b186-9cf12ffffe92",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 612,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cbe6bf-b472-4038-87d9-cbdc33cac99e",
        "cursor": {
          "ref": "a48cc364-9ed1-4aec-b614-f82f3e22d774",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a619f368-7af8-4ae5-8ad5-804c1588f338"
        },
        "item": {
          "id": "94cbe6bf-b472-4038-87d9-cbdc33cac99e",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ab81242d-dbed-4bbe-b186-9cf12ffffe92",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 612,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3fbcbb-3f4b-490a-8535-25eb36a3e29c",
        "cursor": {
          "ref": "49c615a1-d5a4-47d1-8889-d50dc079b0d6",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b81129e-ead0-440e-80ca-cb5d7dda14a2"
        },
        "item": {
          "id": "1b3fbcbb-3f4b-490a-8535-25eb36a3e29c",
          "name": "identifiers"
        },
        "response": {
          "id": "79dd90c7-d30a-4608-9194-dba323052d7f",
          "status": "OK",
          "code": 200,
          "responseTime": 878,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7135e086-7fe9-4468-b947-046839966077",
        "cursor": {
          "ref": "1b5f861c-0d84-405e-ae4a-765099d3c184",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6a251ead-833c-4089-9f57-8b65123f80d8"
        },
        "item": {
          "id": "7135e086-7fe9-4468-b947-046839966077",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "711a27d2-9e8e-43c5-9443-9a3ebef61c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7135e086-7fe9-4468-b947-046839966077",
        "cursor": {
          "ref": "1b5f861c-0d84-405e-ae4a-765099d3c184",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6a251ead-833c-4089-9f57-8b65123f80d8"
        },
        "item": {
          "id": "7135e086-7fe9-4468-b947-046839966077",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "711a27d2-9e8e-43c5-9443-9a3ebef61c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d7fd83-c9bb-4d85-8f91-be9b0d65e762",
        "cursor": {
          "ref": "371ffd95-4f20-4a89-80eb-5af3c9cf7f9d",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1573a0dd-9df8-40b3-a417-522808381248"
        },
        "item": {
          "id": "53d7fd83-c9bb-4d85-8f91-be9b0d65e762",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "be440373-5d75-47f7-ae63-63ef3f38869e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee8416e-c56b-4cad-a756-cf8b01dd88d0",
        "cursor": {
          "ref": "06d791d1-d0c3-4fb3-9f28-36bf4b54d751",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5b54b6a2-3aea-4da6-88d1-ced3f3a5c6af"
        },
        "item": {
          "id": "1ee8416e-c56b-4cad-a756-cf8b01dd88d0",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "03318923-be74-451c-9ec5-8aadc18cf87f",
          "status": "Created",
          "code": 201,
          "responseTime": 2615,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "f5319850-c355-41f1-ac2a-cc26d876ed4c",
        "cursor": {
          "ref": "e6bc8d6c-f54f-4443-8a9f-0e1ae84bcd3e",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "201673f8-164b-4629-8819-94f41d02db10"
        },
        "item": {
          "id": "f5319850-c355-41f1-ac2a-cc26d876ed4c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5603d3b7-4153-4f32-87e2-78e6668988ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fba66c-ee51-488c-9abf-8a200f7d35dd",
        "cursor": {
          "ref": "e2507f2b-cf3e-410c-862f-f376141ca04a",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "699a2f43-6a62-47c7-89b5-9ee8da8f7b2b"
        },
        "item": {
          "id": "e9fba66c-ee51-488c-9abf-8a200f7d35dd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cce59672-f561-411f-8a98-6150064666f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918f0630-ac21-43f9-887a-3906c05c5f12",
        "cursor": {
          "ref": "cfda0c5a-da7c-4e69-9404-f1175b76bae4",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cdd7ff88-18d5-420b-b27c-37f464403f4a"
        },
        "item": {
          "id": "918f0630-ac21-43f9-887a-3906c05c5f12",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "07370462-449e-4ae4-bb0c-06135f24f6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054b3625-47a4-4266-b18b-de4b77ec36d7",
        "cursor": {
          "ref": "c4e0b3a7-aed5-4feb-9852-f06401fb2f1e",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1b2b0dd3-ec7d-4cdc-a261-d410ae54fa42"
        },
        "item": {
          "id": "054b3625-47a4-4266-b18b-de4b77ec36d7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e1a271ff-9a7b-4f07-8e09-74ffa55ff98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9267b805-d04e-4757-8f3b-47bf91a5625e",
        "cursor": {
          "ref": "f3e6899a-fc8c-4716-b0a1-4b8b553aa320",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a56ecfa1-1bb5-4d59-a3f7-78c31c308858"
        },
        "item": {
          "id": "9267b805-d04e-4757-8f3b-47bf91a5625e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "506706a7-f67f-4fee-8e6b-d2cca60decf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416ec8d8-728a-463f-8978-882cbb3ed1d3",
        "cursor": {
          "ref": "b1d34abf-acba-48d3-bf0b-5ab5ca343466",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "040126b4-e239-43a9-87c0-43bacd6dcaef"
        },
        "item": {
          "id": "416ec8d8-728a-463f-8978-882cbb3ed1d3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b6e2a776-8c51-44ca-8f3b-66f154fce5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b154d1d1-c55b-40bb-a84e-c0d24f003d72",
        "cursor": {
          "ref": "f6ae8b12-044b-4ce6-877d-6cb4d0efb51c",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c86bc646-05cd-478b-aecb-2fdb1b0d41d3"
        },
        "item": {
          "id": "b154d1d1-c55b-40bb-a84e-c0d24f003d72",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "73cef20c-1442-42af-9928-507d2109474a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4041dfc2-e24a-482e-a9b0-ef9ed1d4f55c",
        "cursor": {
          "ref": "bbea50b4-54ff-4ff8-a422-5f4a0e8fd38a",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "be81ce5e-104c-4740-bc52-6ac932c2c309"
        },
        "item": {
          "id": "4041dfc2-e24a-482e-a9b0-ef9ed1d4f55c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9b0c314d-5f5d-4cbd-a4d0-f7c86820f4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38744b2-d633-40eb-89a5-9f77a39f1819",
        "cursor": {
          "ref": "4c6d3489-e610-48f1-b966-0decaa151491",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ea88fcd2-4daf-46f1-9fd5-9e92deba62d5"
        },
        "item": {
          "id": "e38744b2-d633-40eb-89a5-9f77a39f1819",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a94e265d-bab5-445f-bca2-9bf19ae095f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1085ee0f-3f68-464d-9a12-5e92f804f756",
        "cursor": {
          "ref": "87e94fd2-2e48-40dc-8107-cfdd9500d26d",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "43a9ed4e-0cc4-4532-90d0-4d563574596b"
        },
        "item": {
          "id": "1085ee0f-3f68-464d-9a12-5e92f804f756",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b4bc4a3c-4f69-496c-9c89-bd79e40cfc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594a487d-b21d-452c-b51e-1e618dddf621",
        "cursor": {
          "ref": "aa5e5802-f067-4c7e-9da2-ae22971e2269",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a0094f98-10e6-49b0-99cc-38d6b64d671f"
        },
        "item": {
          "id": "594a487d-b21d-452c-b51e-1e618dddf621",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "835b32c4-c79c-46f6-9d26-26fbe27c1f97",
          "status": "Created",
          "code": 201,
          "responseTime": 5648,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "90850a73-3196-4cdc-a95a-c9f914dedb2b",
        "cursor": {
          "ref": "d35580b3-4b76-42af-ada7-b3bb22b5c2a0",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "acda07e8-1afa-4d4a-b349-7473c391f424"
        },
        "item": {
          "id": "90850a73-3196-4cdc-a95a-c9f914dedb2b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "83125f61-fb3a-40f2-98be-2eff14f97ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb86da1-9bcf-4bb0-8071-dbddb068e6ab",
        "cursor": {
          "ref": "f34ec2ff-2264-4fd1-9acd-80e4ca061bc3",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ce654334-1331-4433-bd68-22ab2e72e0a8"
        },
        "item": {
          "id": "4bb86da1-9bcf-4bb0-8071-dbddb068e6ab",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ccfedd27-bae9-4e70-a9d5-4339568cc694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0860cf09-6ebb-4357-bb29-f21aef39331d",
        "cursor": {
          "ref": "6a472963-e327-45ce-87bd-cfce5cf2ae66",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "849e285b-9d76-43a9-96e4-6107fecf3589"
        },
        "item": {
          "id": "0860cf09-6ebb-4357-bb29-f21aef39331d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bff0df42-e6ab-4ced-b40f-6efc46e66210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84931b17-bca1-4b96-b5da-4a63c59b4481",
        "cursor": {
          "ref": "7744ae60-7a02-4f4b-b30d-98f65025c9ab",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "db0206c7-d004-4646-9b0c-cdc481044af8"
        },
        "item": {
          "id": "84931b17-bca1-4b96-b5da-4a63c59b4481",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "36690989-74e1-4b1e-9faf-10bf0a714c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6de789b-6dbf-4ec9-ab97-12fefef3324d",
        "cursor": {
          "ref": "2cef49c1-e11e-4d2d-b18c-87e0e2fd56fb",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d4223d35-0e96-4d31-8de2-f19500e8d8a0"
        },
        "item": {
          "id": "f6de789b-6dbf-4ec9-ab97-12fefef3324d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ab40c2b8-3c36-476d-b2c5-464d68dae645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2bfd0c-c8b0-44fe-8117-9831217fa394",
        "cursor": {
          "ref": "5db0f373-21d6-4e10-b359-d4da021ef1aa",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "14df2e24-bc1e-46a8-a8c0-02e562755e31"
        },
        "item": {
          "id": "5e2bfd0c-c8b0-44fe-8117-9831217fa394",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ba19029c-a1cd-49ee-a7e1-1a7e1f91c633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a6e0b3-5a44-4233-b4ba-cbd60500e106",
        "cursor": {
          "ref": "714f5666-8032-4b99-8736-25afdc6d70da",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d42663de-36d9-4018-8a5d-8ec34412a375"
        },
        "item": {
          "id": "09a6e0b3-5a44-4233-b4ba-cbd60500e106",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b0fa3c03-dc1c-46c4-983a-623e0b4e3ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414747bf-702a-4be0-b0ae-d7be54779497",
        "cursor": {
          "ref": "fc2cea76-6df8-41ff-81e9-b25e982f97a6",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5eb6a934-ffb7-4237-b31b-d7076c8e90f5"
        },
        "item": {
          "id": "414747bf-702a-4be0-b0ae-d7be54779497",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8267e967-4d5a-414a-9a17-4872ceb79286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaf5cf9-0b79-4a58-a855-550b06601a28",
        "cursor": {
          "ref": "112b4c69-7290-4a00-a571-afe6ad3dee1a",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "169d5940-24d2-487e-afcc-6e0d60fdd85e"
        },
        "item": {
          "id": "1eaf5cf9-0b79-4a58-a855-550b06601a28",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "436686a9-1175-4bc2-86ab-8da4f040b29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6b24e4-32e2-471a-8c7c-06b390d93e93",
        "cursor": {
          "ref": "a1c4f209-2db0-4954-b7b0-d96d23307667",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1cb9e1d7-9fd3-4ff4-b224-b4f5316633b5"
        },
        "item": {
          "id": "dd6b24e4-32e2-471a-8c7c-06b390d93e93",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2d87f4cc-54e7-4479-b91e-b4d29b75de32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef40cf9-52dd-466e-8848-552dfbd20f8a",
        "cursor": {
          "ref": "7589c660-9726-407a-978c-e5c58422411b",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d6d5dd3d-f64b-47c1-b02a-e8af6cf2764d"
        },
        "item": {
          "id": "5ef40cf9-52dd-466e-8848-552dfbd20f8a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f5b5479c-6fe1-40ed-a36a-e6cc79fdeac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7daee3-bb02-4665-be7b-dceed40fe5d0",
        "cursor": {
          "ref": "3226ba6a-1726-414e-8390-f80466d0f245",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b131d7a9-458d-4f0e-913e-143b78c82d1c"
        },
        "item": {
          "id": "cb7daee3-bb02-4665-be7b-dceed40fe5d0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cd77b2fa-f42e-43da-bc72-5cd003c67d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d1db66-9afe-46bd-9d9e-4661217e30d6",
        "cursor": {
          "ref": "e3ce48f3-c2e9-4c73-a103-41b5e9de2801",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a14288e6-7b1a-459d-8e14-9ebd2afb19fd"
        },
        "item": {
          "id": "19d1db66-9afe-46bd-9d9e-4661217e30d6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5aa6f91b-46e8-45c1-8adc-e4ee15894bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282e8520-805a-4006-a83b-1376ba22b6e3",
        "cursor": {
          "ref": "bcd2b138-461f-45ad-bc83-1f28289c667c",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7eca5d15-8e6a-4917-a5b6-a2a6e19919a3"
        },
        "item": {
          "id": "282e8520-805a-4006-a83b-1376ba22b6e3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ef2484a3-c5cd-4a9c-97bb-f73944dcd5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff7a58f-58d1-4ce9-80e7-23537e1bf1e9",
        "cursor": {
          "ref": "8f958a0e-c2d3-47b0-8d05-6aaf240aa104",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6c8dc2fb-538f-4556-bc4c-947b96fa4bac"
        },
        "item": {
          "id": "cff7a58f-58d1-4ce9-80e7-23537e1bf1e9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "49869508-e4e3-4844-a19e-5bf17fa8d18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cda4230-41bd-49fe-877e-f721681b3f42",
        "cursor": {
          "ref": "02fc45dd-b01e-4a5e-a324-2a84164e4b63",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d61f078a-7e99-415a-9a0b-4a43ee202af1"
        },
        "item": {
          "id": "4cda4230-41bd-49fe-877e-f721681b3f42",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "49032cac-e873-4d25-9646-bd4c42aa911d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3df69b9-3b97-4653-b0e8-25fe8c1d1718",
        "cursor": {
          "ref": "52ac0d5b-a625-4761-935e-844ef8b4fc2a",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0b73741f-1411-445e-90b6-be83b3c175ff"
        },
        "item": {
          "id": "f3df69b9-3b97-4653-b0e8-25fe8c1d1718",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7bb1d195-b032-423e-85b5-2fa71b66f439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e2d1f5-c0d3-4951-908e-e22be3a5f5fc",
        "cursor": {
          "ref": "4a9f24fe-afcb-4570-8462-8973534f786f",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9cd0f5f8-16df-4d74-a887-c9460ef7f67f"
        },
        "item": {
          "id": "e7e2d1f5-c0d3-4951-908e-e22be3a5f5fc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3178f1d8-dead-43a7-9956-a591e0eb0fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda6e35d-f8da-4540-a007-bd439226c27c",
        "cursor": {
          "ref": "298b2bf2-01a3-47ef-b21b-15f0e82a51af",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "633129bd-df0b-4576-96fe-ae9063be417b"
        },
        "item": {
          "id": "dda6e35d-f8da-4540-a007-bd439226c27c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bb999ac3-52bc-4a9c-a41d-ab906b16ef69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce5fe45-500a-456d-b4ab-e5c9e37de65a",
        "cursor": {
          "ref": "db0803ef-2038-4a3d-8086-a234a64ca282",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "737590ab-e4c8-4c78-822e-37ec361e8a3b"
        },
        "item": {
          "id": "fce5fe45-500a-456d-b4ab-e5c9e37de65a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4b417955-ea57-48d4-b817-3995c0e36c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a3c1fc-7855-4277-ba97-071ec6b13c4b",
        "cursor": {
          "ref": "47ff107d-3ab2-42a8-b8de-200ec18ea314",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "58e94e72-4f52-4d83-bb1b-cba87932bd79"
        },
        "item": {
          "id": "81a3c1fc-7855-4277-ba97-071ec6b13c4b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f4586e02-b05f-4c13-b7ac-67169f0109df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945cd8a1-09ec-4a30-9e77-09cae93afbe7",
        "cursor": {
          "ref": "1abb1bc2-899c-4ff0-92d9-5aed6cd7ab6d",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ac0005cd-e111-40e2-97ae-0a728cca84f8"
        },
        "item": {
          "id": "945cd8a1-09ec-4a30-9e77-09cae93afbe7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e7a89b4b-e70d-4d02-895d-b03759d87d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052394d0-fb51-41f3-b46d-057b56d93af9",
        "cursor": {
          "ref": "c0ffc436-22f8-4be3-840f-f9c364d07170",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0a79a2a0-1737-4509-a0d5-ce2eabed4edc"
        },
        "item": {
          "id": "052394d0-fb51-41f3-b46d-057b56d93af9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "891682ac-aa4a-47a4-a174-33bfaab7ed7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e33c8e7-f418-43bd-b687-5ca032c13e8a",
        "cursor": {
          "ref": "2d117f5f-a744-4008-926b-a0bc5ce3bfb8",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "993bf37f-55ca-401b-a257-e38d65177b2c"
        },
        "item": {
          "id": "9e33c8e7-f418-43bd-b687-5ca032c13e8a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cdf182cb-fd8f-4a76-b4e6-4590aeaf667e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 649,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9702fd34-da64-4d46-a83a-6b7fce211ce8",
        "cursor": {
          "ref": "83f4b3ea-de1e-4405-8469-7bb9fe2eebb7",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1dee04f5-4ca9-479b-950c-526b32797cf8"
        },
        "item": {
          "id": "9702fd34-da64-4d46-a83a-6b7fce211ce8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0d9f9bfa-ae17-4f5a-86f8-43fd7d96833f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d30074-901d-44c8-acff-0c1762817bef",
        "cursor": {
          "ref": "7f9c18e8-b1bf-4a5d-a56e-8120dbda773d",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9d3fc90b-eb80-4dec-8e55-fbdc2afbca21"
        },
        "item": {
          "id": "53d30074-901d-44c8-acff-0c1762817bef",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "315de7dc-68c5-4591-bff0-5ecdb4ed1f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bac8e5-17d8-429e-95a5-7b28a2536555",
        "cursor": {
          "ref": "dd380364-ace1-4977-8983-456fd757d764",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a2388ec4-542b-4bc4-b7f8-47bb6847901f"
        },
        "item": {
          "id": "89bac8e5-17d8-429e-95a5-7b28a2536555",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8a4cad67-2c15-4cc5-b0eb-a3fd0c5489a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2534a0-9f1a-4326-b6d4-4b934b421c5c",
        "cursor": {
          "ref": "003cfe03-855a-419f-b5d9-85f63fe28ebe",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c32c5aa7-58b5-4ddc-b9b5-1f2535cc8ad6"
        },
        "item": {
          "id": "bb2534a0-9f1a-4326-b6d4-4b934b421c5c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c60ca1fb-fe58-4a2f-bc77-635b6c13bbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ecb2d5-4a3c-455d-9979-95d8196bd0e5",
        "cursor": {
          "ref": "1ae4e6c4-25bc-41a2-bae1-99d01d33d981",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "49fa1e02-bc45-43f5-8bad-fbc56ae8e571"
        },
        "item": {
          "id": "02ecb2d5-4a3c-455d-9979-95d8196bd0e5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "615a1ddb-bd60-4688-bf73-67fdfabed088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dc62a2-b342-4ce8-ba13-9c47620e36b9",
        "cursor": {
          "ref": "177fbeab-c76b-4fb0-ab21-7c6c0223693b",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9eb1c023-3e65-47e7-88a4-a3168c6d8080"
        },
        "item": {
          "id": "64dc62a2-b342-4ce8-ba13-9c47620e36b9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3ca98627-4060-4d5c-84fb-568cceaeec4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1756d193-859f-42fc-8603-2e5299bae13c",
        "cursor": {
          "ref": "202ecdf5-7a02-4a52-a2a1-fa4678156e63",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "60b7a32e-ea2a-4692-95d7-6faa6de08f66"
        },
        "item": {
          "id": "1756d193-859f-42fc-8603-2e5299bae13c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6e0710b9-9814-46ed-b739-9d444951312d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 649,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09be503e-7282-42bf-b645-1ef85ff5760d",
        "cursor": {
          "ref": "b836fc00-8859-4b14-9c9b-c644f616b163",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "17f8d53f-6323-42e2-b388-ddab69bf52e1"
        },
        "item": {
          "id": "09be503e-7282-42bf-b645-1ef85ff5760d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "636c1b0b-db61-4c39-a1de-19379e5dcf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c86924c-964a-4c87-8848-f557fd8c481c",
        "cursor": {
          "ref": "cfae0aae-9989-4708-ae87-68ac2464d7fc",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f0fb3abd-d25c-4261-a2af-9d3fa807f851"
        },
        "item": {
          "id": "8c86924c-964a-4c87-8848-f557fd8c481c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "36ea06e9-2350-457e-a056-229e6c9ed15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16660c2f-332f-4053-aa2f-f7fdeabf1edd",
        "cursor": {
          "ref": "8e2807ea-e31f-4618-b61f-29fed0cd9999",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c2a6f771-3df1-4036-a79e-fa72d9e9ac83"
        },
        "item": {
          "id": "16660c2f-332f-4053-aa2f-f7fdeabf1edd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e2ed5205-916a-41d6-b355-723efaa061a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9f9090-75f8-4bfb-ba20-482f3e4245ad",
        "cursor": {
          "ref": "8930c34a-c1be-4dc0-b3c4-58c966460a36",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dba552d6-b715-41b7-ad97-d49f85b9727f"
        },
        "item": {
          "id": "6f9f9090-75f8-4bfb-ba20-482f3e4245ad",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9dc9d56f-4f16-47a8-bd33-9f35bc0decec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03808d83-8c17-4f20-998d-b94cc293857a",
        "cursor": {
          "ref": "f616a723-ef75-4378-9a4c-eb7ff2d329e4",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fe782352-0584-4cd1-a7a0-e80cea222616"
        },
        "item": {
          "id": "03808d83-8c17-4f20-998d-b94cc293857a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d5e25bbf-cc6a-4111-827f-d99ced03ba27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8650963e-f74a-4423-9a77-6fe19be8d716",
        "cursor": {
          "ref": "7cc2db23-7d8c-4fb6-b4be-47ae82c290b4",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "984c87a9-cef8-42df-b9bd-c04120909cf6"
        },
        "item": {
          "id": "8650963e-f74a-4423-9a77-6fe19be8d716",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "92f6947b-b843-4e29-ba79-6c1965dc82ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4a6f79-afb8-4299-9edf-4553b33087d7",
        "cursor": {
          "ref": "fbc195ce-aab2-44e8-a8a4-b4aa996a39bb",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "53e3ae14-147a-4091-98a4-e6c732ee705c"
        },
        "item": {
          "id": "0f4a6f79-afb8-4299-9edf-4553b33087d7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2eec6e22-2d66-4f38-bca4-e8f57b08e90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e1c447-709b-4860-9b9e-c0079e67037f",
        "cursor": {
          "ref": "1b755c85-17ef-423d-b2ce-9af84f3b721a",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f46bf761-4bdf-41e3-8d74-6f066c48d479"
        },
        "item": {
          "id": "64e1c447-709b-4860-9b9e-c0079e67037f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fa442b43-421e-4b9a-be9e-e238bd9f9c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f130135-dc3b-4e62-86c8-130ed47873eb",
        "cursor": {
          "ref": "84eda006-8a81-457b-b167-97ef2e939175",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e1545585-05cc-4d5a-85e8-208cc668dda5"
        },
        "item": {
          "id": "9f130135-dc3b-4e62-86c8-130ed47873eb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e98747aa-780c-464d-bfef-c191133ffa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6c5f1d-03f5-4605-9a5d-6f3a62969d00",
        "cursor": {
          "ref": "f7e6a6e0-2ac6-48d3-bae5-768cfcbbf915",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8800bbde-477c-41af-b051-0aafbc543c2e"
        },
        "item": {
          "id": "dd6c5f1d-03f5-4605-9a5d-6f3a62969d00",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ec5be017-a969-47eb-8bd7-795f55c2ecc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc46765-7036-4f08-a0ea-60a4436579a6",
        "cursor": {
          "ref": "fd6d47e7-781e-42d0-83ac-bc1edeb958df",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a7d0888b-b331-4ec5-bf71-59622055bfd2"
        },
        "item": {
          "id": "4bc46765-7036-4f08-a0ea-60a4436579a6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e59805f7-e23d-430c-9d8e-a15b53ec492f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acc0c9f-69c5-465b-87c4-a583fa8a5908",
        "cursor": {
          "ref": "b8c94833-d81c-4b04-84d4-ac8472326dd3",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a1afd036-f2cd-427b-8c75-45601dd3039f"
        },
        "item": {
          "id": "2acc0c9f-69c5-465b-87c4-a583fa8a5908",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dbafdc0e-fee7-456e-8855-ec29da7990fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0979edf4-3ce0-4f41-8b68-588e7677c8e0",
        "cursor": {
          "ref": "5790ec08-f223-4f44-803d-6545d492695c",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9adaee7e-a155-4f4c-ba5b-5412627a4c48"
        },
        "item": {
          "id": "0979edf4-3ce0-4f41-8b68-588e7677c8e0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ba0cb9c6-bed9-4d14-b45c-bae40ff18595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57201c86-f39e-47ef-9fe1-7be9c212f221",
        "cursor": {
          "ref": "c0ae40e2-7452-466a-90f5-2e13fd9ca06b",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "954cd736-dfb5-44d3-bc91-6842d7bf6fc5"
        },
        "item": {
          "id": "57201c86-f39e-47ef-9fe1-7be9c212f221",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f2239c69-8623-49d9-874e-50fd2915f3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177b8df5-1b0f-4601-a56e-403934b1ba8f",
        "cursor": {
          "ref": "e8d59de0-b1f6-4324-abca-b0cb3171e64b",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2c77544a-d599-4d5f-a148-36e7694c7553"
        },
        "item": {
          "id": "177b8df5-1b0f-4601-a56e-403934b1ba8f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "044f6c9d-2532-4cb0-8289-cf2660272cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64be4b8e-aa81-47be-b60a-61a837ff6afd",
        "cursor": {
          "ref": "c4531dff-8003-4fe5-b0ab-6bbb63dac1da",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a8e534c7-1590-4880-819b-73b33008cf94"
        },
        "item": {
          "id": "64be4b8e-aa81-47be-b60a-61a837ff6afd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "355eb80f-b1bf-4b33-ac39-4d3ffebd601b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c2edd2-bbdd-4938-9979-bff188be0dae",
        "cursor": {
          "ref": "b10a862d-1781-4e3f-b892-dfbe535d0bbd",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "100fad58-fb94-4566-b253-5437b0f35f8f"
        },
        "item": {
          "id": "75c2edd2-bbdd-4938-9979-bff188be0dae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2e66b656-4994-4d14-96d4-343778ce847d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6945e5-9c8a-471c-9206-1a628f17b39f",
        "cursor": {
          "ref": "805a2eb2-88c3-40fb-9185-4d9ddf50395e",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "60bc9b56-283a-4943-b8e8-e72668d631d8"
        },
        "item": {
          "id": "1b6945e5-9c8a-471c-9206-1a628f17b39f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "786e8977-18ce-4440-baae-41f66d80d0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c80101d-a9ac-4aab-8b14-96546a726915",
        "cursor": {
          "ref": "7459958b-6381-4d01-8e2e-ce63e03e0be0",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5c12067c-a486-468b-941e-e68a72eb8c11"
        },
        "item": {
          "id": "8c80101d-a9ac-4aab-8b14-96546a726915",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f59d26f7-0383-4dec-a311-605789140e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f478ef-f36e-42bd-bd0f-7791e141b452",
        "cursor": {
          "ref": "2bbb65a2-70ce-471a-97a5-349f0432c8f1",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4939518c-5a27-494e-987f-c5004f02f89b"
        },
        "item": {
          "id": "17f478ef-f36e-42bd-bd0f-7791e141b452",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4f241316-a9ce-447d-8dc4-889c6cb7ecc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63c85f5-bbed-474d-9116-8ffc6cd8fec8",
        "cursor": {
          "ref": "574ee088-639f-4ef8-9580-9b82305fbb75",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "63b90f33-3409-412d-b448-46bb5bb9035b"
        },
        "item": {
          "id": "d63c85f5-bbed-474d-9116-8ffc6cd8fec8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6c004234-0141-4f9b-9a0e-7e1681e35154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17e4bd9-d7a8-4e25-882a-15b74f52454e",
        "cursor": {
          "ref": "2f301127-d0d5-4b5b-8e61-71002b6a4672",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1d0de1a5-1880-4e05-a9f2-a6f4da8a7c41"
        },
        "item": {
          "id": "b17e4bd9-d7a8-4e25-882a-15b74f52454e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5ab0e936-5c9f-45fe-b997-3801c362a531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f58e4d0-76b5-45a5-a872-f5fb7a7f4d69",
        "cursor": {
          "ref": "6b49b256-214a-4139-a5ef-24e9046fcf56",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c15939c3-d159-4e6a-87ce-892e9d6284a0"
        },
        "item": {
          "id": "4f58e4d0-76b5-45a5-a872-f5fb7a7f4d69",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "11dedf13-8b2f-43e1-98f2-71f3b0889e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac235dd-4b1e-4b89-be61-16c51cbe2167",
        "cursor": {
          "ref": "75c8152a-59e4-4eef-b9c1-299eaf743d5c",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e2c4e5d9-8b02-4002-b5af-5f72b09321ac"
        },
        "item": {
          "id": "1ac235dd-4b1e-4b89-be61-16c51cbe2167",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "808e5b7e-f21b-41c9-8251-0c5154a98530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9963ad1-acca-48f5-a9bc-c75463d2c2fb",
        "cursor": {
          "ref": "6cdb6afa-5e78-4a88-a82f-d82607416f69",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9d88a7cf-d4d8-49da-a11e-de8321782c3e"
        },
        "item": {
          "id": "e9963ad1-acca-48f5-a9bc-c75463d2c2fb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3fdaa813-f1ee-487a-976b-5f7da3e04837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccddb71f-5e37-418a-ba6b-ad586bdb2fe0",
        "cursor": {
          "ref": "f8152d99-f676-4fa8-999e-422fbec974b8",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bf011498-f2f0-451c-a30c-fa61c3263507"
        },
        "item": {
          "id": "ccddb71f-5e37-418a-ba6b-ad586bdb2fe0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "92879cf3-d12c-4ceb-a50f-3aef25988293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f29f40d-5b0b-43d0-ab3a-5bd89bc3e940",
        "cursor": {
          "ref": "3b144935-7ea0-4cd7-8392-a5ff7eb19840",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "439828cd-68f8-4a6c-9c20-c564ee838244"
        },
        "item": {
          "id": "0f29f40d-5b0b-43d0-ab3a-5bd89bc3e940",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "65a319c5-9c16-4d57-a8be-a5e685d9d0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d3ac2a-f598-47a2-9310-6581762b044a",
        "cursor": {
          "ref": "fc737ede-fa9c-482d-9376-ac85a3c89150",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8f6f9571-d311-49c8-a0c1-adc3ea08c1e7"
        },
        "item": {
          "id": "b1d3ac2a-f598-47a2-9310-6581762b044a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "43875913-6a8d-4be2-b6b6-f850a6c5951f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1223bd9-db7b-4979-9c5a-ef89ecccbcd4",
        "cursor": {
          "ref": "707e9556-2e46-4ce1-8661-3bea15041b4f",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "069d38b4-a207-4691-88c9-13086cc9acf3"
        },
        "item": {
          "id": "e1223bd9-db7b-4979-9c5a-ef89ecccbcd4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c47578f0-eeed-4c23-b41a-66d694bfd43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1daa209-6252-4fc2-a56a-c49cd9db3345",
        "cursor": {
          "ref": "72e451ad-f769-4133-a332-b67131f11889",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c012b66c-5127-4d3c-9c12-7328f5e7e893"
        },
        "item": {
          "id": "d1daa209-6252-4fc2-a56a-c49cd9db3345",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b481e105-4ace-4e4d-897e-52d185c06e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8df507a-d1fa-4bd3-b3e9-24889fee0bd1",
        "cursor": {
          "ref": "b79fffe7-0b91-4dd1-ad01-4205d61a2385",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6b06ea7d-584b-471a-a1ca-964ba1fcb5b5"
        },
        "item": {
          "id": "c8df507a-d1fa-4bd3-b3e9-24889fee0bd1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "12db7ece-5aee-43e1-b576-007135dc6459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d8cd5b-81af-4f05-a9d1-1b067fb387e4",
        "cursor": {
          "ref": "6a1cd7f1-7f03-4eb1-aa51-5775439113a9",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9b41f6fc-d612-4a04-a581-c6b9a41b2855"
        },
        "item": {
          "id": "a8d8cd5b-81af-4f05-a9d1-1b067fb387e4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1bf3e492-a3a5-4140-8ea1-2dc383ba7f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e71e09-5cd1-4554-99d3-fe1143a9044e",
        "cursor": {
          "ref": "872e1335-bd14-423f-bc9a-798144a816b2",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2d85eb1b-09a1-4ac2-91f8-9b57ebfc7bf9"
        },
        "item": {
          "id": "65e71e09-5cd1-4554-99d3-fe1143a9044e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f5dffba8-3df3-41b8-97db-07ed4d8cd42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbf4ed2-9f66-47ac-b3fb-f212596e3e65",
        "cursor": {
          "ref": "3c90a9b2-391c-4e7f-858b-a78981a3b038",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c108eb46-7bd8-4f8a-9ca8-a574743095c5"
        },
        "item": {
          "id": "dbbf4ed2-9f66-47ac-b3fb-f212596e3e65",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f614442c-8d16-4a7e-97ee-7595485e759c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325a3fb7-018e-4867-ace6-b2006c48258d",
        "cursor": {
          "ref": "e073f580-0032-4be5-b7c8-56d04b1c056a",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b022f62d-d58f-455f-84a2-54b7b1b21491"
        },
        "item": {
          "id": "325a3fb7-018e-4867-ace6-b2006c48258d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4193112c-8a47-4c19-8e31-3c1d4a42e6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61814ff8-a92b-48ae-b576-fa19cc7e2079",
        "cursor": {
          "ref": "31754d75-9046-437f-876c-6f53e1d6aea5",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "acb6be08-8b49-4b48-ac74-378fc64e39d7"
        },
        "item": {
          "id": "61814ff8-a92b-48ae-b576-fa19cc7e2079",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f4840fa3-4447-40da-b4a9-f2a80f1c2c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dad02e-357d-4e3f-b91a-873ad9611fc2",
        "cursor": {
          "ref": "8cca3385-4230-4788-ae6b-93efb9554268",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6cf07f6b-fce3-4f07-a0c2-702f2cf5ebdb"
        },
        "item": {
          "id": "40dad02e-357d-4e3f-b91a-873ad9611fc2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "83e3eb81-e327-496d-846d-c75702d8b63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c26c39b-256d-44bf-b142-8710f54a0102",
        "cursor": {
          "ref": "0654ce68-ef32-4afd-b1c5-b9ebd30439d5",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ce4ce845-3786-455d-8bbd-ae9b34a69df2"
        },
        "item": {
          "id": "9c26c39b-256d-44bf-b142-8710f54a0102",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b6ead4fd-4063-40e1-b3ff-c1bc5c00047a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a309d4f-e545-4bca-ab50-b5acbc457c72",
        "cursor": {
          "ref": "8869db27-eb3a-4531-a168-0de82c53e208",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "79566a33-ccea-459e-aeb7-810809a7b828"
        },
        "item": {
          "id": "6a309d4f-e545-4bca-ab50-b5acbc457c72",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b98d0aa2-5d4f-4e71-b880-f754809ff1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bfa7bb-87a9-4c53-af4b-d7a069d2a081",
        "cursor": {
          "ref": "45f8a1d4-949a-4fe7-9e35-b6d851edd378",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7b80c6a6-818b-4183-9295-aef924529ca8"
        },
        "item": {
          "id": "06bfa7bb-87a9-4c53-af4b-d7a069d2a081",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "78db0eb3-4ee7-477c-bfe3-c3162c2ca70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa058e0-a1c8-48bc-a0ea-17eeff8ed141",
        "cursor": {
          "ref": "f174dcbd-035e-48ff-b3ef-91123ba288ac",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "576e248b-15eb-43c6-a18d-90926b0392bd"
        },
        "item": {
          "id": "cfa058e0-a1c8-48bc-a0ea-17eeff8ed141",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "26762471-ebcb-489c-b10b-7d1aa3e9d0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b012bb-156d-4718-94e0-101696159ed0",
        "cursor": {
          "ref": "54ed5bc9-3667-4f89-99c9-8a8e5ffb6d03",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fee40fe8-f1a4-4ef1-9524-5c77d1cc239f"
        },
        "item": {
          "id": "c5b012bb-156d-4718-94e0-101696159ed0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "86413a60-ed8f-49fc-a5a8-b3f8d5009439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e906335-edcc-4ff7-a513-4e28008e59ac",
        "cursor": {
          "ref": "199054b3-356a-4845-86d1-ef89af6f3611",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "82284f1a-3a47-4786-b649-0e598ae13971"
        },
        "item": {
          "id": "6e906335-edcc-4ff7-a513-4e28008e59ac",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1391b004-b32b-4a5d-9f6e-5609e4c661d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7b4149-cba8-403a-a524-a0c8c04efd32",
        "cursor": {
          "ref": "a694b667-b5ec-4061-a8d1-5f5dde51f934",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0d83b51a-9d9a-4139-8662-835a83342216"
        },
        "item": {
          "id": "cb7b4149-cba8-403a-a524-a0c8c04efd32",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b94fa419-35d1-4e46-8ec5-d918e892a966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d349b35a-c866-4a67-80ef-74d60efb1022",
        "cursor": {
          "ref": "c3e42e4b-fcc5-4a4b-99fb-5ce7b01e70f9",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a7511383-088e-41d7-9497-a7bacc7b6c75"
        },
        "item": {
          "id": "d349b35a-c866-4a67-80ef-74d60efb1022",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "11b88d8a-8c4b-4645-9f8d-8de5e2b46c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1c1b4e-619c-4315-8c2f-6fef3a06de17",
        "cursor": {
          "ref": "0b309529-a703-4599-947c-74ba60aafa0e",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fdc2ace0-3eb1-4c80-9b1f-8c4893dcdaeb"
        },
        "item": {
          "id": "ee1c1b4e-619c-4315-8c2f-6fef3a06de17",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e14b6613-e3de-4caa-89e0-af3065526d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b218f01c-f5da-43df-9070-0ea003ece421",
        "cursor": {
          "ref": "8305c8b1-6b2c-4945-8069-40e1f44100cf",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "942df415-0383-4231-8750-9858105ecb71"
        },
        "item": {
          "id": "b218f01c-f5da-43df-9070-0ea003ece421",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "84646ddd-701a-4e8a-bbc6-2a12a6e2d6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7936c025-1424-462d-b32a-df560cd25a79",
        "cursor": {
          "ref": "b26a4365-3f13-4ce7-b238-0149cc9c7f5d",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9c55c5c4-d96d-4683-b48b-68840971b14c"
        },
        "item": {
          "id": "7936c025-1424-462d-b32a-df560cd25a79",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5540a86a-0a2b-48e4-af93-59d9de4b4600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed11741-8119-45c6-833c-860dbd2e1629",
        "cursor": {
          "ref": "a99710b3-8205-496b-b222-642206978d65",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3e8b8bc7-2f4a-46b5-a3c4-52bb25f94519"
        },
        "item": {
          "id": "5ed11741-8119-45c6-833c-860dbd2e1629",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cf3fa89a-b9c4-48a8-a332-a31b0c4e5df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fe2eae-1a6c-4167-a438-5bd97d716167",
        "cursor": {
          "ref": "0317d921-093d-44ac-a42f-505a68b4f43f",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "52f9fbd7-a57e-4f26-94b4-a9388e771a95"
        },
        "item": {
          "id": "27fe2eae-1a6c-4167-a438-5bd97d716167",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fe59c8c5-71a3-4900-9f10-9878864cdeb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4108d2d6-6c0b-43aa-ab38-cba1efe44b56",
        "cursor": {
          "ref": "17560841-f701-4b69-bbb9-a8d9c110e40f",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7ce991ff-4c35-40fa-927c-fd3498d715f5"
        },
        "item": {
          "id": "4108d2d6-6c0b-43aa-ab38-cba1efe44b56",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "76388f95-8902-4254-ac0e-c07239f4ca0d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 548,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9b5a05-3979-408e-9d72-a1255e3bdc61",
        "cursor": {
          "ref": "3187553e-4625-4374-98a0-092cd0de6338",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e178e138-6f4c-4a44-bd9f-687e390a1be3"
        },
        "item": {
          "id": "0e9b5a05-3979-408e-9d72-a1255e3bdc61",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eb1d944a-3c0c-49a3-aa60-c2afafbb2c78",
          "status": "Created",
          "code": 201,
          "responseTime": 4014,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "23447360-43bb-45d1-84d2-bd552f11394f",
        "cursor": {
          "ref": "62b9a32c-b9f9-461b-9de6-e20a933b986e",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e59456fe-3c09-49df-92d2-65bb27264e86"
        },
        "item": {
          "id": "23447360-43bb-45d1-84d2-bd552f11394f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "22a58c98-f8c3-4f48-a2f2-0187a76a71ed",
          "status": "Created",
          "code": 201,
          "responseTime": 4766,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "bb31b5c8-2328-42e7-95ad-8556f306a18d",
        "cursor": {
          "ref": "e55da422-c9e8-4289-98e0-5dd3247e25d9",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "01effb62-d8a8-4f53-bae6-e8665e77a66d"
        },
        "item": {
          "id": "bb31b5c8-2328-42e7-95ad-8556f306a18d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d2285a66-8e25-4526-b465-aed078b189a0",
          "status": "Created",
          "code": 201,
          "responseTime": 4764,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "14a00327-827b-4571-b7ce-7c43db8a7726",
        "cursor": {
          "ref": "f8a62a3f-51f7-47f4-a17f-009b7ce2aa63",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ff509e55-a056-4c82-a038-1213a696cef4"
        },
        "item": {
          "id": "14a00327-827b-4571-b7ce-7c43db8a7726",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c8c7385c-4bf5-4230-9fd2-5f726d1e13c2",
          "status": "Created",
          "code": 201,
          "responseTime": 4068,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "23fc6fe1-65c1-4332-b735-923569977c47",
        "cursor": {
          "ref": "d2020de1-767e-460f-bb55-322e39920b69",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a396a9e8-237c-44b1-9a48-73e2c3c75796"
        },
        "item": {
          "id": "23fc6fe1-65c1-4332-b735-923569977c47",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4c05192f-a798-4036-ab9e-3f1af6f00eff",
          "status": "Created",
          "code": 201,
          "responseTime": 4955,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "86c1e028-62fe-4878-8cf0-5602e8444fd6",
        "cursor": {
          "ref": "12b95015-aa54-47a9-9c8a-a251670dfb3e",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e3d3ab7d-f65c-4e63-9d3a-e17ae8292cb0"
        },
        "item": {
          "id": "86c1e028-62fe-4878-8cf0-5602e8444fd6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d5315d96-44af-4592-a416-e697d2a76a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c1e028-62fe-4878-8cf0-5602e8444fd6",
        "cursor": {
          "ref": "12b95015-aa54-47a9-9c8a-a251670dfb3e",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e3d3ab7d-f65c-4e63-9d3a-e17ae8292cb0"
        },
        "item": {
          "id": "86c1e028-62fe-4878-8cf0-5602e8444fd6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d5315d96-44af-4592-a416-e697d2a76a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e650421-d1ec-47e7-8450-dd252e882f80",
        "cursor": {
          "ref": "f2392d39-5fcf-4215-9d48-db13fece623a",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7a3d93a7-754d-4f9f-8971-3ab37daf5514"
        },
        "item": {
          "id": "1e650421-d1ec-47e7-8450-dd252e882f80",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "78b3757a-cf65-4589-8d01-6df8c54f1e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3542a4c9-838a-4fb3-ad9a-da9f87a3535f",
        "cursor": {
          "ref": "b2726819-603e-45b2-9676-3a2c2f2c9625",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ea7f4238-9c53-45c0-8aca-68d71fb49d92"
        },
        "item": {
          "id": "3542a4c9-838a-4fb3-ad9a-da9f87a3535f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fb2e6b7a-d538-4e56-b435-acb8a6bd37fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8619164-e69d-43e4-add6-a1c667344fe1",
        "cursor": {
          "ref": "253c6638-194d-451f-bc76-94acb340bc9b",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "507f6dce-5b53-467a-a38f-1615e55e449d"
        },
        "item": {
          "id": "c8619164-e69d-43e4-add6-a1c667344fe1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "110c30b8-57b2-4459-a372-d0d61445742a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cce5c2-bb5b-47e1-8737-930bd94d928b",
        "cursor": {
          "ref": "86b0952b-c5d9-48a9-885b-dcf7b640db3c",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b1b34925-1e1b-49fd-af13-e4fae62f7ffd"
        },
        "item": {
          "id": "a8cce5c2-bb5b-47e1-8737-930bd94d928b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "22da81fc-70a0-45e4-9085-b8b1393e290e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0fe823-ec47-48f2-bbd5-20329b2a9471",
        "cursor": {
          "ref": "92d72697-f96f-49d0-8a87-1d391f54882a",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "54b4f5af-4b4a-4992-abd0-45a2fd927f03"
        },
        "item": {
          "id": "2e0fe823-ec47-48f2-bbd5-20329b2a9471",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "990e75ff-c5b5-409f-81bc-6c9f493ddeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f53186-e77d-4175-808c-7fb06ac1afae",
        "cursor": {
          "ref": "b52fd091-1eb1-4909-8d64-a92fda90ebad",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7a61b20b-0d77-4acd-9dde-f64c5f9f3626"
        },
        "item": {
          "id": "28f53186-e77d-4175-808c-7fb06ac1afae",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "454b5951-b588-4cdb-861e-fa5805b6c10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f6dc05-84e0-4c3b-98ee-008b498dabc5",
        "cursor": {
          "ref": "c0cae4f9-7660-49c3-be2c-8f5269b9f3a5",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5a5befae-6a2a-459a-95db-6527a88cccee"
        },
        "item": {
          "id": "83f6dc05-84e0-4c3b-98ee-008b498dabc5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f153b31b-9849-4b9a-ab92-c76a2c700000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db50a14-ed85-4853-80de-f006cc7a3ae2",
        "cursor": {
          "ref": "8f53f1d8-b467-4ffe-b35b-4ae9d2502547",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f72303de-964c-4483-b3a0-ac58b5698065"
        },
        "item": {
          "id": "8db50a14-ed85-4853-80de-f006cc7a3ae2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0de95768-939e-4ce6-91f2-9f07740e92a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95543cc1-c467-49ce-b5c5-9c706232afc1",
        "cursor": {
          "ref": "bed46a31-b0a4-4a18-bfc9-1ba78daee87c",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a6bb8be8-ff5a-4488-b757-08345a60260b"
        },
        "item": {
          "id": "95543cc1-c467-49ce-b5c5-9c706232afc1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eec9d935-70cb-43a9-86fb-6fe796c8f25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f398eb-979c-4e2e-b0f6-ddc8415c3c67",
        "cursor": {
          "ref": "55c029a6-c18d-4827-b1a9-5bf98c400fba",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "68a1e9a7-b706-4f1f-802a-c2a9c99138b0"
        },
        "item": {
          "id": "41f398eb-979c-4e2e-b0f6-ddc8415c3c67",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0a0671f6-f1e1-4280-a0c9-1e7b69073e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84515154-1286-4dd7-a5b8-8a8b88ea08ce",
        "cursor": {
          "ref": "8c7040a3-edec-4b74-8529-3b2fa15d00b6",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2436695e-360d-4aca-9189-015445865b61"
        },
        "item": {
          "id": "84515154-1286-4dd7-a5b8-8a8b88ea08ce",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7d289695-52b9-4bc2-85a6-ed34c851d126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4987980-d478-42ad-a4a3-74c54a932a9f",
        "cursor": {
          "ref": "70f577c3-7d0e-4978-b4ce-8cb9c5868f0e",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ff69bfc3-a6e3-4599-be8d-e8aaae4d8035"
        },
        "item": {
          "id": "d4987980-d478-42ad-a4a3-74c54a932a9f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1c57589f-2b7e-4fdc-b186-5a645d8f1620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa2f83f-2c19-4435-b11c-4be662832863",
        "cursor": {
          "ref": "8dc53eda-d09c-4883-a4d8-68313eb5ae56",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9d4184e7-78e4-4b0a-811d-529b1a40834a"
        },
        "item": {
          "id": "5fa2f83f-2c19-4435-b11c-4be662832863",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "89275af8-9d33-4a42-8b17-8b6155e34a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a50354-20cd-4f40-8a17-bc3f14a61d55",
        "cursor": {
          "ref": "a0df49c7-5723-4796-a61f-a78bb5f252b6",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "40bf9735-62b5-4b76-8890-8ce669e57847"
        },
        "item": {
          "id": "61a50354-20cd-4f40-8a17-bc3f14a61d55",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5d659e9d-23be-4efd-9f2d-1f5f8205db0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb587c3-2a56-422e-8729-85f8e26c3dcc",
        "cursor": {
          "ref": "4f735681-4f5e-497b-8c01-b602ac6fee35",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "91f1efca-e2f8-4076-963e-7d67c4efadc5"
        },
        "item": {
          "id": "0fb587c3-2a56-422e-8729-85f8e26c3dcc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7e39ea33-1406-471d-b6b5-b6148650e58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea551e0-0cab-4d3d-9813-9d5b31033cef",
        "cursor": {
          "ref": "f42b4724-b356-4912-82a9-50dd22c3d301",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "be3d05ce-2042-476b-927d-a8261ea1d55e"
        },
        "item": {
          "id": "fea551e0-0cab-4d3d-9813-9d5b31033cef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8ac9937a-3dcf-4090-be2b-dedc7cb7550f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be06f2ef-17c0-47b2-bfd5-73a631e4d3d3",
        "cursor": {
          "ref": "25dfc748-ffb6-4cc9-be6c-8fbcdf425f67",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c74c7619-1078-4fd6-bd59-18ffc8eba48d"
        },
        "item": {
          "id": "be06f2ef-17c0-47b2-bfd5-73a631e4d3d3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9610507c-2c54-4595-b8e9-b4c1e63295de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9277c026-754d-4548-b512-7561d7d2c56d",
        "cursor": {
          "ref": "d1bd3e08-11ec-4ffd-a376-9f928031a9a1",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8daaa295-f066-467b-a509-b5e2993b600b"
        },
        "item": {
          "id": "9277c026-754d-4548-b512-7561d7d2c56d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7441421e-a3d2-4149-8e4b-6d8874abcb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb708989-29e9-47a4-97fd-8f75c66f6c7d",
        "cursor": {
          "ref": "d20f5f96-cb8a-404f-81bc-ac21cd32b903",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4de3b462-ea64-4b36-b3e8-c67566c9330c"
        },
        "item": {
          "id": "eb708989-29e9-47a4-97fd-8f75c66f6c7d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "081492e3-b4b2-44e8-9abd-e733372e9557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605e74dc-a15b-45a2-89f8-7760975913ee",
        "cursor": {
          "ref": "106f69c9-af37-4ce3-92f8-e9fbc724e7c2",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d340ee4d-af73-46df-9aab-6b77a52673b3"
        },
        "item": {
          "id": "605e74dc-a15b-45a2-89f8-7760975913ee",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "afc31bdd-7aa1-48bc-824d-4d7b69bc16a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26122b43-1585-4020-aa26-015511c18700",
        "cursor": {
          "ref": "6851d905-5619-4282-acdc-c2d44ca3a5de",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dfd6007c-30af-47b3-936f-347019f04a64"
        },
        "item": {
          "id": "26122b43-1585-4020-aa26-015511c18700",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b5ef51bc-0f92-4655-92b6-8e72ee6dd657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2155b240-4195-4a55-bfbd-b8c2112aadf0",
        "cursor": {
          "ref": "7c3ea7e4-9d04-4c21-a1ec-306ed73ee931",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "295dfb3e-ea39-403f-961b-97985f518be1"
        },
        "item": {
          "id": "2155b240-4195-4a55-bfbd-b8c2112aadf0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b501f55a-2001-4eaf-bc4b-2489eaf524f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1269f35a-62b2-4155-bf34-e6a8a3048c93",
        "cursor": {
          "ref": "a081ed6d-c412-466a-8d02-f52bf3a63e65",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "03ddbdd3-9a17-43d1-a286-3f7d6674acd1"
        },
        "item": {
          "id": "1269f35a-62b2-4155-bf34-e6a8a3048c93",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b0f2e4e7-b607-45e1-8082-fa9c71d1acb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3918812a-bfd2-4c86-8c3d-735925c72c62",
        "cursor": {
          "ref": "97207e5d-2d3f-46e6-acfb-47b19e313140",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5795b6bb-2b54-49f7-8df5-c89e2b1b39ad"
        },
        "item": {
          "id": "3918812a-bfd2-4c86-8c3d-735925c72c62",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "473190df-8ee2-402a-bf5e-aa8d7cf3e01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25bab6b-24ff-43d3-ab79-e104cc36d5e8",
        "cursor": {
          "ref": "08d2f25f-da45-4fd7-8786-9e4cac32a2f6",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "72972320-d265-4076-820c-ef54dd99216f"
        },
        "item": {
          "id": "c25bab6b-24ff-43d3-ab79-e104cc36d5e8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b40a04ff-343f-4730-9e03-53b7cb7a5878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e72b6f8-5ab4-42fc-bcb2-8f02bd3de189",
        "cursor": {
          "ref": "35f3b8ca-f099-47e6-8e35-fc7b27f7eb0b",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bab23228-f234-4eab-bf6b-30642b4ad173"
        },
        "item": {
          "id": "5e72b6f8-5ab4-42fc-bcb2-8f02bd3de189",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c70cd51a-ba13-40cf-abf8-63071e9d85c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67322632-5e07-4392-8271-78b71a951c97",
        "cursor": {
          "ref": "c9bc6682-a199-4bc6-8c83-c34a21967ec6",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bbadf27c-265b-4759-a0cf-02b2cdc52f2b"
        },
        "item": {
          "id": "67322632-5e07-4392-8271-78b71a951c97",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "32db15cf-e265-49e0-83f6-ce7c63175fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4c4886-0224-454d-a6a9-abd615bef8ad",
        "cursor": {
          "ref": "d95d70c7-b320-46f1-9fd4-9c7d8810cfcc",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5134b451-669b-46eb-bb3a-feb295531d51"
        },
        "item": {
          "id": "ee4c4886-0224-454d-a6a9-abd615bef8ad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9b623de6-9f58-4726-be6a-c3547d81b0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a736ee-37fe-4458-a6b6-7de26d710040",
        "cursor": {
          "ref": "4674dcb6-08e8-4ecb-bba6-c9ca0f8af1bc",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d2d0095d-df6f-4fda-9eab-2875afabcd2b"
        },
        "item": {
          "id": "07a736ee-37fe-4458-a6b6-7de26d710040",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b90f0fc7-6083-448d-a507-a3f2cce2d329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84053d0-149b-420a-a4ed-200aee68f5e5",
        "cursor": {
          "ref": "cccca059-d171-47a6-ae91-6011c4e7d576",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5e8725e4-2f03-4e26-956b-c0723aa94dbb"
        },
        "item": {
          "id": "c84053d0-149b-420a-a4ed-200aee68f5e5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ffd63c07-d82a-4ec1-bab2-ffab8545403a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5920e6ba-c2bb-4fa7-a5b0-6020fd7eba1f",
        "cursor": {
          "ref": "8648bbde-8753-4cde-b924-c8fd7dea4dcc",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5beba5ab-aea3-4bc4-9ec6-5fe8a122b116"
        },
        "item": {
          "id": "5920e6ba-c2bb-4fa7-a5b0-6020fd7eba1f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "702339a3-1bf5-47b1-9b56-effd12268a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbdb32b-6e21-4e85-bcc9-5b5ae7ac6418",
        "cursor": {
          "ref": "3b3550d0-2b07-4530-a2b9-67379d7cf8fd",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0cabc42a-2f4b-460b-bc78-8869efc82493"
        },
        "item": {
          "id": "cdbdb32b-6e21-4e85-bcc9-5b5ae7ac6418",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "64e5155f-e588-406d-a929-7de975927d4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb97e635-bc8f-4326-ab1c-c1df06fc6a2e",
        "cursor": {
          "ref": "86d60236-f6dc-4c66-9d01-e20083d9c7bc",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e056fad5-6d58-4f31-865d-d4d60b402580"
        },
        "item": {
          "id": "cb97e635-bc8f-4326-ab1c-c1df06fc6a2e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "dbc2886b-ed67-4a7c-89a6-fa8019d1b799",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 549,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7236aee7-a8fe-4077-8967-5028865bd0ff",
        "cursor": {
          "ref": "8ebebfb0-d98c-44fa-82e6-e3f2393f92ba",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "abaad224-f051-4cf0-b335-d01f7cdf14fa"
        },
        "item": {
          "id": "7236aee7-a8fe-4077-8967-5028865bd0ff",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1e7bfe6f-e9d3-485b-a6e3-9623fb9da8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7236aee7-a8fe-4077-8967-5028865bd0ff",
        "cursor": {
          "ref": "8ebebfb0-d98c-44fa-82e6-e3f2393f92ba",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "abaad224-f051-4cf0-b335-d01f7cdf14fa"
        },
        "item": {
          "id": "7236aee7-a8fe-4077-8967-5028865bd0ff",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1e7bfe6f-e9d3-485b-a6e3-9623fb9da8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220eaf3f-e45b-4204-82cc-5c0cb4e6a783",
        "cursor": {
          "ref": "13652917-84c2-4ba4-a6e3-ff819d5a3a27",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9ec3c9aa-c835-4ab5-8069-c307b4740d98"
        },
        "item": {
          "id": "220eaf3f-e45b-4204-82cc-5c0cb4e6a783",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ab5f4740-8d57-4355-8d8a-aa42764fa0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb5f76e-bccd-4d39-8e7b-f37595bdea75",
        "cursor": {
          "ref": "4344c268-ad31-4238-900c-1ea1879fb989",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b7a97580-d47c-4ae2-a56f-7cf8e1cd10b1"
        },
        "item": {
          "id": "3bb5f76e-bccd-4d39-8e7b-f37595bdea75",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b31d195d-bf5e-4cb2-8b4d-4c79e65c4423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892f26c2-0109-4696-beae-cd4aa3b87bc6",
        "cursor": {
          "ref": "c7640590-e359-4e64-b613-9c79d7bc0574",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f1a412ca-1643-446d-a25f-97363246b7ec"
        },
        "item": {
          "id": "892f26c2-0109-4696-beae-cd4aa3b87bc6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8d7e31ec-7d0a-4a1e-b69d-87d2d47d3a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a96407-1269-4370-9144-c275b52464cc",
        "cursor": {
          "ref": "e7842bbb-1895-48fa-b514-a0c71931e03d",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "aeb9a832-1166-4bba-9429-640766d0e1f5"
        },
        "item": {
          "id": "d1a96407-1269-4370-9144-c275b52464cc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2808a6c6-00dc-4733-9514-c91a87e9b05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fa2deb-15f1-4184-ade9-37a20d285cc9",
        "cursor": {
          "ref": "fb20c437-d2c8-4e0f-8fe8-1fd69ce75dd7",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0a5d6b25-c1f2-4bec-a15a-1d5e45eb57d7"
        },
        "item": {
          "id": "c8fa2deb-15f1-4184-ade9-37a20d285cc9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c7be3831-a479-4ada-a621-0ad2e7ac801e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99e1c1d-7bad-48ee-ad49-ee2aeb9f6cbc",
        "cursor": {
          "ref": "d7e18916-e731-4c6b-9d49-4abfb51d82c7",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5922db1d-de95-4bd3-a79a-c695f6063ac7"
        },
        "item": {
          "id": "a99e1c1d-7bad-48ee-ad49-ee2aeb9f6cbc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "afeeda95-2808-4cfb-b985-2ac99122c264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c3c452-306e-405d-825c-e91d333e414f",
        "cursor": {
          "ref": "c8c06960-d2d5-41e0-9af5-6b4a4cb09602",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8020403b-1e59-44d4-8867-747daa4a96b3"
        },
        "item": {
          "id": "93c3c452-306e-405d-825c-e91d333e414f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e4c8cba7-8145-4bd9-85c9-eb745b2eb09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b991d383-1ef5-4487-b7a3-e3e18387aa74",
        "cursor": {
          "ref": "16848978-abbc-4337-8e31-7457ac98fa6c",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d692490f-be0f-44f8-aba6-36bc1743f307"
        },
        "item": {
          "id": "b991d383-1ef5-4487-b7a3-e3e18387aa74",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7cb30f96-a2c5-4208-8950-2c7d19dff58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefbf9b5-ac87-4b4e-88fa-1a5370e6a191",
        "cursor": {
          "ref": "6dcfb1ad-55e2-44ec-bc7c-063fbd421a08",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7ed8eded-8e80-4e8e-bda3-c59ea8bea195"
        },
        "item": {
          "id": "cefbf9b5-ac87-4b4e-88fa-1a5370e6a191",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1649461d-df95-4dfc-9bc9-3be80715303c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f280c31-e163-4100-a719-e89150333eeb",
        "cursor": {
          "ref": "f94955bc-3c68-4066-8f3c-81406963a363",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0ab8218c-db27-4942-919d-c63a65993027"
        },
        "item": {
          "id": "7f280c31-e163-4100-a719-e89150333eeb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "533cddf9-1c3f-4c09-b511-e08f63a36bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1959e275-3a30-4c5a-b4ae-cd9690a799fc",
        "cursor": {
          "ref": "ec4d0ce0-5167-4a7f-8f30-796ae11e725f",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bc1eb425-2d1d-40f2-94b4-57b204bb533d"
        },
        "item": {
          "id": "1959e275-3a30-4c5a-b4ae-cd9690a799fc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "03f8df06-1de7-42a6-a029-c7ab566ef419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328af9d8-23dd-4ea5-89f4-bc20c367df83",
        "cursor": {
          "ref": "d0941bf9-93e4-4afe-8ca2-75b1a677a2f2",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "249b4168-7294-4995-aff0-25e8150ee20d"
        },
        "item": {
          "id": "328af9d8-23dd-4ea5-89f4-bc20c367df83",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0a47dd16-f64f-4117-ac94-565c0d5a6f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28d98b0-97a1-4466-ae87-8d0a74650c68",
        "cursor": {
          "ref": "3cd7433d-1a76-43cb-800f-d3d6cf8f546a",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "25231784-5d15-4a22-9948-96f9fe4604d5"
        },
        "item": {
          "id": "f28d98b0-97a1-4466-ae87-8d0a74650c68",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0a0916a3-158a-49e7-9fa4-bd54ecb64750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f682b55b-2a59-4936-8073-088455e7d53a",
        "cursor": {
          "ref": "f3be7b55-c3fd-4cbf-a29d-eec04ef317eb",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a5d2eecc-a95c-422d-b332-2a490d7861fa"
        },
        "item": {
          "id": "f682b55b-2a59-4936-8073-088455e7d53a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e538c095-dcef-4bd4-96f7-0686e1046556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ddc7dc-73f4-4636-9351-5adcedd9cb27",
        "cursor": {
          "ref": "604f386c-6886-44c3-ac10-1a2c279917c5",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6dafd1bb-b82f-4562-a181-83352c0559a5"
        },
        "item": {
          "id": "b7ddc7dc-73f4-4636-9351-5adcedd9cb27",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "58ea8635-d6a2-4b69-8e35-7b9fbef7f6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345f4203-c722-48ff-afe9-485ae526636c",
        "cursor": {
          "ref": "54785de8-e5c5-4d27-879c-452cc3403246",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bc8118e0-135c-461d-aeda-b2e5eb065b39"
        },
        "item": {
          "id": "345f4203-c722-48ff-afe9-485ae526636c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "41bde94c-f9c2-4639-a5d0-edd6710f3970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d059debc-fbc4-4664-9ff8-8f722546e05f",
        "cursor": {
          "ref": "666c45ec-f8e9-4b6d-90b2-51a2aab4d6b5",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bf8bd5ac-8d79-4384-9514-4ef1bc8aef03"
        },
        "item": {
          "id": "d059debc-fbc4-4664-9ff8-8f722546e05f",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "0481493f-fa40-49c9-9a3b-6043a6b43a49",
          "status": "OK",
          "code": 200,
          "responseTime": 3364,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "2808ecab-0ceb-4fb5-ae9f-9d404a4f3b4e",
        "cursor": {
          "ref": "5e048c32-e343-45cb-bb69-4dec11148fb1",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fde28ea1-be93-4afc-8393-650197e7755e"
        },
        "item": {
          "id": "2808ecab-0ceb-4fb5-ae9f-9d404a4f3b4e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "29732110-8ed8-4b3c-9655-617fa8539f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d76d7b-8c52-43f6-8178-771a9fd060eb",
        "cursor": {
          "ref": "fe71908f-cb26-4a80-b38a-c083c91e99b0",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "781b0e96-8b78-4b7f-b321-c5df32018752"
        },
        "item": {
          "id": "96d76d7b-8c52-43f6-8178-771a9fd060eb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6e07ddad-2d00-40e5-b665-ed7ff72c5d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5f8d04-e2f0-4b22-978f-ee55f7cf4210",
        "cursor": {
          "ref": "58610649-e82f-46e9-a866-c787e9c0bdbf",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0a1f5bb9-5b25-4ab3-b33f-52a546d9ec4e"
        },
        "item": {
          "id": "0b5f8d04-e2f0-4b22-978f-ee55f7cf4210",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "97facbb5-a1db-4f6e-ac6f-2d5583352913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2487c97-3dd6-4456-876d-efed967c30d1",
        "cursor": {
          "ref": "88d6be55-3d8d-444f-9e4f-e492334ef0f2",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0b80aa25-db60-4baf-bc6d-6c339963d575"
        },
        "item": {
          "id": "e2487c97-3dd6-4456-876d-efed967c30d1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d06f0b62-96d9-4139-941c-a1fa3a089774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ba3d8c-6d2d-4f3c-a540-510943a705c3",
        "cursor": {
          "ref": "e024929a-ac47-48bd-8b30-2f032f617339",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3b3facf3-2718-4f1d-a7b9-a295a0618b91"
        },
        "item": {
          "id": "29ba3d8c-6d2d-4f3c-a540-510943a705c3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "61b5463f-6ce3-45ec-a79a-9a4805d7f12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f02bdf7-b05a-4146-be91-bc7055a29b47",
        "cursor": {
          "ref": "ddd20118-7681-4249-9b28-1ed3a2b3bd48",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7b16dc7f-383d-4814-a2af-762563d2b933"
        },
        "item": {
          "id": "7f02bdf7-b05a-4146-be91-bc7055a29b47",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d746689d-34f0-4481-954d-2f9bb1991335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7df02c-198c-4f5c-bfcf-1c4a43ce5cc4",
        "cursor": {
          "ref": "e584c0c2-01de-4a65-bc5a-c69f0309835e",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c7a84d76-6891-41b6-a30e-6335465284ee"
        },
        "item": {
          "id": "1c7df02c-198c-4f5c-bfcf-1c4a43ce5cc4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "15ea30aa-7fbe-445d-ae9b-977a7362545a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c144e1e3-e17f-4f07-8cef-2db67047ec48",
        "cursor": {
          "ref": "b862349b-4b4d-4cec-b774-26b5c61652a8",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ee49b13a-708f-41d6-9857-8876ffd755f9"
        },
        "item": {
          "id": "c144e1e3-e17f-4f07-8cef-2db67047ec48",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5adc6578-a51d-4498-89c0-b3e9e1953924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309ab6e7-50e3-4b3c-a501-ca15977e92c8",
        "cursor": {
          "ref": "2c151c52-654c-4cd3-b885-9671b1bd3e77",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f302c35a-abe5-47a8-a9c5-bc9cd6f07b71"
        },
        "item": {
          "id": "309ab6e7-50e3-4b3c-a501-ca15977e92c8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "16abf636-0f18-4d6c-88ab-ff3468d04fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab81ec3f-ee36-4271-94b2-17f4d51bb50e",
        "cursor": {
          "ref": "be1538ac-2c1b-4f84-a038-e50a04c72e62",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d164bedd-3341-478b-ab33-f72b2dffa153"
        },
        "item": {
          "id": "ab81ec3f-ee36-4271-94b2-17f4d51bb50e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "866475f9-e47a-4e00-b5ba-b1c8c193407b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733e60d2-9a3f-447f-b929-4d10376f5fda",
        "cursor": {
          "ref": "b7da519e-abea-453a-ad6c-21380b8b25ef",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "553e7dc6-0f46-4159-8b33-d8d966364313"
        },
        "item": {
          "id": "733e60d2-9a3f-447f-b929-4d10376f5fda",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "efec8e3a-c1a1-409e-ae58-09d6e21868b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aca6ed7-e3e8-4b67-b794-37a5689ad46c",
        "cursor": {
          "ref": "c8120725-187f-4a46-bc6b-a7e2284f127e",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "78016cbc-fece-4a71-b0e4-a06ce87c4b05"
        },
        "item": {
          "id": "6aca6ed7-e3e8-4b67-b794-37a5689ad46c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3224c7a0-0ce7-4fd9-8c54-b482203cae4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46670a3-ba19-43aa-b119-cd28350c1d4b",
        "cursor": {
          "ref": "6aac7c07-9be6-46dc-9fcd-6b2e27debe43",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fce56926-baa4-4f19-b4fb-035e3e1cf15d"
        },
        "item": {
          "id": "f46670a3-ba19-43aa-b119-cd28350c1d4b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1b62c6cf-6c09-4bbe-8a07-f50ed50ec58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af97523-8103-4cf8-93f5-1aca081309c9",
        "cursor": {
          "ref": "174cdee5-e040-427e-9f87-a14453bba946",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a51b61ea-db74-41ef-ae63-fc63dcacbb19"
        },
        "item": {
          "id": "5af97523-8103-4cf8-93f5-1aca081309c9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "058f5be7-38bd-48da-a8b9-24d85e209397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7e5741-1981-4e0e-8a5b-1e43a08acde6",
        "cursor": {
          "ref": "6dd41cf1-373c-459c-8f94-3f9302644045",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "656c8766-b55e-49ee-aa24-98879f6ade6e"
        },
        "item": {
          "id": "1e7e5741-1981-4e0e-8a5b-1e43a08acde6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9f07eafb-afc1-4f3f-9433-ad535b264a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca923f6-03ff-4325-9537-81a0ca46858f",
        "cursor": {
          "ref": "71dcc748-44a3-462e-830c-9308b9c4da80",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4b2914c7-38f1-4ac0-8e57-01e0ac6963aa"
        },
        "item": {
          "id": "6ca923f6-03ff-4325-9537-81a0ca46858f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "42e3953c-730c-4498-94f6-44421e96ab0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e976ef-9976-46f2-a90a-c0a5dcac6224",
        "cursor": {
          "ref": "1e6a8e6b-d812-4bc9-a582-c1e1f929ba46",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8312340b-6c02-45e0-9934-044aa7c306dd"
        },
        "item": {
          "id": "d8e976ef-9976-46f2-a90a-c0a5dcac6224",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c2bbc48d-a046-4e5f-809c-4d32c70a1924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504bc9d4-e9ef-4796-a04e-90da3f54c690",
        "cursor": {
          "ref": "71af587c-1156-494c-97cc-25a47ffca849",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f64a43c0-71e3-4761-b364-e1bc10e0959c"
        },
        "item": {
          "id": "504bc9d4-e9ef-4796-a04e-90da3f54c690",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "60a259cb-235c-41b8-b5e4-8e1fced2c36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4003b2d6-2027-4d83-a3f7-7205e8bf335c",
        "cursor": {
          "ref": "1797211f-0651-40a9-be3f-6777f328a6c5",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c45ea82f-54ce-4255-9c66-8437a4490dc5"
        },
        "item": {
          "id": "4003b2d6-2027-4d83-a3f7-7205e8bf335c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2e77a1b5-88b6-4320-aa32-cd653dae91a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7250bf3-f514-4956-8bd0-ae5a18a1e246",
        "cursor": {
          "ref": "eaa725a0-04eb-493b-8e02-01f8be5ab5d5",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "381cd5f2-bd00-4812-bd83-4f058d702bee"
        },
        "item": {
          "id": "d7250bf3-f514-4956-8bd0-ae5a18a1e246",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e522accd-30c5-49cf-a6d1-495e259691ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4123d364-3240-4202-8d9d-b96fda688974",
        "cursor": {
          "ref": "5d4b8bfd-6ed4-4ea9-8c50-6d8e6c86a9bf",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9a56ff68-518e-4ccf-b2a4-324b59a32c9b"
        },
        "item": {
          "id": "4123d364-3240-4202-8d9d-b96fda688974",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f5bcd695-0fda-4a6c-82dd-83c37cceb356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d95ce7-695e-4927-9431-61d5cd6a5af6",
        "cursor": {
          "ref": "6ee27c37-fba8-47d6-9b41-92467c400d3b",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bf191403-0d09-4da8-9b3f-8692c2bf16e4"
        },
        "item": {
          "id": "01d95ce7-695e-4927-9431-61d5cd6a5af6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9479bed8-ede2-456b-9f5f-48096436b029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fa984e-7647-4d8d-8379-16e2693c5a9c",
        "cursor": {
          "ref": "abed2b93-b7dc-4c22-ae50-745756f3a3c4",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ba2a7bcb-7ee1-42ca-b1ed-09a0108f2367"
        },
        "item": {
          "id": "b9fa984e-7647-4d8d-8379-16e2693c5a9c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3d9c9147-1de3-4ed4-acbc-3402bbf1fa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a0893d-ad72-4072-b5b4-d0dc84c651f5",
        "cursor": {
          "ref": "54cd8324-cfc8-4573-8e3b-747bf42fa7b7",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ee82efa3-878c-425f-be89-8d88a965d50d"
        },
        "item": {
          "id": "41a0893d-ad72-4072-b5b4-d0dc84c651f5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6b020bb1-b16a-4948-a6ed-e89b80eb8c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3603b8-e686-401d-ae54-7f72a1cf3a92",
        "cursor": {
          "ref": "6fdd20c2-dd83-4ae8-b2bb-2944a2c45168",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "49dc09d3-6e41-4edb-8eed-a9bd638f1cb4"
        },
        "item": {
          "id": "9d3603b8-e686-401d-ae54-7f72a1cf3a92",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fce8bad5-a2cc-40be-ac19-bac97d62fe41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dfa70c-a091-4c51-9924-7511229bce7f",
        "cursor": {
          "ref": "77813129-fd9e-4d52-b62e-a5d46c2c3b40",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c8865abe-d830-4c07-987a-c3d5743a53c3"
        },
        "item": {
          "id": "14dfa70c-a091-4c51-9924-7511229bce7f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "91ebffc5-607b-4fe3-ad95-18ec4202c079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f885b34-019f-427b-9566-f613f8503f2a",
        "cursor": {
          "ref": "6763939d-bb4d-4805-b3e6-4b98937297c4",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a71ed29a-7eaf-4f0e-aa89-4056e12e9981"
        },
        "item": {
          "id": "9f885b34-019f-427b-9566-f613f8503f2a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a786601d-2f8a-4fad-bdfd-a51c7b4dc28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa54f559-7034-42d4-8d13-a41080368c02",
        "cursor": {
          "ref": "8139f13e-e735-4aef-8feb-d839523fa39a",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1b6bd89f-e281-418e-84f9-dd9968c45d44"
        },
        "item": {
          "id": "aa54f559-7034-42d4-8d13-a41080368c02",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "71187a6f-15fa-4773-9522-f45f8ba13208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3cb87f-316d-417c-83ae-874362557129",
        "cursor": {
          "ref": "2a300556-e246-42b0-a150-225c8c190d3d",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4a6f34b5-ff83-418e-984d-c9007e6e73f2"
        },
        "item": {
          "id": "bc3cb87f-316d-417c-83ae-874362557129",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ffe60fa9-8cca-4572-9dbf-76c5a6fa29fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727f1097-c81f-4f26-9414-44e5e5a189c1",
        "cursor": {
          "ref": "4befa499-993c-4e12-8b10-04d234c0f523",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "60d3fa40-421f-452e-81a2-a7faa2f0d128"
        },
        "item": {
          "id": "727f1097-c81f-4f26-9414-44e5e5a189c1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "caadc127-3d63-4999-bc8b-2648924fc44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6a5537-70c3-4474-a793-f2b5d7cb1a25",
        "cursor": {
          "ref": "aed0f100-f747-4659-aeff-01710681d397",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b3937fd2-4895-44ef-bbf5-d237696868a7"
        },
        "item": {
          "id": "ef6a5537-70c3-4474-a793-f2b5d7cb1a25",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0e312cee-ed42-4c09-aa07-b2d988710944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfe8365-6c45-4c73-97c1-144c1466774c",
        "cursor": {
          "ref": "2354bb9e-50e1-49cf-9e2f-f8df9396351b",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "22bbe329-b783-4308-af40-05e9c066c962"
        },
        "item": {
          "id": "7bfe8365-6c45-4c73-97c1-144c1466774c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "59b96cd5-3bc3-4aeb-b0d2-a8cd76644353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085ac216-7f91-44b2-9080-0b758c52dbd4",
        "cursor": {
          "ref": "e303183e-fe3d-4f17-a687-b69e5e3a61cc",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a640e112-49ae-4b11-b375-310b6a50936c"
        },
        "item": {
          "id": "085ac216-7f91-44b2-9080-0b758c52dbd4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c287bcdc-7761-4bc7-a1d1-0ee2596b98ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af20a98-c353-49d4-a64a-1a8845e09dc1",
        "cursor": {
          "ref": "0068436a-e9b5-48a1-8ba0-5844e2a45e19",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3c2dd482-22df-4d43-b273-66fe09aebd69"
        },
        "item": {
          "id": "6af20a98-c353-49d4-a64a-1a8845e09dc1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d9bd884d-34bd-4aff-a032-e0fca786aab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b4d24e-23c1-4959-a85b-0622110a6b57",
        "cursor": {
          "ref": "72f449fd-301d-466f-93da-0a6960d69b40",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "815d8e88-cdc9-4683-837d-3647c5e9a2b4"
        },
        "item": {
          "id": "10b4d24e-23c1-4959-a85b-0622110a6b57",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5e901ebe-ff99-4998-ab53-ae20bc23dc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee196b05-ba2a-40f5-9910-d8a88e295e56",
        "cursor": {
          "ref": "921fad6b-5d0b-4286-8893-3b868e8067d6",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2419b999-f29e-40c5-9875-00a094005109"
        },
        "item": {
          "id": "ee196b05-ba2a-40f5-9910-d8a88e295e56",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a01555cf-7ac6-4f0a-bbec-059d5ade0ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2715bbe-07a1-431b-bece-0331e820111d",
        "cursor": {
          "ref": "b63faa2f-5e4f-4300-bfae-4d77d9823291",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f9e296e3-3e47-46e9-ba75-0da150e6897a"
        },
        "item": {
          "id": "a2715bbe-07a1-431b-bece-0331e820111d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8de57d78-9da3-4e55-9adb-b0425fac85cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782649e1-ffc5-4454-894d-690fe01c1d8b",
        "cursor": {
          "ref": "c4091afe-34b8-483e-b894-c2f8c98de1e4",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1fd5ed90-5dad-4711-a5c8-e8f2da4d7879"
        },
        "item": {
          "id": "782649e1-ffc5-4454-894d-690fe01c1d8b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "edad91a4-38d9-4390-b719-ef4a1a588908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65d1458-df56-46f7-a854-4ab8c23d3285",
        "cursor": {
          "ref": "6963788c-957d-4829-9ebf-f205197b8686",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6350f72c-4b1f-4d59-bc06-bba9a1f8e06f"
        },
        "item": {
          "id": "c65d1458-df56-46f7-a854-4ab8c23d3285",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "12a4fbb4-89c9-435f-b983-f6e478576322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776e7f5c-4144-493a-b501-ed3f3cb91e16",
        "cursor": {
          "ref": "04dc450c-acb9-4c50-b89b-a0d029aee123",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f171d851-2573-4272-92d7-8a8be83efff5"
        },
        "item": {
          "id": "776e7f5c-4144-493a-b501-ed3f3cb91e16",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "957c4d5b-0444-4545-b668-34b1a33acc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4c369a-694d-4490-8ee9-7e9547e56b61",
        "cursor": {
          "ref": "334655e6-c65a-4751-801a-73cde55061c7",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1e785ed8-443f-4e9d-8406-bfcd92712702"
        },
        "item": {
          "id": "bf4c369a-694d-4490-8ee9-7e9547e56b61",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4fe53ebc-8bec-4db9-8dc9-e015cbc25d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86f16b7-91cd-4020-bba6-84af6f1a2ff8",
        "cursor": {
          "ref": "a59a046d-a15b-43ca-9a6f-2c03ff77d84a",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "265d9b71-f387-4c50-bcf0-ffda6943c847"
        },
        "item": {
          "id": "b86f16b7-91cd-4020-bba6-84af6f1a2ff8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e9909921-0311-4c64-a751-822eeb50c36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c91fe9-bc68-4625-8782-cb1ba034c4e2",
        "cursor": {
          "ref": "560f9b98-5ecb-4a6b-b302-534529adc1d4",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8154ad32-3198-49e9-a6c8-6b42845d7ca9"
        },
        "item": {
          "id": "10c91fe9-bc68-4625-8782-cb1ba034c4e2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f7807956-fbab-4b69-b01d-35967d376816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4c024f-7b5d-4f4c-a560-353d0ea53341",
        "cursor": {
          "ref": "1dbcaafd-7e8b-43f8-a3d4-0e4c2abfd3aa",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bf0967be-5a22-4711-be65-5db9d4c9cec9"
        },
        "item": {
          "id": "ad4c024f-7b5d-4f4c-a560-353d0ea53341",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "91286a90-b0a8-488c-a1bc-3ed3327c92e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89ace10-2f65-491f-b4f8-564a33187c0c",
        "cursor": {
          "ref": "bb437b5c-a943-4c3d-b91a-8427980b6421",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a4ae2913-7839-4dcd-a439-3e29d3b435ab"
        },
        "item": {
          "id": "b89ace10-2f65-491f-b4f8-564a33187c0c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b4e77461-6630-41ba-921b-ea87ccac502a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ebf299-5303-475a-82d4-d116babcb412",
        "cursor": {
          "ref": "d5a75f5a-af4f-4841-853f-a51275798f1f",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9147a6b3-2e74-48ae-8d2c-2e1207b6c8f9"
        },
        "item": {
          "id": "e2ebf299-5303-475a-82d4-d116babcb412",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "75d96cf7-190d-48dd-afe7-07f7cdc9f6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3bc2e2-74f1-4d7d-833e-5a8d9f6280e6",
        "cursor": {
          "ref": "74f51443-935a-4b48-9e1c-a02a00beae70",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dac5b389-29f6-4d46-bf11-95c58596d86d"
        },
        "item": {
          "id": "3a3bc2e2-74f1-4d7d-833e-5a8d9f6280e6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "64a1e7e3-470a-4a36-9902-a33a10794f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab83c63-35a3-484e-9a1a-9b910f6dfb1d",
        "cursor": {
          "ref": "37725f55-3962-43a4-be3b-49922197d7c7",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e1abb158-4306-4c9f-8f00-47f1d9da6e93"
        },
        "item": {
          "id": "4ab83c63-35a3-484e-9a1a-9b910f6dfb1d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6d2fc752-778a-43e7-9aae-e25be9639a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c88c24-78b3-4fb6-9169-c00304f90a86",
        "cursor": {
          "ref": "105963ee-83f8-41e9-9704-ed4a5a439234",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d6280a85-7ef9-4068-84e5-0af62acf2dff"
        },
        "item": {
          "id": "f2c88c24-78b3-4fb6-9169-c00304f90a86",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0bb0658d-26ea-4903-8ea0-e4bc6a5c26a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a451e0-d868-41cd-9789-c0e48559f7d1",
        "cursor": {
          "ref": "e0e8a9e3-c799-4577-be9b-9908cdec3523",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "27738df3-405b-4c9a-a4eb-bdb04911aae0"
        },
        "item": {
          "id": "b8a451e0-d868-41cd-9789-c0e48559f7d1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "24b98c31-87e0-48e5-b14a-956fbbd71aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b704c4ae-57e8-4ad5-a07e-f51bcc6080dd",
        "cursor": {
          "ref": "eac0e96b-156b-40b9-8701-1c47e87f8dc4",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f2084f98-f2f3-4bc0-a469-e24ceeb10801"
        },
        "item": {
          "id": "b704c4ae-57e8-4ad5-a07e-f51bcc6080dd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bf6cf3db-4d5e-48b7-b6f8-a07e329d3228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e066fe6-3b73-4280-808d-66e75df48794",
        "cursor": {
          "ref": "f09b6b02-aa58-41cb-a614-fb9208b4779b",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3ab6d988-435c-447d-a3bd-af931bb79276"
        },
        "item": {
          "id": "8e066fe6-3b73-4280-808d-66e75df48794",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2d555ee9-a9fd-400d-925a-121e1e3cca0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ab5960-9a0d-48a2-9e9d-aa56642cb3e2",
        "cursor": {
          "ref": "95044516-b5f7-43a2-9930-366144b84895",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2788f51a-5ee2-4cef-9ef2-8f99973a7767"
        },
        "item": {
          "id": "82ab5960-9a0d-48a2-9e9d-aa56642cb3e2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fb246e53-f406-4cab-8b0c-5467622938fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94253b07-e035-4f49-ad1c-209d61cfa6ea",
        "cursor": {
          "ref": "ec9d656e-9aef-4ab0-b1d9-a8d031045a74",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "16907a21-1a3d-4ea4-bf4f-2e6b137a3274"
        },
        "item": {
          "id": "94253b07-e035-4f49-ad1c-209d61cfa6ea",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1fd77591-243c-4c67-9f5a-2a246334cfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31fe233-3c7d-4d69-b11d-4a567d8d1a3a",
        "cursor": {
          "ref": "2be300f4-0f2a-4671-b55b-dc839816bf08",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "adefe9f1-1963-4464-b227-28a807196761"
        },
        "item": {
          "id": "c31fe233-3c7d-4d69-b11d-4a567d8d1a3a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "54e36fff-dbd7-4db5-b0f7-0fb315ca4160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f56543-fa97-4913-884c-aceecc9f6b7e",
        "cursor": {
          "ref": "2c71277a-ddb2-4106-9149-a221ea1a429f",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f62fc8e9-ce17-4cac-8e52-4a0e2c5b9fdc"
        },
        "item": {
          "id": "77f56543-fa97-4913-884c-aceecc9f6b7e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "82a0d5eb-ec12-4171-88ef-fbfbd2f8c2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbb841a-049d-457d-9e75-060ba2522614",
        "cursor": {
          "ref": "ea531054-07dd-4b6d-b8f3-cf736b7ba046",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4c4cdf17-1873-485d-b81b-13e7ee699d40"
        },
        "item": {
          "id": "0fbb841a-049d-457d-9e75-060ba2522614",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0ca5734f-02cc-476b-887c-622ed09c5c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98af8c42-02a3-4dcf-96e1-f56d139ffb67",
        "cursor": {
          "ref": "eace971b-2876-4900-a4ed-9aa712cc4d77",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0f28969d-36a7-493b-a7c5-8852cd39c140"
        },
        "item": {
          "id": "98af8c42-02a3-4dcf-96e1-f56d139ffb67",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "72b6b661-6165-4d38-8544-fc3be389ad54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaf46dd-d458-480c-9a1e-1f803fac372e",
        "cursor": {
          "ref": "4f732084-a53a-4066-ac80-3330d571e9a7",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "38de493a-f6ca-4890-ac2d-daa60c4fab92"
        },
        "item": {
          "id": "caaf46dd-d458-480c-9a1e-1f803fac372e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0311c296-86cb-4430-9370-7d3de85cdf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c6770f-b91a-4ad6-8632-df65a9fd6a14",
        "cursor": {
          "ref": "73dc8777-74de-484c-a61b-5bed0fd42984",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "df1dc099-47e2-4ee6-bd80-a719db2b543f"
        },
        "item": {
          "id": "a8c6770f-b91a-4ad6-8632-df65a9fd6a14",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "59989700-24e7-4313-9b7a-bb159831a7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ebd108-6725-48f8-b0a1-1be9959f4ee3",
        "cursor": {
          "ref": "507ea9ba-829d-43aa-8242-8d17d72df8ff",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4334165c-b1d3-41be-9d75-2595a8e75111"
        },
        "item": {
          "id": "f2ebd108-6725-48f8-b0a1-1be9959f4ee3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ad9c2d64-7a76-46b1-8624-e725914d6f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce013a5b-b93b-40c3-941e-8fa0cb5130e1",
        "cursor": {
          "ref": "74a45fc3-50fe-4417-8fca-d11a288f5758",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2d0906d5-e50e-4689-b17e-1f08473cb80c"
        },
        "item": {
          "id": "ce013a5b-b93b-40c3-941e-8fa0cb5130e1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ec99a602-38d0-4847-863c-e16a1042395f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866eae5d-51af-4bbe-bd27-65e7d72a4278",
        "cursor": {
          "ref": "e8f119c7-424b-4ae8-b0b3-7e8ac5c9604d",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1c099c9e-63ec-482b-a0d9-8e51355f8a0f"
        },
        "item": {
          "id": "866eae5d-51af-4bbe-bd27-65e7d72a4278",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a1c824e0-53a6-4f2e-8fb3-4d4f0b94b92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba42b1f-a9a0-4b27-8801-cfc0a7c337d0",
        "cursor": {
          "ref": "9de67840-d601-4fcf-8250-9eb2290eed20",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4245ea92-e4e7-486f-868c-50a8df2b6c45"
        },
        "item": {
          "id": "5ba42b1f-a9a0-4b27-8801-cfc0a7c337d0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "76ccf5dc-9d6e-4166-b5bb-e06fb9086f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48117fda-1ede-4ee2-a99b-c4671da9706c",
        "cursor": {
          "ref": "385b7fff-a9e9-4f4f-b44f-66ea5e03ee42",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5b515808-ca25-41da-98b4-261810a0a5e6"
        },
        "item": {
          "id": "48117fda-1ede-4ee2-a99b-c4671da9706c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c51508e1-a285-424b-a537-cef42ff8b7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc12b50-67af-4071-8954-d473945cabc4",
        "cursor": {
          "ref": "2e7aba0b-c425-493d-b2ec-0eabb1394994",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "135e2f7e-2206-41a1-a2d6-b3b9068c2e7f"
        },
        "item": {
          "id": "7fc12b50-67af-4071-8954-d473945cabc4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9e24d2e4-28cf-44a5-8eb1-24d10462a882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c49f4c-7567-4889-ae44-f752fcbb6b0d",
        "cursor": {
          "ref": "e56a101b-8111-4ca7-b6db-feecb4eb420c",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f9b6a768-86cc-4703-bea2-32f500796a29"
        },
        "item": {
          "id": "26c49f4c-7567-4889-ae44-f752fcbb6b0d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e6085a00-09f0-477d-9b30-0de6f6b3487f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b063ed-cdc8-4393-8a8b-0d7cddac2fb3",
        "cursor": {
          "ref": "80cb1f3d-1d2a-4120-9486-b78f980ac5ff",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7b9703ac-2644-47d8-a0cb-0013ecc2b424"
        },
        "item": {
          "id": "39b063ed-cdc8-4393-8a8b-0d7cddac2fb3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8aec300e-2e78-4ba4-8353-6e2de9961c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363878bd-c545-444f-92f9-567051ad026d",
        "cursor": {
          "ref": "1d3eda87-1680-4546-851f-72cc0aa4e2d8",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "90c34a55-7007-46df-8926-e09bb8cf7e47"
        },
        "item": {
          "id": "363878bd-c545-444f-92f9-567051ad026d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ef538598-c049-4e82-bce3-5348653001db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89fb91e-6eb2-45af-a760-0a3516226829",
        "cursor": {
          "ref": "243e9eed-b310-4d31-967f-bbd0a912090e",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5c7e0b8f-b97d-4a56-94b4-244e65546221"
        },
        "item": {
          "id": "b89fb91e-6eb2-45af-a760-0a3516226829",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7a3f6d24-92ed-4c08-8669-6632fb95f6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ad6891-b7b5-4c09-bc75-ba3a09b18789",
        "cursor": {
          "ref": "1eaf410a-b49d-4f77-adcf-fcafe8313a43",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "22e080cc-d668-4f30-a4d7-c5b00abd6cf6"
        },
        "item": {
          "id": "f4ad6891-b7b5-4c09-bc75-ba3a09b18789",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b55d16ca-8394-4407-bbb0-d092007aff36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61c4a8d-896e-4d33-be9a-7c15ffac72ac",
        "cursor": {
          "ref": "3a52c6e5-fcf3-41b2-9d00-55f924af4da2",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a28ee87d-0ccc-4294-ac36-c377490adbcd"
        },
        "item": {
          "id": "c61c4a8d-896e-4d33-be9a-7c15ffac72ac",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "aa5c0798-eedb-4926-9f2d-8631eddd108f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc5a00c-421d-4553-8fa3-230afdd35ca1",
        "cursor": {
          "ref": "fc47547e-bd5c-48a7-961f-746b84b254e7",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8bd0ef23-1f48-4d81-9441-d55aea98f132"
        },
        "item": {
          "id": "4dc5a00c-421d-4553-8fa3-230afdd35ca1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "118c0f0b-73f2-44b2-aacf-d8a5cc0a1db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da0aaa5-4df7-4f6c-a0d7-f93ea73c220f",
        "cursor": {
          "ref": "f27c90b4-c0ee-4857-981c-e84655410778",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aaba6235-63cc-40e4-a5fd-edc0bb57c77a"
        },
        "item": {
          "id": "7da0aaa5-4df7-4f6c-a0d7-f93ea73c220f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e2b01c65-5b79-4822-b16c-4190ba4d9fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0a51aa-7bc4-4430-9453-3eb00cf89c34",
        "cursor": {
          "ref": "2aa50473-73de-40e3-956c-9869bdf9f89c",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "79e77e7b-276e-4003-a78d-cd7318661aae"
        },
        "item": {
          "id": "7d0a51aa-7bc4-4430-9453-3eb00cf89c34",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "206b4cee-9433-4759-8f03-850d9d44fe1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0a0f37-4f86-43c9-821b-24d645c76005",
        "cursor": {
          "ref": "6a3e09d3-a3d5-4d35-b733-817e7f631d2e",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "58a18e92-c9d3-4b3f-b8c9-697bd0137dcc"
        },
        "item": {
          "id": "db0a0f37-4f86-43c9-821b-24d645c76005",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "44401b1e-93e0-4f97-ac04-71e9672ea5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8962f8a-f93f-4531-86e9-fcb32c2b977b",
        "cursor": {
          "ref": "3ef206bd-dbcd-4325-83f9-fcb4f8392440",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "53dd88f8-e2f9-4021-9de5-dee99b0efcff"
        },
        "item": {
          "id": "c8962f8a-f93f-4531-86e9-fcb32c2b977b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1d84dc54-8688-4ecc-9c5d-6c10472e6520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7920a9d7-e7a4-4e49-add7-961978df5e95",
        "cursor": {
          "ref": "31ab11d4-bdb1-4e37-b77a-1e4e965864f4",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0885557d-ad60-4ff3-a87f-743a6319edbf"
        },
        "item": {
          "id": "7920a9d7-e7a4-4e49-add7-961978df5e95",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b8aaf031-2151-43a7-8caf-cdfded4d11e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4023036-d47d-41bd-a152-7db864f616dc",
        "cursor": {
          "ref": "3e915dc2-d997-4be4-adc3-7b765e63ad3d",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3b439208-ce22-4b17-b440-04748c57b972"
        },
        "item": {
          "id": "f4023036-d47d-41bd-a152-7db864f616dc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "238c08ed-a8de-4f30-a08d-30dd237cb5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd5a5d6-18f7-4d84-a894-204a644980db",
        "cursor": {
          "ref": "b86b5b75-73f2-492e-8f64-7d9947894ac9",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b571ccbc-1b8e-4c61-95f5-b57f7045f8af"
        },
        "item": {
          "id": "bcd5a5d6-18f7-4d84-a894-204a644980db",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5f364af3-4f86-40e2-908e-e8429ed8944c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ec41fc-c538-4f9b-a60d-9123afb348f4",
        "cursor": {
          "ref": "001e86e7-8ec3-46cf-8d36-2e43206dd888",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7a93278a-c662-4bac-a2c7-90078adb195b"
        },
        "item": {
          "id": "53ec41fc-c538-4f9b-a60d-9123afb348f4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f48b26a8-067b-4727-892d-988024fa0247",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f08bf73-0a9f-46ec-9b95-d0dc0771f48c",
        "cursor": {
          "ref": "73e86edd-c7ae-440d-8e5f-ecd3d6d95d94",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "91a87c7b-afe4-4d23-9413-2dacfddd6064"
        },
        "item": {
          "id": "7f08bf73-0a9f-46ec-9b95-d0dc0771f48c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bcb4ea4c-2080-4b99-896c-8eac753b4f41",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 329,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b850a184-98fc-4ab5-9825-91b75b5b54ab",
        "cursor": {
          "ref": "96f3c1a1-7fd4-4c3c-844c-24cc5c05c4f8",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8930f756-35a3-4ac9-9237-4dfb51e807ae"
        },
        "item": {
          "id": "b850a184-98fc-4ab5-9825-91b75b5b54ab",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ce4817a8-d451-4ef6-b1ec-09b742ea9266",
          "status": "OK",
          "code": 200,
          "responseTime": 395,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff69171f-f178-49b4-b731-5be41f2ae6c1",
        "cursor": {
          "ref": "7674dc10-e958-4374-b75f-1bdc4e714a4f",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "22d3845f-5036-4c50-b15b-63152905a6cd"
        },
        "item": {
          "id": "ff69171f-f178-49b4-b731-5be41f2ae6c1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8e3f1264-c488-4521-b207-f91a7717bbaf",
          "status": "OK",
          "code": 200,
          "responseTime": 3206,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fb821d-d59d-45cc-898c-dce972f832b1",
        "cursor": {
          "ref": "c66728b0-8033-4625-b1c8-ea68c23de4d2",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "73a07f12-9b86-4515-9237-ae913272ea36"
        },
        "item": {
          "id": "39fb821d-d59d-45cc-898c-dce972f832b1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ef665235-3757-4381-a1c7-2ba0cd5a04a7",
          "status": "OK",
          "code": 200,
          "responseTime": 3278,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d639672-7099-4c9d-bc45-f14d43ac7968",
        "cursor": {
          "ref": "b084c6bb-e172-4e97-b570-9bc0e6a43eff",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ef8a5c02-19af-4ddb-9ae7-c52fb7f106f0"
        },
        "item": {
          "id": "4d639672-7099-4c9d-bc45-f14d43ac7968",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e9d4fd2b-ffba-42e0-a2a1-08a26f2f0a8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d639672-7099-4c9d-bc45-f14d43ac7968",
        "cursor": {
          "ref": "b084c6bb-e172-4e97-b570-9bc0e6a43eff",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ef8a5c02-19af-4ddb-9ae7-c52fb7f106f0"
        },
        "item": {
          "id": "4d639672-7099-4c9d-bc45-f14d43ac7968",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e9d4fd2b-ffba-42e0-a2a1-08a26f2f0a8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d639672-7099-4c9d-bc45-f14d43ac7968",
        "cursor": {
          "ref": "b084c6bb-e172-4e97-b570-9bc0e6a43eff",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ef8a5c02-19af-4ddb-9ae7-c52fb7f106f0"
        },
        "item": {
          "id": "4d639672-7099-4c9d-bc45-f14d43ac7968",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e9d4fd2b-ffba-42e0-a2a1-08a26f2f0a8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a08890-39c9-44c9-99ad-e18211dd8ec7",
        "cursor": {
          "ref": "61648459-9ee5-4084-926d-75691eea344e",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bdd527e8-44df-456a-b811-e863de39be51"
        },
        "item": {
          "id": "75a08890-39c9-44c9-99ad-e18211dd8ec7",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "f2184cde-0c3b-4478-a311-4ad565dc5ae1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 336,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4604aac1-0c7d-4f39-a331-cc3d488b7f56",
        "cursor": {
          "ref": "53c878d8-2962-4ec5-94cd-72998463c874",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fae257f6-40f2-42be-bc61-72ce8d38050e"
        },
        "item": {
          "id": "4604aac1-0c7d-4f39-a331-cc3d488b7f56",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a320d895-00b7-48ab-998a-e1ff538d1de5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4604aac1-0c7d-4f39-a331-cc3d488b7f56",
        "cursor": {
          "ref": "53c878d8-2962-4ec5-94cd-72998463c874",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fae257f6-40f2-42be-bc61-72ce8d38050e"
        },
        "item": {
          "id": "4604aac1-0c7d-4f39-a331-cc3d488b7f56",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a320d895-00b7-48ab-998a-e1ff538d1de5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0024b85-7d3d-44d3-9016-66ca7dda12bd",
        "cursor": {
          "ref": "abb2b15b-ae36-4fab-b4ae-0cb1755a4896",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "56d56151-dd95-4c18-94cf-3cb473e39923"
        },
        "item": {
          "id": "e0024b85-7d3d-44d3-9016-66ca7dda12bd",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "701ac719-dd93-4116-92d2-a79c81900c53",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 656,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b555af3-0e59-4dd8-9246-1b12eaa4cdd6",
        "cursor": {
          "ref": "e7966a01-7cd9-4212-9d85-939a47b4b96b",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f97d2f76-198e-4168-bbfe-3e1aa0f63777"
        },
        "item": {
          "id": "8b555af3-0e59-4dd8-9246-1b12eaa4cdd6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8603ca0c-4898-40ac-967f-ea116b8357a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b555af3-0e59-4dd8-9246-1b12eaa4cdd6",
        "cursor": {
          "ref": "e7966a01-7cd9-4212-9d85-939a47b4b96b",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f97d2f76-198e-4168-bbfe-3e1aa0f63777"
        },
        "item": {
          "id": "8b555af3-0e59-4dd8-9246-1b12eaa4cdd6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8603ca0c-4898-40ac-967f-ea116b8357a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfdf263-2990-45e6-a2b2-adbb329ec781",
        "cursor": {
          "ref": "2bdc0cfe-07aa-4f92-a24c-9acfad6d77cf",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bd5c9db0-0938-4809-8aff-76f2ed6fcf38"
        },
        "item": {
          "id": "6cfdf263-2990-45e6-a2b2-adbb329ec781",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "d81249c0-bdcd-42ab-b87a-3c81a05831ca",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 548,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}