{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0172bc6d-4ea4-44fc-b99f-a448dbb2089f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ecac0c11-5c81-4f60-b895-6883c499f1e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ccd3894d-585c-445a-9eff-048043e7a968",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a852854-df49-4c8d-bdd1-25e3606f36e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a363c804-3066-4174-acbd-0272af4318d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b246f4f-b089-480c-ace5-18caa96420d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6bbcf339-a7a7-4b90-9dad-74a1ce705c38"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3aa84703-f7fa-41a0-a579-5f25669d14cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ba4eee0-079d-4596-b2b5-c7828e78c012"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cec79623-231b-42b2-bd46-5a16dfaca375",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6cd976e8-2acc-4ed6-8efc-4248b96833b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1de38b02-eb45-4659-ba85-6d13b798204e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18370e85-252f-4c1e-b945-985fea01b149"
            }
          }
        ]
      },
      {
        "id": "0a6d3471-a8dc-4db9-bb17-2e36a75af425",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "75448bb3-8b61-4ef4-8c24-9dd4ac041eaa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa58280d-2e74-4916-8c41-3af64866a4a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "36f2c8d2-57b4-471a-8767-a6e90080e222",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def1542b-01c3-447d-a2c2-a8afe4441a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b3f391a-b92f-4eb6-882f-aa52bc8f1a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e44381-9974-464d-ac9a-f965ae645643",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1abb9b-73e2-4e69-a2d9-5564be29099a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5142b7bb-aa62-4c15-9bbe-83f7b480b88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c520dda4-8605-4783-b9d4-ed2a366b18ac",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0570ed9c-a25f-47c4-9902-d93bdb682ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3025792-6045-4857-a9f4-55670162624b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6fb1e54e-d4a7-4ff2-85b3-e5c4221c225d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33beb353-aee3-4b4a-b0dd-f306da237189",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff1c1b8-98f5-49c7-be84-e0c9b4fe81d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ff8adba-8a4e-43bc-a748-a5165bb03b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e501716f-d0c2-4c01-a21b-0074ad4f6f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b519f0c-0a5f-4b2e-80fe-cba857cf9846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6f65aa-ed3f-41cb-9fff-e4df9097a428",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2541b3f-04c2-4aa0-a1c1-9abb40b4bbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64e89000-c7c1-4b2e-bb84-59969f5070fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090b6fca-3ec6-4a27-81ec-2f808a9b8d8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "13797d5b-d487-4f42-9ea6-b737f06b9343"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "33cbecce-3640-4ef0-af26-e4cde8582c0d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "53625769-5412-4ed7-83ce-8fa175af2627",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20575195-d770-416a-8caa-716b2c44a1c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "80e486a0-5de4-4d32-af32-10208688ac2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3098f635-f516-425f-81ac-3944295bb636",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "4e5c351d-84a1-4eb8-ad4e-7e0fabf37bc1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "240f266f-856f-4140-a754-fa2049be0f51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "123c15e1-b131-4f75-b505-a82ea7c28a1c"
            }
          }
        ]
      },
      {
        "id": "d2da8b68-9d77-4695-83e4-9ff25010e76d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4e810fa3-d9da-400a-9f33-25d53e2333e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "251e2c65-cd22-4380-a308-c0d27e9f781f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "626dad75-22d0-42a7-8270-669f012f7f97",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dc30d1-ddd5-46ee-a504-b472b26b0ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26007608-d5df-434b-9f4b-70de9375bf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bded73d8-63c9-4a3b-be65-1bce9366d1f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e254a3fa-39ca-48fa-b757-365f3bfd2871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bccdfb-523e-41f5-adc6-813b9a73398c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc94a41-3b21-4bf6-a29d-b18161737dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103f54a5-58ee-4b96-adf1-326667723bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0e917a-6c78-4eaa-a367-b1b53b747b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b2bc341-49b0-42a0-9587-2fbd64f2d5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a821ddad-7fa4-4845-9452-101a15fa0086",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff425c8-1991-4350-bbd8-b9aca9a766f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b2169e-4be8-46ad-88b0-fd2b8d1fb767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231db75a-a18a-4c96-8464-796e1f6b2b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0cf6c21-77bc-441e-b30d-8c81b974aacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d831cc7e-d7e4-4029-8ac1-9c48fad50ce9",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849ca04e-f936-4f0c-8531-8e67ba9acb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea0c83e-d935-4d91-aa4d-934151222f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7e598c-6dc2-4a62-bfec-487fdb3a12da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18bca636-f7d0-424f-b266-3e48a502c83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356ad7d5-4e9f-4e7c-9392-fdbabbdcbee2",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1126a58-69e3-4adc-bdcf-5e695af31b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1718db-7157-4722-a7e8-ae45e941b608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c210d1-963f-4c4a-b81f-fe9aa9f4a8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b1a7cac-91be-4263-b7e2-4e60834471c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003a9fd2-4eb7-4e83-a1a8-e0c54acbd78c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952877dd-dcad-4bd1-aa35-48aad2aac961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74fd7b8-1081-45f8-b735-8991f8597037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271f26cb-6fbc-4436-b730-b9d74fce53a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c662ff96-2a47-47ff-9e5b-9b3cf4f5a856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74dfb30-0dff-4bcd-a38a-d92f1efc20a5",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19742680-a2bb-47cb-ad56-890ab6761ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f621bef9-b90d-4f99-9327-bc3ae6813a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77399217-0284-49b6-a9c0-6f9414a11bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e42b47f-949c-47ed-b9d1-5ff6f7cf302a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a514b5-b98c-4f95-b55e-0eaf37b61174",
                    "name": "credentials_issue:credential.type.members:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10388d80-b41f-4c87-828e-7f5c0ecc602a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d40bdaa-96c5-4e72-aa0d-065cf6e89a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80807c6f-64db-4378-950a-ad6aa66aea81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain at least one element",
                            "rawBody.credential.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "303165a1-bedd-4eb7-8309-8b9fa40775d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5efaad-9548-47b3-9764-a00576081340",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046f9648-3126-4890-97bc-17eaf0a5e876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cc5b93-bc9a-4b35-8008-b85fbf34a72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fde9ad8-660e-4a49-9865-aa3c2d5d6ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5ce6bee-8a98-48d1-b3de-1b8e2f0c4b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0887e153-09dd-41c9-a89a-bdfe42f4a5d2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2896fa8-607c-4276-9385-aec81cd04085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b11692-0784-4d2c-aa7d-c85078a02094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcdb3d0-a581-40fa-8137-892710b03643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a51ce90-d42a-4793-bff5-d2e42acc7d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c6dd5e-c152-465f-8af3-e1d7e808f08f",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afe28ec-7184-422d-87ef-f847261a5063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ee353e-24d4-402f-9ec2-903495400cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380a5a0f-7ada-4281-accd-1c70effd6cd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ce4f973-ac17-4d35-b6b3-db24f22f577f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8818c4e-c633-4c80-a3b1-0fa7e7af7b71",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449bb745-49c7-4dd9-92e3-959a8361369a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b7f0f3-4e62-4a64-b354-63b2f52ca210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b3449c-6248-4e2a-8bf6-d48955e0e32d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "879e2dba-0def-40ad-a737-80bece229da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e1fd0d-81ee-47f5-9690-6079c212f64a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5d7fb6-6230-4a53-b918-8ea2bf290082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ee2851-a030-49c7-a43d-26cbc0dafbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ba7043-f1c5-4d65-9af8-1f3886ea24fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "7a824fc6-efe7-4b04-88b8-abcaab26ee3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be2051a-6fa7-422a-90d4-88e1e6d97e26",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262dda66-9fd5-4976-b750-d139817b98bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c802105f-0c1e-4d01-9db2-b34bbcb8c4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaca515d-82c9-4097-8afa-60ca345a04b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae930cd-7ab6-443b-a6ed-51d0481f0c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850f3e79-4c40-490a-aaa4-791be708576a",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b523f5-87a5-41ac-bf0d-a63ff1c6adc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225ca8b2-ca1c-4da6-95b9-dbbff15d4767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602bd752-0e9a-4ffb-b617-9f7270b8ebf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d64f660f-bd80-4fdf-a443-e208756b68d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a2e6d4-58b8-49f7-937c-02eacd241108",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73601cf-9dcb-43cd-bd34-57b2e2c01edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89b1fa8-c5c8-4ce7-b62c-63f0cb043796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd371d7-168f-4de4-9dc0-bc4694630625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "5eb0b179-6f8b-439b-b997-b4d55cd5ac57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f94093-5c26-4eac-8e71-63749aa53985",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e39bc5-fdff-4556-80d6-faddc0bcbe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86259fdd-f9f6-4ceb-a438-66464d091642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3ffa56-f76f-48c7-935e-3a3f868fbe0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "28cf290f-f18e-43b3-9c4e-479470aa9094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2034bc-fb70-483a-83aa-ea65a94433a8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd57f021-675e-498c-9975-2be3b5e8d450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210df99b-c07e-42ca-8919-f8c01e9d4657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a610e4f-a020-4f0d-92fd-355d888d57af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d49ef615-3dcd-4253-b9c7-86e3ba3f4990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45550c5b-4fac-4ff1-8c95-04e4c60cde94",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14833b2f-2795-4a83-aaa8-32d18ff60c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c511972-8cfd-458f-9443-3138fe65ebc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786d371d-7daa-4f7b-89e5-e584de4a76e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03059638-5868-4ee9-b346-9c53e872b68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f18a087-ab98-4cb7-8353-ed93148ab591",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8159a1-4519-4425-bb4b-0232f0c663e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5957b6c2-7be2-44a3-ba04-abbc0eaeca12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca236a1-4331-4eaa-82af-5f4d80513d54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f287546-6c49-4d89-9bd6-72e75c49d9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc3776b-ceb1-49a8-a778-276d11189156",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad0ba36-c357-40e4-8ff5-0b8169b3b190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab60f2e-afd8-45cf-9875-f1613ab13233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec6c9cc-c792-4e2a-bce6-4690c6ad0a1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4254d510-1785-4057-8ebc-d232f7a44cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd95d40-53d9-4dc7-a09c-2da733fd4293",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1da7c2-f02e-43a7-baf5-f23c985d12b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a997e4-b5dd-427c-b42a-c554f9364dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae3dd31-7eea-4d0e-bff2-2c9456109af2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aab68914-5ff2-4eba-bc48-fee0a6a4cffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52162b3-3ff3-4be3-933c-be49ca6b7044",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374e8ea8-18e0-4975-909c-afe8d9c2fdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09c1548-9d50-49f4-87ae-7173af284557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e75d7f-063e-40cf-bbdd-1cd720e0e81b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08fc6d4-2f2b-44ae-a25e-0d1c41d16af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1bd34c-2226-428b-b88d-b0ecab5314da",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34a3121-67ad-41c2-8cb1-748a5a90a9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d062b949-ac0c-4702-bede-8bd4bd9143d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85821e41-25fe-4478-b9a2-ae9dbfe80832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f940b33-7f06-4e6c-bfce-97aea52d6b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd27115-080b-4c86-8234-ead91a4e97a9",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858a942a-b25a-4af7-9f25-690110aeb2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c320c1c4-7523-4e1e-8982-8911b0470530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbe7761-5237-4362-b368-99a7977e1e9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d10a41df-5d31-400d-8af0-f21a724c55ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b381b7f-1fe8-4125-9a48-49c095fba96d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d2a9ba-ce95-4101-9c27-80598915fa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b2100b-3bbf-4f12-8b10-7d32b66b4b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7b8507-e307-4e4f-a93d-377e587fa7a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ae85b28-c83a-4aa6-b05d-2d2a4ac5412c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596fbfad-64c0-4fd5-9bbd-481f308fb1f0",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0f18a5-da7d-45b3-8238-2b1c0d01f3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dff66ba-239f-4e89-a972-0eea976f7806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed356308-b26f-47f4-9c10-d904ebdd9114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb4f2e9-fc85-4b31-9d7a-ae51d7b6d524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def2f116-f65e-4d39-a41e-92fdebef2a06",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a6327c-7821-4652-a492-77219f16cdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b0308a-467a-4215-9025-75b464053fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e61a855-2163-415b-b47c-35209ee1da37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d164bac-e94b-4906-88fc-6f63d9746ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c893bf7-3afb-4e51-97a1-fb509a9a4a54",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b21c89-56e5-4b30-b603-88e4050562d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5122bf-71a9-4f04-ad65-558bb01f59aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29f80be-8a9c-42fe-bbb4-0ab61f7e12b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b10b7a78-1599-4787-a8d0-9ee0acdd6515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df063911-527a-497e-a869-2405efafe942",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8742a7c-ad0c-4f75-8a27-2ebc4d136234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd2dc88-c7b9-4161-96b5-86cf2bca1f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b667a773-c5cf-42f5-a88d-7d0e92522d1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must contain \"type\" when present",
                            "rawBody.options.credentialStatus = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "516c888b-f990-4bf9-9792-cd00ba93e91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9069028c-8f11-4630-954b-1aa43da963b0",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baeab5a-00ba-45a4-b410-886723ad2b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba31f9d-b5bc-4d84-87df-ae23c2c9221e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4563399b-96f0-4e4a-9041-44c999f6521c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d05825-05e0-4a5f-a404-0b595e2bdc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e584b301-e7b1-461c-9ad6-4f1119b81870",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5ab3b9-5890-47f7-8e9a-394bd1cec306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "06b665a0-858f-4545-9f4d-1e5efe117c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bc68d0-b250-4959-b87a-39e094f8888c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cedb7f5c-0339-4c90-90af-d3849d275c09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ea1ea24-994d-4f8a-8e8d-6064c57cea88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "487450a9-045e-4040-a04c-a8de78bed13b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43603b7-9f01-40e3-b036-3890c4a62f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdd56a93-7769-422c-86cf-b98139f40af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9f05a6-7eaa-4aaf-a35c-4c99ed08e021",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "f2947fa0-b713-4c02-b34b-9b1dc82bcbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ee103c-7619-4e6e-8651-ebab6e472d21",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06eb34d3-1347-401a-8c3e-b6c309cea99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "856b2060-30f4-45c5-b488-a1ffcfe3c46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c35000-fb0c-40c8-a85b-4d5b29079a32",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "9b4255c0-745e-44d6-96ff-34f3b4a742b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7df7ebb-67a4-4b22-b82b-9d9ae5e60178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a96f7a65-c9f1-4c7b-a845-7a989e2208f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "209fd0c1-8fb2-422e-b569-6d9a53356f78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02da1253-243b-4e6b-ba90-d0e549a56113"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41f9089c-9e58-46b3-a9ac-ac55159c69c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15124f12-7d95-446a-84e1-1c3bad73b7c4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c1723617-07f7-40b1-9e9e-80f58abfcb4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c71d55a-7321-4a5e-8922-c711d55ecd45"
                }
              }
            ]
          },
          {
            "id": "e0f46da0-c47a-4a50-8048-cbdd2e6ea84c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a63caebe-175e-49a3-acae-f7d67d8fa1c7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ab6d1d4-bd2f-41f2-854c-27b398639132",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bad6636e-23e8-40ea-8688-79165ab76ef1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b77701d6-35e6-42d5-a70c-05b96a297598",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "43997e21-21bd-4c66-a832-b40e9795f2dd"
                    }
                  }
                ]
              },
              {
                "id": "fab46fe4-7d82-45ff-bf17-91a8c379121f",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb11160b-70ee-46c8-b346-1008ef152e5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04d23934-18bb-4240-b710-975d7388d2b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83d7aeab-1262-4d75-9c19-5455618d9d87",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f38d8fb8-2fcb-48b5-8ed6-5fbeed616db9"
                    }
                  }
                ]
              },
              {
                "id": "792a09ee-17ce-4762-8216-a879993c386e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04fea217-f7c7-4ea3-bee8-7039a051361b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9f1cd14-ee9e-47ba-b117-0226edbfb5ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "980bce04-0ea8-4d1c-8645-ab21cd204314",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "cc368c1e-3e1c-4b36-9a48-dc0c13789fee"
                    }
                  }
                ]
              },
              {
                "id": "1cbcd27e-17a0-4610-9ef8-8f2a5c573612",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f6dd6a0-c894-4fe2-b07f-66c8170c6d52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "802da8ad-2b72-486a-9c31-c1d6b2db67d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c94d3de0-16fb-41e1-9881-7b888d572a7b",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "68477b2b-0753-4ded-9178-336bbc1188d7"
                    }
                  }
                ]
              },
              {
                "id": "dce9ddc1-55a8-4d97-812d-8e813320fa3d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dee84518-65ff-4ce9-90d7-b09d1abce398",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc83f562-dd11-4e89-8021-f55de884da68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9276c2d-5661-4871-a19e-faad898e3083",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "8a5ae351-1b65-4566-9eb6-e0cc703bd8d8"
                    }
                  }
                ]
              },
              {
                "id": "6c28b143-ae96-4a84-8d04-e26b57c62a1c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f39fc7c-bd75-4101-bc8e-50218a2dd3f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e5f3469-185d-492e-9f50-a02d1241f1c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6ff6877-1b33-4724-883a-a92dcd6db339",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "a18e9b6a-af8b-4023-abe0-6846697565c0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c4f3cd6-a500-4f5a-b336-7ac124e9f504",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c14dc3fc-df82-4a5c-9b7b-343cbf3b2389"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "26757652-688d-4f3d-8619-8545771da83c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46a4f6df-0ba6-4287-8b3e-297b06bd637d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "094ed112-4646-48f0-bd82-5013ac410000",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{ORGANIZATION_DID_WEB}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "024665d0-ae0c-4bc1-8f3f-a677b0fab567"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dadc13e7-fc55-4050-83fb-9c1073968e1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3824d85b-92e3-46ab-ae5f-bebfac16d03d"
            }
          }
        ]
      },
      {
        "id": "04959609-b957-4077-b980-1295ee248ffc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "13c078b5-1d43-4e91-9279-accc7c0fa888",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee548f99-b2a9-480a-a178-16ba628f13cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02c3e18f-f7b5-416d-a19a-6494ddedb28d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846cf1b8-98dc-4398-9452-80524737b44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82911c86-55d3-4ca0-b0c6-49741249a080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6eaccb-b3fa-4d55-8635-55ba99910800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75ddc60a-2516-489c-a013-f126ff94007c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0780c6cb-b7bd-4059-969e-6d72a7bb370c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bb66c4-152e-4a71-a7d8-e41c9cbdb1c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "0448241f-8df7-468d-939e-ca9b3e316d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a625eb0-fd85-47fd-9a71-7cd771aefc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5493856-a459-4fbe-bddb-17a5cf80fb19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a800b6d3-4c4b-4a7c-b249-3c4906b67f8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14c9ddd1-7b62-4885-b249-909afe10f235"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faf1f223-f443-4e55-bd3e-1a0feed466c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4fafc85-1693-4662-aca5-42a2ac499a74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7092f385-3c88-43fe-9bd4-b380027c3549",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "693493f9-cf15-4ae7-bbe0-31ea83566676"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6d9d5ee-bf83-4088-b089-09a462ef5483",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a8e2a0e-1617-4ffd-a3f2-d4b6961154fe"
            }
          }
        ]
      },
      {
        "id": "6c5e7a61-9335-4d3b-a819-dbddd5bcb1c3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "841c4edc-e39d-4d91-afed-aff2c33ea983",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20bd4945-4bab-4032-8794-7adacf16a68a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "df541600-4c7a-46de-a4e4-ed66186dcaf1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d90e31b-7d34-4799-837a-ec9565570b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e51fc13-fdfd-4cb8-a41f-8aee55b06000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14d785a-2264-42ae-b3a3-ced11ce8d842",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaa900c-ce44-4357-a5b4-63e58b391792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16ecc44-94a6-4056-85c3-ae7e759b98e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309d1949-65ac-4b89-ad1e-c60d6c2636f7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fe2785-67c5-480c-b00a-bfb1fccab000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26dc3dd4-daf6-41ea-8124-84229ff63c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad983862-931a-40ca-a83b-29b06f3e6711",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d61670-8750-40f8-9cda-2d3200a52f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62597220-72d5-46a7-9913-b561bf515720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20543c09-5b5d-4710-8bac-dc8a4cc2060f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabfe573-2d75-4353-88e7-ec204a758c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ddc41f-ec15-4176-9948-20fb56d48f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96eaf0f-c866-426d-9fdd-f3fef2f89559",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60675c7-a124-4e0c-bdc2-c70a9295ad94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfcab7b-f35d-433d-9c81-20e6a4ce3fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dde95d-5bbf-4720-a01f-a669eb98b167",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca28806-6d44-4038-8d1f-2b432cd556e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4368534b-e0fc-4ee1-a8aa-206bd42d3d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76844a9-4f49-4633-ad82-8d31b16743c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28415a9f-8415-4884-af63-a02dc1d8cdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9204df-e7f3-4b60-bed4-12ac4e12bda1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06772656-5149-4bc3-b304-1275c1fa5498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb7708e0-65ec-4dd5-bf29-db57343213d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1e745e-0d36-4010-a642-51f65004a728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df860df4-7fd6-44f2-965d-d1f00c48f011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa740f30-4f61-4821-ad58-2ed528f3a428",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31be77a2-ec7c-44d6-a843-6bbb80eedd25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847277ad-949c-47c1-850b-67fa1bd3c6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb78337-8ba5-4700-bbe2-c37e51ec0632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f404af7-41a1-4d05-8d81-7f4ff30a83d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de65410d-47d8-417f-b9a3-6142d2aa10eb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a2fd87-5ec8-48dd-a804-eedda2147763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd34bf7-1656-4af9-b3a1-31969731c120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6490ace5-09af-46ba-bfd8-080a8bf4eddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0ebb32-fea0-4382-b6a3-4af255bc19bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd50994-14b3-4072-84a4-65d311aae15a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5ad468-73af-48dd-80d4-230635b8610b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3572cd19-7e28-455f-8f6e-4b5a3f5c88bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28431a63-dd64-496c-89a5-cdafe7e16c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3763cdb7-a25d-45d7-b4d8-add43f0327af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdbb491-bca2-4eac-87a9-ff15691179a1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595ae43a-cee0-46b1-ae09-b70a3e054ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5e64b3-e6c7-49fd-b64d-61029fd1333a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4c2ba3-fceb-4861-bef0-16eef721eafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ffa984-f29f-4836-8b91-fdac35b7769b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c911273b-26b1-42fe-880a-7b1c7d598fd7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1250f10f-d542-4f85-9577-51546103e67c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b0c984-72b7-4434-b63e-47b8d63afce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1b04e5-d544-4d71-8671-0448a5d83691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0084d9-2ff0-4248-ae6a-bcb48b7c7a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c19b3f5-d365-434d-8f18-36b585e7ada9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871155c2-0a6b-430b-9092-4c80c4430733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ae56157-6b5b-491b-b1af-21a66b26f256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754831cd-48cd-473c-84c8-bb30d57b00c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7725bb8c-9246-4804-957b-5643f6a7b8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df27e74d-bb71-4747-8419-7209fc5eb4a3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a63b77f-e52d-46df-91a7-e9d91c111868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b45165-1b71-41eb-857c-9e27e3f21e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656a6252-31a4-4021-a58f-1f3a94122737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c5af02-a2b4-47c6-896b-150c37de955f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269fc8bd-7c69-4e0f-bed0-8edb1d0eb2c6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e29f9d1-c16e-43cc-bfae-c1de85727c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb79b922-ff5f-4701-8fab-effee9ec7343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a70de98-2567-4a48-b55d-999940470634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0e47dc-0b2f-47d0-a72f-002f4cd39c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf86259-6368-4644-8593-02f42162f1a7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d6b66d-a340-402f-ba86-2cf7342c0065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a6b84a-1332-4922-a3ce-03d3eb21eef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42324446-d8fd-4928-b28e-d6692567a4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3465ba0-9c8a-4d77-b44d-979c76914632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46c60da-864b-4cb0-8205-52eeadc7c2af",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cf11e6-f97a-4f59-b3eb-587a91977b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3d0d6a-f67b-4abc-b26e-ddab16daec53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a9d54d-2a0a-4c0e-aa8c-89297dc80092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06202488-6936-48c6-8efb-7bfa2f81004a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb2b579-ae13-47dd-8bf9-ed0cc0e8c97d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401db970-3a78-4932-ba14-544f8217ce3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c83859b-9653-4397-995c-1b67057202a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a4dcc6-5cf3-418b-880f-192d428ba700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bd9412-3d71-42b8-8c0d-35218d33073c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d119b1-1e0f-44b1-aafa-956026e8df23",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d53d34-ade0-41eb-90cb-0b37254bc6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7f1638-e427-4f97-a255-657ac0eb340f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0277d7-c1e9-4837-89e5-5830063e459c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b89bdf9-e65e-4f0f-87c9-6a1d37edc889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0007c7-6a71-4954-baab-e594d35ddce5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff154302-5a2f-4da0-be9f-3456f778defa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c29999-d9a7-45e9-aa9e-bcf49abd63ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de880381-05eb-4c26-ad36-4eba3b60edb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafbd44f-7a2d-4dad-8aa7-915f9f5d09e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cb80b7-0559-4443-b1df-a53332dd4db3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db64f747-489b-4162-8680-d9d7bed29192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dfd1f7-89d4-43af-bd2f-e33ec8908c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8315afe8-011e-43e5-89c4-08c238991ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f89d730-c895-4bd3-8d3e-2372f8b829e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c633602d-04e9-41b2-a73f-b83e0333c83c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10a140b-eae4-4876-a1da-cc459b271609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ad13c0-60d8-4535-9750-3404a09de7b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f705c7e5-1aac-4256-bb47-de56eacd3e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94db1ed6-be96-417f-96b6-61eb4b9fa5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91762b58-6a8e-438f-886b-62f8806c8dc8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a21365-0778-454e-98b5-fac4a97995a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada081b7-8ca4-416f-bbdd-d68b05e36004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc4f489-0362-4371-a5f5-5c17600eaa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819d9ad3-4838-450a-b2b7-dcaa23189fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9792131-cfba-4869-a846-889c07398f6c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaadd88-4fa7-40dd-b5dc-382429e4a46d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f76d17b-f8a1-40f5-947d-2eaaea7bb1c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a96792-ebed-4b3f-a417-9b7252f199c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31af5efc-81fe-4ce8-9ac7-8f5e24384617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c5b0a5-dde1-4dad-9d31-1655bff99a1b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7fbbd7-ceb8-433b-9bde-d0a52488e707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d40c38a-d9f5-4f17-908d-4b8f04798a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091be069-8dd4-496c-a155-fd3f46c086db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8f506c-c3a9-4396-ac57-f2ad48cab60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2008a69-6436-4e27-b140-11398f4ebc58",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28f2abe-f81a-4b52-8e54-a3bb5b4145e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2280a0ea-c262-45e6-a196-55bea744b74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105b3ec1-b7df-4db3-875c-8dedd2c9c159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1f2138-7c49-4b3c-aea7-82a234bc907a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b1feb9-78c0-43dc-ba78-b96e19f8030d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cf91d6-c8af-46f1-a87b-aa8072772413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bac9c8-6e9e-417a-9ba9-80b9632d41d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660d0534-7468-4985-9235-566962559d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b7a5d1-8b64-4691-827d-451b97466f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b454cba-0622-45c1-9083-997eef1753c6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811b02cd-239a-4a0e-b13d-25514f4fff0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "792b9893-2cd3-48a4-a618-7e288834d8eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ce3931-e778-42a2-8e0b-e28b257e1a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4529dca7-0de8-4eaa-8f6b-d5f99f71c146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4c5225-a78b-4b04-941e-c2dc58741f18",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f65470e-ceea-4a7e-8916-4c283293d449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a630d0-9e54-48cb-8341-a4d7cdaecb5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8433c3db-0bcb-4b2b-9dc2-9b3bf0a9e133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af855dda-fd0b-4c83-9041-2a9ad2fa789c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999b282d-986f-46aa-800e-779fb8fcb772",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135e1ffe-75f8-47d2-8a99-c5a536a90914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18a790d5-f6eb-4c78-a24d-fbcce684118b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5db00be-a94d-4a71-bd90-1f4405d4375e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbbe556-673e-48b0-a3d2-f5842d4e9db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabc9ca7-6445-49d9-a297-a61d23885e4d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2296ffa0-0b1e-4010-9f41-9989d79eabb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7abb14-9dd0-4d6b-a034-5f8ea478a6a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa7a50a-4873-4ab9-b4dc-c490170227cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3d12d3-652e-4bda-8ddc-8003c5039ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ef7a36-f959-472e-a1a2-c44e78d18e16",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a421c21d-01bf-421d-9788-c3994b829011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b9d8659-ee43-4134-ba7e-62eb6a784b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e1b1fb-4821-47d0-a72b-b65c2a1b0630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89f68eb-c185-44f4-85d6-e1c8a358c7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60859d0-8969-4f25-a891-df982c6b429a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9f8826-6736-4862-9c69-f9b4811aa883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "272ed6a4-4099-4672-8caf-cc6b6c51c534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b404984-7418-46e2-9632-a1478e409899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbfde8b-cb05-4842-bb36-009ec90b7fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298627ef-a831-4470-94c8-d0ac91bd299d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeac2ad7-6775-477f-93f7-f8b44561a210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f847b2-34d5-4419-af43-175740d6940b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7383a6d9-edc2-4cfe-9386-a8e16c2d1647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e1a9fdc-c083-47cd-b618-642556813796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac86386-fc13-415e-9385-40ed176914af",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2538426d-290a-4f53-8ae4-26388015bd42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95db15ac-bb00-4dec-b3da-cede67f2bfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dd47b2-4590-4985-a49f-f7308cbbe2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921bb762-bd53-4e9a-aa0a-93e6d2e9e68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddf4920-c70f-4a76-9cfc-886280781d68",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db9dc6b-132b-4bc1-a445-8cc22f7fd10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028f827e-8948-4177-bbe4-382a6e954b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48755e3d-9160-4449-8d76-4a91c2a76ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c484b6c4-958d-4f21-88c7-7202b4dc9618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab40516a-a7a0-41b7-8ee1-dbcfcdb6c7b3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42858af-7b86-4483-a578-38a88c55311f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2095d4b7-8f36-41b7-989d-0fc894d3aa57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae4ffe5-e87f-4334-b86c-b64280d6fac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c6aa4f-762d-4d83-b66e-6a1362832de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4b9566-41ff-457c-8ff4-d380f7fa4e5d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2daedd7d-1c16-4d4a-a53a-7c8268c10b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6033282-eba8-4989-9a17-1c855b5d1f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1185eda-6e0b-4d64-8318-2e25f1c55163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaee1ef3-0f4c-4be1-9c84-b5706a140147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f776447-96fe-4368-8c77-d886de2e752f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8de5fd-5b37-4651-aac8-7f41ab0e0bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f9bd21-2558-4c72-99ba-69dbd5420461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fc27ff-fbe0-45d3-8fcb-642b5c1b70d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cc5331-0e62-4af0-97a9-91e8ba906039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ac2222-e75f-474b-9c5f-9d216dccbd82",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43085058-ede1-4dfa-9d9f-06e61441d128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33836a0f-26f3-4766-8a6c-5e780aa9708a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "854a4ed4-15aa-423a-9c44-a3bb4ae88ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3070dd-e0ae-4a69-bea3-7e955d4980ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7759219-fca4-4964-af9a-3f1644a5a784",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4a2e9f-0f3e-47db-9a63-67886c805024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b270467c-f9ff-4830-a460-658b489f9df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0f8209-d743-4dfb-9037-a21c93e6194a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17af8afb-fbf1-449e-a91a-3004cf0153bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2197fea-6d55-43fe-b603-3dfcadc0d10c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7d4213-045a-4e4a-9ba7-2a427d7ba159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96be8267-4582-4536-ad52-7e7a3d389d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc0de3a-e2f9-46b3-9be4-040dd62e4e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3b8bab-b8cb-47ae-b200-b4b2991fefad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcaf387-e33a-41e4-9e55-03ebd0542ad5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f136a7-bb70-430f-a342-effc7436812f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a2556f-e49d-426a-8924-d52adb52a8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abadffa-d3f6-4906-beea-7f2ea9a9981f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6428d8-8090-4379-9435-4ced4ae7a3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7a01eb-8f9f-48c2-ab44-a7057c24c114",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be12ed53-76ea-4c1b-a761-10226b8edd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2589cb3c-e143-4bc8-9e03-0b618b287b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0777ef03-4d9d-4030-bb42-28a42aa55f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d655e377-9ba1-495a-a531-54059cfe1200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d0c0f3-fea9-4627-afd3-d688f4cd3970",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfaba8a-ab5b-45b7-9fb1-dcbea19b3695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5a8f62-1fe1-453d-9bdd-5062f9641ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3dd30d-c330-4ef9-b3cb-5a8d8417400b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0342eb3e-494e-45d7-9429-b186a3278447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82850cbc-abcd-4d5d-9064-ab4994acadc8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44f6330-ca05-4758-a5ed-2a35c73338e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9050f7-0bea-46f6-8b40-4ff6a43710bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa35ade-e556-41d6-99e2-c6f297e69a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b4bd26-8e56-44e0-b06e-b1a864d8510b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6039d5f6-7107-4d89-8a45-21293dce57e2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ff616f-6a14-4b9c-8cd5-f7a9d654aae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc705157-697c-4719-be57-31f2701417e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa9ea7b-935b-4d72-bb60-61928e1e24c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dabf37f-bb37-4d3a-81f1-75c3261f8caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c982b20-c6e0-4bdb-b9dc-d8a9e1a7a41f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f95fcd-e767-45b2-ae65-d73e0bc73ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b4a6a0-fced-42a3-b539-856c3ea94fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c09cec0-f7f0-45e3-a52f-b569caab97fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f577184e-1499-4788-836f-a00e6463309a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfe3dc8-9f87-4805-9557-9ad14f543e9b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997041e3-60d1-4209-82b4-29eb58081ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884fee86-6e9c-490d-ba05-2d954c5cc804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa14f3f-0306-44ac-919d-c0bd441dfd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3f1c1a-f0a7-43ba-b8d4-646334f2f7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9522e8-3ab5-4027-8e9e-0ad3e3b294c2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2a8bca-fe4a-4285-8e12-af3a71ec9982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1848bc9e-e9c8-46c4-a7cd-286dec9998c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b110b87b-b5a2-4a50-859c-66a34754abc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f7b381-533c-4a5d-9324-1aa369b99ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89779af-4e6d-461b-a292-f7ec49382f96",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4a3111-d246-4505-84d8-c76b9cef7f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d44481-0b02-4a65-9c4b-1fb372ddca60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb631527-dae2-47c3-9be4-cada4e06556a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f792072e-1a26-4597-933e-2c9d5ac138ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0750f1e-fda6-4807-a4a4-5e0d415a5be0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a223694d-f13f-476f-ad8d-a5e00a35b26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da2ac61-0d3a-4cef-bd52-f760e3939eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda4bd2d-8b6e-4048-8652-04c5d20f81a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3dd6ff-120e-4159-9b00-e702b4acd7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927e1e0e-8d4f-4a25-bda6-fb415cd7963e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30e7201-eaf0-4922-9ecc-bd9713744874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13bb9bd-0a68-414e-ba98-23e0603c9c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141432ec-15d3-4531-a30f-8c78c5ddce25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb5fe50-d644-479d-871a-de2c86929f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d492824-f78a-4422-a308-bcc9bf9eafc9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629794a7-b9cd-4b45-a061-7f4463b579fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50779b57-90d2-4444-bd33-449de7a00dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b74bad5-c20d-4b14-b98c-dd4457450efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168bcbc7-9fff-479c-9376-99b2494edf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7392344-6a95-46fb-bea7-72792f358644",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16bcbf1-c913-4c97-9a45-6e10f9cd5181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629dbc92-5a2b-4b5c-8c6c-73b9835927b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2cf2ba-0206-4b41-b2f3-2b2fe132450b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6495409-bcdc-4411-ab15-b363baca4ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdbe32c-7799-4906-b36f-ca3462bb558c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fdd3ee-e9da-404e-8099-33626415d002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede9f84f-49e7-4696-9793-1689513ebe8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8926ac9-8351-49bc-aa99-a29c252fd841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614240e3-4622-452b-b1b5-7c7f7e499d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7ab347-6e4c-47e8-b038-818ca7f277c5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b58f80-a6dd-4f7a-a5bf-3f9e6c1ed121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c1e10c-e03a-4d11-a41d-7d5fcb146b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2436cc1f-aff6-4371-97a6-b5681926e053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06139aa0-edd1-4a2d-9636-04d0c9fad570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eba3800-fe92-45dd-ae2f-1de1e6e22272",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6328010d-8dce-4015-8213-7fea2e6e9661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90335b48-72f4-42f4-bd29-00c1d3fa8136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddea4265-48ce-4d81-8bd0-4f466a04faa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147ba1aa-4522-4fbd-8eff-30c29cd02454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9416d3-d4a7-4874-a00a-5ff81ed5274f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72fd18b-e951-4104-bb8c-09895a85fa9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c9d560-0a9a-4f08-8d6b-15911715be38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdad080-28b5-4261-b8c4-b98c57ea6e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf260fe8-e4ed-4582-a05d-95208dc2c7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519a62ae-0aea-47a9-8914-e5934398bc3e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0f7fe3-683a-482c-ac21-6a2805ff33d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cbab6e-cf31-4a5a-bd7e-f4a3e13ed498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50812833-0eed-4736-b9da-0d759c3d64da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03b1ef2-d481-4147-bc8d-9717ba58580f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cda9024-1b0d-48cc-8192-302f8804b167",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b094d7f2-3254-4dc2-a9d3-0f614bcdb56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492cf76a-083b-4d1a-a277-3440bdf185c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef177b7-78f1-4ae0-b670-e1ef330501f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98804e73-7c9a-40f0-8603-619163b0802a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce6df49-799f-433d-add8-3b44ec18feca",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c1d55e-ea90-4275-97f7-fe69ca2b532a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e671c7b-6b99-4228-b1f2-4c14534fdfeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974bc032-253c-4822-b399-27a0a124cf95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d14ce85-0d3b-49bf-a3e4-b98b449ce504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dee85d-0e41-4616-a3a6-e3d1ab59bee6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0ce702-9635-49cf-b175-a16e4069e9ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1df23b-f420-43ae-aad3-c02114652cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dcf0e2-8896-4a47-879d-7f9e087d405f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454519e6-1a16-4037-a8b5-191cb82e79e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9880837a-ed16-4919-a49e-05351f1084ae",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c39723-7215-413d-9161-4b7d45ef743c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45bf7212-1c20-45f1-8117-824e5ae155ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ee5e7d-fef7-43e6-a813-85c83cfd0b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03677e8-1cbd-4ee8-8ec8-8408283b5b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1134d64-fc8b-461c-a635-ff0799afb552",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4048e7-f7d3-4421-add3-65f93f78a2d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57641c73-2488-48e5-b6df-d38c45b03b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5a3a2f-adea-4507-93dd-9165cf86c2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8eb52aa-fdf9-4df4-87ff-8765ff871a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59533eaa-b42d-4c00-9eee-736811e45653",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c59c348-4bd3-4bca-ae32-02a649f67904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847e1a33-cdbb-4b68-9620-5bd4699d91fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0695064f-ac9e-4479-bbfe-1ae4b83cd3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e2347a-e98d-44e9-8b93-176881a34a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c6045e-f3d9-49a3-bb07-61e32fbdf475",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddee273-7dde-4ea4-88b6-726f06c31c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9980d555-bb59-40f1-9b7c-c6ad9df4d143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ee6ab7-cecb-4992-a404-8938c41c8aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e320ca-966d-4222-9ef6-fc59c71d1409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886c9807-1dca-4b32-9933-58280380325a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2a8087-4a7f-4700-beb7-00ed58cb59c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12d0eef7-4486-4943-a040-fac4e7d3ba52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b7f053-45c1-4436-9745-24069db5f1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bea75a-b418-4d48-b019-2a93a683e42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb334b58-fe22-47b3-acf9-3f710e791d0e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fffb585-dc9c-40ad-8ce0-2a6ccd449c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "121683fd-ddee-4eef-a409-3534ea6e34d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766e188d-5f87-4cec-be26-29618fb1945b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9ecc2d-1f6b-4fad-be17-30f9e29e46da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071dd590-6fd1-4c6a-916b-38ed63e811c5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba58d6b-e098-4c34-9a19-8008be88e001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f43a296-8a39-42bd-9087-adb6494e835e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3c44e4-37ea-4053-8e5a-3fae5942964b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b56759e-289d-45d5-b7e9-5e55f15a57da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28471fb-ab32-414f-b9e0-98dea02ddcd5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49bfba5-2fe9-490d-a2b3-714fd52d9d72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8da5afc1-cfb5-4d6e-8f32-ef588e5bc08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40fd3c2-6c12-4899-98b8-2e917a123540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db430e41-3a6c-4cf9-952c-9a8c529dfb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9772883-6732-4ab5-830b-2bbe316497dd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322f4b05-cb6f-4583-aaa3-be608a34e6c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11e47034-9496-45ca-b3c6-28c98aaa7325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950cb816-07c1-4596-8a09-fc71698541c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaeb218-9ed8-4cf1-b5d0-cd4abafc196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a17b473-8b8b-46be-8b46-a4d1a567d95e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b40c5c-bcf7-49dc-86be-2b4c89a5b368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4774483c-f0b7-4983-84f2-86039082ca25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2df4e6-db9e-4dde-9876-40497a9842f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86db3e45-fb62-4e23-b173-f3c1297f77f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0320cf42-d09e-47c1-bbe1-a9edb83c4feb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1af288f-66fb-4d3d-bcd7-704c48a3db84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830b9f8f-74de-4e95-8dcd-ce637b0b20c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c5ee47-f218-4d9a-b2d6-3889284dd60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98ef010-766c-4ce0-93d9-0b25f3653278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37699d9-ece4-46a6-bb44-3b62e3110589",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b418aa5-c40d-448c-8a44-3ba3f524aed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "740d5ff9-7f9b-48f9-bf6c-b4064c879a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e590e3f-d696-4bf3-aed8-4ebf7cd62ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51289a5d-3293-4baa-8022-d386f1bb8330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4791a552-32c3-48cc-a8b4-384815e9b6f6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6b25e4-47a4-4973-bf9f-0ffa16d7e63c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17f030d6-0282-4b43-8391-f4e9ee160134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50554c6-2ca2-4b94-8301-a33269b6a6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96efcf47-1f24-4f23-9ad3-f565bb571db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de44c37-555c-4133-b1fd-52c070fd03f3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3263153-1866-4497-a1b6-216da90c1cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cec085b9-fc90-476d-ac86-fdcc4c38060d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87209abf-cf4a-44c1-8e86-0c8cdbbbd12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1deb8980-faec-449a-8a7c-61763226144d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8684bb34-bd7c-4f4b-b32a-ce8bbb538d78",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835802bb-4d55-40cb-8a05-8a8f06e26c3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca3fb854-b809-43f4-86d2-476b00b76d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5105e9f1-4b2d-43ff-811d-2ac421a5dce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f81d07a-fcdc-4808-b4e8-a93cca94f2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f710c42-0726-4c7d-8c47-53dae7b3b313",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6461a5d-771e-4b26-9ae1-8f0e92a5da53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb1e5f7c-ec99-40bb-9a13-168187486396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2447668f-3be9-4908-bdf1-818c48178f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269002f3-4fc7-4c3e-b4ac-189d3d30db13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6170119b-4a4a-40e0-9a32-1b210c014cd8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff34386-8a5b-4809-9122-ee2901e5b44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8feff2c6-d772-4719-9145-892576ac4658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4b2c61-a495-450f-b4fd-c5663e5794db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d806726-c656-447c-8e48-9b89e30172bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6465d35e-790d-461c-9bc5-113aa49c2a04",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d573fbd-34a3-48dc-b770-ca5b19bb91c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7b76aa-803b-4b8f-bcca-3483c8be93a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfa874c-1b22-45fb-933a-56b827202b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5abc4c-63d8-40b3-9e3b-83bdb55dfe94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80225f30-0506-414a-bcfa-171b91072d3f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ec8416-fdd1-4fb8-99a4-8efe97439577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad9a05cb-435e-42b6-b345-faa38f317dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce97001e-f0d4-4c3c-8571-fddba56836a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778689a7-b5c1-4872-a522-4b7b904d41d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f9a047-4905-4d76-b4e5-e325ec2b336e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a887fe-230d-4829-a7b1-3e26f8173dd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46fefd65-019c-4587-a8ea-fc3e56a7181d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3803fb30-ded1-4e1c-9e29-00a9a5f1d8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6868b893-98e1-48d1-a1bf-127232556824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebda5d7-d708-4245-9f99-729f97056bf2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928cfd70-f795-4f32-95c6-78b1a48df436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "356aeb9f-3958-4bef-ab23-63b12bd290f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad792e9f-aa2d-415b-9d3c-799d7d9cf6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f28bce1-c889-4609-9464-3f621b9cd234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e603a7a8-5439-48d0-9159-dc25ed127f07",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171895cc-ef0a-4a78-b0e6-38c735a5dd40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63441752-a00f-46fb-acdc-378b8d719cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5995de-25cd-4b6c-94c7-68e92eb2ab18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90dd4a64-d15b-4144-bd5a-521dbae2ad1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d4d141-8831-418a-8945-c40621d3e3c8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256db807-6beb-4f30-a9cf-612a804cfc5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad48678-9b18-46a9-88c6-5f829baa7b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e129519-b6d4-4803-9ea7-dc5acd747bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6031a64d-2e02-4643-ac1f-62c79f5fc8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122a763f-4f5e-4713-abae-af4fdeaf9b87",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94eb0905-074c-47b4-9f8d-03ef8d942ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84247c26-ddaa-491e-8a4d-93a2ecb1533f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55dd266-2dfc-43c0-a6ad-450ccbe29ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949d3558-400e-4fa6-a2fa-902926f5899c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e644584-f5cb-45ae-af2d-6da544093e20",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ec74a7-3988-4121-928b-2de004393cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17370344-f4a7-4144-a458-19b1485673de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c1016e-eb4d-455c-852b-5d038556bd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671e1a01-9e17-4a58-8693-5d7a728d9559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b23842-570e-49bb-8aed-a575bc2316cf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de43a99-65dd-4a50-925d-3ec86500bb06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b836ff09-abfd-4a9d-9c17-ca01d3287d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cbbaf9-f1b7-4ef4-9a40-7be39e31d814",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed78bf6-91eb-4924-8c50-ad3486eac67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa199b68-162e-45d8-97c4-c907b8cf750b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1875252-afa4-4be5-91bd-a52482ef0272",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac10a43-5f0b-459b-a7c3-f8d69798b36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5e7d76-8119-4c4e-bf54-9b2d23684bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ceee3fc-3284-40a4-ae30-cab2f93350f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa78851c-62d5-4020-881c-236464f5ef79",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2add03a-047e-4dda-b6a0-75f2e4477d5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eba3295-36d0-4a83-b61c-9b37ae9db1e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f4c792-989b-4369-bc62-928e9b472b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15961f0-8578-4b8e-9172-98494b119940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da47dd1-b441-4cd6-b8b2-cebc04369cf0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec255bbf-8453-4232-b49f-56e807d1450e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47da22c5-16c4-4ac5-a57f-04f669c65546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdc2c06-e41c-4adf-8f95-b1e9c3db5d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce8267e-86dc-4858-be30-a2c273d32164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621bb3cb-1c11-45b6-8ee5-d0fc0fb2f193",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de37290-d410-41a6-bfa3-7df2877426e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45e0531f-b1ff-44ca-9f6f-f4f29150befa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47caf45-e88a-4630-8df7-b77791d8e6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d420610-54f8-4784-89c1-21c66113cd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a800c937-7bd5-4eb0-a5c0-1205cbbcffbb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed61a579-f9dd-45da-ad5d-69603233a8eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4095ae7f-ed63-4cba-bbc4-20c11edd870d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98388874-e847-4da7-b031-6ee1a5d11d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ade691-5def-48d3-a5fa-8d8d43e6a2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ca3664-d769-467d-9987-57fd5a760b6a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664cdf2a-cca0-496c-b3ed-9e8f515dbec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18906bf1-4ea2-4797-a5bc-6acd5a110f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6d66c0-aac7-4017-bc0a-45235e6e64cc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0148d19d-1bb8-481f-ba1e-7c1a9d591395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2fa2bd-1c39-4a05-9402-0cbdf5a11989",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf25e765-7d2e-4cf9-85c1-d29011d0aaf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10455517-5579-4327-8676-1e559a5bb8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fac20e3-0e46-4e38-9c80-314057ebff17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602ad586-f743-4108-99f7-74e6807c59d3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "315dca6e-99c7-4b00-992f-c2e495c0f05d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0edc8ca-4978-4fd0-8f60-e78e5fdf1468"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02d9296c-9ed9-46d2-949c-f458b1d85d42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebc22988-e024-41a1-8d45-2b241dbec278"
                    }
                  }
                ]
              },
              {
                "id": "b4fa5cbd-7cf9-4c60-8078-9b977efd84fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "645d1613-7889-4a12-ba16-37515949357d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4846a1c-dde0-4102-86ef-744300d930e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f8f39c71-30e0-4f80-b85b-f0f66d584450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aff1bcb-e16f-48f6-b717-979c66c7bd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "414b4262-2c54-4f36-b4a4-2ef447349357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc566e80-1f4b-449a-875b-e7f49ed6e413",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eb2ff4-526e-4c94-ad51-539a969fa05f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "250bf46f-8c0a-4eaf-8108-051ad3daa150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085a9ed7-626a-453a-8f52-c23543c80b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06687016-4907-49d9-8d28-cf61fbb08b12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0286cb74-17fc-4696-98c3-472883f571ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1623a84b-4570-4d52-887d-e410c3ab624b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b843789f-7913-4b3e-9f28-6a3694ac556c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8c253fa-7517-48ff-8424-29984739a7d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "b1b73e02-5d3f-4ed7-a1bf-6ea8764b0abf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e4ef4e61-11b2-4756-bd38-62c2dd2b4756",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6eab0cd-d886-49f9-9df0-a3ca9316ded8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22e670ad-49c1-4578-9f96-f51ac93ea85f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b1ad7f7-800f-4894-a2df-666fc8729f86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b24e896-233e-4a58-9311-f326724755d1"
                    }
                  }
                ]
              },
              {
                "id": "9ad2de74-1707-4418-848b-4182f8056009",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37642daa-67d0-4fc4-a27e-55a475625412",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f6664c6-cd52-4de1-aebb-571b1b3497d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83dbbafd-61d4-4458-bf33-ac6964ab830d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3601a9cb-3ecf-4df9-92fd-af931eac48a2"
                    }
                  }
                ]
              },
              {
                "id": "373a32a6-1a06-4072-a81a-bb479ed42f4d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7be62314-36e9-4ff4-8697-af5ce90a9c03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "104a5e1f-97a3-4458-8727-96712a521cb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc8fb7b2-0700-474d-815a-815d1406c939",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3190c010-e8c5-4039-8c5a-c4bbfb383211"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17f840ea-1887-405e-9138-f6978f462d78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "56979b26-396d-4d96-ad36-655ad01c916e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11d9285f-8554-4283-8927-69bfb3c9f374",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8be19cd7-bfa7-4578-a054-c219a76ef42d"
            }
          }
        ]
      },
      {
        "id": "4d5647bc-278f-46d2-ac52-2d2a15395c48",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4cda4c58-37bd-4b95-bb4a-5b33337fab83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1aec232e-9be9-4498-bdcf-dab1fc89c362",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6a3dee3-fbc9-478c-9361-0ae960be6141",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861a04bb-355b-4dd1-b190-725ef04c3dc4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "225c86f8-a4af-44c3-8e57-9fcf60dedd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1ba421-cf9e-4441-ae74-369179f5a413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d05372f-eaf0-436c-8708-082374d03d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50897d51-18f6-42d6-a53a-4146035bf8bb",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60baaf5-67a0-47e2-9a5d-73e1489d76ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f62c3b05-2df4-437b-80c8-873fcbdc6cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa6584d-cdaa-430f-a331-12660ed174e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89315992-f408-45aa-82aa-00c77973a5cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aabf0daa-8b50-48c1-9268-727268c23411",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f74bfba8-e879-4470-9ce6-dc2109cc4935"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eecb306-94d0-4664-b5ae-eb2d38a3b93e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efebd23b-2ea5-46a4-93d2-24e8a29ede82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a64e87f7-5a8c-43ba-840a-dd180bd751b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "44544be4-fe85-416c-b476-170cf9553a12"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf080b53-1355-4cdd-b39b-7c6345d84a02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab16260a-d717-404f-b037-c2d0d850b5e6"
            }
          }
        ]
      },
      {
        "id": "7e445a7b-931f-464b-aeba-5a2f49d01576",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3bf405ae-69da-4fde-b3d3-5eeee8b0c1a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a57d2b7-4d66-4b10-b7a4-1e0ea565358f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55381a8e-347c-4dc8-9089-0fc63cde2402",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3d7630-f07f-4777-af80-4b493fdbe2c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "588a8fbf-b1f2-4d9e-b8d7-93912b2fd3bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0bcca6-3d66-4197-a56b-41c4a569f3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ea5258e-d9ff-4176-ada1-de0e17ed32eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b3eeac-d051-4c9f-89e2-8a4622aa00fa",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0f9f7c-8838-472b-9c4f-1d42fc2d3ca3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "22006561-8be0-4e21-b17d-4aeb35cc925f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14352e42-2f6c-4f2a-8356-541ff40d60b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec6b7f19-917e-42db-b801-0b85897052b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bbaa344-e6ea-4dd3-ac1a-f987b1d74886",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c4d86f7-fe86-4209-8188-af92f9956d3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0e80b03-380c-4054-8cd5-e9db783e056b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "531d96af-80af-4b84-a2a5-97831c2e20f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7965b35-15c5-42ea-82e0-60a8bde55955",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "53274677-03be-4000-949e-2a7b7e098aef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0dfd618-eae1-4254-afb1-50206d4cca91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e061e08-2ab7-4976-a02b-16ac760b1bcd"
            }
          }
        ]
      },
      {
        "id": "6cca70ff-a7d2-40b2-954e-43f8d12e10ba",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3495e03e-94f9-41b2-9c1b-7614321df1c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b522c71f-62bd-4896-8918-5a23c330fa54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45216cb3-b2fe-4570-b8a2-84c2807ce65c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee28bd6-d023-45ce-b1d7-4d29492e5518",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "317d1b10-8ef8-4db3-aac2-140305d45b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc104fb1-c491-4cb4-9430-1dfbfabf840a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2685b89-1f22-46e2-8795-1c91ae6260df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145f556f-5db5-479b-8782-09ecf8b527c1",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b52f990-6e33-4c8d-887c-37704df39a2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "74faea33-24f6-4ba9-948e-1dd2d62522b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9941de3d-d7fe-4cdb-9e25-4360879d34b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf647c2e-bfae-4292-ab21-2c15779e4696"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6c72563-072e-442b-b5be-77c25ffe7543",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caf20fad-aef6-491c-a52e-20c17c15e6a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bae9f55c-f29a-46bb-b7d4-35e933418323",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b3acec4-3165-4934-b4bc-c250fd36262e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a784c2ec-a45f-451f-a0c4-d7486085ea12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8fe6b398-08ef-4eb8-927c-cf641abfdc26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13ef6461-7dd1-4065-aac6-243aec2080e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd2f5c40-53be-45f8-8cde-74c3aa353d7a"
            }
          }
        ]
      },
      {
        "id": "5c56164b-bc93-42a5-9beb-42d94a4ee878",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f43c1496-8716-487c-83cf-923b32770f99",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e21b775b-d33f-4aba-a015-77b41bd1da80",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "15bb75a3-e9b1-44df-a357-17568bf8ca7f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b0fb7d3-1e8a-4437-8a11-2f4ead3ebff9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "618fb075-3835-45c6-a08c-cd8d817fcc23",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1231,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 166,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 320,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 621,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 610,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 248.08433734939769,
      "responseMin": 63,
      "responseMax": 2134,
      "responseSd": 339.20334395442205,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1665152374264,
      "completed": 1665152424048
    },
    "executions": [
      {
        "id": "ccd3894d-585c-445a-9eff-048043e7a968",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 157,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e3a749f8-c3e7-4fe6-ac9d-e47cc5f4a865",
          "httpRequestId": "dcbeab27-4225-47f9-81ef-33430849b634"
        },
        "item": {
          "id": "ccd3894d-585c-445a-9eff-048043e7a968",
          "name": "did_json"
        },
        "response": {
          "id": "9924e78e-b400-4b43-a773-6ea7a925d133",
          "status": "OK",
          "code": 200,
          "responseTime": 2078,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f2c8d2-57b4-471a-8767-a6e90080e222",
        "cursor": {
          "ref": "fca8b605-7aae-4a44-b3e4-ed8765510469",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3b748376-d5dd-437b-a8e2-3005c06d9209"
        },
        "item": {
          "id": "36f2c8d2-57b4-471a-8767-a6e90080e222",
          "name": "did:invalid"
        },
        "response": {
          "id": "579f30e7-1b9d-47c1-b0a8-f399c20ed14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f2c8d2-57b4-471a-8767-a6e90080e222",
        "cursor": {
          "ref": "fca8b605-7aae-4a44-b3e4-ed8765510469",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3b748376-d5dd-437b-a8e2-3005c06d9209"
        },
        "item": {
          "id": "36f2c8d2-57b4-471a-8767-a6e90080e222",
          "name": "did:invalid"
        },
        "response": {
          "id": "579f30e7-1b9d-47c1-b0a8-f399c20ed14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e44381-9974-464d-ac9a-f965ae645643",
        "cursor": {
          "ref": "e4410c03-c1b2-4732-87a3-f9f79dfc7e64",
          "length": 157,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "50377069-5fe6-41f5-9016-03ac1a27b583"
        },
        "item": {
          "id": "51e44381-9974-464d-ac9a-f965ae645643",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "262dc091-c14d-4fa4-97ff-59d233ad0217",
          "status": "Not Found",
          "code": 404,
          "responseTime": 382,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c520dda4-8605-4783-b9d4-ed2a366b18ac",
        "cursor": {
          "ref": "95056f24-5609-4ca0-812c-1310490212e0",
          "length": 157,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "741d772a-0263-485d-a5df-8b978cf6f968"
        },
        "item": {
          "id": "c520dda4-8605-4783-b9d4-ed2a366b18ac",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "084b7d5b-5301-4fee-b4ca-d5fed66071bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 85,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33beb353-aee3-4b4a-b0dd-f306da237189",
        "cursor": {
          "ref": "d5c0d02c-b2c5-4267-86ac-c146885e63de",
          "length": 157,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "87da419d-569b-4022-bf03-6bcdbcf46fee"
        },
        "item": {
          "id": "33beb353-aee3-4b4a-b0dd-f306da237189",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8e2ad8b2-413a-4654-abed-b41da1525e62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 120,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6f65aa-ed3f-41cb-9fff-e4df9097a428",
        "cursor": {
          "ref": "8e62d68f-1d74-4a24-818e-d7f857550ff3",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5c470951-d04f-454f-9103-cd57f6a7dab2"
        },
        "item": {
          "id": "5b6f65aa-ed3f-41cb-9fff-e4df9097a428",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3a073f81-b1c9-4eb6-9906-061964ae9de0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 93,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6f65aa-ed3f-41cb-9fff-e4df9097a428",
        "cursor": {
          "ref": "8e62d68f-1d74-4a24-818e-d7f857550ff3",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5c470951-d04f-454f-9103-cd57f6a7dab2"
        },
        "item": {
          "id": "5b6f65aa-ed3f-41cb-9fff-e4df9097a428",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3a073f81-b1c9-4eb6-9906-061964ae9de0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 93,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53625769-5412-4ed7-83ce-8fa175af2627",
        "cursor": {
          "ref": "146894e1-9986-49f6-9651-3024c6541d40",
          "length": 157,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0613aaba-9ece-4c60-8dd5-31c8f94d3234"
        },
        "item": {
          "id": "53625769-5412-4ed7-83ce-8fa175af2627",
          "name": "identifiers"
        },
        "response": {
          "id": "5fd2d73d-3fba-4aab-a6ac-44366082ff44",
          "status": "OK",
          "code": 200,
          "responseTime": 468,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626dad75-22d0-42a7-8270-669f012f7f97",
        "cursor": {
          "ref": "4331a657-1f24-4e16-9572-3e006182a8f2",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "882413de-d7e3-46aa-b13d-e70c8b5ace7e"
        },
        "item": {
          "id": "626dad75-22d0-42a7-8270-669f012f7f97",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "89d3ae02-9e97-4813-a802-e8e90115a0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626dad75-22d0-42a7-8270-669f012f7f97",
        "cursor": {
          "ref": "4331a657-1f24-4e16-9572-3e006182a8f2",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "882413de-d7e3-46aa-b13d-e70c8b5ace7e"
        },
        "item": {
          "id": "626dad75-22d0-42a7-8270-669f012f7f97",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "89d3ae02-9e97-4813-a802-e8e90115a0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bccdfb-523e-41f5-adc6-813b9a73398c",
        "cursor": {
          "ref": "61a5bf9b-6bab-4896-91f6-9e247162b631",
          "length": 157,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0d53294c-fe8f-4219-a343-bb9fa36f5a4a"
        },
        "item": {
          "id": "e0bccdfb-523e-41f5-adc6-813b9a73398c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1fd717fe-f0f6-4632-9c79-aab4c6a4b631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a821ddad-7fa4-4845-9452-101a15fa0086",
        "cursor": {
          "ref": "87ee008d-ab77-4aa6-8f1b-2f9a91b9db69",
          "length": 157,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9aacab5e-d37a-42a0-a76c-9a7131a632b0"
        },
        "item": {
          "id": "a821ddad-7fa4-4845-9452-101a15fa0086",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "a56ee4cb-922e-4528-a55e-a9a0e0429e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d831cc7e-d7e4-4029-8ac1-9c48fad50ce9",
        "cursor": {
          "ref": "f57199aa-1e21-4051-aa28-fdcb1ac9330b",
          "length": 157,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "349953c3-9e2b-4866-b8a0-f9620b99fefa"
        },
        "item": {
          "id": "d831cc7e-d7e4-4029-8ac1-9c48fad50ce9",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "53f61f77-77d7-45e1-bc4c-e81dbcae8182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356ad7d5-4e9f-4e7c-9392-fdbabbdcbee2",
        "cursor": {
          "ref": "f06ec03c-5fc0-4280-a54e-c1018841474e",
          "length": 157,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0a536915-9f89-4cd1-93d1-3d917df3cb0d"
        },
        "item": {
          "id": "356ad7d5-4e9f-4e7c-9392-fdbabbdcbee2",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "a5f67c8e-206f-4b4c-bb20-d2ed7b03017f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003a9fd2-4eb7-4e83-a1a8-e0c54acbd78c",
        "cursor": {
          "ref": "99d36ea9-8613-4aa3-a167-a874b1ce84b3",
          "length": 157,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b5da845e-1f41-4480-9de5-03f5c1439e61"
        },
        "item": {
          "id": "003a9fd2-4eb7-4e83-a1a8-e0c54acbd78c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2f01f60f-908b-49e3-b97c-f6727f66c67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74dfb30-0dff-4bcd-a38a-d92f1efc20a5",
        "cursor": {
          "ref": "2fa47790-e235-4601-a4d6-ab1287d64f3c",
          "length": 157,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2485d432-c575-4164-aec0-7965e25cbe3b"
        },
        "item": {
          "id": "b74dfb30-0dff-4bcd-a38a-d92f1efc20a5",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "4fb2efea-a4c2-4c6c-ae27-1b4fa69bbcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a514b5-b98c-4f95-b55e-0eaf37b61174",
        "cursor": {
          "ref": "e764abfd-ec41-4d6a-a74f-aea65f4549eb",
          "length": 157,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f3a8796c-3235-409a-8e30-d56b1690a57b"
        },
        "item": {
          "id": "88a514b5-b98c-4f95-b55e-0eaf37b61174",
          "name": "credentials_issue:credential.type.members:missing"
        },
        "response": {
          "id": "9c38dc3f-9f47-4b55-a2e6-10601f15577d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5efaad-9548-47b3-9764-a00576081340",
        "cursor": {
          "ref": "63003e5d-6610-4488-a8c8-92954ae2a491",
          "length": 157,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7d1b3c55-3d1e-40ab-8386-48d0d9a69a03"
        },
        "item": {
          "id": "0d5efaad-9548-47b3-9764-a00576081340",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "7a7b02a8-201f-490f-91d5-72347c171003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0887e153-09dd-41c9-a89a-bdfe42f4a5d2",
        "cursor": {
          "ref": "15c01943-531c-42b6-a269-16f5dd88f57f",
          "length": 157,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0c0e1b26-ac53-4ed6-9a2d-6fef5d77b0ca"
        },
        "item": {
          "id": "0887e153-09dd-41c9-a89a-bdfe42f4a5d2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0699b72a-8832-467c-8749-d0aafe345707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c6dd5e-c152-465f-8af3-e1d7e808f08f",
        "cursor": {
          "ref": "1b998dad-050f-44b9-a778-57ee8a3f16c4",
          "length": 157,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2726b0c6-593f-4075-971a-fadf61f12cc0"
        },
        "item": {
          "id": "13c6dd5e-c152-465f-8af3-e1d7e808f08f",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "69162925-2321-4652-a80d-c7cc88a1b2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8818c4e-c633-4c80-a3b1-0fa7e7af7b71",
        "cursor": {
          "ref": "1059ea8e-94be-4f1f-a4cd-6140b9ea6db6",
          "length": 157,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ce9cc84f-a3fc-4bab-82dc-9307ef11a9db"
        },
        "item": {
          "id": "e8818c4e-c633-4c80-a3b1-0fa7e7af7b71",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "d20c8b2e-9f27-42bf-9a91-5e9ea63ae7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e1fd0d-81ee-47f5-9690-6079c212f64a",
        "cursor": {
          "ref": "6e5fb648-e5b6-477c-ba13-5fee6b9e0e6e",
          "length": 157,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c0f72a18-1255-48c7-afff-cfd4fd7589dc"
        },
        "item": {
          "id": "b1e1fd0d-81ee-47f5-9690-6079c212f64a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2f819c65-e3ad-4c38-8cae-a62728287d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be2051a-6fa7-422a-90d4-88e1e6d97e26",
        "cursor": {
          "ref": "73289414-0873-4610-a76a-cb4f92f57363",
          "length": 157,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "01055753-3e7e-4cb2-8249-ba3171c7e467"
        },
        "item": {
          "id": "9be2051a-6fa7-422a-90d4-88e1e6d97e26",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "34a75fc7-5544-454d-98b3-7161696bd462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850f3e79-4c40-490a-aaa4-791be708576a",
        "cursor": {
          "ref": "e2aed2f0-c487-4df9-a0ee-2b04490b8f39",
          "length": 157,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "da5372b5-5afc-49f6-a389-7f405035b559"
        },
        "item": {
          "id": "850f3e79-4c40-490a-aaa4-791be708576a",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "e5d38423-a532-4cfa-883f-74765f9e98f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a2e6d4-58b8-49f7-937c-02eacd241108",
        "cursor": {
          "ref": "20270041-33c9-44aa-b233-9810af0a5587",
          "length": 157,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "76696dc7-a48f-4f46-9ad3-f21ffd3dbce9"
        },
        "item": {
          "id": "20a2e6d4-58b8-49f7-937c-02eacd241108",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "a3af0dae-d10e-410e-9938-c9e1cd380aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f94093-5c26-4eac-8e71-63749aa53985",
        "cursor": {
          "ref": "b3201197-08fe-4f2f-946e-9dfbd384c53e",
          "length": 157,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2575b4d8-b50c-486b-a104-65ac917d1106"
        },
        "item": {
          "id": "24f94093-5c26-4eac-8e71-63749aa53985",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "94f90157-f09f-4a73-8728-534ab2448330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2034bc-fb70-483a-83aa-ea65a94433a8",
        "cursor": {
          "ref": "38358da5-76e9-414f-bb98-294d6e43d6e0",
          "length": 157,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "495bca1f-a4c3-4d77-9d86-213d7a7a1873"
        },
        "item": {
          "id": "3c2034bc-fb70-483a-83aa-ea65a94433a8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1cd38868-01f4-4044-a06b-e01e957b47c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45550c5b-4fac-4ff1-8c95-04e4c60cde94",
        "cursor": {
          "ref": "b744ff70-372d-4b4c-923a-cf7879857231",
          "length": 157,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "514aa263-c994-44b5-9023-4e7f6b2a727c"
        },
        "item": {
          "id": "45550c5b-4fac-4ff1-8c95-04e4c60cde94",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "faa97857-e1bc-4098-b47c-c4ef77661cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f18a087-ab98-4cb7-8353-ed93148ab591",
        "cursor": {
          "ref": "710a0118-d0b1-473b-90c5-cbe2905afc9d",
          "length": 157,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8725a2a3-3c79-48ed-a694-bfe4ddb046ff"
        },
        "item": {
          "id": "2f18a087-ab98-4cb7-8353-ed93148ab591",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fce67274-fa00-49aa-9756-0f388c73b43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc3776b-ceb1-49a8-a778-276d11189156",
        "cursor": {
          "ref": "04210bc2-390a-4d59-b4d7-57329b5b71f5",
          "length": 157,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7ee2e30a-31d5-4e64-a308-47f4c669a3e8"
        },
        "item": {
          "id": "9dc3776b-ceb1-49a8-a778-276d11189156",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2f77639e-cccb-47b0-a632-1dbdfbe1ed4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd95d40-53d9-4dc7-a09c-2da733fd4293",
        "cursor": {
          "ref": "8aa8c95d-78d3-4a0f-a825-24ce0eb02f16",
          "length": 157,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d7cdc4df-bf1f-4aaf-8fa4-9795abaecaca"
        },
        "item": {
          "id": "6cd95d40-53d9-4dc7-a09c-2da733fd4293",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "6d21c1cc-f91c-4a4c-86f9-f1678718b444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52162b3-3ff3-4be3-933c-be49ca6b7044",
        "cursor": {
          "ref": "6dc09130-8477-4586-be3a-9584e4c83482",
          "length": 157,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9ef89d01-d318-4a29-9fb3-3afdb6519bd6"
        },
        "item": {
          "id": "c52162b3-3ff3-4be3-933c-be49ca6b7044",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "44cd6ce0-9392-4f76-be91-53163b7bc03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1bd34c-2226-428b-b88d-b0ecab5314da",
        "cursor": {
          "ref": "850c74e7-8e57-4c78-bc58-39f348f8d1d4",
          "length": 157,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "315b0eab-98b3-4e26-9a07-f793e428c202"
        },
        "item": {
          "id": "fc1bd34c-2226-428b-b88d-b0ecab5314da",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f9bae685-626f-4c36-9a6a-d382e32f84a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd27115-080b-4c86-8234-ead91a4e97a9",
        "cursor": {
          "ref": "8d6a40a6-dcac-4943-811d-8922a38577be",
          "length": 157,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e262cc8f-8a18-44ae-9f00-bb3dae91a6a8"
        },
        "item": {
          "id": "afd27115-080b-4c86-8234-ead91a4e97a9",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "f3bcfc81-eb37-4fd9-a116-c4ce8fd1aefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b381b7f-1fe8-4125-9a48-49c095fba96d",
        "cursor": {
          "ref": "b06f67a8-db4d-4b55-bb13-ca6def27b84e",
          "length": 157,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "72abb473-2d75-4dee-b84e-9a6a3d5e6fd6"
        },
        "item": {
          "id": "0b381b7f-1fe8-4125-9a48-49c095fba96d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3edf7efe-4a66-42ef-95e3-784671f8fedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596fbfad-64c0-4fd5-9bbd-481f308fb1f0",
        "cursor": {
          "ref": "57cab054-1083-4447-945d-2ee35b18a6ad",
          "length": 157,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0e0a3f36-c6ff-406b-9306-80d8f49db125"
        },
        "item": {
          "id": "596fbfad-64c0-4fd5-9bbd-481f308fb1f0",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "35538857-6c7d-45bb-bb2c-b86be4604eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def2f116-f65e-4d39-a41e-92fdebef2a06",
        "cursor": {
          "ref": "cb00280c-4992-46df-a9f5-27570a1ec8b5",
          "length": 157,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c87670cb-27fa-4fb7-9517-704ba5898a13"
        },
        "item": {
          "id": "def2f116-f65e-4d39-a41e-92fdebef2a06",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a34757b9-4a6c-472a-b54d-73871ed441fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1346,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c893bf7-3afb-4e51-97a1-fb509a9a4a54",
        "cursor": {
          "ref": "06d8c866-cd1f-41f1-bc6f-857c73d879c3",
          "length": 157,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5765072a-bb2b-4467-9bd3-7e77211ad635"
        },
        "item": {
          "id": "7c893bf7-3afb-4e51-97a1-fb509a9a4a54",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "1b803509-1c2d-4fe1-bdb6-89d40c74c6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df063911-527a-497e-a869-2405efafe942",
        "cursor": {
          "ref": "199a5c26-3faf-4dee-b640-89d5a762b8a4",
          "length": 157,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ef21e341-cde3-4a56-8bf4-b6796abf6b99"
        },
        "item": {
          "id": "df063911-527a-497e-a869-2405efafe942",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "51deaa0b-8dcf-4ace-8dcd-16d7fe700d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9069028c-8f11-4630-954b-1aa43da963b0",
        "cursor": {
          "ref": "2ce8ef8a-c59d-4c0c-a36c-883accfa3265",
          "length": 157,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7f13cdbb-7c2a-4dec-ae6a-b13c0b444c8b"
        },
        "item": {
          "id": "9069028c-8f11-4630-954b-1aa43da963b0",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "c8007e98-cdd0-41ea-9143-c2b0e8fda36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e584b301-e7b1-461c-9ad6-4f1119b81870",
        "cursor": {
          "ref": "6039311b-6fc4-463d-9313-4e5d65659229",
          "length": 157,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e0323730-7377-4c66-b4d6-bee676034720"
        },
        "item": {
          "id": "e584b301-e7b1-461c-9ad6-4f1119b81870",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "9f1a5cc0-3ecc-48ca-905c-e5dcb5cb7274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487450a9-045e-4040-a04c-a8de78bed13b",
        "cursor": {
          "ref": "db3ea509-1d17-4b21-88bd-204275ae6665",
          "length": 157,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "13f75363-6306-424a-b9c0-b71d7c9604a7"
        },
        "item": {
          "id": "487450a9-045e-4040-a04c-a8de78bed13b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "db8fba04-6157-413b-b0ca-16bacac02cdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 166,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ee103c-7619-4e6e-8651-ebab6e472d21",
        "cursor": {
          "ref": "2708a8d2-8deb-435c-86b8-536ef7d5de19",
          "length": 157,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "254d627a-26bc-4e56-8858-2cce1a533ac9"
        },
        "item": {
          "id": "a5ee103c-7619-4e6e-8651-ebab6e472d21",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c41c44cc-139b-476a-bc5a-c4993aa984b5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 106,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63caebe-175e-49a3-acae-f7d67d8fa1c7",
        "cursor": {
          "ref": "da005dcd-cc5a-44b5-9459-caec827f8fa0",
          "length": 157,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7cd5c70e-7c46-4aa6-b24c-b8b324c0e8e1"
        },
        "item": {
          "id": "a63caebe-175e-49a3-acae-f7d67d8fa1c7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "77e82c86-6b55-4d03-a1d4-137b892ae052",
          "status": "Created",
          "code": 201,
          "responseTime": 1409,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined",
              "stack": "AssertionError: expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined\n   at Object.eval sandbox-script.js:3:42)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab46fe4-7d82-45ff-bf17-91a8c379121f",
        "cursor": {
          "ref": "0fc51b32-abd4-4c9d-9cdf-9924661e076f",
          "length": 157,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cd3788c0-f2e8-4899-a482-ebce46009371"
        },
        "item": {
          "id": "fab46fe4-7d82-45ff-bf17-91a8c379121f",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "cccc8dd4-ae50-4cc5-900e-699d50af1e80",
          "status": "Created",
          "code": 201,
          "responseTime": 676,
          "responseSize": 591
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792a09ee-17ce-4762-8216-a879993c386e",
        "cursor": {
          "ref": "6f0d28ae-6925-49f0-8e2a-b0dd664cc060",
          "length": 157,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a0a8086f-c7f8-4dbb-98eb-c033124af845"
        },
        "item": {
          "id": "792a09ee-17ce-4762-8216-a879993c386e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0da87315-d6fc-469f-84d2-3e6d062e252e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:44)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:44)"
            }
          }
        ]
      },
      {
        "id": "1cbcd27e-17a0-4610-9ef8-8f2a5c573612",
        "cursor": {
          "ref": "8d799e3a-d32d-4949-b50d-6a2df9b35b26",
          "length": 157,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "89ac9492-c29e-46de-b589-fd351ac5582b"
        },
        "item": {
          "id": "1cbcd27e-17a0-4610-9ef8-8f2a5c573612",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d7272975-c599-4fa0-a14f-c7d7dac448d6",
          "status": "Created",
          "code": 201,
          "responseTime": 599,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce9ddc1-55a8-4d97-812d-8e813320fa3d",
        "cursor": {
          "ref": "1437d854-adaa-4cd0-8a7a-e27a4b228c92",
          "length": 157,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "73cbc8b6-47c4-4d93-b8fc-6d3180b277db"
        },
        "item": {
          "id": "dce9ddc1-55a8-4d97-812d-8e813320fa3d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b210cb25-e863-4647-be61-c5dfcaa19bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "6c28b143-ae96-4a84-8d04-e26b57c62a1c",
        "cursor": {
          "ref": "be6e10bf-1cc5-4a75-b2d0-54eca3a2c05a",
          "length": 157,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2ea0f577-fb1f-41fc-9eec-e4c48d90d49f"
        },
        "item": {
          "id": "6c28b143-ae96-4a84-8d04-e26b57c62a1c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "571a8f28-3f15-43f3-8aa3-5146237fa036",
          "status": "Created",
          "code": 201,
          "responseTime": 580,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c3e18f-f7b5-416d-a19a-6494ddedb28d",
        "cursor": {
          "ref": "9eeb77f5-b25f-412b-bcaa-5f4198ae6201",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "db1da8c0-85c0-42f0-83bb-7588e6a90f94"
        },
        "item": {
          "id": "02c3e18f-f7b5-416d-a19a-6494ddedb28d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3fb4a794-05a2-4fb2-b999-c8599dec997e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c3e18f-f7b5-416d-a19a-6494ddedb28d",
        "cursor": {
          "ref": "9eeb77f5-b25f-412b-bcaa-5f4198ae6201",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "db1da8c0-85c0-42f0-83bb-7588e6a90f94"
        },
        "item": {
          "id": "02c3e18f-f7b5-416d-a19a-6494ddedb28d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3fb4a794-05a2-4fb2-b999-c8599dec997e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0780c6cb-b7bd-4059-969e-6d72a7bb370c",
        "cursor": {
          "ref": "7dc877bc-dc7c-4144-b92c-20fc4dba82d4",
          "length": 157,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3b3be858-2371-4516-9eb8-4a5177831eb6"
        },
        "item": {
          "id": "0780c6cb-b7bd-4059-969e-6d72a7bb370c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "32f26f7c-f2ca-4f9f-b6d2-a36ca7fa2270",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 76,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df541600-4c7a-46de-a4e4-ed66186dcaf1",
        "cursor": {
          "ref": "7241bf55-2f0a-4611-8630-b594008ac15f",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "33323f83-2b81-40e1-a7ef-a029744f738b"
        },
        "item": {
          "id": "df541600-4c7a-46de-a4e4-ed66186dcaf1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9445b770-055c-4383-89d6-02e04a394f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df541600-4c7a-46de-a4e4-ed66186dcaf1",
        "cursor": {
          "ref": "7241bf55-2f0a-4611-8630-b594008ac15f",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "33323f83-2b81-40e1-a7ef-a029744f738b"
        },
        "item": {
          "id": "df541600-4c7a-46de-a4e4-ed66186dcaf1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9445b770-055c-4383-89d6-02e04a394f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14d785a-2264-42ae-b3a3-ced11ce8d842",
        "cursor": {
          "ref": "467c22b6-bd29-473b-8223-8c79903fd224",
          "length": 157,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8d993142-576f-47ca-ba19-9ba1c1870e9a"
        },
        "item": {
          "id": "f14d785a-2264-42ae-b3a3-ced11ce8d842",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "96f877fb-7579-4950-9cc7-637364f46986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309d1949-65ac-4b89-ad1e-c60d6c2636f7",
        "cursor": {
          "ref": "69ac7fcb-f43b-47a9-a85a-02ceb1cd6c32",
          "length": 157,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b2d0f363-8202-495c-88f9-630e68dede94"
        },
        "item": {
          "id": "309d1949-65ac-4b89-ad1e-c60d6c2636f7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9f5637bd-0447-4479-ae42-db8778a3369a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad983862-931a-40ca-a83b-29b06f3e6711",
        "cursor": {
          "ref": "361d6eb4-a141-471f-a868-a87a08b57916",
          "length": 157,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "abfe89bd-c9f2-43ec-ae39-d7a0452d23d1"
        },
        "item": {
          "id": "ad983862-931a-40ca-a83b-29b06f3e6711",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4f01df76-426c-4048-82ca-81bef8d6f208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20543c09-5b5d-4710-8bac-dc8a4cc2060f",
        "cursor": {
          "ref": "462fc88f-dd94-4336-95b1-f4eec1d3255b",
          "length": 157,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3f5ac946-ac3d-4452-af4c-e00a2a8f9c15"
        },
        "item": {
          "id": "20543c09-5b5d-4710-8bac-dc8a4cc2060f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8340cbc1-a0f9-4848-9dcb-70fe56ce238c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96eaf0f-c866-426d-9fdd-f3fef2f89559",
        "cursor": {
          "ref": "608c33e0-dc1c-43cf-b8e1-38b93e8e1736",
          "length": 157,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c5a9944c-ac91-41f2-9749-07d14011ced0"
        },
        "item": {
          "id": "e96eaf0f-c866-426d-9fdd-f3fef2f89559",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d03baac0-c4af-4246-9dfc-d7eeb9aa7184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dde95d-5bbf-4720-a01f-a669eb98b167",
        "cursor": {
          "ref": "3f1c9e25-8e2c-494f-98aa-6fbfc0546712",
          "length": 157,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4b374cea-1db5-4ccd-8f51-3e8a63776ae1"
        },
        "item": {
          "id": "f7dde95d-5bbf-4720-a01f-a669eb98b167",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0e238635-06ac-42e7-99e1-454e7ebc5a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9204df-e7f3-4b60-bed4-12ac4e12bda1",
        "cursor": {
          "ref": "41043e87-af7e-4346-81e9-ee0419c86eff",
          "length": 157,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6a8d54f4-8e43-4040-b0d6-63afe8927f12"
        },
        "item": {
          "id": "5f9204df-e7f3-4b60-bed4-12ac4e12bda1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "acab300a-f7c7-49b3-9e4b-2ff5c7c43104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa740f30-4f61-4821-ad58-2ed528f3a428",
        "cursor": {
          "ref": "ceee9643-8741-4574-8c2a-1949779b165c",
          "length": 157,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a6ed1691-2a34-4f96-a91d-6a4f5114e98a"
        },
        "item": {
          "id": "fa740f30-4f61-4821-ad58-2ed528f3a428",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6b18cc7c-e138-4ea6-b813-6e03b52b3269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de65410d-47d8-417f-b9a3-6142d2aa10eb",
        "cursor": {
          "ref": "d8b17bec-b9a4-43d5-a41d-4655b82edc86",
          "length": 157,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fb132b40-58ce-413f-9cb0-f055e53dc40e"
        },
        "item": {
          "id": "de65410d-47d8-417f-b9a3-6142d2aa10eb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a0dea9a0-ffd4-4f52-ab8d-dedc7e9b25ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd50994-14b3-4072-84a4-65d311aae15a",
        "cursor": {
          "ref": "ad69fd3a-60f4-491d-91b3-279f73305ee4",
          "length": 157,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "413cc110-d0f8-4fd0-a064-a6c8fd6e3108"
        },
        "item": {
          "id": "0dd50994-14b3-4072-84a4-65d311aae15a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ad5c9cf5-0d9d-4422-b358-7650f56ba3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdbb491-bca2-4eac-87a9-ff15691179a1",
        "cursor": {
          "ref": "d6e7518e-b203-4a6b-ae39-2eeeeeaec584",
          "length": 157,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "39a8c1f4-7661-4bad-b51b-5b4c09041ed5"
        },
        "item": {
          "id": "0bdbb491-bca2-4eac-87a9-ff15691179a1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a89c54eb-de51-4148-9667-6ce1b18ea1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c911273b-26b1-42fe-880a-7b1c7d598fd7",
        "cursor": {
          "ref": "890d87b8-0ddd-4ad8-8dcb-0beaad9979a0",
          "length": 157,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0e710ae4-4cfe-49bb-9780-9449fe460500"
        },
        "item": {
          "id": "c911273b-26b1-42fe-880a-7b1c7d598fd7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cdef6160-cfbf-4866-8839-0a98af5ce311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c19b3f5-d365-434d-8f18-36b585e7ada9",
        "cursor": {
          "ref": "3d08a832-ed51-467c-af09-2ad5eb3938c0",
          "length": 157,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "63b0fb21-8577-456f-b11a-d748a941f6f4"
        },
        "item": {
          "id": "1c19b3f5-d365-434d-8f18-36b585e7ada9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a57e1fff-791a-46fc-87df-e6076f8ad1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df27e74d-bb71-4747-8419-7209fc5eb4a3",
        "cursor": {
          "ref": "fc7a4d72-27cb-4b3d-a89f-07b2ffff06e3",
          "length": 157,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2583a0b0-4258-4a56-bc8a-9de3c6c3a98e"
        },
        "item": {
          "id": "df27e74d-bb71-4747-8419-7209fc5eb4a3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e06eb20d-ca72-4e08-bd77-679bdea95363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269fc8bd-7c69-4e0f-bed0-8edb1d0eb2c6",
        "cursor": {
          "ref": "9db834d8-da36-43d6-98fa-dac1ea5f53e9",
          "length": 157,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d052388c-9171-4388-b206-d10c3d5f606b"
        },
        "item": {
          "id": "269fc8bd-7c69-4e0f-bed0-8edb1d0eb2c6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "814338e7-c876-4107-89c7-411cbfdbfb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf86259-6368-4644-8593-02f42162f1a7",
        "cursor": {
          "ref": "13c3649f-976e-4442-aa42-d23c377b9605",
          "length": 157,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "68536b3a-8c20-4c6a-a941-5fdb5c6a8dea"
        },
        "item": {
          "id": "6cf86259-6368-4644-8593-02f42162f1a7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e228e216-46d3-40cc-9235-84aab65e5feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46c60da-864b-4cb0-8205-52eeadc7c2af",
        "cursor": {
          "ref": "8c9c4d14-18cf-460f-9d39-4ba5fe09f418",
          "length": 157,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fcc2ae8c-81f3-4629-b4dd-0c33c40d276c"
        },
        "item": {
          "id": "c46c60da-864b-4cb0-8205-52eeadc7c2af",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e6219389-73f3-4ef8-8396-c051f2d92224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb2b579-ae13-47dd-8bf9-ed0cc0e8c97d",
        "cursor": {
          "ref": "4d95976d-0add-41ac-820b-e5a551995e82",
          "length": 157,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6457fa9d-965c-401c-be1b-120d7f78219e"
        },
        "item": {
          "id": "fcb2b579-ae13-47dd-8bf9-ed0cc0e8c97d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5187cce4-3ad9-41cc-bd61-7968deb3d367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d119b1-1e0f-44b1-aafa-956026e8df23",
        "cursor": {
          "ref": "2cae97f4-fb63-4fa8-8d34-1a5496294b01",
          "length": 157,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5924fed2-99ae-4e8b-b135-1f71179ed50e"
        },
        "item": {
          "id": "c3d119b1-1e0f-44b1-aafa-956026e8df23",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "087abdf7-d40f-4b16-8471-68cd86e57eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0007c7-6a71-4954-baab-e594d35ddce5",
        "cursor": {
          "ref": "e3bd7711-1212-4b08-a0d9-8aa28c9b9363",
          "length": 157,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1d5ec83c-cc6f-4aa9-b5f9-11fb81d78409"
        },
        "item": {
          "id": "9c0007c7-6a71-4954-baab-e594d35ddce5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6db788e4-13f6-4f88-8b6f-8d5f8f8d1c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cb80b7-0559-4443-b1df-a53332dd4db3",
        "cursor": {
          "ref": "42536896-d7cd-459a-9e76-a2f9e1a64677",
          "length": 157,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "235384bc-c711-471e-8f71-8778cac24404"
        },
        "item": {
          "id": "b5cb80b7-0559-4443-b1df-a53332dd4db3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "381165a7-12fe-4b23-bc24-f7e057cc9909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c633602d-04e9-41b2-a73f-b83e0333c83c",
        "cursor": {
          "ref": "e9102338-d905-43ef-a90e-4924d584fadc",
          "length": 157,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "71daeec7-2dac-4329-8d33-62bfe1322a85"
        },
        "item": {
          "id": "c633602d-04e9-41b2-a73f-b83e0333c83c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "77947389-3da4-4866-8325-15727b4b2c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91762b58-6a8e-438f-886b-62f8806c8dc8",
        "cursor": {
          "ref": "e78b6ed8-461a-4c23-a684-edcd3aef0db8",
          "length": 157,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "05087d17-4982-4add-8eaf-efec4ab61e8d"
        },
        "item": {
          "id": "91762b58-6a8e-438f-886b-62f8806c8dc8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "af2c9806-c663-444f-b144-e4ff5672bed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9792131-cfba-4869-a846-889c07398f6c",
        "cursor": {
          "ref": "734d3d37-4385-4582-891e-6bdcb5b873d8",
          "length": 157,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2f1945df-1203-45df-951b-3de66b4bd77d"
        },
        "item": {
          "id": "a9792131-cfba-4869-a846-889c07398f6c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e68cd758-96b3-4ca0-b2c4-65ce3ffbd461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c5b0a5-dde1-4dad-9d31-1655bff99a1b",
        "cursor": {
          "ref": "3ee7cfea-c6e8-49f3-b1d4-949ee06aaacf",
          "length": 157,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "21b20077-bf00-4017-842d-c1895a4206a0"
        },
        "item": {
          "id": "e1c5b0a5-dde1-4dad-9d31-1655bff99a1b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c97516c5-bfd9-4b0a-994a-23da13c621f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2008a69-6436-4e27-b140-11398f4ebc58",
        "cursor": {
          "ref": "0be1e16f-cf53-4a2b-9ef1-2fd24a9bb4cb",
          "length": 157,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8333c903-a50d-41bf-a5a6-0adc9db72967"
        },
        "item": {
          "id": "f2008a69-6436-4e27-b140-11398f4ebc58",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ce31378b-098f-4183-9a25-c2fe97a68a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b1feb9-78c0-43dc-ba78-b96e19f8030d",
        "cursor": {
          "ref": "615e43e9-96e6-4bef-9b14-e308ad777b17",
          "length": 157,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d8e9c351-05c6-4e2a-8151-f2123b906fcf"
        },
        "item": {
          "id": "94b1feb9-78c0-43dc-ba78-b96e19f8030d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d6b39e5c-4415-4853-8ee8-3adbf04a1e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b454cba-0622-45c1-9083-997eef1753c6",
        "cursor": {
          "ref": "3bb57864-383e-46de-9520-e529f815230c",
          "length": 157,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "14ff3ff5-d2c6-4d72-bc67-2d7d53447229"
        },
        "item": {
          "id": "0b454cba-0622-45c1-9083-997eef1753c6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6fc64155-8bc9-49c4-967a-b38e1e1c210c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4c5225-a78b-4b04-941e-c2dc58741f18",
        "cursor": {
          "ref": "a228da47-3a7d-4f8b-bfd5-fc18a4ec383b",
          "length": 157,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "81cb2ef6-f055-435f-a619-29b3389fc3ff"
        },
        "item": {
          "id": "3a4c5225-a78b-4b04-941e-c2dc58741f18",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "12233a23-a960-44e1-8244-1613d74f4b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999b282d-986f-46aa-800e-779fb8fcb772",
        "cursor": {
          "ref": "3a13407c-3806-4e1b-8402-7cc0efbb14d4",
          "length": 157,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e277e5ad-dece-455d-98ae-d9ba76fc77d2"
        },
        "item": {
          "id": "999b282d-986f-46aa-800e-779fb8fcb772",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f27fb71d-b714-417d-8746-85158b371ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabc9ca7-6445-49d9-a297-a61d23885e4d",
        "cursor": {
          "ref": "23e6d0cb-0ccb-4528-b8ca-0631db106219",
          "length": 157,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8c650005-60c6-43e5-aa9d-e493519bdf74"
        },
        "item": {
          "id": "dabc9ca7-6445-49d9-a297-a61d23885e4d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d0702334-6723-4445-a80b-242810e5a08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ef7a36-f959-472e-a1a2-c44e78d18e16",
        "cursor": {
          "ref": "ccbc780b-b245-4d76-a503-e702767c8ba6",
          "length": 157,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fcc09cda-342f-4b86-b33e-2b670c85fe1c"
        },
        "item": {
          "id": "14ef7a36-f959-472e-a1a2-c44e78d18e16",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b6cb92c5-5a85-4eaa-96a3-9b8dbef9b8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60859d0-8969-4f25-a891-df982c6b429a",
        "cursor": {
          "ref": "48a710bb-98a0-4c7e-b7d0-7cddbe554f4b",
          "length": 157,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4bace649-b3b6-4ed7-b656-fe00f0c4e693"
        },
        "item": {
          "id": "c60859d0-8969-4f25-a891-df982c6b429a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "002bdb1d-9196-4c3f-887d-97c888da2a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298627ef-a831-4470-94c8-d0ac91bd299d",
        "cursor": {
          "ref": "a08fc64e-6dd4-4f4e-9c95-f4973063ea98",
          "length": 157,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5f89323d-3bd9-4e61-a9d8-7417230da761"
        },
        "item": {
          "id": "298627ef-a831-4470-94c8-d0ac91bd299d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "95d6e9bb-5e3a-4012-92d2-f29e60642ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac86386-fc13-415e-9385-40ed176914af",
        "cursor": {
          "ref": "08eb5a9f-b1f2-4e29-9528-e3449f7cf579",
          "length": 157,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4ebbe99c-3b24-40e0-b9a6-c3d0c975b6f2"
        },
        "item": {
          "id": "aac86386-fc13-415e-9385-40ed176914af",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "21359bde-b73f-4f13-8e8e-22dbdcf33c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddf4920-c70f-4a76-9cfc-886280781d68",
        "cursor": {
          "ref": "dc222452-8825-4b2e-a805-144b4fd0a768",
          "length": 157,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "224b050a-11c4-4fd4-9472-5173f9291526"
        },
        "item": {
          "id": "1ddf4920-c70f-4a76-9cfc-886280781d68",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "deb6cf5f-d384-4359-bd6b-87eedaa18b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab40516a-a7a0-41b7-8ee1-dbcfcdb6c7b3",
        "cursor": {
          "ref": "5c98d39b-9b27-41b0-9919-0ff499cdbdaf",
          "length": 157,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5aa68cfa-0530-4a7b-a554-c0d4295e36bf"
        },
        "item": {
          "id": "ab40516a-a7a0-41b7-8ee1-dbcfcdb6c7b3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dd96d3e9-62e7-44b2-a745-0471e2a1b08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4b9566-41ff-457c-8ff4-d380f7fa4e5d",
        "cursor": {
          "ref": "bc019779-caa9-4e01-a917-512905b6530c",
          "length": 157,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fe1e8bd8-bc97-40fb-8ff0-398998bac2d2"
        },
        "item": {
          "id": "2f4b9566-41ff-457c-8ff4-d380f7fa4e5d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ac17f9e5-b49a-4244-b4b7-ae1029d9b3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f776447-96fe-4368-8c77-d886de2e752f",
        "cursor": {
          "ref": "176abd7c-beab-4214-8794-2a13ec7817a6",
          "length": 157,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4a069940-270f-49b2-858f-53ed7f617c74"
        },
        "item": {
          "id": "7f776447-96fe-4368-8c77-d886de2e752f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3ffc07ae-d423-474a-8d29-66aa1fce52a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ac2222-e75f-474b-9c5f-9d216dccbd82",
        "cursor": {
          "ref": "415c35b0-d1bb-4fa0-b8b9-81e8a6c832e6",
          "length": 157,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8b3101d5-7466-476e-ac16-bdfb6d099e7f"
        },
        "item": {
          "id": "76ac2222-e75f-474b-9c5f-9d216dccbd82",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e971d8cb-af20-4400-8ea3-079cd2d04b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7759219-fca4-4964-af9a-3f1644a5a784",
        "cursor": {
          "ref": "c73dcf62-8bba-4522-bca6-82033d0c5d09",
          "length": 157,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b9071f3a-e64c-492d-a4d6-14ebb46b16ef"
        },
        "item": {
          "id": "f7759219-fca4-4964-af9a-3f1644a5a784",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4540a0fb-0078-4aae-8496-9cc5a93ad564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2197fea-6d55-43fe-b603-3dfcadc0d10c",
        "cursor": {
          "ref": "3cc74e51-dd14-46c1-a0ba-c8faccc33c8e",
          "length": 157,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "33e0ad91-ef53-4ce0-b1e3-f72dc4d51a2f"
        },
        "item": {
          "id": "f2197fea-6d55-43fe-b603-3dfcadc0d10c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3b3c9628-3894-417e-9e3f-3c6af79a2cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcaf387-e33a-41e4-9e55-03ebd0542ad5",
        "cursor": {
          "ref": "fd2fbe11-6c0f-491e-9d74-263556ca98df",
          "length": 157,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b7a76abc-306d-4e46-9ec4-742b416a6468"
        },
        "item": {
          "id": "0bcaf387-e33a-41e4-9e55-03ebd0542ad5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "08f51324-3a57-4395-9704-d12484f4b7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7a01eb-8f9f-48c2-ab44-a7057c24c114",
        "cursor": {
          "ref": "ebdc7f2b-fd9a-464e-a02f-3a2a1316d5d0",
          "length": 157,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7a1d656d-9731-404a-97b6-45812010642d"
        },
        "item": {
          "id": "fb7a01eb-8f9f-48c2-ab44-a7057c24c114",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "930c746d-a1cf-4873-8cd6-c3ef48c0cd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d0c0f3-fea9-4627-afd3-d688f4cd3970",
        "cursor": {
          "ref": "07aaad2c-9cd6-4a7d-bc1e-e0651fb67c87",
          "length": 157,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f6965862-2d79-4602-bd4e-343f309c0324"
        },
        "item": {
          "id": "b8d0c0f3-fea9-4627-afd3-d688f4cd3970",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dcad765b-53fd-4baa-b6fe-d0f8d7a5e59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82850cbc-abcd-4d5d-9064-ab4994acadc8",
        "cursor": {
          "ref": "7695c842-8823-4c03-969e-07b2f4cf3dde",
          "length": 157,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b1ee2bef-9fe5-4b12-b9e2-d94830fef4ac"
        },
        "item": {
          "id": "82850cbc-abcd-4d5d-9064-ab4994acadc8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7e8c74fd-02b5-410f-926a-b30cfb968b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1461,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6039d5f6-7107-4d89-8a45-21293dce57e2",
        "cursor": {
          "ref": "2eef4073-cc53-45b9-a684-83c1475f8a00",
          "length": 157,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "01050003-992e-4ca1-8f58-c9b6d9de5f1a"
        },
        "item": {
          "id": "6039d5f6-7107-4d89-8a45-21293dce57e2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1af37f4d-7a22-4439-868a-f3ea305e4663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c982b20-c6e0-4bdb-b9dc-d8a9e1a7a41f",
        "cursor": {
          "ref": "0a242e15-f193-4a38-9e99-1e4528d2b316",
          "length": 157,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a34080f8-d6b6-419e-8c73-1e3dc36a5611"
        },
        "item": {
          "id": "7c982b20-c6e0-4bdb-b9dc-d8a9e1a7a41f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b978feb2-1103-48bf-97aa-65199a67e4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1557,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe3dc8-9f87-4805-9557-9ad14f543e9b",
        "cursor": {
          "ref": "436d8fd2-5262-44e1-91c1-60db2abcc9a9",
          "length": 157,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3ce7f748-552a-47be-a40e-875a03e5fcaf"
        },
        "item": {
          "id": "8cfe3dc8-9f87-4805-9557-9ad14f543e9b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8e328115-166f-48c7-a704-8f85504be530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9522e8-3ab5-4027-8e9e-0ad3e3b294c2",
        "cursor": {
          "ref": "f7a299e4-e214-494a-81cb-af50bfd13f0a",
          "length": 157,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c8f9320b-9af3-4042-8d18-ba08388f8422"
        },
        "item": {
          "id": "ee9522e8-3ab5-4027-8e9e-0ad3e3b294c2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "510b5715-c13c-4c88-96b4-3b0f19989381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89779af-4e6d-461b-a292-f7ec49382f96",
        "cursor": {
          "ref": "0698419d-f381-499a-9a02-1690fd211386",
          "length": 157,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2910bae8-4ada-4bde-b3d8-0f856bdd656b"
        },
        "item": {
          "id": "d89779af-4e6d-461b-a292-f7ec49382f96",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6d3f5be8-b4d2-46da-859a-c5b47ac643f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0750f1e-fda6-4807-a4a4-5e0d415a5be0",
        "cursor": {
          "ref": "89ff9e84-4880-4ca0-80e4-245880ab1d6e",
          "length": 157,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d79a3956-24c5-4692-bb0b-dbeb9042c147"
        },
        "item": {
          "id": "c0750f1e-fda6-4807-a4a4-5e0d415a5be0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1eb63ebb-1ee3-40de-b422-35bbe76e3956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927e1e0e-8d4f-4a25-bda6-fb415cd7963e",
        "cursor": {
          "ref": "48cde909-51b1-4ac7-b129-0fc505081d25",
          "length": 157,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "88ca39a4-0d3a-49ee-9e72-9ed74ec64e3e"
        },
        "item": {
          "id": "927e1e0e-8d4f-4a25-bda6-fb415cd7963e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "093bc7f9-9777-4a3c-816a-f2c32ed12286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d492824-f78a-4422-a308-bcc9bf9eafc9",
        "cursor": {
          "ref": "66a38838-5a45-408a-ad5d-c9cbe7506512",
          "length": 157,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "402b344b-26ef-480a-9eff-29c2baf12577"
        },
        "item": {
          "id": "0d492824-f78a-4422-a308-bcc9bf9eafc9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8b981d78-a54a-4085-b04b-9b56d707d029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7392344-6a95-46fb-bea7-72792f358644",
        "cursor": {
          "ref": "8341f604-f4ab-4170-aa4e-a6708eb7318d",
          "length": 157,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1900e1f8-d8cd-4bb6-bbb5-34eaecbecbbd"
        },
        "item": {
          "id": "d7392344-6a95-46fb-bea7-72792f358644",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "75b49d33-69e5-4586-9312-7b84822d900f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdbe32c-7799-4906-b36f-ca3462bb558c",
        "cursor": {
          "ref": "4066f567-f9f9-41d9-8404-313afe2e0921",
          "length": 157,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "16bef75c-881e-4943-a77f-b07659c194ac"
        },
        "item": {
          "id": "4bdbe32c-7799-4906-b36f-ca3462bb558c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1938ab6d-f156-4532-ad65-d370154bdf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7ab347-6e4c-47e8-b038-818ca7f277c5",
        "cursor": {
          "ref": "795c4188-411c-4205-ba03-a1f2d45e3a32",
          "length": 157,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "63600024-c498-4c0a-8167-7b2797184bb0"
        },
        "item": {
          "id": "af7ab347-6e4c-47e8-b038-818ca7f277c5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ed1100a0-d130-42e8-a649-cd50296afdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eba3800-fe92-45dd-ae2f-1de1e6e22272",
        "cursor": {
          "ref": "cae94f6d-9d03-4518-9ae2-bc42bac0b067",
          "length": 157,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "aa841013-3034-4dc1-a2c9-44e75ad7bb50"
        },
        "item": {
          "id": "8eba3800-fe92-45dd-ae2f-1de1e6e22272",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "db992d49-1f0e-4099-be2e-e74884dd783a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9416d3-d4a7-4874-a00a-5ff81ed5274f",
        "cursor": {
          "ref": "eb6076da-4c62-46ff-8a5f-0ef2f478f56b",
          "length": 157,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "362acf59-1f91-4156-8086-774fdb118fe3"
        },
        "item": {
          "id": "cb9416d3-d4a7-4874-a00a-5ff81ed5274f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f39cdde6-3579-41ee-9182-245a5250b9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519a62ae-0aea-47a9-8914-e5934398bc3e",
        "cursor": {
          "ref": "a250a28e-9dc4-4cbe-9c94-6990596e25ea",
          "length": 157,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "07c7207d-9848-4245-a1fa-a51e16ad73e5"
        },
        "item": {
          "id": "519a62ae-0aea-47a9-8914-e5934398bc3e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4d641e68-4c4f-47a9-864a-e841658dd301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cda9024-1b0d-48cc-8192-302f8804b167",
        "cursor": {
          "ref": "cf34486c-c6d0-43b8-a580-e6a8878f117f",
          "length": 157,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "748d1d59-fa98-43e3-a1a6-2ee2b359fb25"
        },
        "item": {
          "id": "3cda9024-1b0d-48cc-8192-302f8804b167",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "122e9a1f-4843-4f80-9ddf-e3af760b3b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce6df49-799f-433d-add8-3b44ec18feca",
        "cursor": {
          "ref": "e57d2d28-1c06-48d0-9c6a-fadaf8badeb0",
          "length": 157,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "30af9e93-891d-4e39-9535-d3e9743acf4c"
        },
        "item": {
          "id": "fce6df49-799f-433d-add8-3b44ec18feca",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f7e7b3a1-e901-4987-906e-5ef38c60402e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dee85d-0e41-4616-a3a6-e3d1ab59bee6",
        "cursor": {
          "ref": "4a1b6459-25ec-40ea-a3aa-7dd3d1c926e2",
          "length": 157,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9473f028-b97f-4868-8e00-eabd42ccdae3"
        },
        "item": {
          "id": "b5dee85d-0e41-4616-a3a6-e3d1ab59bee6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fd515ef4-8405-4aec-bad0-fcb1e66feedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9880837a-ed16-4919-a49e-05351f1084ae",
        "cursor": {
          "ref": "959882e1-fbaf-4290-a5dc-fa76bdf9540d",
          "length": 157,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0c46fbdf-7825-4637-a729-b189c4d2227d"
        },
        "item": {
          "id": "9880837a-ed16-4919-a49e-05351f1084ae",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "421c9b48-3932-4f56-b2ac-becdb19fd5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1134d64-fc8b-461c-a635-ff0799afb552",
        "cursor": {
          "ref": "ec2fc03b-eebd-4b70-a93d-c3a56b92a667",
          "length": 157,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "db561cff-3470-46cd-9856-7236bb5291bf"
        },
        "item": {
          "id": "a1134d64-fc8b-461c-a635-ff0799afb552",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4d374f46-661d-42df-a843-aadd976f1e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59533eaa-b42d-4c00-9eee-736811e45653",
        "cursor": {
          "ref": "cfa08f6e-ae5f-45b1-ad7c-7c82fa70b2e8",
          "length": 157,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "76c9ae67-8bef-4a90-a73a-7fac0471a9de"
        },
        "item": {
          "id": "59533eaa-b42d-4c00-9eee-736811e45653",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e659daf3-958d-42d2-ae9a-77df50e63594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c6045e-f3d9-49a3-bb07-61e32fbdf475",
        "cursor": {
          "ref": "36d2d8b5-349c-47dc-89ba-7ac4a4195a58",
          "length": 157,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "db0b643b-d812-475e-9008-fd5e8e03b66e"
        },
        "item": {
          "id": "92c6045e-f3d9-49a3-bb07-61e32fbdf475",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "28eb1b0a-e9f9-4944-9712-29b8d538da4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886c9807-1dca-4b32-9933-58280380325a",
        "cursor": {
          "ref": "fb11ccbe-f26d-437a-b368-6c7069bb6e8e",
          "length": 157,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d01afc20-77d9-4a48-a318-347d0a914f9c"
        },
        "item": {
          "id": "886c9807-1dca-4b32-9933-58280380325a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0f78ad0f-b3f1-41f8-b07b-f3e03dc082e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb334b58-fe22-47b3-acf9-3f710e791d0e",
        "cursor": {
          "ref": "51307d8f-7b27-4339-a927-e0ba95e7404c",
          "length": 157,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bf67dc83-29dd-42f5-9aec-c609be45b6eb"
        },
        "item": {
          "id": "bb334b58-fe22-47b3-acf9-3f710e791d0e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "46f344e2-7907-4876-8b5d-8b9e117b8a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071dd590-6fd1-4c6a-916b-38ed63e811c5",
        "cursor": {
          "ref": "7ea526be-cd8c-41a5-a0ee-b797b4136d5a",
          "length": 157,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8cbf1733-c188-428b-819f-42174ab977ac"
        },
        "item": {
          "id": "071dd590-6fd1-4c6a-916b-38ed63e811c5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5554ce82-f961-410c-8049-0abaebbf337d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28471fb-ab32-414f-b9e0-98dea02ddcd5",
        "cursor": {
          "ref": "01f2716b-8c3c-4896-b9b1-c13ea790fae9",
          "length": 157,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dc1a8ead-c4a6-41e9-a240-607eae3d6ad4"
        },
        "item": {
          "id": "e28471fb-ab32-414f-b9e0-98dea02ddcd5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2130dd83-15d3-4d50-b816-81eb195566be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9772883-6732-4ab5-830b-2bbe316497dd",
        "cursor": {
          "ref": "c4d3893f-0c4b-4771-b3f4-c2edfe4558b4",
          "length": 157,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "353b8058-7bb9-4afa-b218-45a217f41bbc"
        },
        "item": {
          "id": "d9772883-6732-4ab5-830b-2bbe316497dd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ad4b1367-97e9-4cc0-8c2d-9f582227d272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a17b473-8b8b-46be-8b46-a4d1a567d95e",
        "cursor": {
          "ref": "d6862d36-bc14-4056-aff6-59738eb65f78",
          "length": 157,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "92d48323-c2d4-49f1-89f0-92baeebc5b79"
        },
        "item": {
          "id": "9a17b473-8b8b-46be-8b46-a4d1a567d95e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4151892c-c39b-489b-a4b4-dd78778353be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0320cf42-d09e-47c1-bbe1-a9edb83c4feb",
        "cursor": {
          "ref": "c7cc878a-7b42-42e3-ab78-c2b959d0f686",
          "length": 157,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c53ba060-e63a-4c05-9fb2-cd42c492c156"
        },
        "item": {
          "id": "0320cf42-d09e-47c1-bbe1-a9edb83c4feb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cb17d627-8331-4e75-9098-81f45f4e318c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37699d9-ece4-46a6-bb44-3b62e3110589",
        "cursor": {
          "ref": "428f1aaa-c07e-48ca-aecf-a77dbf0d93e1",
          "length": 157,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "01bb6259-f9ec-4e62-a428-6e88a638a7ad"
        },
        "item": {
          "id": "d37699d9-ece4-46a6-bb44-3b62e3110589",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "970a6eb2-8078-4292-88cf-8b971be3654e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4791a552-32c3-48cc-a8b4-384815e9b6f6",
        "cursor": {
          "ref": "93df8d34-36a3-4ffd-86aa-a1e700512094",
          "length": 157,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cea3e2c9-e8b0-4e1b-9e60-3b7de1eb41a9"
        },
        "item": {
          "id": "4791a552-32c3-48cc-a8b4-384815e9b6f6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b2eb0754-4120-46cc-bf83-b29900b47971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de44c37-555c-4133-b1fd-52c070fd03f3",
        "cursor": {
          "ref": "684f96af-9987-473d-a25a-9726c79ce042",
          "length": 157,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0c3ab927-2cbb-4e3d-a41f-43fb36d28db0"
        },
        "item": {
          "id": "8de44c37-555c-4133-b1fd-52c070fd03f3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9b44b0fa-f60e-4e4b-914c-63275971d3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8684bb34-bd7c-4f4b-b32a-ce8bbb538d78",
        "cursor": {
          "ref": "291fe588-828f-471f-a5e8-3b13e9f27d2a",
          "length": 157,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8a9b05f1-55dd-44c3-83da-384fdf1355a0"
        },
        "item": {
          "id": "8684bb34-bd7c-4f4b-b32a-ce8bbb538d78",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8e4d5a56-af02-468c-ab72-3160be1e24d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f710c42-0726-4c7d-8c47-53dae7b3b313",
        "cursor": {
          "ref": "d5929d4c-d4c8-484f-be5c-e80fbda9f610",
          "length": 157,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8e5c2b4d-c5a7-4226-b2b3-ce7ad6c7b8f2"
        },
        "item": {
          "id": "2f710c42-0726-4c7d-8c47-53dae7b3b313",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6d75e014-d0ef-41c0-a135-5f8d9cf90bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6170119b-4a4a-40e0-9a32-1b210c014cd8",
        "cursor": {
          "ref": "84501999-3897-403d-9227-66169945d3c6",
          "length": 157,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cf81d83e-c0e0-4775-bfb0-4694d6d0cdd8"
        },
        "item": {
          "id": "6170119b-4a4a-40e0-9a32-1b210c014cd8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d26dadd5-cec4-4d0b-9878-b91fbee0fdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6465d35e-790d-461c-9bc5-113aa49c2a04",
        "cursor": {
          "ref": "96c8d46e-3ff2-4567-b7ca-2d2efade1931",
          "length": 157,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8a9cc278-1bc2-4de3-a087-ed50cfa5cc78"
        },
        "item": {
          "id": "6465d35e-790d-461c-9bc5-113aa49c2a04",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0b423da3-fa1d-4676-9811-e7ad39cc0ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80225f30-0506-414a-bcfa-171b91072d3f",
        "cursor": {
          "ref": "bedce547-d3b4-48b5-9a42-5e1cc058d2bd",
          "length": 157,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5dfa540c-7915-46e0-be65-6c1dd6029503"
        },
        "item": {
          "id": "80225f30-0506-414a-bcfa-171b91072d3f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "307bb2e8-33d7-4489-ad7b-6915de708246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f9a047-4905-4d76-b4e5-e325ec2b336e",
        "cursor": {
          "ref": "2f28ded6-9532-4279-8670-c6fd030454cd",
          "length": 157,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0fce0b7b-8542-4edb-88e1-101c9ce8c6e9"
        },
        "item": {
          "id": "25f9a047-4905-4d76-b4e5-e325ec2b336e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "102aef1d-aeb9-46c6-add6-dc0b5d529c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebda5d7-d708-4245-9f99-729f97056bf2",
        "cursor": {
          "ref": "ca39044b-88d3-456c-8d44-8dc620183320",
          "length": 157,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d2a39001-a9ee-4353-81d1-afe8a7e00f1e"
        },
        "item": {
          "id": "2ebda5d7-d708-4245-9f99-729f97056bf2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bbe0da08-45e7-4f63-bbf6-d9f124614aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e603a7a8-5439-48d0-9159-dc25ed127f07",
        "cursor": {
          "ref": "67b4edbd-4369-4544-8b1a-8eeb785535da",
          "length": 157,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4ce21e76-a055-484b-bdfc-8b6979bfef2a"
        },
        "item": {
          "id": "e603a7a8-5439-48d0-9159-dc25ed127f07",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "087f8045-12ba-4406-bf27-8f932c4ef198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d4d141-8831-418a-8945-c40621d3e3c8",
        "cursor": {
          "ref": "3a60cac7-7993-43d3-a995-4db4429e1825",
          "length": 157,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d447f2e7-5031-43b6-bbe3-f4e024d37683"
        },
        "item": {
          "id": "09d4d141-8831-418a-8945-c40621d3e3c8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "08294c6b-37c4-4947-9eb9-42c9674a2937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122a763f-4f5e-4713-abae-af4fdeaf9b87",
        "cursor": {
          "ref": "6d5a6d1d-e093-479b-8ded-275bd07a4672",
          "length": 157,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "316b2c1b-31a3-421d-a49f-398ffeb9b7b0"
        },
        "item": {
          "id": "122a763f-4f5e-4713-abae-af4fdeaf9b87",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8b683367-106a-46a6-a3df-7e7a2027ef19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e644584-f5cb-45ae-af2d-6da544093e20",
        "cursor": {
          "ref": "9c8a0ecb-7f7b-474a-ad5a-c387c6f24c06",
          "length": 157,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a9e01370-c8e8-41d2-a748-16ec84d70a4b"
        },
        "item": {
          "id": "8e644584-f5cb-45ae-af2d-6da544093e20",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cfc99d19-2a93-44fa-add1-c8d80efef93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b23842-570e-49bb-8aed-a575bc2316cf",
        "cursor": {
          "ref": "ab90e394-ab6b-40f4-b12c-5e441356e5b4",
          "length": 157,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "49c0c0c0-e4b0-4b58-abd7-20f2717defbc"
        },
        "item": {
          "id": "a7b23842-570e-49bb-8aed-a575bc2316cf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "98b12700-a029-4a2e-a86c-89fa28e47241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa199b68-162e-45d8-97c4-c907b8cf750b",
        "cursor": {
          "ref": "fc00c084-1f30-4d98-ab96-40cc10e42fca",
          "length": 157,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e2143b28-11dd-4879-83da-33e6dc5e0fc8"
        },
        "item": {
          "id": "fa199b68-162e-45d8-97c4-c907b8cf750b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "89dc0ffd-0e21-4862-99fc-3ac62f928019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa78851c-62d5-4020-881c-236464f5ef79",
        "cursor": {
          "ref": "987d7409-d652-49a1-8253-9a1ebd8b725e",
          "length": 157,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b5fce7c6-4534-449b-b25c-8efb372fbe49"
        },
        "item": {
          "id": "fa78851c-62d5-4020-881c-236464f5ef79",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8f178963-9e24-4b26-8826-1a2088b5d870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da47dd1-b441-4cd6-b8b2-cebc04369cf0",
        "cursor": {
          "ref": "134a65ad-86e8-401d-b51b-1aeee377e599",
          "length": 157,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e2a36ed0-1f94-47dd-9ffb-8e52dfa04077"
        },
        "item": {
          "id": "0da47dd1-b441-4cd6-b8b2-cebc04369cf0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4b10c81a-abe5-4015-a0d4-bb61011228de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621bb3cb-1c11-45b6-8ee5-d0fc0fb2f193",
        "cursor": {
          "ref": "ee86d959-048a-44f9-8b9c-d707f1fa7b1c",
          "length": 157,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8d925314-e358-4b8c-9d7d-75b1edc171e8"
        },
        "item": {
          "id": "621bb3cb-1c11-45b6-8ee5-d0fc0fb2f193",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d070ac21-c5cd-44d1-a460-a957b07d0886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a800c937-7bd5-4eb0-a5c0-1205cbbcffbb",
        "cursor": {
          "ref": "da2342b3-84fe-4a39-b813-9aa41f18f906",
          "length": 157,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "77c9a3bf-2fdf-4bc3-a0cc-a72578820398"
        },
        "item": {
          "id": "a800c937-7bd5-4eb0-a5c0-1205cbbcffbb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2540b2d5-4560-4765-a6ee-08ff33684a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ca3664-d769-467d-9987-57fd5a760b6a",
        "cursor": {
          "ref": "04245bb2-2b56-493e-a123-b33e81da4bc7",
          "length": 157,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "43157865-9c9e-4ce5-b33a-ea455a11ddbd"
        },
        "item": {
          "id": "13ca3664-d769-467d-9987-57fd5a760b6a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f9848974-09f7-4708-8b3d-3216e19e5e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2fa2bd-1c39-4a05-9402-0cbdf5a11989",
        "cursor": {
          "ref": "863fd309-4660-4894-b5d9-aefebcbe5e86",
          "length": 157,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "215455a8-d9ad-44cd-91b5-a8bb24a03924"
        },
        "item": {
          "id": "0e2fa2bd-1c39-4a05-9402-0cbdf5a11989",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c8848b42-cb25-46f4-a18e-3578e44119a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645d1613-7889-4a12-ba16-37515949357d",
        "cursor": {
          "ref": "986c9054-7d8f-4def-88e8-55c8acd7a683",
          "length": 157,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b2c78101-983a-42cd-aaa7-27bce94ae7c2"
        },
        "item": {
          "id": "645d1613-7889-4a12-ba16-37515949357d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "13388e18-73ff-4623-b21f-6d71821bcbf6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc566e80-1f4b-449a-875b-e7f49ed6e413",
        "cursor": {
          "ref": "a471b989-e425-4602-86bf-3f77e9a5a286",
          "length": 157,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6a447640-04eb-4ae5-81a8-49f546d3a21b"
        },
        "item": {
          "id": "bc566e80-1f4b-449a-875b-e7f49ed6e413",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "5f48b847-e004-4791-8446-71e7a508b167",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 78,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ef4e61-11b2-4756-bd38-62c2dd2b4756",
        "cursor": {
          "ref": "8017aa83-fd0f-4382-a0b6-15db055b6428",
          "length": 157,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2b097795-ba2d-4b74-a167-558d14f4b0c4"
        },
        "item": {
          "id": "e4ef4e61-11b2-4756-bd38-62c2dd2b4756",
          "name": "credentials_verify"
        },
        "response": {
          "id": "42ffe280-dfa4-449e-8f7b-a432042413be",
          "status": "OK",
          "code": 200,
          "responseTime": 2134,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad2de74-1707-4418-848b-4182f8056009",
        "cursor": {
          "ref": "a7975492-f618-4f3e-9464-251a3b8fb357",
          "length": 157,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "962d084e-79b8-4c31-95f3-999f5d351cc9"
        },
        "item": {
          "id": "9ad2de74-1707-4418-848b-4182f8056009",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "b5024948-a122-4376-a653-4a1c22e48797",
          "status": "OK",
          "code": 200,
          "responseTime": 1362,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373a32a6-1a06-4072-a81a-bb479ed42f4d",
        "cursor": {
          "ref": "9c047682-8f2c-43dd-9c4f-7b9ea6fa0692",
          "length": 157,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b62d0168-8060-4d40-8bfe-7fcf382d6f4f"
        },
        "item": {
          "id": "373a32a6-1a06-4072-a81a-bb479ed42f4d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8eb7718c-b61b-4f6c-beb4-1eeddd983864",
          "status": "OK",
          "code": 200,
          "responseTime": 602,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a3dee3-fbc9-478c-9361-0ae960be6141",
        "cursor": {
          "ref": "93675b30-437c-452a-bd44-30a221dc0f0a",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "339b0cf2-141f-4d9f-89bb-3155657d3c09"
        },
        "item": {
          "id": "c6a3dee3-fbc9-478c-9361-0ae960be6141",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f194ce32-e8a9-4546-a9bb-e160a0908ab0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a3dee3-fbc9-478c-9361-0ae960be6141",
        "cursor": {
          "ref": "93675b30-437c-452a-bd44-30a221dc0f0a",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "339b0cf2-141f-4d9f-89bb-3155657d3c09"
        },
        "item": {
          "id": "c6a3dee3-fbc9-478c-9361-0ae960be6141",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f194ce32-e8a9-4546-a9bb-e160a0908ab0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a3dee3-fbc9-478c-9361-0ae960be6141",
        "cursor": {
          "ref": "93675b30-437c-452a-bd44-30a221dc0f0a",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "339b0cf2-141f-4d9f-89bb-3155657d3c09"
        },
        "item": {
          "id": "c6a3dee3-fbc9-478c-9361-0ae960be6141",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f194ce32-e8a9-4546-a9bb-e160a0908ab0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50897d51-18f6-42d6-a53a-4146035bf8bb",
        "cursor": {
          "ref": "ec868b7f-e648-4317-87e7-61a73adf0f1d",
          "length": 157,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "848a4011-4ccf-4a9c-b183-3ab1b6cead19"
        },
        "item": {
          "id": "50897d51-18f6-42d6-a53a-4146035bf8bb",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "693c9890-d0f2-4eb1-af95-05046b9421f7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 87,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55381a8e-347c-4dc8-9089-0fc63cde2402",
        "cursor": {
          "ref": "76510097-1794-4a2c-9584-85c5b9dc4aaf",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "770e3ae7-240d-4cd8-b0f4-32bfdd57518c"
        },
        "item": {
          "id": "55381a8e-347c-4dc8-9089-0fc63cde2402",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c64a04d9-ab7f-4e5b-bc6f-36f008349abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "55381a8e-347c-4dc8-9089-0fc63cde2402",
        "cursor": {
          "ref": "76510097-1794-4a2c-9584-85c5b9dc4aaf",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "770e3ae7-240d-4cd8-b0f4-32bfdd57518c"
        },
        "item": {
          "id": "55381a8e-347c-4dc8-9089-0fc63cde2402",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c64a04d9-ab7f-4e5b-bc6f-36f008349abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "54b3eeac-d051-4c9f-89e2-8a4622aa00fa",
        "cursor": {
          "ref": "f8423d06-77fe-4c82-a071-40c83b413464",
          "length": 157,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b3b5f1ae-b593-4c5e-abb5-df7d6bbeb4ce"
        },
        "item": {
          "id": "54b3eeac-d051-4c9f-89e2-8a4622aa00fa",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "4317c93e-c258-49ab-8c84-77b215ee8472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "45216cb3-b2fe-4570-b8a2-84c2807ce65c",
        "cursor": {
          "ref": "fc822967-9166-4086-9c14-e3e3566116a4",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8d9c2dc8-f015-48d0-bc11-46ba286ebb0e"
        },
        "item": {
          "id": "45216cb3-b2fe-4570-b8a2-84c2807ce65c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e39ebadc-aa23-4430-8f65-21fbeb9b37b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45216cb3-b2fe-4570-b8a2-84c2807ce65c",
        "cursor": {
          "ref": "fc822967-9166-4086-9c14-e3e3566116a4",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8d9c2dc8-f015-48d0-bc11-46ba286ebb0e"
        },
        "item": {
          "id": "45216cb3-b2fe-4570-b8a2-84c2807ce65c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e39ebadc-aa23-4430-8f65-21fbeb9b37b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145f556f-5db5-479b-8782-09ecf8b527c1",
        "cursor": {
          "ref": "9b23199d-d249-4b8c-a0a4-a6331c0f4537",
          "length": 157,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "16ebe955-8d3c-4fdb-a6d6-6aff8e15f77f"
        },
        "item": {
          "id": "145f556f-5db5-479b-8782-09ecf8b527c1",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "49df14e3-0de1-4fe3-9b26-b130d570731f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 86,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}