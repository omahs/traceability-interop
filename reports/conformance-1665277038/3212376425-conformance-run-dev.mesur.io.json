{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "893713a7-04af-421a-af72-c1317b640767",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ad347d8d-88e4-47bf-a1a7-ebda69a6794d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ebb390e6-148d-47c6-997a-6417ee44a7f2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5913cc94-6ca8-40ae-87e4-1cea46f6af5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "875673b2-057c-4461-ba1d-74385a3f63f4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed522036-5990-4a2a-a15b-ce0b77d2261a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e5e73d4-175c-43cf-ab8a-2fb38cb02d48"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2572277b-e99d-446b-a018-d7856f49dec8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44ea9a0e-7ca6-4d69-a231-03d0e5788044"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1910292-1c4e-4a62-a600-5c55120ecca4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "28e8a751-b10c-42ae-860b-0565b8b3c9ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b89d6ee-8855-4196-8bb0-5ee44946ed42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f13dfbf0-7be5-4a6b-bfef-f77d6e16e283"
            }
          }
        ]
      },
      {
        "id": "a665c5bd-297b-48c6-be3a-8a0f6c848e13",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7e17aabc-f497-45f9-8d86-2b1fe95d62d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ef0dcb5-80a6-433d-b070-4bf03556fb63",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "88d75a1d-c9bc-42f1-b41a-cef7c4a67711",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587d60e6-62af-4cab-b6a7-718c6ee48783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7578fecc-71fb-4832-b361-9c2df8bd72ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e137399-45c3-4167-8331-e7ebb0d9aa29",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb796723-0df9-461f-aba3-bae45136b8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be1d7343-99dd-4812-8fad-44ac36c74adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b327a33-51f7-4c61-acf3-0c4cf9fa400a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307834ec-195e-48f0-a4d5-74a45e211f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ab256ba-a068-4f6d-b75c-a5be9a28fc63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa3cb834-4d7b-4f8f-9bf0-9a21586941fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d7d19b0-6b4d-4293-8fb3-59375e8d467f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0f2a5a-1348-4e65-b051-113ee818b5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f537c773-f392-4e29-9d5c-3d38e001206f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ba18ee-d623-4496-9076-19c6db2bc505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270b3773-a27e-4393-b3d5-91e5fc2f04ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca99a0f4-aaa9-427b-b241-90a3a1813a62",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c905af4-9647-459e-befe-80b3974b73f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1de49a87-9076-4ec3-8a70-17b52b8a04d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e07e184-0c49-47e5-b6c1-b7667852f052",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "01d79d38-bb95-4e6b-a98b-b66dbb1e15e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b88e1ccf-0589-4de2-ba35-a573a12aedb3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f426f59-27da-4c28-b487-fabfa9efd9b6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48f782c0-6f52-4bf3-974c-60f247aaf9a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4d98f1db-9d33-44db-950a-7dde15a0e799"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a81e76d1-4828-43d2-8a02-ca240d257f67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e2e03a5a-3534-4f6a-b03a-f8c50944c3a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d430d80-e36a-459c-b2f3-59bb119b0fb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b299b80f-c904-48ff-a514-c6393f310c80"
            }
          }
        ]
      },
      {
        "id": "02c756bb-6983-4990-b009-897c82bb8a13",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "946c1a61-663f-463f-94dc-29418dca6d81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4cbfc8b0-b557-4aab-bda8-b5f164aa20a3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "baa9ef0e-5d28-480e-a24a-f3c520001c95",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b5949c-b410-4239-b275-548962684a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b09b4f-7472-4cc0-b83b-867dac6348c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e798b875-704d-4114-9679-64dbcf1c7fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1a2886-6e2f-4c17-9eb8-6d75d561aa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c666fd-90b2-4654-b581-feaaeab2b5cd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c32dd7-09c0-438f-ac14-639a6cc2c610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808c864e-d50f-4ab9-badf-44a0e7428856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c934fe9-3e31-4d2b-bbae-2183b58a9b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a50514a1-7242-4165-9765-672c7f9dbe94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791c4fdc-2785-4da0-a585-318d527f0fce",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7165f8aa-0f16-43c0-b229-704097da176e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868a6f72-00dd-4988-a152-d4d9c69af2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab73869d-9583-46b5-bf3c-8511b2d37f99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5331d5b-e7cc-4442-b32e-d4effae9b879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d2de53-7f9e-4fd5-bb10-e8594236906d",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f922cd-0a57-4ce1-bce4-b29256b6332c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6485ea-8ece-404f-b143-1c6777d9c0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a7fa7a-cb44-4ed6-918c-fb7e30b26709",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a625dbea-7a4f-4c9b-b505-3180f3499742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93265a71-d712-4b8a-a80a-22ee834b9a20",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9785e18-25a7-4765-a46c-45177d993bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbad6ba-383d-4d91-a8a7-e077d1a96108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246c29ce-d439-4dad-9c82-2cc20efab163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a915e640-3ed0-479c-89af-b6132cf24ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982fcfa3-295b-4a20-9345-d991f77114b0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001133b5-6b29-42e3-b765-b97b67ffa93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1feb36-edcb-426f-aaad-48afb71869bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4d3051-ce87-4b7b-97e1-ea295f3baf2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ba5a100-c7d3-4cee-b43a-879f60063d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ad045f-948c-49b3-9140-dea37bb66dfa",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5398623e-dfef-41f8-964a-e0eb5e456964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b965cb8f-74e1-404f-ab01-a31323def5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad9c5ee-09c5-4892-b9b2-0ef7d1f45958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c884f09-0e60-48d6-bd3f-4621351d68e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb01394a-b49f-45e8-a799-d3c7943a283a",
                    "name": "credentials_issue:credential.type.members:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a68b8cf-6b9e-4b88-87bf-cf716c897039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177d7a5b-4c9f-4614-8394-4d60fb742df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d508b17-26ba-4c30-9887-abc37fd060a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain at least one element",
                            "rawBody.credential.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13553fe2-2d05-46b1-b8ba-7ff89909cc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80e0eeb-15a9-425f-b731-16b947cbe8ba",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d63ef8-e33d-4540-832b-138f598e5330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5ab58c-b402-4518-90a8-6c01f3e78ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7991acc2-7a89-40ff-8bdb-09014e4ed7db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a3a15bb-0e51-4ac1-b9c8-ff069220c459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1467b0-ebae-4fe4-9b59-62bea339066c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8153269c-d2ea-48c1-8365-c94d22774d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2933f663-fac1-445f-9192-5aebdc7c7658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1df5d21-055b-44de-b09a-a897f84217ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a53474-fd75-4544-9786-fa68a96b6300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae76e3a-3c0f-47f0-90c4-e188209cc0bf",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc31c91-20f3-4cc4-b874-34f14b6f90b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc5ca14-dd24-49c0-bc08-43e1552ed3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea6482b-ab11-4f0d-9510-9089faeb95e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ed8267-3384-47f3-babf-093edf292e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da9998f-2936-4fd3-a668-bee94c0aa588",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cbd8de-7e27-4a98-9b0b-2e51a562d4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5664ea1b-25af-4685-96b1-5f515d525def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dbf232-7c15-4226-93ea-3b3af381d099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "f205b624-22e7-48cf-98a1-4b6e4c13cabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38deebc-cb2c-456a-89e3-7ee52be41adb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65d900f-f9dd-41da-aa5d-82d8fd78e3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5668b2a6-c8b2-4c92-88f8-2ecf337b5a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d845fe06-1e7d-42e0-9530-8debed3ef380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "020f6716-f3fd-4dd5-968f-0bd30a468219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fcc768-889a-459b-817b-2a9bc885c7b2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b27968-8e31-4432-b439-450b4bc93a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2dd0730-c346-4048-8fed-2e088536cd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b712bd97-f05b-47e2-8790-d88de24e0bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf94b70-8ca4-4345-81fb-16dc7f320390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7fdcdc-f5bf-48bd-9302-6c641b3b2803",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4981c6ee-c1fb-42fd-a9dd-38c3457fe158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f00415-ce26-48e9-97c9-bfd51a32adb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ccbf88-87e6-4316-b50b-d03d3d96d1a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca16fbe-9c2b-438b-ab12-de41f0d34388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fcd505-a902-4978-9869-456dab8582b5",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933fb915-effb-4fc2-9775-4717cfff0970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7737e4-0680-4444-9c9a-8a472ffb464c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13002137-3544-4092-a9e5-637ac5e880f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "da16c377-2e38-47dd-b7dd-25af752b10e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12924291-759d-4ec7-b4d9-aa893cec331a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdeda0cf-f6bb-4d12-8ca8-6a31c46b6792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5db9267-b8d7-4176-b9bd-2b87b613b8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385c7628-ca72-42f1-bbc3-f454195d9a1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "5e7fd624-2838-4949-8910-51ce8a5b02cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f2819e-8027-4f9b-9942-296667fe9620",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acc1787-e3a4-4125-8c8f-8ff1c9bb7961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "622a327b-21ad-4475-8ba1-0af42dd82698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ffc798-933c-4481-bc57-3645260698c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3db0c7c-6739-4795-bd5d-2369e1655204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e881cf6-7063-4a21-b527-785f8cb66975",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95b3663-08d6-40dc-a0a3-94cb053e7358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb82b2c1-337e-43db-aa5b-d4fb8bbf79a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4b1c43-c654-4db0-8c14-64394d459642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f8779c-35e6-4bd0-b547-ebfdf69c055f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48648ab4-fc65-4a88-ab37-55355997eaf6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc69077-3a66-4e8b-9d61-cfd5e68ca6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40354fba-e23f-4eae-b995-3b06105366dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fc1f2a-095d-4e62-a9c7-460e4933a6a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4319e098-0ab6-41b7-b8a0-cec55ce4e904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fa9812-8821-42a1-a643-eb799363bd83",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7726a24e-57f5-4531-8890-cf9f3027e333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609a5bae-0e17-40e1-9737-553588c2231c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce3641e-72c8-41ab-a6ae-be5ce98ef9cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a61401b-12fd-4f61-a411-9dc2af33aba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e21d4b-baff-41ed-9b54-74aa5d4f02e6",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ea6cf9-f7f7-4c38-b6c4-5e4e55eedf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed705d0-715c-4657-9acf-383c66d9f66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a7cdc4-c8cb-4c29-9692-2199e6635347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80fa9238-1499-4e75-be54-32d6ea6f75c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55a7571-c7c7-4ce3-befa-4909d9e02626",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc9054e-2569-4db3-a574-830b2e779685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d699f037-dd7b-43fe-bafc-2617549c6276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f720ccc4-15d4-4002-9145-4dd3575e7b85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd39d7ee-9239-4eb4-9b95-86528f6153fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba64bb78-287b-489b-b0ab-7bfb1d348082",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9255a9-af8f-46f0-a1a1-6a11e7cd9121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fe62b8-24dc-40df-a4ac-3184eea698f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e44bd26-5aa9-4fd9-84ee-70e42f5efb74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b90b4b7c-d6cb-4d59-8b94-dcbed10db6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b24492-2da5-437b-83cf-75b74a609c48",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfbec47-ffa3-49c7-9207-154ea5bd32c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073c5079-81f5-4762-baf4-84c2258b3669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea275b6-d71e-405e-922b-cd4cf93ec5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37e7499-6369-4b2f-b1eb-4c2e549477aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4043213-71d4-43ed-8346-bf9249de682d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be666fec-7c55-400d-8321-7a04ba4a83db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d26e239-88c9-49f7-9330-8dfddf14edf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbab841e-edc2-4358-aa02-7ed62905aaec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa9c991-aeda-4ce7-81da-821a27a25bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d8171c-4d95-4102-b852-cafa3ef112fc",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fed6110-c6e5-4b7c-a3c3-c41e0af5761d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9efe4b-77b5-4697-93f9-3ed202894d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f725ddf-8493-4d88-b177-82b5af22b7d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5edc64da-77c9-43e1-a599-cdae216b54c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def0310f-d7a6-45e6-91fb-3b558f289665",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab301f75-f8e4-4a2d-9a2f-d26167dc239b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc460e3-4006-47d9-9497-237c3d2b9dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18bdc28-d9c4-4987-b820-6a93d632ce44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfee6d01-f901-44ce-83aa-cd3b829edfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa8f1c0-68ae-449d-9295-0909141c093e",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b23a53c-d559-47d8-95f3-4b865402f6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795273db-59b6-4400-ac26-99e182fd40da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905392f7-af78-4cfc-b28f-d18bbfe3ca03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf78446-ce69-4b80-ad78-acd5ce257344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07499553-0b77-4dac-ba07-5774387bdae7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fde3965-3bfa-4bbf-a9e4-20418bcb45c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4582c08d-0fc1-43e1-aa3f-41818bd0c57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb89920-8533-4f8b-9be8-2347c234335e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must contain \"type\" when present",
                            "rawBody.options.credentialStatus = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8ea6f06-e560-4b36-a55e-008ab8ff06a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f315598c-fcc1-4a4a-a712-91dc876e99d5",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a5829b-e63c-4a1b-8c9e-cd8f5a718eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6a4a7a-a41a-41dd-9559-c3c49e2b207d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46896d1f-9ba1-471e-b9d5-c7b0b7811117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "242b3bde-a196-43fa-9c2a-58b670473929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcc3ad4-0388-4a8f-aa34-c5d5b4951427",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5fbc5b-7105-4a88-b8b2-cd1e8d5ab39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "382f3616-db03-4e0a-96fc-b709bd6aafe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416e2ecf-5ea3-4081-91ea-c613420b200a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8702d78-2f62-48c1-b08d-fcb23c8f1e08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f4301df1-ebd8-4183-87d9-6eaa683ef09b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0f2a722-1a52-4df6-943a-b1cc449d2146",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3518ca-c509-4a9b-9145-75af493c6636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7870651-5321-4471-8e7d-818936c1fcac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed6c96c-7519-49ea-84c5-f39d27974a9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "7c149a7c-91b6-44be-ad46-a84e20c7d6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb544a1-dbdf-489b-a91a-07ae481a0e66",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d82754-1b0b-41de-9e49-881434e0981b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bd60731-dc4d-4866-a77b-99ca732e151e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe943bf-c8a0-40b6-b870-892b7a84ffa5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "1042f4b1-f5f9-4352-939e-db0d52cc71e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c7c051c-36c7-483e-82a4-bb16f1fe8670",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "baade9f0-e955-47c6-8009-e56fa51e64a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "daa6322f-df84-47b8-8804-3948cda93c3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cac20a11-4f2f-4d3d-ae70-ef2c58de7273"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d6ea0cc-6a71-45dc-a21b-19d1fc317060",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f48b83ab-116c-4a7c-b184-b46c31f7d69c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "442747c1-18bb-451c-ae10-482741ac1694",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ac83096-ef81-4fe8-b6bb-b3438dff40af"
                }
              }
            ]
          },
          {
            "id": "6c6da4ce-74dd-441d-9b02-770c8ecd1b60",
            "name": "Positive Testing",
            "item": [
              {
                "id": "104aab7b-76e3-4961-a149-1858f81d78b5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1ec45ee-fc85-4dd5-951f-e7b1f6111173",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55f1457c-b27e-40c5-b4bc-8a97979a4bc2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5550726d-b8e0-4b8a-9f23-680d7c120e79",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "30b9019b-382a-4fb5-81ac-aaf7e2b1745c"
                    }
                  }
                ]
              },
              {
                "id": "e18f8ddc-04e3-46a6-81e6-f1b127a9769b",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd121dfb-83a8-4a6a-9f8c-51b91a86f5cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d57a95c6-6b91-4837-b893-9df7b20f5ada"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c819dad2-3c6d-4e77-b9f5-e30c9801e821",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "9ab36e1a-2731-47ed-8aef-cc62ae914bde"
                    }
                  }
                ]
              },
              {
                "id": "3d9b6044-0277-47dd-b134-2d8de17b7745",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffd579b1-b0ec-4398-a940-52f09872bf0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "311f704e-2242-4b5c-b328-278bb85d3a46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e61bf163-9b46-4d76-8e24-94fa133da5e8",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "908a01c2-5b21-489e-b74b-938409fde4dd"
                    }
                  }
                ]
              },
              {
                "id": "a930697c-bdd7-4d2a-80ca-8c22146d3dfa",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73dabd48-1bfb-4712-bbe6-dd2cc29dd777",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bb7da8b-fd9c-4c0f-bab7-bde2f8f1ef6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d57a449d-b8e4-4234-a234-f01326ea39ab",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "bb6148f8-e866-4321-b649-bf8a76b242bc"
                    }
                  }
                ]
              },
              {
                "id": "f263409f-f7cf-464d-ba9e-761a7cc0cb22",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90abb309-ee33-4c1c-a137-440b23b3b8b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39bf74cc-c919-45fd-af38-af80fddf68ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b2c2b00-dba2-4a94-9c17-f99a6da338ed",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "b039c9c3-a115-4532-9374-6666b09d8f63"
                    }
                  }
                ]
              },
              {
                "id": "37ab7b6f-bb7a-4129-aff8-286d1dfb3901",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "106073a5-6f1e-4ebb-ae98-0dbc737e60b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5981495c-1c39-46c5-9ea0-72344dc22974"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee1ec0e0-9bfd-4ea4-827c-fc7775486f4e",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "5e1a536c-5062-4b9d-9d4a-bced3130bcaa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "45159a08-49c8-4ede-ba9b-7542eb286550",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8436abb4-b9db-4886-bbce-0d3200dec247"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b7169829-1700-49b9-b6dd-9c5ebbc5f00a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed0db46c-d39f-4346-ab50-1e0010857f02"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a914a6dd-524a-4cac-8ecb-1caf192d8852",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{ORGANIZATION_DID_WEB}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "2a8cf8dd-7c1f-4310-bbdb-a825066f810d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ac0b1d1-f7c2-44f3-bfc9-9dcb9bad2904",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c648feed-3f53-411c-b888-6f9e96ea244a"
            }
          }
        ]
      },
      {
        "id": "ce5aec63-0287-4f1b-a2b8-38c3c8fe9012",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5bab56fc-9f42-4686-8382-c5c79a611498",
            "name": "Negative Testing",
            "item": [
              {
                "id": "349edcdb-1dad-4bdf-b497-df70ebcd769e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76c34bbc-73a4-46c8-9018-f4298555f519",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce33b91-4060-4762-a3fd-078353323739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c216828f-0f01-426f-9a83-1902499a5901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39c5589-d8d4-4c53-8cdc-819d7a682992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "395753f3-5221-4aa4-891f-144fbf16f916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1970d840-dbb9-47ec-99ed-0a13ed7d5d6d",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf21d7b0-f26e-46df-bdf4-972f17f23e7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ece34b7a-07c0-4167-a129-d5afdb90a0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc60447-99a7-4f5b-899a-00fd49297543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74aa851a-5cea-45af-bdcc-4a50a1f3a40f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc77559f-4e9a-4a56-9869-db652cd9462f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "261a3ad3-e6a0-4ed9-b583-61d0a106abc4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c627ad28-4bf6-450b-8af7-313521f942da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e90acd5e-b46e-4dd8-8f0c-ed7c0e01daff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6237a311-5167-4ed7-9b6b-6b567be23e39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "eea0b254-3ef2-4dc6-a83c-8a1e8b7ab46d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e7d5b50-1902-415b-b7a5-8074522ef9f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c655dba-2263-460a-b1a6-77d6decc5e9d"
            }
          }
        ]
      },
      {
        "id": "61df81cd-9dfb-4215-99ca-7e96de2e6898",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "50a44901-68ae-42a3-af98-5993e4a3f7c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b677303d-6449-4e28-8007-6dda4a19ebf8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d6c7eea-8114-41ab-bef6-ffdf1578a34f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ae741a-7ed4-413e-9eef-e22127baaa7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dedbbf1-62e3-4e08-8214-e0891f005d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe6670e-0072-4245-95f0-cf502d1d1322",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660b4ba7-cf36-4ba6-964f-4cf019f177e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9ed118-f519-4cc1-9f4c-4b6d0ad026e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c885211f-a4f0-4db7-81d0-dc1fe748a291",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb68f12d-3d10-4958-a7a3-dd1c2e83039c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708febe4-ab6a-45a1-bc73-e3995343f170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe37fa8d-86c4-4aa9-8cad-69129b3035ec",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f593d6-3486-40fc-8ab8-03483c6ae3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd1cf9b-96d2-4af0-a6df-229884fc2b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e11c70a-42a0-423e-a522-5dc13e778133",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0eb1cd4-8067-4638-9d4c-f2f7a201e556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc7871d-a8a4-448c-87ab-7112009308a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410c1f8b-4d1d-490c-b831-271b64f6d5c2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde0713d-ac32-44b9-9bfc-8245107ec509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5538ccad-0a12-4a91-9106-251c8765f799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4766d2ab-40b1-46de-9920-1c3ee202c10d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d678f9b6-1909-47b8-a1fc-c2dadd65dbfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7bdf23-32ab-4449-bdc6-d31f21715b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f08d58-b80e-447f-8736-141da9844f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e27cf5-d153-4a96-ba57-7d74b18ff48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa637bd-ebd2-4849-8b02-803c7a7e693b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8230d685-4b9c-419a-8bdd-93019716b3e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9303afc8-63cb-427e-9117-6b3b7bd8788f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8c4c59-1abf-4735-9716-ca9baebdbf16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185764ab-498f-4581-a334-0aa37772565d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1c84fe-055c-46cd-9c58-0dd44edbc17b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8ad418-800f-4e7c-9b35-a02d7788b773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba754fa5-3e0e-40ad-8ae0-987d2c7ba8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df958a01-7567-4c9a-a390-a544a5f7be59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2968ac-69e7-4aec-831b-f97ec8e126d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eccfe81-1cd7-4688-82f3-c4ceefc813fb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeee2c88-e835-411b-8435-6ca3aa3c4f13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebba2e6f-f395-4fbc-9560-78cba0da5e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fee7b1-6b02-4671-89b2-61cc8bd74daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a56ebc7-55ae-4473-9932-b32938653bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0243494-7af7-4284-a8b1-86f788cc40ff",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2bb899-14ec-4f52-8136-26d2ffd6b12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32506784-5819-4bb8-b20d-16970d231da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3315b0-43e9-4965-89d9-d27818a5438e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4856e0a1-8066-423f-b212-dda2602c684c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206b6a3c-e3bd-4c6a-a488-66ca273e8660",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe1045a-44ae-4e28-b30e-4282e8b301c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6a104a-4135-4db3-b800-99ba11315001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87ef2b1-6de8-418f-b800-018933fb9f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce86eda-7fed-48c5-9dff-f35b8873b47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68962549-6d82-4983-bb3a-8bdd13d099da",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e349539c-8281-4f2b-867b-80f1415d4a48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f679f23b-f4d0-43ad-84a5-7f81f507a227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53992b16-279c-4fda-86f9-78a280828b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41af2a2-eace-431d-906f-168bd33b5ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca242c8-70d4-4718-8295-a2d77d3119ad",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ab4d96-6b8a-47bb-8762-c984a50ee6ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a6acb21-1769-4700-9f11-5665660be425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91b8550-bc70-4af4-9650-417854a24991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130c4429-d7c4-433f-bd90-74028c4366f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45102386-de7a-4ea0-a33d-06ec7b477eba",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0302d2d0-ad70-48a6-b9dd-304e75a272aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f1a347-bb5a-4010-8291-04d02773aa93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa699ba6-75c3-40d0-bd21-d3ba8bf00ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5316e13-9418-43c6-864c-b0f425fecf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197b9da4-169e-4529-a9b8-943fe7cff9eb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efcb029-23f4-45cb-a6a4-69e2c8d3231d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c7e47fb-f122-4098-9ac4-3287a1c9d340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1e6728-35db-4164-8d9d-3fb03cf3ffa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cdaa795-7a5e-4043-9840-4212d108bbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7e34b2-7104-47fb-99ff-24158866be29",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4dab8a-2168-409f-ba56-c3059edb488b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47dba335-af50-44f0-a8e0-7d1afb6ee33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78d4acc-fed6-4f54-a1e1-c1761255a909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0712465f-b1f4-4c63-8524-72b9aa199d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b535847-fbd0-47f0-9ccc-5b7d2e5d447b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9905cde2-c57d-4647-aa85-c942237ec6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d803e0fa-1e80-4403-bd3f-72985453f962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c08c38-fbbb-424b-ab7c-dd31bf37f8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b184a2de-1d60-4dd9-af7c-41e222ef6043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d55420-4a3f-479e-9b9e-c61c3e15f09a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a0cf45-9a66-45e2-9cd4-8df3c1cdb4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7db62b-6772-4e46-857a-8650677a1d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3de546-87d2-4f41-a16e-7dffeae9be14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c268101-26e3-4732-a442-d230a3d8e254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c876143b-8ff1-4a0d-a5f8-823e730e939c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c607fe9-b6c3-4b4a-87b6-8314adb22bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b25a6c0-5f3a-473f-9d4a-7d270fc1f668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2cdb4c-623a-4fe6-a86b-7d0870c58596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac16534d-c0be-4649-8cf6-84513469bc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b14879-960f-49fd-8ffd-3983427e8cc5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4b57f7-2b3f-4784-bff5-964bd54bd87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ba71fe-d9e1-4314-b9f3-0059e01f0db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e67387-9f55-4114-b5a4-c210eaae336e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de62dae5-f2d9-482a-84a6-ae50c42936df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6cc6c9-9cdb-4c71-b04c-1711fcb44225",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19ac8b5-f266-4b64-989f-ca151e8c5a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e805aca-7970-4a02-9361-2076f0a658ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08baa7b8-b0c7-4bc4-b29f-25a719affb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957210ac-6637-426f-9d19-62dea147a7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9532836-fbd1-4f31-9aa4-65af57a04807",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e344e1-033e-4e34-96f6-954b5683338d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a129a5ab-c7d1-459f-8659-d741308a996a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d144eb34-75b1-48d8-b1b9-42a006c207fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1f2914-5624-491e-842a-84615c4945ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a61763-4a72-46e6-82f8-a6ea9705154d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ceeffb9-79ed-4cda-9f11-1ea32b5392fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05de234f-340d-44ea-af4a-a45727e7b612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c78909-1681-4992-b793-60d95bd28dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09aa737-fbc4-4f8e-a033-93c74c0c1766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d8a7c7-7201-4b6b-9eb7-4d124371b731",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeb75f1-a17f-4b74-8d56-29b7bc311feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b24fe8-8926-45c6-b252-4712a9bd5495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0141f8f-fb7c-4994-85b9-ee2cab96e8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d4c1e2-0f1f-4467-81f5-7edbc0f15563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb3cb2b-1a2d-4c47-abd6-aac3cb4f7298",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb0e8f9-5c77-4421-8bff-ada923533cf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "443fc52b-9a7d-4c49-ba82-0de658d13e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb2eb50-1167-44cf-99c7-d5d4c53d46a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2ef2a3-7091-4272-83c0-185ebb0c825d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a4e7d1-45e6-4dd9-a1b2-8584815c4039",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5254eb-7017-4b93-9858-220d6a18cc84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d73ec8a1-f6fd-4e55-b52e-b75fd606fca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8213f0-b4ac-4acf-8ba0-c21951b4d5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc15f1f7-b745-4350-9b1a-934f1030a234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db057a67-3197-448c-8a84-e7c8a85e769a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8c097e-ca25-4633-8e5a-e248875e085f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b18c449-b51c-4cfa-8a6a-f1c8e808e0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfa6102-08f4-48e6-8bc1-773d530a967e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871827b6-df27-4239-accb-a04b2cde278d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5840511-f07a-4d1f-92bc-422ef45a1456",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21daee23-0403-46d3-b219-fd6b967acee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b42210-b004-4f4b-a2b0-ea0b3caf84d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635543cc-45d1-43e6-934d-60f2233908c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca879e69-be6e-49cc-83f0-2f31a2ae51e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359f795e-d7b1-4fa0-9c18-f455642e0cd4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23f4979-d24f-49c4-b17b-d7891fb5f8b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d132a7a8-62bb-475e-8051-cbf850ae96c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e94022d-d974-43cd-915c-1c80a73652c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e451d092-23b1-49d5-8583-62ddfe362fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea132732-d8b2-4dbf-9f54-81359b872c79",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a27252c-b1d8-4d41-b17c-7b8b80bd0f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16826793-f5a4-4939-b177-55e5e3c5d5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da09f58c-4bee-4a04-8fec-dbd39f209f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3929560-e80c-4317-902a-4d4ad92772aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0946bfc8-622b-4f9c-932f-b4e5477202ed",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b959e3-62a1-4ad8-9ae4-d30b0e13c676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44517855-8e55-404e-bb68-8633c319de54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d175d7-4f37-41e6-b169-c6ab052f7e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554483bb-8c51-490b-a379-1b0234b4bb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8ac83c-97cf-4622-b678-218d0633608f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c09d303-117d-414d-8f07-d97810f80e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bcc896f-e182-4d69-b870-8960c1c3800c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152847d7-6cab-458d-99f1-f825f919b5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b9557d-26f3-4204-9f7e-d33947fd173d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbd1ac7-9de9-491f-98d3-6a2a118c419d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c87d5a-f56f-4236-abc7-1fc9ac2cf85a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91d8b935-18bf-43bb-9c95-b885ba44fe9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5fb97b-49c4-415b-8ec6-ab6302cfb861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088ee8e4-c24a-426c-8ea5-0bdfeff3bf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3005dde0-bd10-4ad6-817e-d518ffbedde3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d7ad36-396a-4037-ab71-0d5067f21a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537b8e18-5969-45e4-9bdf-d61152caac25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f19e14d-718c-49aa-8324-568b1c9be0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8413f916-6e45-42f9-bc28-fec821efc941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa34554-4ba7-4066-9ded-731d15a0dbc3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7a3af5-0fd7-403e-acfa-570b0eda21a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953812a7-cc73-4de9-bb4f-931bc2c3aeb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b58dd2-f578-455d-a433-c84e62d46856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fbcb3a-8626-4b9e-ac72-cdc30de846c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf14cad1-3c75-44f0-a1f3-cb72d9152a49",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90706f76-6f5f-4970-874a-3ff430ee0e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e089c8-b013-49a0-a39c-1bedbc7b88d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442603ee-47a9-44e9-85d9-b7fc1c361d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9330e529-1818-4a6a-a715-c5d2d77ce562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde42379-b1ca-4abd-b378-ea6791af2a77",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466277fa-01c3-493f-b255-f375408c7fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e1d01b-3176-47e9-9e91-0ceaba2fc5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b517fa-91f3-483f-bdef-fc8931c2a0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7eb7b4-e438-4e67-a891-8d9d54c47003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7156c9c-aed0-456f-a471-81cc0fb88a61",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029756b0-7a3c-43fe-80e4-429cef37ebc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e4db00-3cad-4b19-9210-261e246cdf2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66ebc13-4db0-4471-a876-7119f50e0c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002009ce-4300-4321-b915-13f7796f020e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e918c514-e46a-4f58-8722-4ec03b4cfcf0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252cd3e0-4de2-44ed-93da-491a3a950f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9ac689-d9d6-4c75-86d2-933efd09e366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e63fa96-3a37-40c1-a937-05d071ed48ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631a8bed-7fee-44fb-afcf-e59490037e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e408da-da2a-4705-81ff-14370fd81260",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743f6166-e52d-4443-99cb-201803076b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461a037e-581e-4077-8d25-c84137d7feea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a3338c-d9a4-46ea-b2f9-1344a751ca0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844a4b9f-c296-42e0-bcd7-b829725e5c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c71bc7-d1c0-4c10-b5d2-cc34c1c642fc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf46d42-1011-479a-a9d8-8de8123b448a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f691def-e338-427f-8b64-ce8a82b1d58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d51346f-5a42-49e1-bc53-a9064746bded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c345c4-fb83-4d33-a681-416502e93ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18860d76-4b7e-4658-af99-b8ad06964283",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a4d8b3-d4a5-4b4b-95b1-39da49338cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f8aef9-5387-466b-bfbc-8563aa3a104e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdf804c-9d8d-4762-a9f2-536296142133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9a52cb-742b-4984-9704-dbcb5cb90b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40f1b97-8f73-4377-955d-6ae329bd5ffc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce26f073-25a3-4b4e-8561-d11ac9e79e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a6a6e9-c0ff-4401-837c-65fe88ff75d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41765e21-08b1-40bf-980b-a63c8e0d14b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dafbb9f-89c9-4193-bc84-84d55d5b02a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf72b95-2fb1-4fee-97b7-481b0e441810",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdeb45c-c636-4e82-876e-b586ba9d72a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3be512-015d-43bc-999b-0a04e2c955ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8c324b-7b4d-467b-b4ba-4d68483c4940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cacd623a-b780-4687-a300-3d4154d54ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73a4550-6413-44d0-9bf7-399fea2ffd57",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bfe648-eba4-45da-af53-2845cd8088b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6900fb62-549d-4600-8cc4-613db2a228f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b96bc4-ca69-4aba-89c6-244d04361366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6f3ce6-f579-4cf1-9879-003a87e21e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdb0e84-63f4-45ee-810a-499f70df9b5e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c41989-d873-4553-8f0f-82205f9a753b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991b59c4-3bae-449d-ad9d-15638dba82cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92427a85-a85d-4a4f-beea-84a0ce5dd797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a4303f-e527-4394-b376-8f49ad49d1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f645cf4-a51f-4c62-893a-56e204ef4a04",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cda0737-ff7b-4003-ae6a-d7ca14a7c577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0990f473-edaf-4ae1-b2ae-b4fa31c45124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153c6b96-b10a-4dac-bd51-0a078f9bc03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4561c4b4-9f5e-42b2-82bb-e2262f5e97de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0c8b30-c167-4571-b97c-1713a79f4d33",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe4dce4-13f5-4b25-b8ee-ffec637f7bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2135cc37-3218-4dca-ab27-f4dcaec5e890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50339b2b-c788-404e-9bf7-902d8f15dc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11916566-804b-4020-8344-9258d8d7a0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9f8804-73a1-4f83-a949-818cce1a054a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdb4a75-b722-40ff-b166-d52b4827460f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd46563e-aa8b-48cd-8888-3412169e7397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1243cd-74ff-40ef-afc6-a480f3876783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b87a8d-fb85-4216-84db-0a5bb5849524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0148425f-c076-4070-9a2f-6b9bb8bbce65",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee35fbf1-f293-4e1e-9af4-b68f8a56a5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b55edfc-550a-4601-ab73-ca88d3d15fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53ae23f-21e1-4684-a110-26b691ed2f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7a708e-db29-4fe3-8591-ed2a64ac1f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c6af5e-8278-42ec-820b-2b5b82dcd606",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49b588d-54a6-452a-b45c-14f4bcb62e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d82a9e5-1da4-46a4-94eb-e465c78a5fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9449c7a-4998-4755-8961-8b21bcf30149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d25a18-725c-446f-8a78-6f6208c2cb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06b0e74-37a4-4143-9fc4-0097b5a6cd7c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb9be1f-6efa-4a72-9071-2c6018711dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7bc9ee-3dba-48cf-9bb3-46a259f67862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297d4acc-30de-4788-a3cc-3817d911ae1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4430fd-d086-4a60-a623-2954c3fe965a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f0aef2-cbaf-4e6b-a576-ccc99cd2c911",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13887ed-419f-482c-b13e-dd8414e995f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2d4d5e-716f-4606-9a67-ec5db3cc8bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d098034-7957-4614-86cb-5b736e56de26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee591a55-d3c3-466e-a5a1-b3c099750c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a0d5a0-daa4-45c0-8735-f109b7fca12a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c73e1d-a7e3-4aa0-ae35-494a4c660e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d02386c-9259-491f-b662-74bcd406da07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97561e8-2709-45c3-9325-6a7ffecd1fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca2a4d7-5bb2-4b04-8475-3238a2a54284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d60cde7-4189-4420-a87e-0e20b6cca0a6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7967c397-019a-477d-a633-f01d125c7125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f95252-0a13-4bf5-97a7-67672397e6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7a6f20-d0aa-43e9-b489-84b29829e087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9b724b-082d-4104-bafd-2373838a449b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a84641b-711d-45ea-982c-69b802ab953d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e953eb-6d36-4bca-9015-7682941224dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f785d7-d067-4415-8c64-51298e11a8f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3fa09f-cbd3-4e1d-b7da-f2ff594e6003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03925f9-da68-435d-9004-86283f304f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf4a8f4-41e4-4236-983f-ca45e2951386",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5013b6-a64b-467a-a86d-bac3e9143d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435d4f04-f9f2-4f96-b8b2-f40975d9d4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559972e4-2991-4fc7-a38b-ec633960a63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62011fe1-f4c3-4eff-84e6-6256d248f025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dd1f25-eb04-470e-a6b0-064aebc11175",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef945c2c-af00-4e08-bbaf-6c7581f900e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54396ca6-f670-448b-bc6d-24bf9a5bcbdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5d354c-d520-4b50-aa21-13bdc06e655f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24c7f58-de77-4133-8dde-28092ea1f521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f67d496-f087-4a96-b0a9-4285498e2c8f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cd80a1-60ea-4451-9c09-205f839b0c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2de7c7-d8f8-439d-82f6-6697d1efe022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae1b69e-6d17-4fc4-8421-f47e6ce12b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d39bc9d-575d-4045-861e-ec390a0beb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20df0e88-00ba-49ac-be65-8c9e475b57d2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d46163-75e0-45e3-8743-4762c2d43ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b253c45d-b45e-4d2c-b370-41ae18a09bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d6d449-6aa8-4114-9a3c-77145898d83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87a86c7-9dab-449a-995a-580a356d7b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e44865-65a9-443d-a2f7-2bf7e8bd275e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa2afff-447b-453d-b0a7-78a3c16373f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b665659-2340-474f-a854-ed17bc0f3b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de96041-3984-433a-a52b-6be5d09b495f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4264b8-1b29-4ba2-afcf-43df4694f3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583fb83f-5b74-49df-8ebd-79d357271658",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e683f6-3d1e-4249-ad5a-326b749d0380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862b0906-fe1f-4459-8543-46581b072e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f6b4ca-6680-4127-a1ff-6dfda3c59b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2036575-4282-400e-bdda-61dca3c5fd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7e4c15-a253-477b-aba6-8ae92526ae11",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfba98d7-52a1-4404-9b0d-57f4405e7b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "895c0c3a-ff86-4df4-827e-91c762c37964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06915f3-7a1c-456b-82f2-27527d6690f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fddd0ef-5282-4634-b960-6a7aba005088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b6f7ae-ba81-4475-9ce6-404b4931b672",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e1381f-0680-4f3e-8e1e-0c0a58cac562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fefb7af-3b27-4ba2-bd1b-9bfd32e8f36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c94b10-403c-4f4a-b8b8-f826a5b62300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a588fb98-96c0-4686-8237-b18d5364c01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be171aa5-1abd-4497-968b-c88ebbe5e589",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a83814-48df-4a59-817a-83a2be332709",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a116be-d988-4f30-bc40-5cb8954e0aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704a4218-d325-4018-9684-38cbe2025e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5322876c-07e3-4859-bad5-793dc9259eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f20f3e-b8a4-4bce-912b-a330f7c393bc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187e77d7-6598-4d22-aea2-8c58ca7bead5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37813183-ad5f-4afc-b320-83b531dbecf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a94b00-890c-4d75-bf1a-161b8fdf9083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e6aeef-70c7-4afb-8088-d8bcbade65bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f631a1ab-b60c-4050-bd02-e289726252cc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16c4e7e-d668-497a-9ff6-f9a5e526036e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "769dcc6b-2532-4435-9815-0c696c62c505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67eec447-13f3-4a71-b358-fff7770749f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032b11a4-8ffb-4987-b75d-629a3bb554ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeb5652-2b48-4b69-b65e-e5cd32d2b6ce",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea28189f-15f0-47d0-8493-3b9b7c154ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214b42d5-67cf-46a9-a18e-71549dcafe15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a860d720-96e8-4918-868d-15bb8ed8e0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcfb1dd6-33a6-4e5e-a7a1-9a4d56f80896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc5ffff-15a0-48cc-9ace-ff89535d8084",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e986d474-3536-4baf-8e2b-da26fdfd43f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e854c70-2768-47aa-bde3-d08be8ad1fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66928978-6991-4e14-90cf-bbc4333db05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe66a56-ff54-4adc-930f-ed9c5f1c2792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f31ddb8-1789-4ca3-bd1b-acb9d20775a0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4826ce1-2172-451d-a6fa-4f4d6fef156d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "721488c6-fd96-4210-848b-56a7b04a93c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b422a682-b8b9-4e53-88cc-e7f4446a603a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243d9e05-2aee-47b7-9482-c7f674e1c8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3473bd2d-da97-4f00-ba42-b1c3c5fe0732",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8bfa73-1af0-4397-8e82-455e12e36df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b86683b-37c5-4d5d-a699-b0be3442b67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f226966b-f27d-4acc-b202-ea8a9f1626c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f33eed-6aa1-4ef4-bd2f-6fa1b3f7bfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42551860-674a-439d-bf75-a71f7ed87fcd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab901626-edd3-4862-a877-20b47b54af8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d462283e-4488-48ff-bc0f-07f190e8f804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac132a1-e27c-49c6-bf8e-01a193169aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96df0a7-1ec2-46aa-9ed2-2c9beeab1762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1124d5-b13c-4c85-aa2b-8ffadca78b32",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54d228e-2516-41c3-b855-652d32c8e7fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b63480ab-35de-43ae-b0be-ea359c98829d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c307123-d433-4954-8011-593ed9b8e11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d52754-aac8-4dfd-ae2c-a6a6b413f9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43148bfc-6a90-4a4d-8f39-807f1baf617d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7326b3c0-9b77-4b68-8aa3-cfe20d36d596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a44324d4-09f4-4186-b501-f6002c2be1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe90d42a-c988-476b-9ba3-4a33ef020293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ced5544-2d90-4f49-8abd-403822786093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26135f29-5996-4074-9521-7b8b1b32a044",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9d7999-8aa0-40db-8b7c-b64dc0666544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af351ba9-fb3c-4e48-ad29-b6b273479fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f5afaf-add7-49a9-a717-656f7d366b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980584be-8fdb-4880-ae77-9035144bedb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e97c70b-0f82-44ac-8f91-ea25896128cc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5729abd8-19e9-45f3-871c-5cf8cd57e856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48eeb29a-80cd-4eea-b622-6bf845b3612f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2a5580-87a0-4696-9eee-34b84399b719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b17cf2-a912-4e64-9834-031d2a14df56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06522f33-aa5a-4f2f-bf64-aaf8e1644b39",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ebdf25-b79c-4c09-88a9-7b124cb01fa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54fac793-4f2f-4987-88dc-7b2d4b397770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e40710e-9c2a-482b-8030-c8b49d27fd3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e88d189-8b46-47a7-8017-847df20301b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4706f54a-351a-41d6-8834-7b70269be195",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d64453-f3bf-4364-9085-623f37eea614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0b807a1-5de0-423e-81a5-e6148d450cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d54a722-febe-46e3-a466-614ec8a4eef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85e6382-cef1-4605-983b-8f72c702271f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcdc2d1-f2a1-4b39-8baf-404f8f63ced2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081c99ae-1d10-47a1-a975-b4905a068161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e20285-5583-48b8-9c0b-afe39770d46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b16f5e-94de-4682-a73e-04d216028403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870890a6-d7ca-40a4-b675-a56e4929c6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ea8ca3-0c3e-401d-b1e6-0c0a980a47e1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e031bec-bf0b-4aad-aa72-df2b3518cc0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dccef5d-ec67-4707-b1f8-e065519a2714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d821c6d-039a-4e2a-8ec6-a471ef266d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21a6b97-e334-4493-b384-b5ad2c6b28ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172de5ec-85a7-4666-92a6-38f938c6622a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee099594-a298-4d6b-9a9b-13cc798155e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73b56cd7-ff06-4415-9cfc-305c0bdfb364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83e995f-233c-4b4d-88dc-fc152f0376be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a13a600-b27b-40ab-90fc-767f894d7c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba03f3c3-b5a0-4969-baca-45ca3976f45f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e71ac84-0344-408e-b795-9658bd98edbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0ac2585-66fd-485b-80ba-c8d795b9f583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02bffc8-b3a6-4f43-ae28-88369cbed116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b54a49-9395-47e3-a71a-9b80b2f33ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb8afd7-9a7a-4906-8007-4bbc6f4014b1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba4e28c-bc28-42cb-8527-27ebe049f33f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ca1029b-5631-42a4-8a40-a38f2bd2aa9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7744e7f3-743a-4811-99ba-d7227521a57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8389eb91-e7f2-48bd-a379-f27cd183b7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ef9cac-3e45-4f8d-92a7-8c71e577ed98",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962b3364-c1fb-4a49-bbdb-ae77068c134b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c12359f-dfad-4d1a-b798-2ed6b52366cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75860cb-e492-41bb-b3ce-cc61230fad74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd00d7a6-f1c5-4bef-8831-a6f15a21327d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53dbfd4-e1fd-40cc-b137-5362ad3f1723",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cb71ef-407e-4322-873b-d83027c26c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce29ef24-7b98-442e-bec4-1e628e16993a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64105aab-370a-4dea-be5c-54f60c512398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927e5262-1353-4451-aace-ee2134b10c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e5484c-49f1-46a6-82e6-3e24b2fe9370",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb207faf-e1e2-4429-8226-0c17b88bcd56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "031dcfe1-f8c5-4163-a17e-9fc8370f2d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ef9bd7-f6d2-4b4e-8ea2-fe8af2726207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62c2e14-c613-4126-92ea-811e3ad5b0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ef1fe9-37ac-4568-96b2-8b1b2877d242",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8502ac99-1765-4f76-83d5-c7f235c5a78d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58bd4114-095d-49f3-8b53-b76a8fbcf9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6949b451-08bc-482c-8f49-c251ab991378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f17b919-f10c-4a40-9b3d-321f3a3a0386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc1d2d6-28d2-4c0c-9775-fb17fbb879ae",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8b6b04-921f-49a1-ab5f-74657ca888ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76ffc5e8-9a3f-4d61-8c83-b79dc90cea87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a238577-4fef-4dc3-85f9-ed64dbff1752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded7f763-6ea7-4c3e-89e7-b7247ae3d1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bdbc13-a706-4f77-87ee-c79f4273b633",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f30530e-0848-4923-af66-c31e95ebd985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2481fd64-f8cb-49c4-94df-fec96f455507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d25ac1-0fe8-41ae-8f7f-15d0390205b7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abeaaf90-7ed4-4e46-9fa4-46519cb1c612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a991e0-1a8b-4a83-a1da-7f24128f37c4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e439e54e-3149-4393-bba6-3897b6f0ec18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a492009-cb67-471b-b905-91e7cd87dc7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724fb170-804f-4b38-9812-348e2518ddd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edcaeab-189b-482a-96bc-2b827e8e7202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773656a4-7a15-4a9b-954e-72e72e826de9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04c0bd7-17d8-4d84-a36b-63bcfeab33c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9419941-6102-41dd-8fff-0bf23b66051d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5d6651-19d9-4460-ac07-e956f9241d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8823b4c-ddab-4626-9667-40d5e46e2fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66262a53-ed9f-456b-b7c0-974177ebb3b9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa46029-be0b-4eb4-af56-88807e513e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "114abf54-b26d-47c8-8526-106721ec758f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c087d1-759c-4d0e-acc8-9e2b21951ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5433ea92-697b-4af0-bab9-520217d192fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352110b3-df17-4a90-9b1f-02bd81f33804",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c81e064-64e6-4e00-a40a-816891128ab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "403dba51-59f8-4a4e-b9f6-3dc963221236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf08f57-ec7a-424b-8b13-eb900ce59362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af018fbf-cab0-496b-90ce-708ad617dc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7d3c41-3e7a-4030-b6fb-bcc85367f25f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a27042-795c-455a-a807-41ea431cd918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5dbfe98-cbb3-4be0-8a67-ad6d445a4d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78759fc-3539-4a0c-816d-7fdf4d535e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dbabf6-54b3-4bc4-ad61-5a4d062df252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9c52c9-59ba-426d-854b-44f665dfa863",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7875ac-6f92-439a-b579-dd0c4219e5c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f751610-ee98-49a0-8c4e-046a3bcdb835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9153de01-70aa-465b-8270-17220fc131cb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b9e183-bd47-44d0-b13c-8a247646b407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df891c2-c041-411f-ac61-7c02172639f4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048134ea-796d-4cf7-be53-a409f07037b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e8fba3d-2d7b-4f69-bf1f-8da77c78b27c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fb6602-eeef-48ff-b827-27b10c9c29ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2bcb8b-8da1-4a5e-97fa-790aeb5e945f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e68206fb-6879-4753-b430-cc3519dce6a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b1b54b0-0208-47d9-a512-2eca2054bff9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8c56a49-14e8-44d0-871b-0339cd1f74ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e104ce6-a186-4231-8f8b-5ddef2c4f628"
                    }
                  }
                ]
              },
              {
                "id": "cd49d3d6-21e6-4e30-840a-a32cc791ab34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9599f97-c0fb-488d-9327-6c2428673d79",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53231c1-8057-4caf-bc0d-7724d0ee044b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4063ac62-4302-43ed-920d-2cf2d0ee8640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ca68e5-3248-44f6-8408-9b4ae701dd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63225ff6-9635-4f4b-bcc0-861897efdc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10319c2b-0b76-4682-8ab8-fac0261515fd",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120ea470-b480-4def-9fb8-d3f85c96b1af",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "18fc7cc4-d8e5-408f-9aa9-79a5fd44aeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f04145-0dc1-4ce7-88be-6becae84e6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6eab23c-37f6-4e6b-a07e-08895e696edb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b2aac8d-1a20-4acd-8fc4-e1e9f23e25cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d529edf2-bc09-4533-ad32-22a9521e7873"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aef97782-af3c-4579-af87-aa7020374c41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "973fd1bd-cefe-4288-b451-dc1bf5a5f8cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "42c1e4e3-c035-4d9d-b1c8-49deba4aab32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25879588-7506-4aa6-bf24-14083b13ec49",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13b7cfe6-171f-4712-8c30-0a684dddda55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8965c2db-b6ee-4241-99f8-57b35947094d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "896f618b-83f2-4a8f-9584-32e91d53220f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "537b1a4c-4182-4280-b81d-298e3e414efb"
                    }
                  }
                ]
              },
              {
                "id": "db574d6d-5e4a-48e4-b326-409017e0638f",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3921d0c0-04cc-48f5-92e9-7553f897427a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e018d8a9-f839-4e04-9e78-26f71fb9ab2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a79ba566-eae5-4538-bd57-ac7ee3a16f9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d4c9368-0122-4cb7-88bf-06a9ec4dfe35"
                    }
                  }
                ]
              },
              {
                "id": "37365145-9656-468c-be5c-c6e3564056ac",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b26dbc2-f0f9-4bc1-afe8-419aaf7d6175",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8396b6a8-b003-4931-8de6-9c778240fe96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cc1fd7b-b65b-4c60-8824-49ab46461c8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9db77d10-775e-4ba1-a8b7-476565cd77fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3d89a54-cae7-4d13-8fdf-39db66eb6ccc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6f773dac-203e-4beb-aecf-bc7d082a8e9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3515c8dd-5212-4cf0-9387-f565e79201f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4e7acec-bc99-4f99-940c-5c5a706fb4fa"
            }
          }
        ]
      },
      {
        "id": "198aab43-2a61-443a-86be-1f7398cf89a9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d36812fd-2e63-45ac-b3d9-bf02f8fc2ecc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8622d0b3-d28a-4c9e-9c0d-86183c3a2a29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5c74ec4-3399-4fbf-a8f9-c6248490da84",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e8653d-b356-4fbb-84f0-764c7a2bd850",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "232aeced-87b6-460d-8548-82e59b0e7363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec404f82-acf7-485e-b4ea-7d72c57ee4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08a37229-d070-4a23-9edc-306ba3b0fdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707add2b-f174-492e-b9a0-7f36e6c6d55c",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefd350f-92fb-4f16-8986-ba7596395f01",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "36b19f7a-dc6f-4531-b79a-61090b9dad71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b99cf7d-bc78-4f73-8f8e-576dfb482835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ce6abdd-7b2e-4255-9089-fe5a975dc6b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42fe3795-38a3-45b2-9e5e-fdd069f3934f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd5778d3-1327-4dc3-9e08-73843b21a814"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be8e7094-b7f0-49c4-b763-5b72eff47a2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bd4c225-08f8-416b-ad17-dc331e458713"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ca647fe-6a64-414d-b2ae-ff8dddf72f2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1ea1bf8d-d6eb-44d1-ac36-9e3fe6f14042"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da601a9a-dc15-4cef-bc4c-0d067345d87a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09e0de9b-9e6a-4bec-91dc-e4cfc5d2cad6"
            }
          }
        ]
      },
      {
        "id": "bc06a877-7b88-4915-9038-4889412fbabf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e326a7d2-6c5b-4e52-afdf-7ad99d294a15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1dd2e664-dd3d-4e34-b2e8-68fc1bc71450",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a208a217-95fb-4a58-9b6d-6decc85374ae",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2797291d-f908-4813-a5d9-9474e484c395",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e9d87a18-8a9e-467c-818c-f32d3e7b3622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2efa4b-0005-4821-baea-97c555c36166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3d4752a-ad09-4c9b-9a00-cc7170e540d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3842de-8eac-4de8-acba-5961684922aa",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4736c21a-ce16-497c-9324-955298d9d019",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1ffffc0f-05b2-48e7-b01a-5536671a0dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40100c37-af9e-4e78-b1f0-daa92c405c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d48c76d-3913-4c29-9883-ca5a2ac8c8e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d150077-204a-4ce9-9a51-027ad7dd7e7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39933fc5-78e9-4eb2-b45c-76b6ab4191d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2504805-eafa-4309-a8b4-c1452d5049fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85069438-892b-4fe0-b024-c1c5c3a14bee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6931f70a-97ad-4203-ac7b-7acf6b5b8598",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "11e4488c-62c5-4bad-89e2-71160e30a28f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d09c4e1c-afb3-43b5-ae79-a1ea927ad5e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c1339a3-d0d8-4fe8-8d53-ebb974aace46"
            }
          }
        ]
      },
      {
        "id": "20740c5f-4209-4254-9f5d-946be63920b3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e95d1cdb-ecc0-45c2-a40c-3cc8d7366081",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36ddfab6-79d6-42c1-9bb0-9831a87624bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ada526e3-3433-4dd6-b456-8b35536ce974",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db98a204-7ccc-49e9-b45a-7d8a0740e65a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "22b2a8fb-27dc-4847-8b56-59bc0087b1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ca06e7-4336-4ff2-adf6-5d705b582c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43d60a28-feab-4731-940f-5feae02cbbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af63743-5657-447c-b5dd-08f923889be9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee8ba63-9e58-4f01-8d60-47462c7ca7f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1fcd4122-1d07-4b4c-8ef5-bd3c82c20909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c777d2d-054c-420f-805a-c4af56c326ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "623e863f-2ed2-4a7e-90bb-b827bc9d198f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a22a9039-2078-4103-803c-6f0683b9fa9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8852a3ad-6e28-4514-ad4a-3edb0a32f269"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72ffd468-40b3-40a6-9ea2-2ff7f87ff14f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3be3cf0-6c54-4a2b-9f95-3d3cf62595d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f11a5c5-d489-4110-b4c0-89a32a279ebd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "093fff26-6b99-4d5d-ad90-055beda82790"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f19f2c27-b97f-4280-877d-eb9417b21b22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2e3b628-e56d-4609-b480-93182fc238e5"
            }
          }
        ]
      },
      {
        "id": "c5d178f5-0e1a-40ce-ac7c-ae9453325bad",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa42c377-9690-4093-9eac-6eae98083c4f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87656283-0d2d-4735-9587-dbfcd341045e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8e4fa297-ef50-4108-bf98-e20076bcc1db",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6461490a-01cd-44d0-b86e-e52e3e06f0d0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa2b41f9-f9ee-41c9-b731-65d84eb1098e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1231,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 166,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 157,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 320,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 621,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 610,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 227.9277108433735,
      "responseMin": 4,
      "responseMax": 2896,
      "responseSd": 439.30907645278165,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1665276862745,
      "completed": 1665276907646
    },
    "executions": [
      {
        "id": "ebb390e6-148d-47c6-997a-6417ee44a7f2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 157,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d3c2f495-841e-4bc5-8bbf-07e5d90b961e",
          "httpRequestId": "1618df31-42d5-40ed-bdb7-ebf110da615b"
        },
        "item": {
          "id": "ebb390e6-148d-47c6-997a-6417ee44a7f2",
          "name": "did_json"
        },
        "response": {
          "id": "009c5307-4b7f-4c34-950a-aded78f05c93",
          "status": "OK",
          "code": 200,
          "responseTime": 459,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d75a1d-c9bc-42f1-b41a-cef7c4a67711",
        "cursor": {
          "ref": "02fb832d-a049-400d-a1c4-4962b5baadaf",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7d893771-0832-4244-bcd3-3f8e3d1ab5a1"
        },
        "item": {
          "id": "88d75a1d-c9bc-42f1-b41a-cef7c4a67711",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a3362cc-5270-42d1-b27b-b1789484354c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d75a1d-c9bc-42f1-b41a-cef7c4a67711",
        "cursor": {
          "ref": "02fb832d-a049-400d-a1c4-4962b5baadaf",
          "length": 157,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7d893771-0832-4244-bcd3-3f8e3d1ab5a1"
        },
        "item": {
          "id": "88d75a1d-c9bc-42f1-b41a-cef7c4a67711",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a3362cc-5270-42d1-b27b-b1789484354c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e137399-45c3-4167-8331-e7ebb0d9aa29",
        "cursor": {
          "ref": "e79b8cb3-8f72-481b-bc1e-a57b0dddb229",
          "length": 157,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7fe03771-92d6-47b8-b8d6-122b753c9fbb"
        },
        "item": {
          "id": "2e137399-45c3-4167-8331-e7ebb0d9aa29",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "730d130c-e615-4ea6-8229-648c0cd9feff",
          "status": "Not Found",
          "code": 404,
          "responseTime": 333,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b327a33-51f7-4c61-acf3-0c4cf9fa400a",
        "cursor": {
          "ref": "05a2c7fb-c3e6-4248-a145-ff1956733993",
          "length": 157,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "693209f4-89e2-4584-aa27-3b6ce615699f"
        },
        "item": {
          "id": "3b327a33-51f7-4c61-acf3-0c4cf9fa400a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c1e61066-ef05-4150-8b2e-987a388e01e6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7d19b0-6b4d-4293-8fb3-59375e8d467f",
        "cursor": {
          "ref": "0523be0b-f979-4a82-9cbf-bbfaf06db916",
          "length": 157,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "029d5319-fc5e-4c64-a3fe-35f7292b021a"
        },
        "item": {
          "id": "3d7d19b0-6b4d-4293-8fb3-59375e8d467f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0a768c26-f210-46f1-8038-a8ec9453053f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca99a0f4-aaa9-427b-b241-90a3a1813a62",
        "cursor": {
          "ref": "ec89f3b4-ad40-4d14-bbb2-101fae8ad78b",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f96a1db1-a58a-4489-be94-be9ed976ef7e"
        },
        "item": {
          "id": "ca99a0f4-aaa9-427b-b241-90a3a1813a62",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7a47f7d8-b08c-46f8-85cf-1850f4f1f663",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca99a0f4-aaa9-427b-b241-90a3a1813a62",
        "cursor": {
          "ref": "ec89f3b4-ad40-4d14-bbb2-101fae8ad78b",
          "length": 157,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f96a1db1-a58a-4489-be94-be9ed976ef7e"
        },
        "item": {
          "id": "ca99a0f4-aaa9-427b-b241-90a3a1813a62",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7a47f7d8-b08c-46f8-85cf-1850f4f1f663",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f426f59-27da-4c28-b487-fabfa9efd9b6",
        "cursor": {
          "ref": "1b9f2bcc-cb5a-4297-be15-e23bcc3d87ec",
          "length": 157,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4fe2833b-d82c-4eb1-bab2-48a178e17432"
        },
        "item": {
          "id": "6f426f59-27da-4c28-b487-fabfa9efd9b6",
          "name": "identifiers"
        },
        "response": {
          "id": "8cdfbe8b-c383-43e5-b34c-9224df147532",
          "status": "OK",
          "code": 200,
          "responseTime": 220,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa9ef0e-5d28-480e-a24a-f3c520001c95",
        "cursor": {
          "ref": "d2be53a9-47b4-4eb8-8b7d-76f80dff78b5",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5e1390e9-e470-4515-88ba-8006c5271756"
        },
        "item": {
          "id": "baa9ef0e-5d28-480e-a24a-f3c520001c95",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dfb6ead1-72f7-448e-871d-4547afafd2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa9ef0e-5d28-480e-a24a-f3c520001c95",
        "cursor": {
          "ref": "d2be53a9-47b4-4eb8-8b7d-76f80dff78b5",
          "length": 157,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5e1390e9-e470-4515-88ba-8006c5271756"
        },
        "item": {
          "id": "baa9ef0e-5d28-480e-a24a-f3c520001c95",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dfb6ead1-72f7-448e-871d-4547afafd2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c666fd-90b2-4654-b581-feaaeab2b5cd",
        "cursor": {
          "ref": "93206113-c42b-43c2-b60c-b205fa0a1056",
          "length": 157,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "905abd00-16e6-49ca-9620-d9cea1c65e34"
        },
        "item": {
          "id": "83c666fd-90b2-4654-b581-feaaeab2b5cd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3306ee54-92f9-4aa2-a527-05bc13cb39ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791c4fdc-2785-4da0-a585-318d527f0fce",
        "cursor": {
          "ref": "96466212-a5c3-4451-ab2d-64d8fd7c7071",
          "length": 157,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "94829c76-390d-407b-ba77-792d490d494c"
        },
        "item": {
          "id": "791c4fdc-2785-4da0-a585-318d527f0fce",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "805d0c58-6b7e-42bc-aeb6-a2ced4f38a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d2de53-7f9e-4fd5-bb10-e8594236906d",
        "cursor": {
          "ref": "91f93b65-ed9a-49db-aa04-9e3838684035",
          "length": 157,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1fa90edc-004b-46a5-bfd4-4034e5296574"
        },
        "item": {
          "id": "f3d2de53-7f9e-4fd5-bb10-e8594236906d",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "90c2c4b2-9d2f-4af2-b9c7-860eef01bc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93265a71-d712-4b8a-a80a-22ee834b9a20",
        "cursor": {
          "ref": "8461d2d6-eb30-4b7b-98a9-8ce95f2e9cf8",
          "length": 157,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1e859b5d-b145-4439-8e01-6bc69b298289"
        },
        "item": {
          "id": "93265a71-d712-4b8a-a80a-22ee834b9a20",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "ecce54a2-fbec-4c6f-bd02-00c89e9de7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982fcfa3-295b-4a20-9345-d991f77114b0",
        "cursor": {
          "ref": "31f82927-c172-4e3b-8813-1d0f97283a11",
          "length": 157,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "767a7257-e6bf-4037-bd4b-565dffded456"
        },
        "item": {
          "id": "982fcfa3-295b-4a20-9345-d991f77114b0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4ae58d6b-b331-4eeb-afee-7c1241fdaf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ad045f-948c-49b3-9140-dea37bb66dfa",
        "cursor": {
          "ref": "59e07659-cd17-4bbf-a818-9c332c6cfcfd",
          "length": 157,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "135a4a57-351c-412d-b7bf-12e62f72c4c9"
        },
        "item": {
          "id": "70ad045f-948c-49b3-9140-dea37bb66dfa",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "5165656a-5bb2-4276-83b8-487f32c33d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb01394a-b49f-45e8-a799-d3c7943a283a",
        "cursor": {
          "ref": "f76a040b-5c46-4f33-9df6-633cdd979370",
          "length": 157,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a4ce6505-5fba-4761-aa3c-2ef76c38fe1b"
        },
        "item": {
          "id": "bb01394a-b49f-45e8-a799-d3c7943a283a",
          "name": "credentials_issue:credential.type.members:missing"
        },
        "response": {
          "id": "516874f0-396c-46fe-ba86-61e264a0ec4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80e0eeb-15a9-425f-b731-16b947cbe8ba",
        "cursor": {
          "ref": "8416c837-05f3-4ada-b82c-bf9d8a5d34d2",
          "length": 157,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "086d2501-b81f-49e9-80bd-25db88269988"
        },
        "item": {
          "id": "d80e0eeb-15a9-425f-b731-16b947cbe8ba",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "c4844c1b-d385-4304-9c48-b0c78aa1627b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1467b0-ebae-4fe4-9b59-62bea339066c",
        "cursor": {
          "ref": "75e99367-1a6b-4bfd-bc9e-706d461d8450",
          "length": 157,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f31059a9-3640-4804-b765-6df063e413e9"
        },
        "item": {
          "id": "7e1467b0-ebae-4fe4-9b59-62bea339066c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "de3ddbdb-9fb4-4fd9-b29b-43a83f79b2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae76e3a-3c0f-47f0-90c4-e188209cc0bf",
        "cursor": {
          "ref": "80eb6219-fe73-47fc-aa34-9ec1fbce8b7d",
          "length": 157,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "477d06fa-dd10-4661-acb1-494021fead3d"
        },
        "item": {
          "id": "2ae76e3a-3c0f-47f0-90c4-e188209cc0bf",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "53aeb719-0e4e-4694-9fa7-0de8a9af2459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da9998f-2936-4fd3-a668-bee94c0aa588",
        "cursor": {
          "ref": "c3515110-6ed1-4584-8c57-68375bd8e862",
          "length": 157,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7152b245-1ba7-46cf-8083-0e56d75d920b"
        },
        "item": {
          "id": "6da9998f-2936-4fd3-a668-bee94c0aa588",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "a53cc3df-c412-4510-a43a-bce04574a1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38deebc-cb2c-456a-89e3-7ee52be41adb",
        "cursor": {
          "ref": "1a72a504-55da-425f-be72-e1a7bdb6b186",
          "length": 157,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8dbd7a8c-9ac8-40a4-832b-df1237983cfb"
        },
        "item": {
          "id": "e38deebc-cb2c-456a-89e3-7ee52be41adb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4d1bb9b2-cdd4-460e-a903-4c7a5cfe40b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2716,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fcc768-889a-459b-817b-2a9bc885c7b2",
        "cursor": {
          "ref": "2f04878d-f768-4bff-a62b-7a801a75cebd",
          "length": 157,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7ed66b7d-c064-49c5-86c2-537574c7e0c7"
        },
        "item": {
          "id": "28fcc768-889a-459b-817b-2a9bc885c7b2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "41a6f1f6-0f28-4a7c-88b4-967b4f6af40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7fdcdc-f5bf-48bd-9302-6c641b3b2803",
        "cursor": {
          "ref": "cb937315-e036-41ba-86c2-a02065b21d4b",
          "length": 157,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "826311b1-a273-41ba-8b21-310baaa55c95"
        },
        "item": {
          "id": "4c7fdcdc-f5bf-48bd-9302-6c641b3b2803",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "2dc0f667-3bf1-4726-8c97-db6ea0d0ee7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fcd505-a902-4978-9869-456dab8582b5",
        "cursor": {
          "ref": "aac18a33-67cd-475b-add0-abb508f82b99",
          "length": 157,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5a374c0c-04c0-4e22-a029-a8636026d81a"
        },
        "item": {
          "id": "d6fcd505-a902-4978-9869-456dab8582b5",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "fa4dbe05-313e-4505-b530-2b883271c8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12924291-759d-4ec7-b4d9-aa893cec331a",
        "cursor": {
          "ref": "001faa20-49e5-4c5f-94ed-fb24cb0e4433",
          "length": 157,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bae26281-2063-421e-846f-d52491961f77"
        },
        "item": {
          "id": "12924291-759d-4ec7-b4d9-aa893cec331a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "37a5dc8c-0c2f-4a95-b941-41e5c6da6234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f2819e-8027-4f9b-9942-296667fe9620",
        "cursor": {
          "ref": "572c8c1c-8614-470e-bd85-e6009befdf93",
          "length": 157,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "779bd870-73a7-4d23-b420-71c55c3e7410"
        },
        "item": {
          "id": "36f2819e-8027-4f9b-9942-296667fe9620",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7e406322-6e51-4e1d-9bda-c1fa1b98848f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e881cf6-7063-4a21-b527-785f8cb66975",
        "cursor": {
          "ref": "f8e9cff5-7c47-434c-99a0-9322b3c6e995",
          "length": 157,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dc9e6c67-e1d4-4964-9515-44bc8e821bc9"
        },
        "item": {
          "id": "9e881cf6-7063-4a21-b527-785f8cb66975",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "dfbef2ff-bafa-40b3-b418-684050c649e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48648ab4-fc65-4a88-ab37-55355997eaf6",
        "cursor": {
          "ref": "6387f5de-c6b8-45e0-a4d4-f87b6f8035d4",
          "length": 157,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3902558e-5091-4004-ad7a-84cbabd218b9"
        },
        "item": {
          "id": "48648ab4-fc65-4a88-ab37-55355997eaf6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e4b4e5c4-9633-4775-b038-23557c8acbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fa9812-8821-42a1-a643-eb799363bd83",
        "cursor": {
          "ref": "13e90ffb-6cbb-4ad0-9d59-0df7cc71779a",
          "length": 157,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f7360846-516b-4aa2-bfc5-c8f187ea8d31"
        },
        "item": {
          "id": "37fa9812-8821-42a1-a643-eb799363bd83",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5b39abeb-d90a-4bfe-95d2-c15dbae6ccb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e21d4b-baff-41ed-9b54-74aa5d4f02e6",
        "cursor": {
          "ref": "0fc3b7bf-30bc-4f4f-bf31-7677d08363f6",
          "length": 157,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7f7b4dd4-7227-4606-a716-4519557bd2ac"
        },
        "item": {
          "id": "98e21d4b-baff-41ed-9b54-74aa5d4f02e6",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "656af93c-5278-4981-abd7-2e47062ae73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55a7571-c7c7-4ce3-befa-4909d9e02626",
        "cursor": {
          "ref": "804e215e-c3af-4230-b3a8-e79e7aef57ee",
          "length": 157,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2d2fa1a0-1546-4d01-97c6-24ec28acdcef"
        },
        "item": {
          "id": "e55a7571-c7c7-4ce3-befa-4909d9e02626",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "24ca76eb-df90-4894-a6fc-3a7c74250f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba64bb78-287b-489b-b0ab-7bfb1d348082",
        "cursor": {
          "ref": "5cdb99a6-e8be-48fc-aa64-21d4521b4fde",
          "length": 157,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2bed2a15-5a7f-4bd1-bed6-5f5883cf02ba"
        },
        "item": {
          "id": "ba64bb78-287b-489b-b0ab-7bfb1d348082",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6715bea7-edd7-4c4b-ad88-b68b811758d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b24492-2da5-437b-83cf-75b74a609c48",
        "cursor": {
          "ref": "2b8035b9-37e4-46f7-b270-ba84fbf604ce",
          "length": 157,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2c10fcac-6cf3-4a58-8190-b488dd2a1dcb"
        },
        "item": {
          "id": "65b24492-2da5-437b-83cf-75b74a609c48",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "a0a23875-b044-405d-84fb-fefe01b3dbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4043213-71d4-43ed-8346-bf9249de682d",
        "cursor": {
          "ref": "b5d93a81-9b76-4d7f-8a69-26e4c0db14f0",
          "length": 157,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "420fdabd-c37e-42bc-a947-98dce0564f3c"
        },
        "item": {
          "id": "c4043213-71d4-43ed-8346-bf9249de682d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4d2c1b74-8e8f-4b7a-9b3b-b1b6f6ead674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d8171c-4d95-4102-b852-cafa3ef112fc",
        "cursor": {
          "ref": "bd2960fb-e5d1-4446-9d90-d3337ce66a5a",
          "length": 157,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "19e301cc-60d0-4f97-94cd-624cb3cadeb9"
        },
        "item": {
          "id": "55d8171c-4d95-4102-b852-cafa3ef112fc",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "2d2b45a6-a841-4f18-a7a2-1a9723ea80c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def0310f-d7a6-45e6-91fb-3b558f289665",
        "cursor": {
          "ref": "6686800e-15fd-4fda-a629-699489408209",
          "length": 157,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "296242c1-352c-4d01-bd94-4b7338b1b1fa"
        },
        "item": {
          "id": "def0310f-d7a6-45e6-91fb-3b558f289665",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4ca4a598-4cf3-4ab8-b642-89c3775e4d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1142,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa8f1c0-68ae-449d-9295-0909141c093e",
        "cursor": {
          "ref": "34996df3-9f9b-42c1-af7c-4839d92ebd6d",
          "length": 157,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "25d11f95-83e6-4750-9097-4a34b3442eb2"
        },
        "item": {
          "id": "4fa8f1c0-68ae-449d-9295-0909141c093e",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "7bc0c54a-e156-4120-93f7-e3be85c1505d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07499553-0b77-4dac-ba07-5774387bdae7",
        "cursor": {
          "ref": "6028d8aa-2012-478c-a32c-66583277946f",
          "length": 157,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f34bbb78-48c7-48e3-b60d-d74802e489cb"
        },
        "item": {
          "id": "07499553-0b77-4dac-ba07-5774387bdae7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0eab083c-58dc-4299-8c86-ee934dfe0a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f315598c-fcc1-4a4a-a712-91dc876e99d5",
        "cursor": {
          "ref": "9967e0da-ab5e-4942-bb32-0736962055d1",
          "length": 157,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cc3c5ac4-a0b1-44d5-a81b-790e8f2b386f"
        },
        "item": {
          "id": "f315598c-fcc1-4a4a-a712-91dc876e99d5",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "ba0c01bd-7f17-4565-81c0-5fe63f909422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcc3ad4-0388-4a8f-aa34-c5d5b4951427",
        "cursor": {
          "ref": "16a86046-d9ef-4c32-86fd-48f3ecc1af50",
          "length": 157,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6d3c5228-b8f2-44e7-ab6f-fcf94a9a67c1"
        },
        "item": {
          "id": "2fcc3ad4-0388-4a8f-aa34-c5d5b4951427",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "2ce5641c-9190-4ceb-9b66-16ba50b9f17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f2a722-1a52-4df6-943a-b1cc449d2146",
        "cursor": {
          "ref": "37348ae5-d052-45b4-9966-8e34756e0a63",
          "length": 157,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4f8fa6d7-0577-42a9-9209-12548f5a1c72"
        },
        "item": {
          "id": "b0f2a722-1a52-4df6-943a-b1cc449d2146",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "85f0eea5-fb59-4221-a012-a4cd0631c52f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb544a1-dbdf-489b-a91a-07ae481a0e66",
        "cursor": {
          "ref": "f1780332-75ee-4077-a7a6-4fe9e6defc65",
          "length": 157,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "79d48ce1-52b6-405b-bcf0-e07793b03107"
        },
        "item": {
          "id": "fdb544a1-dbdf-489b-a91a-07ae481a0e66",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "a422b9c7-af55-4486-95f8-9def0130794a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 52,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104aab7b-76e3-4961-a149-1858f81d78b5",
        "cursor": {
          "ref": "88e2bc85-f39a-4413-a744-7f8fe102d91d",
          "length": 157,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f24c5577-0deb-4184-a8cd-cccf37a503e4"
        },
        "item": {
          "id": "104aab7b-76e3-4961-a149-1858f81d78b5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f57227aa-86fd-424f-9088-ed51c5fa2fef",
          "status": "Created",
          "code": 201,
          "responseTime": 719,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined",
              "stack": "AssertionError: expected 'did:web:dev.vc.stg.mesur.io:v1' to equal undefined\n   at Object.eval sandbox-script.js:3:42)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18f8ddc-04e3-46a6-81e6-f1b127a9769b",
        "cursor": {
          "ref": "29844cf5-fe29-4782-8259-52e8754d5a75",
          "length": 157,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8c319157-678f-4b7c-ae8d-77e5015b7d13"
        },
        "item": {
          "id": "e18f8ddc-04e3-46a6-81e6-f1b127a9769b",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "476d3e81-4590-4b41-9457-422660ceb5cb",
          "status": "Created",
          "code": 201,
          "responseTime": 447,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9b6044-0277-47dd-b134-2d8de17b7745",
        "cursor": {
          "ref": "8086d4b5-609c-44b0-a35e-b1059e8f26de",
          "length": 157,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "56b262f6-d6ff-45fd-8991-04c757f21ab5"
        },
        "item": {
          "id": "3d9b6044-0277-47dd-b134-2d8de17b7745",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4cc640ff-5561-4292-8e36-efe1fdfdd5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:44)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:44)"
            }
          }
        ]
      },
      {
        "id": "a930697c-bdd7-4d2a-80ca-8c22146d3dfa",
        "cursor": {
          "ref": "a8ed1b72-767c-479b-98f1-be29d658b74e",
          "length": 157,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bc3e691e-5b8d-47c4-8ea0-ca854c9a9cd2"
        },
        "item": {
          "id": "a930697c-bdd7-4d2a-80ca-8c22146d3dfa",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6b71b0f0-e265-471e-9bee-a9a04769cff1",
          "status": "Created",
          "code": 201,
          "responseTime": 507,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f263409f-f7cf-464d-ba9e-761a7cc0cb22",
        "cursor": {
          "ref": "7e392573-33bb-422c-b969-acbce038935c",
          "length": 157,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b086ee86-a0f0-40c5-bcd2-54802b0a90cb"
        },
        "item": {
          "id": "f263409f-f7cf-464d-ba9e-761a7cc0cb22",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9eb5ef0a-0c28-4de0-8905-ca4959685fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "37ab7b6f-bb7a-4129-aff8-286d1dfb3901",
        "cursor": {
          "ref": "f6bba535-4e3b-4a23-bfbd-79cedad2dd39",
          "length": 157,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fb5269f6-da8e-4677-94d1-4a4ddca19550"
        },
        "item": {
          "id": "37ab7b6f-bb7a-4129-aff8-286d1dfb3901",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "90df7e45-c4b3-40c1-ad17-5a64fc0fa677",
          "status": "Created",
          "code": 201,
          "responseTime": 440,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c34bbc-73a4-46c8-9018-f4298555f519",
        "cursor": {
          "ref": "f8f3c4cf-a40d-4e51-9ce7-798f033d1f3d",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1f3daa30-5693-4f57-ab37-b10afd0bb0b8"
        },
        "item": {
          "id": "76c34bbc-73a4-46c8-9018-f4298555f519",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1776ac78-5a10-4959-8e0e-c27fd4c010d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c34bbc-73a4-46c8-9018-f4298555f519",
        "cursor": {
          "ref": "f8f3c4cf-a40d-4e51-9ce7-798f033d1f3d",
          "length": 157,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1f3daa30-5693-4f57-ab37-b10afd0bb0b8"
        },
        "item": {
          "id": "76c34bbc-73a4-46c8-9018-f4298555f519",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1776ac78-5a10-4959-8e0e-c27fd4c010d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1970d840-dbb9-47ec-99ed-0a13ed7d5d6d",
        "cursor": {
          "ref": "5b2fb8ee-542d-4929-9001-8e85e1fd6168",
          "length": 157,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ad1e94aa-964c-4b11-8ef3-3f14a2ad5bd4"
        },
        "item": {
          "id": "1970d840-dbb9-47ec-99ed-0a13ed7d5d6d",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "180fe3ca-ba6d-478a-bef0-7e894c02c702",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 17,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6c7eea-8114-41ab-bef6-ffdf1578a34f",
        "cursor": {
          "ref": "64e987fc-dbce-4125-8e66-ee8f82dec5e9",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b097a628-a86c-45a5-8666-103ee0357adf"
        },
        "item": {
          "id": "6d6c7eea-8114-41ab-bef6-ffdf1578a34f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "af9a8a31-e53d-4165-aa6b-e2c5c13cf4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6c7eea-8114-41ab-bef6-ffdf1578a34f",
        "cursor": {
          "ref": "64e987fc-dbce-4125-8e66-ee8f82dec5e9",
          "length": 157,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b097a628-a86c-45a5-8666-103ee0357adf"
        },
        "item": {
          "id": "6d6c7eea-8114-41ab-bef6-ffdf1578a34f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "af9a8a31-e53d-4165-aa6b-e2c5c13cf4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe6670e-0072-4245-95f0-cf502d1d1322",
        "cursor": {
          "ref": "80f1f5dc-1894-4009-8bf7-e68fc587b9ce",
          "length": 157,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1b42c111-7677-488d-9189-a546f302a223"
        },
        "item": {
          "id": "cbe6670e-0072-4245-95f0-cf502d1d1322",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0ae1e137-f8bd-4cb4-9a7b-2b4bb50c49f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c885211f-a4f0-4db7-81d0-dc1fe748a291",
        "cursor": {
          "ref": "1108df46-3ec3-4e38-aa33-c867c57789b3",
          "length": 157,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "57d3b0c2-98ce-44a8-b092-b494b912d8b3"
        },
        "item": {
          "id": "c885211f-a4f0-4db7-81d0-dc1fe748a291",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "40053516-6732-41d3-8b2f-1cc24a68093d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe37fa8d-86c4-4aa9-8cad-69129b3035ec",
        "cursor": {
          "ref": "ab514889-0802-4e49-beae-496b97254933",
          "length": 157,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "46d5071b-0f1f-4340-a6da-f9d5b883d6f4"
        },
        "item": {
          "id": "fe37fa8d-86c4-4aa9-8cad-69129b3035ec",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5e60375a-81ff-4bc8-b263-bb54013de0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e11c70a-42a0-423e-a522-5dc13e778133",
        "cursor": {
          "ref": "123b54fb-2ce1-4fd4-a712-4e13bca181d4",
          "length": 157,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9688484b-aa48-4595-9e85-4bac428055d1"
        },
        "item": {
          "id": "7e11c70a-42a0-423e-a522-5dc13e778133",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d19a1995-4937-4095-998f-20615c2cf714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410c1f8b-4d1d-490c-b831-271b64f6d5c2",
        "cursor": {
          "ref": "779e8623-e59e-4dda-9045-e82daa73c0e1",
          "length": 157,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a0886a9b-f775-4d39-a2ab-97bf642baf00"
        },
        "item": {
          "id": "410c1f8b-4d1d-490c-b831-271b64f6d5c2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fcbc0859-5e19-471d-a973-286927258417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4766d2ab-40b1-46de-9920-1c3ee202c10d",
        "cursor": {
          "ref": "e0c70a7f-26a6-41d3-aa62-545460902cf6",
          "length": 157,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c988ca13-948d-47ea-8527-6674b50b1630"
        },
        "item": {
          "id": "4766d2ab-40b1-46de-9920-1c3ee202c10d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ec6c0ff3-1ac8-49ee-8895-00c5e5b6948f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa637bd-ebd2-4849-8b02-803c7a7e693b",
        "cursor": {
          "ref": "bea24d56-33a0-4fb8-b7e3-6771ab7366ab",
          "length": 157,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "eb0c1efa-755c-4dd3-8b86-61d0816def4c"
        },
        "item": {
          "id": "0fa637bd-ebd2-4849-8b02-803c7a7e693b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d3d1bb8e-a690-4cfa-bac4-09352e5cce90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1c84fe-055c-46cd-9c58-0dd44edbc17b",
        "cursor": {
          "ref": "f665121f-d7a8-4791-b1e3-a290fc014216",
          "length": 157,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "70002bd3-b131-46a0-b3b7-a245d0ac059e"
        },
        "item": {
          "id": "ac1c84fe-055c-46cd-9c58-0dd44edbc17b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "89dd7e2c-41d5-4a7f-87e2-a593831d997d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eccfe81-1cd7-4688-82f3-c4ceefc813fb",
        "cursor": {
          "ref": "f65bb24c-8dc6-4f34-b2be-2873bc7f311b",
          "length": 157,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cef53cdc-2a9e-4700-9403-aab5e09f7f58"
        },
        "item": {
          "id": "5eccfe81-1cd7-4688-82f3-c4ceefc813fb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "13541c4c-9a85-435f-b4ff-462611e30fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0243494-7af7-4284-a8b1-86f788cc40ff",
        "cursor": {
          "ref": "9adbe7af-96f5-485b-b003-6165cf356ab2",
          "length": 157,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a7031081-83ee-44a2-be47-798d998c564a"
        },
        "item": {
          "id": "b0243494-7af7-4284-a8b1-86f788cc40ff",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e32b58f3-a9df-4129-8bb4-61f2e7e04a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206b6a3c-e3bd-4c6a-a488-66ca273e8660",
        "cursor": {
          "ref": "317eea2b-682a-4803-9855-47fed121f5b7",
          "length": 157,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6d22ba57-579d-423b-8aeb-dac99f4bc7b8"
        },
        "item": {
          "id": "206b6a3c-e3bd-4c6a-a488-66ca273e8660",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2039dabf-8029-4de5-8d65-30958a30f60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68962549-6d82-4983-bb3a-8bdd13d099da",
        "cursor": {
          "ref": "0023142b-b8ce-4b30-83d3-53ef6db7748c",
          "length": 157,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "10457ebe-294e-4e3d-a0bb-533fcdb217d5"
        },
        "item": {
          "id": "68962549-6d82-4983-bb3a-8bdd13d099da",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e033391a-433e-426e-a1fc-5fc3f740be0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca242c8-70d4-4718-8295-a2d77d3119ad",
        "cursor": {
          "ref": "68ab6a6f-afca-4942-aebf-93390a3d784b",
          "length": 157,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5edaa5c6-066b-42e4-bd9d-1205fdae1b93"
        },
        "item": {
          "id": "dca242c8-70d4-4718-8295-a2d77d3119ad",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d5c73ffe-9790-44b7-ba4e-aa7403f885ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45102386-de7a-4ea0-a33d-06ec7b477eba",
        "cursor": {
          "ref": "06f686f2-47fb-4c80-b99d-d505d4db86e6",
          "length": 157,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e07a13dd-c6cd-4487-89c2-4dfb9a5ef5be"
        },
        "item": {
          "id": "45102386-de7a-4ea0-a33d-06ec7b477eba",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "32a2f326-2669-4204-88ad-8089bd32961c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197b9da4-169e-4529-a9b8-943fe7cff9eb",
        "cursor": {
          "ref": "34637fdb-446c-4b45-b644-f22c69af0b34",
          "length": 157,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "63d445b8-4a39-417b-8a82-b109fdaf44d2"
        },
        "item": {
          "id": "197b9da4-169e-4529-a9b8-943fe7cff9eb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6618fd0a-f070-43f2-a4a0-98749e39e71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7e34b2-7104-47fb-99ff-24158866be29",
        "cursor": {
          "ref": "b260df9f-1613-410a-83dd-7d2199966466",
          "length": 157,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "99105194-a03b-4563-8ac8-c912e9c11e8f"
        },
        "item": {
          "id": "3a7e34b2-7104-47fb-99ff-24158866be29",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bece23eb-d42e-4829-a5ac-2600b152701a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b535847-fbd0-47f0-9ccc-5b7d2e5d447b",
        "cursor": {
          "ref": "937a3bec-cc75-4d7e-9a70-b05f9ee25790",
          "length": 157,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f57ba303-8fd9-4236-80ca-718d0ceec13f"
        },
        "item": {
          "id": "0b535847-fbd0-47f0-9ccc-5b7d2e5d447b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "846f024a-0e4d-4d8b-ae5b-7a09a67fc649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d55420-4a3f-479e-9b9e-c61c3e15f09a",
        "cursor": {
          "ref": "521895d3-100d-4825-a11c-e95a2114aaec",
          "length": 157,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c335732e-9fdd-4cfd-882e-263538bd04c0"
        },
        "item": {
          "id": "e4d55420-4a3f-479e-9b9e-c61c3e15f09a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "63db1c8c-287b-4f85-a059-ac409ffb126c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c876143b-8ff1-4a0d-a5f8-823e730e939c",
        "cursor": {
          "ref": "ea5e7fed-e889-4131-a615-469e070566fe",
          "length": 157,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c681d603-a0e3-4fec-b3d2-abda4b81ec20"
        },
        "item": {
          "id": "c876143b-8ff1-4a0d-a5f8-823e730e939c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fa478213-3180-4015-98ff-77d3551d970d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b14879-960f-49fd-8ffd-3983427e8cc5",
        "cursor": {
          "ref": "8703077f-f95e-4e3c-8184-e774aced4f50",
          "length": 157,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6d7fee20-ab4d-4a3f-ba7d-ba30003cf516"
        },
        "item": {
          "id": "d5b14879-960f-49fd-8ffd-3983427e8cc5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "040d3492-af17-432a-ae60-4b94f327f979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1037,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6cc6c9-9cdb-4c71-b04c-1711fcb44225",
        "cursor": {
          "ref": "1b2b5dfe-a4b9-4cc1-abde-4887d924d20a",
          "length": 157,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a7625117-d504-4b84-9147-1eedc9fb4a9c"
        },
        "item": {
          "id": "3e6cc6c9-9cdb-4c71-b04c-1711fcb44225",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c1af8c12-da70-4754-8109-a4555c6e8c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1866,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9532836-fbd1-4f31-9aa4-65af57a04807",
        "cursor": {
          "ref": "b22f3ec5-4720-46f8-a19e-faefa01c8dd5",
          "length": 157,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5a07db34-ae74-46ab-83da-d33c8a7397f5"
        },
        "item": {
          "id": "d9532836-fbd1-4f31-9aa4-65af57a04807",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0b8952d1-cdc9-45e7-abf1-06c0cf9fafcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1488,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a61763-4a72-46e6-82f8-a6ea9705154d",
        "cursor": {
          "ref": "c47e6b95-b9cd-440d-b9d0-bfe1ff043ba8",
          "length": 157,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "30b6eb7b-a640-4bdf-8634-156e20ca8d06"
        },
        "item": {
          "id": "90a61763-4a72-46e6-82f8-a6ea9705154d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "57db5e70-ad5f-45be-b478-317560a8245f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d8a7c7-7201-4b6b-9eb7-4d124371b731",
        "cursor": {
          "ref": "77caaae3-e597-465b-8f50-33f08f91f820",
          "length": 157,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aae3911d-47be-40c4-b8c5-aa48dff8371f"
        },
        "item": {
          "id": "34d8a7c7-7201-4b6b-9eb7-4d124371b731",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6e045453-299e-4a18-a0a1-6c4fd43cef20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb3cb2b-1a2d-4c47-abd6-aac3cb4f7298",
        "cursor": {
          "ref": "809702d5-338c-4aeb-87ed-61099ec1d64a",
          "length": 157,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4a16d96a-02bc-4ddc-944f-983de790875e"
        },
        "item": {
          "id": "3cb3cb2b-1a2d-4c47-abd6-aac3cb4f7298",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bc68ff43-bd97-4e33-b86a-9df6e9f45acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1252,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a4e7d1-45e6-4dd9-a1b2-8584815c4039",
        "cursor": {
          "ref": "1a20870a-ed87-4764-9313-63be6836b2f1",
          "length": 157,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9b63302e-67ed-4468-8593-5320c713fe9f"
        },
        "item": {
          "id": "b1a4e7d1-45e6-4dd9-a1b2-8584815c4039",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "74fde92b-5fb1-4f3b-b72b-93ffcc079502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db057a67-3197-448c-8a84-e7c8a85e769a",
        "cursor": {
          "ref": "fe672adc-9671-41e7-8a8c-ba7792ddb9e2",
          "length": 157,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "78258a23-92c0-4aff-b08d-360f4eda45e7"
        },
        "item": {
          "id": "db057a67-3197-448c-8a84-e7c8a85e769a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7b76d7bc-bb9c-4691-9dbd-c8c5b6c9d7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5840511-f07a-4d1f-92bc-422ef45a1456",
        "cursor": {
          "ref": "574a9d1b-6bbb-47cc-9071-411b8fa7305f",
          "length": 157,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "36f60567-a642-45ee-b0bd-bd533474eb5c"
        },
        "item": {
          "id": "e5840511-f07a-4d1f-92bc-422ef45a1456",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "64bc9551-9a0e-4ea4-857d-45a1ab797d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359f795e-d7b1-4fa0-9c18-f455642e0cd4",
        "cursor": {
          "ref": "87599289-c882-44c5-949b-8596d9604387",
          "length": 157,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "34d67550-2b33-4f7f-ba0d-a3172244d4b7"
        },
        "item": {
          "id": "359f795e-d7b1-4fa0-9c18-f455642e0cd4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6c765167-bf18-4efb-8419-7ade19b6fd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea132732-d8b2-4dbf-9f54-81359b872c79",
        "cursor": {
          "ref": "5c4e2e84-f918-49b4-a916-618d150c1aaa",
          "length": 157,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fff037ce-8002-4ee6-9f45-f8da492cc395"
        },
        "item": {
          "id": "ea132732-d8b2-4dbf-9f54-81359b872c79",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "44b8715c-5926-4b57-83ec-dfe884ff2fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0946bfc8-622b-4f9c-932f-b4e5477202ed",
        "cursor": {
          "ref": "b206662a-9471-48c1-a8cb-bbc8b87fceb0",
          "length": 157,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "14ee0341-67d0-48a3-95f1-c076218b3275"
        },
        "item": {
          "id": "0946bfc8-622b-4f9c-932f-b4e5477202ed",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0a5e8006-760b-4dc4-bacd-682b137469ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8ac83c-97cf-4622-b678-218d0633608f",
        "cursor": {
          "ref": "2d0f0c57-9914-4fc8-8f58-140f873176c5",
          "length": 157,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c4429819-fd73-414e-843e-aa96e4159126"
        },
        "item": {
          "id": "ca8ac83c-97cf-4622-b678-218d0633608f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "adeae84b-47d2-486c-b14c-7df2e1bb062c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbd1ac7-9de9-491f-98d3-6a2a118c419d",
        "cursor": {
          "ref": "add1b535-23d9-4444-8dda-8ad68d40a8ad",
          "length": 157,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "731ffdce-c3bf-48a0-92a8-ebd402776c0e"
        },
        "item": {
          "id": "dfbd1ac7-9de9-491f-98d3-6a2a118c419d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "eb715747-8aa1-419b-aab9-2251c3f68c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3005dde0-bd10-4ad6-817e-d518ffbedde3",
        "cursor": {
          "ref": "3c7b9ff6-3e78-401b-be0b-3109bdfe2779",
          "length": 157,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c95bc959-3e15-4bf1-9944-73bdba1f222a"
        },
        "item": {
          "id": "3005dde0-bd10-4ad6-817e-d518ffbedde3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6705bc3f-70f3-4301-a966-c9e0b9697b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa34554-4ba7-4066-9ded-731d15a0dbc3",
        "cursor": {
          "ref": "f156933d-d787-4e13-959a-7aab007cd9e0",
          "length": 157,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b501d7ab-8d6b-4455-915e-49baa59ababd"
        },
        "item": {
          "id": "1fa34554-4ba7-4066-9ded-731d15a0dbc3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "440fef45-fc4c-47c1-a0e2-c3817088b063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf14cad1-3c75-44f0-a1f3-cb72d9152a49",
        "cursor": {
          "ref": "2443130e-578b-4ecb-a89e-ca5c24f108bc",
          "length": 157,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "70d9c835-3b40-4051-b3ac-543c6ad094ae"
        },
        "item": {
          "id": "cf14cad1-3c75-44f0-a1f3-cb72d9152a49",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b9e18591-b304-4e76-85ca-281f5c44a56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde42379-b1ca-4abd-b378-ea6791af2a77",
        "cursor": {
          "ref": "4cb7ffb4-32ba-44bc-aeda-3e77f68cd4e5",
          "length": 157,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dea4ca78-2e6d-4e72-9178-8cd5cbecb977"
        },
        "item": {
          "id": "bde42379-b1ca-4abd-b378-ea6791af2a77",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "babd22fd-a1c8-4c1f-ae8e-a2acd026b333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7156c9c-aed0-456f-a471-81cc0fb88a61",
        "cursor": {
          "ref": "5b0e0749-f36a-4ea2-84ba-cdd85ee6ff61",
          "length": 157,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d2c6c632-c0fb-4122-8b18-4ec1bacd3edc"
        },
        "item": {
          "id": "b7156c9c-aed0-456f-a471-81cc0fb88a61",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8b1a1adf-c1fe-44ab-b765-0aca24928b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e918c514-e46a-4f58-8722-4ec03b4cfcf0",
        "cursor": {
          "ref": "35869d73-f828-4843-b84f-db3a9f76b5a8",
          "length": 157,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e60a0144-71e8-490e-acb6-bd1844ad53dd"
        },
        "item": {
          "id": "e918c514-e46a-4f58-8722-4ec03b4cfcf0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ba45c666-1a39-45b0-b75c-9da9f332aeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e408da-da2a-4705-81ff-14370fd81260",
        "cursor": {
          "ref": "52829ee6-0382-4d4d-94a9-22dd548d1088",
          "length": 157,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c0365103-534f-4d8a-ac30-801e61c85231"
        },
        "item": {
          "id": "a6e408da-da2a-4705-81ff-14370fd81260",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1332c295-563b-4531-97e7-604bf5b4be1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c71bc7-d1c0-4c10-b5d2-cc34c1c642fc",
        "cursor": {
          "ref": "f4c92261-4877-4cde-89f6-dd5f6a8bed73",
          "length": 157,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4f28c3ae-970a-41df-83f7-0492849bdbe0"
        },
        "item": {
          "id": "e8c71bc7-d1c0-4c10-b5d2-cc34c1c642fc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "38728d1e-a4f4-4aa7-b499-5507bf34240b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18860d76-4b7e-4658-af99-b8ad06964283",
        "cursor": {
          "ref": "70eafe17-ec79-429a-a3ec-586e3a051a6e",
          "length": 157,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8c5210e7-0367-43d8-9106-020eb90e1e09"
        },
        "item": {
          "id": "18860d76-4b7e-4658-af99-b8ad06964283",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "250920ba-e3b4-4e7e-b854-589f64f70176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40f1b97-8f73-4377-955d-6ae329bd5ffc",
        "cursor": {
          "ref": "151fbbdd-2936-4556-9794-a8a1d6314d1c",
          "length": 157,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "584d0bde-0cc4-45f7-9a0c-0961bc93a199"
        },
        "item": {
          "id": "b40f1b97-8f73-4377-955d-6ae329bd5ffc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a518f57f-ae56-4a43-823f-5c6964255ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf72b95-2fb1-4fee-97b7-481b0e441810",
        "cursor": {
          "ref": "ff1cf8d3-1fa5-4fc5-9cac-ea16f4ddb3a7",
          "length": 157,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "de3ee47c-40a3-4760-9a45-5f1d8ade8759"
        },
        "item": {
          "id": "aaf72b95-2fb1-4fee-97b7-481b0e441810",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "01a04c53-91b7-4926-a3a0-627cfb16092f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73a4550-6413-44d0-9bf7-399fea2ffd57",
        "cursor": {
          "ref": "ae880ae2-1181-440d-8c50-c6683ef8db71",
          "length": 157,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "45074bd9-3a64-4b81-9e69-35dffee44f9e"
        },
        "item": {
          "id": "a73a4550-6413-44d0-9bf7-399fea2ffd57",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "46b4ec1d-1c9d-4238-a71a-e4d98306cb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdb0e84-63f4-45ee-810a-499f70df9b5e",
        "cursor": {
          "ref": "e1989cae-1d2a-4c71-b7b7-04fa03bb378f",
          "length": 157,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "467dd872-0d07-4ee4-ab65-af35532d94e3"
        },
        "item": {
          "id": "1bdb0e84-63f4-45ee-810a-499f70df9b5e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b6c17242-4524-4f28-a828-f164e4470fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1260,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f645cf4-a51f-4c62-893a-56e204ef4a04",
        "cursor": {
          "ref": "6a0f92fb-08ba-4c07-baa1-204dee7e6197",
          "length": 157,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f230be40-b5b2-4529-b230-bf412f1e0d09"
        },
        "item": {
          "id": "9f645cf4-a51f-4c62-893a-56e204ef4a04",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "dbc07884-d0a4-4286-8308-2bc28a4b912a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0c8b30-c167-4571-b97c-1713a79f4d33",
        "cursor": {
          "ref": "6ea04758-e922-41e5-a873-f26f6c789988",
          "length": 157,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1031a36d-b072-44f4-8b44-920f9a92c732"
        },
        "item": {
          "id": "1a0c8b30-c167-4571-b97c-1713a79f4d33",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "eaf0e846-cb5a-495e-bdb7-f3969fe29896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9f8804-73a1-4f83-a949-818cce1a054a",
        "cursor": {
          "ref": "73478b0a-5040-4de5-b784-712b878b7e20",
          "length": 157,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8cfac91e-9e22-42b3-8cee-71c834b8087f"
        },
        "item": {
          "id": "ac9f8804-73a1-4f83-a949-818cce1a054a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a2d9e8c3-4262-4adf-b1f9-dfaf76e2cb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0148425f-c076-4070-9a2f-6b9bb8bbce65",
        "cursor": {
          "ref": "e1901beb-2ab5-427e-9820-6d674e8a5b2d",
          "length": 157,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7bb6b4e4-d0f9-43f6-82cf-0b23d15d6870"
        },
        "item": {
          "id": "0148425f-c076-4070-9a2f-6b9bb8bbce65",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9f64b8c9-72cc-4570-8ac4-ad5bf4ce75be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c6af5e-8278-42ec-820b-2b5b82dcd606",
        "cursor": {
          "ref": "b1464efc-c23a-442a-82ea-79fd6aa9c735",
          "length": 157,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4abde754-c558-4edb-8936-d442b7730ae2"
        },
        "item": {
          "id": "04c6af5e-8278-42ec-820b-2b5b82dcd606",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3342ac2a-0b27-4e60-8a26-1e9ed70eb361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06b0e74-37a4-4143-9fc4-0097b5a6cd7c",
        "cursor": {
          "ref": "8a5f7aec-fb62-4d1a-a783-49d0a3302256",
          "length": 157,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5152d1c4-2e58-4804-905d-d3fd595357c3"
        },
        "item": {
          "id": "e06b0e74-37a4-4143-9fc4-0097b5a6cd7c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b84d6354-284b-4d3b-8d66-4fd17cbaea88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f0aef2-cbaf-4e6b-a576-ccc99cd2c911",
        "cursor": {
          "ref": "c73452eb-6d35-4133-a8cc-fa0bb2d84018",
          "length": 157,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "35aa7d91-4a21-4d25-bd9e-b7d6db753ef4"
        },
        "item": {
          "id": "92f0aef2-cbaf-4e6b-a576-ccc99cd2c911",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "79201ced-957d-4d77-b155-28e66fc385d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a0d5a0-daa4-45c0-8735-f109b7fca12a",
        "cursor": {
          "ref": "183264db-0d08-4cb0-8384-2bb70eacd6a5",
          "length": 157,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4f5113aa-6183-43a8-bba7-1a4dad4cd339"
        },
        "item": {
          "id": "a0a0d5a0-daa4-45c0-8735-f109b7fca12a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5847f242-08d5-40e8-97da-1cb5c2bb6df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d60cde7-4189-4420-a87e-0e20b6cca0a6",
        "cursor": {
          "ref": "e4e4602f-5288-4a42-8211-65bde5796e13",
          "length": 157,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ae2d0248-b9dc-4e2f-ab9c-378e6d74cf19"
        },
        "item": {
          "id": "9d60cde7-4189-4420-a87e-0e20b6cca0a6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e90d0a18-f60d-4c03-8cb2-a874eec5d44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a84641b-711d-45ea-982c-69b802ab953d",
        "cursor": {
          "ref": "0dc6cfa6-9278-437b-acbc-46e9653b3ebc",
          "length": 157,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "83dcf2a4-1048-4c2f-a8af-bc2bbee27100"
        },
        "item": {
          "id": "2a84641b-711d-45ea-982c-69b802ab953d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "782a8911-3b14-4c89-8c9a-b4d48d6cabae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf4a8f4-41e4-4236-983f-ca45e2951386",
        "cursor": {
          "ref": "425dcd44-044a-4762-ac0d-e7aeff400013",
          "length": 157,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "72f7dc29-35db-466b-860e-f31de114cc14"
        },
        "item": {
          "id": "ebf4a8f4-41e4-4236-983f-ca45e2951386",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ef2d2e91-df08-4a0e-b533-0b412cff31b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dd1f25-eb04-470e-a6b0-064aebc11175",
        "cursor": {
          "ref": "7314b470-aa8e-4eab-b26c-0e6dabe28c25",
          "length": 157,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d51195ce-97d0-41b3-8795-13d80e2578f7"
        },
        "item": {
          "id": "72dd1f25-eb04-470e-a6b0-064aebc11175",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "af6c680e-ebea-4dd7-bea2-ee23fdf22026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f67d496-f087-4a96-b0a9-4285498e2c8f",
        "cursor": {
          "ref": "5e32475a-d53e-4e65-861b-262ed13c6e03",
          "length": 157,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bdeb8ff3-b93b-4dfd-b98f-5721145e736c"
        },
        "item": {
          "id": "0f67d496-f087-4a96-b0a9-4285498e2c8f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "12c3a8b6-a05f-467b-8279-6cbae05aa62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20df0e88-00ba-49ac-be65-8c9e475b57d2",
        "cursor": {
          "ref": "09ee1fb5-f417-410b-b7c5-bea181e9d28a",
          "length": 157,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bcbde7a1-0df4-44a4-9d74-345987c4c3a7"
        },
        "item": {
          "id": "20df0e88-00ba-49ac-be65-8c9e475b57d2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "71be67e6-6ded-45c9-8836-3b59304b6c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e44865-65a9-443d-a2f7-2bf7e8bd275e",
        "cursor": {
          "ref": "bd2b272c-b0b8-4bd3-ae78-d51682957b4a",
          "length": 157,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "83690d9a-c931-4e69-bbef-780e79e2655d"
        },
        "item": {
          "id": "f4e44865-65a9-443d-a2f7-2bf7e8bd275e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "968a1508-db6f-4084-929d-1685fb2db1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583fb83f-5b74-49df-8ebd-79d357271658",
        "cursor": {
          "ref": "5fb1339e-a762-4ea0-aaa0-b76e1ec5995f",
          "length": 157,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c8de952f-470a-433e-9c57-8324b005080d"
        },
        "item": {
          "id": "583fb83f-5b74-49df-8ebd-79d357271658",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b77260f6-b376-465c-ae24-5f77d30c70ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7e4c15-a253-477b-aba6-8ae92526ae11",
        "cursor": {
          "ref": "b9301e2c-97c5-496c-a2de-8c23616167e4",
          "length": 157,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0eabea92-79d5-4171-b984-e156dd6317bc"
        },
        "item": {
          "id": "4c7e4c15-a253-477b-aba6-8ae92526ae11",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "83f9f69c-1c28-49d6-9f05-2a3e4a7f8c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b6f7ae-ba81-4475-9ce6-404b4931b672",
        "cursor": {
          "ref": "6f4365f5-77a5-4fb1-bbab-4d311557eb3c",
          "length": 157,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "56c140cd-af04-4891-9aa3-926137bed87f"
        },
        "item": {
          "id": "55b6f7ae-ba81-4475-9ce6-404b4931b672",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ffe464c5-cdba-41cc-bbda-8d88d0fe912c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be171aa5-1abd-4497-968b-c88ebbe5e589",
        "cursor": {
          "ref": "27ab6a40-a5b7-4ed1-bac0-ac9501a60a84",
          "length": 157,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d1550e8d-9dcc-4066-ab96-e02c77130de2"
        },
        "item": {
          "id": "be171aa5-1abd-4497-968b-c88ebbe5e589",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4a712d8f-55df-4b14-b65c-633280ac948f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f20f3e-b8a4-4bce-912b-a330f7c393bc",
        "cursor": {
          "ref": "9a62b683-48f1-479a-9dbf-fa42872b400b",
          "length": 157,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4d8ed26b-314c-40f2-9277-d328810e3e82"
        },
        "item": {
          "id": "40f20f3e-b8a4-4bce-912b-a330f7c393bc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "186d4792-8b23-4159-81a7-5f7b306f6997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f631a1ab-b60c-4050-bd02-e289726252cc",
        "cursor": {
          "ref": "1643cff7-3828-44a3-b448-076df7d26aab",
          "length": 157,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6ae637bc-08fe-4dbc-a0d2-4a7b64be7a75"
        },
        "item": {
          "id": "f631a1ab-b60c-4050-bd02-e289726252cc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f58d0294-e130-4a41-8caa-2e4390c981fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeb5652-2b48-4b69-b65e-e5cd32d2b6ce",
        "cursor": {
          "ref": "c08706b3-5004-4839-a472-81c2ba3ac1e7",
          "length": 157,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f44b82e1-c48a-4752-b4df-3338a405702f"
        },
        "item": {
          "id": "4aeb5652-2b48-4b69-b65e-e5cd32d2b6ce",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "538f5984-393c-462a-acde-89d0402f0e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc5ffff-15a0-48cc-9ace-ff89535d8084",
        "cursor": {
          "ref": "4a8c3061-90c1-497b-a522-5150cd00b293",
          "length": 157,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b1039cdc-427a-4234-88d8-65857ffbc993"
        },
        "item": {
          "id": "bbc5ffff-15a0-48cc-9ace-ff89535d8084",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8bd031b3-b094-4484-83d7-5dc995ccccb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f31ddb8-1789-4ca3-bd1b-acb9d20775a0",
        "cursor": {
          "ref": "f39870a1-6682-4d07-ad01-d9ed98eed0db",
          "length": 157,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "03a46343-d972-4c4e-b858-55cf2d5010c1"
        },
        "item": {
          "id": "9f31ddb8-1789-4ca3-bd1b-acb9d20775a0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d60b9e5a-a735-4d0b-9b3f-c3a80bbc6be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3473bd2d-da97-4f00-ba42-b1c3c5fe0732",
        "cursor": {
          "ref": "89426336-26a6-460e-9d33-f9a0ca07ba48",
          "length": 157,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1507ae88-9442-48b1-8a21-cb3a222cef68"
        },
        "item": {
          "id": "3473bd2d-da97-4f00-ba42-b1c3c5fe0732",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5d112164-dfe1-4727-ae73-c929375538b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42551860-674a-439d-bf75-a71f7ed87fcd",
        "cursor": {
          "ref": "7484fafa-58dd-4fc3-a25c-22981965ba9b",
          "length": 157,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8c328119-c79f-4f25-b07b-6e0596d1cbeb"
        },
        "item": {
          "id": "42551860-674a-439d-bf75-a71f7ed87fcd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0c3d2dd4-b504-4091-bb9e-b0a0abb18ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1124d5-b13c-4c85-aa2b-8ffadca78b32",
        "cursor": {
          "ref": "edb50085-aa13-4af6-99c6-4d02dbd2c84a",
          "length": 157,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "92df4c96-7c49-4fe0-ad83-f148e16c1904"
        },
        "item": {
          "id": "cf1124d5-b13c-4c85-aa2b-8ffadca78b32",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9e208f22-8496-40bd-ae62-489b70b53abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43148bfc-6a90-4a4d-8f39-807f1baf617d",
        "cursor": {
          "ref": "2fd60fd0-85c1-473e-ad4e-2bcac209d726",
          "length": 157,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ff406d53-7252-4337-9559-8877cdada668"
        },
        "item": {
          "id": "43148bfc-6a90-4a4d-8f39-807f1baf617d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a23096b4-f98e-4fcf-a5b2-98f6ee742a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26135f29-5996-4074-9521-7b8b1b32a044",
        "cursor": {
          "ref": "5ec5594c-ca78-475e-b468-c2f783033a3d",
          "length": 157,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9cabcf38-a209-4eae-9836-060e9d50d53b"
        },
        "item": {
          "id": "26135f29-5996-4074-9521-7b8b1b32a044",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a2a51316-e116-4434-91a3-9c0fe800eafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e97c70b-0f82-44ac-8f91-ea25896128cc",
        "cursor": {
          "ref": "3cdf0096-4060-42b2-bd3c-acc733daed7f",
          "length": 157,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b5cc6229-50f2-4ee9-b618-191cc83cb13e"
        },
        "item": {
          "id": "3e97c70b-0f82-44ac-8f91-ea25896128cc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "17d9db2d-6679-49b6-802f-17a034fada98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06522f33-aa5a-4f2f-bf64-aaf8e1644b39",
        "cursor": {
          "ref": "f2249273-9408-4e64-91c0-b7abe0d0c152",
          "length": 157,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "560917f6-1c0c-4cc1-8d20-28cd6085fde7"
        },
        "item": {
          "id": "06522f33-aa5a-4f2f-bf64-aaf8e1644b39",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "672e7c4b-aa25-4cf8-85a6-44e0e29d6c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4706f54a-351a-41d6-8834-7b70269be195",
        "cursor": {
          "ref": "753016e3-c56c-4fd6-b963-acb79127b542",
          "length": 157,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f2fb1d51-bf55-4428-97dd-d31ee215878a"
        },
        "item": {
          "id": "4706f54a-351a-41d6-8834-7b70269be195",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "33d065f8-ce7e-4878-8238-38512ce51e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcdc2d1-f2a1-4b39-8baf-404f8f63ced2",
        "cursor": {
          "ref": "52882a19-bd74-410c-a63f-82ec76012e5d",
          "length": 157,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ee3d40ff-09cd-4f5d-8ef7-83d4e573f210"
        },
        "item": {
          "id": "3dcdc2d1-f2a1-4b39-8baf-404f8f63ced2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "97226b41-aac6-4a45-9c33-cbf5010229a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ea8ca3-0c3e-401d-b1e6-0c0a980a47e1",
        "cursor": {
          "ref": "4981e066-bd59-4488-ad6a-b7796174860b",
          "length": 157,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1c6f15c8-51ca-4be3-9663-aab7668573fe"
        },
        "item": {
          "id": "d6ea8ca3-0c3e-401d-b1e6-0c0a980a47e1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "430c9f31-e298-4649-97dc-67830f4674ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172de5ec-85a7-4666-92a6-38f938c6622a",
        "cursor": {
          "ref": "4224bd94-0930-46a8-bc42-46f74ae37171",
          "length": 157,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7bf309f2-066e-4ef5-996a-eec8750ff68d"
        },
        "item": {
          "id": "172de5ec-85a7-4666-92a6-38f938c6622a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9a03c3f7-1f9c-49b3-87a4-fc1189179acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba03f3c3-b5a0-4969-baca-45ca3976f45f",
        "cursor": {
          "ref": "3b16c520-e05d-4895-831e-544d2d14fca2",
          "length": 157,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4a70dba8-4f20-498a-a4d4-44b91109e326"
        },
        "item": {
          "id": "ba03f3c3-b5a0-4969-baca-45ca3976f45f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "51215d2e-b789-4eb6-8155-415d6ba27c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb8afd7-9a7a-4906-8007-4bbc6f4014b1",
        "cursor": {
          "ref": "570c95db-0343-4290-b75f-beb41e3e5b7c",
          "length": 157,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "837da770-36fb-44ab-a560-65b572ad8d50"
        },
        "item": {
          "id": "abb8afd7-9a7a-4906-8007-4bbc6f4014b1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2fca4d50-613b-4eee-a62d-081dd55bac72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ef9cac-3e45-4f8d-92a7-8c71e577ed98",
        "cursor": {
          "ref": "ab6f3451-9820-4921-9f60-5219ffe4d7ae",
          "length": 157,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dbaa56c5-749b-4263-a8d3-6bd965fc3e2e"
        },
        "item": {
          "id": "c0ef9cac-3e45-4f8d-92a7-8c71e577ed98",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ac9671ae-2650-4780-94f4-ed8e5f8206dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53dbfd4-e1fd-40cc-b137-5362ad3f1723",
        "cursor": {
          "ref": "3d90c659-9b47-4d7d-a698-1935bb4b254d",
          "length": 157,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ac2c8b0e-29ee-4229-9559-1be4b61d28a9"
        },
        "item": {
          "id": "c53dbfd4-e1fd-40cc-b137-5362ad3f1723",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7f0f92b8-eedb-4e31-8720-2951a7942726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e5484c-49f1-46a6-82e6-3e24b2fe9370",
        "cursor": {
          "ref": "7dca67ea-45d8-4f7c-a9e0-70c1744402eb",
          "length": 157,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d02d9dfb-87ea-48ea-9a77-d0afbcf7fc11"
        },
        "item": {
          "id": "80e5484c-49f1-46a6-82e6-3e24b2fe9370",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "be662f61-e45a-41e0-b19c-2649df51db31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ef1fe9-37ac-4568-96b2-8b1b2877d242",
        "cursor": {
          "ref": "0313c7c8-8d86-479f-b4a8-c9918a4da8f3",
          "length": 157,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "554db718-4010-414c-9aff-fbeb2ee65953"
        },
        "item": {
          "id": "17ef1fe9-37ac-4568-96b2-8b1b2877d242",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c76d63c4-1dc2-4f0f-bb89-f56113562e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc1d2d6-28d2-4c0c-9775-fb17fbb879ae",
        "cursor": {
          "ref": "cd2cbe35-1cee-4d92-839c-3d51b71b86a1",
          "length": 157,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e8420234-62aa-4dcd-94d6-24d864c5d6fe"
        },
        "item": {
          "id": "5bc1d2d6-28d2-4c0c-9775-fb17fbb879ae",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4bdca6fe-da45-4d03-90d1-050b0dbf610a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bdbc13-a706-4f77-87ee-c79f4273b633",
        "cursor": {
          "ref": "6f5c25b5-abf8-4e00-aa01-095b39df8f86",
          "length": 157,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d6cc7cb2-3310-4792-b424-7de0da294192"
        },
        "item": {
          "id": "c0bdbc13-a706-4f77-87ee-c79f4273b633",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "70c6e429-cff5-46a6-9395-7cd9c58e9936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a991e0-1a8b-4a83-a1da-7f24128f37c4",
        "cursor": {
          "ref": "85dd2652-3da2-4b10-8d9e-3c5ca2ce9ada",
          "length": 157,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "713e14d9-d0b1-431f-a83c-6b59e4737b32"
        },
        "item": {
          "id": "f1a991e0-1a8b-4a83-a1da-7f24128f37c4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ecf8564f-df70-4f55-88cb-2771aa7aed45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773656a4-7a15-4a9b-954e-72e72e826de9",
        "cursor": {
          "ref": "3fb23894-6643-4233-a332-cde0f3544a3e",
          "length": 157,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "60b57dc2-e9f2-4748-be17-7fd2646c8c6f"
        },
        "item": {
          "id": "773656a4-7a15-4a9b-954e-72e72e826de9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0073a98d-564f-4b9e-87be-2cd51ced7c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66262a53-ed9f-456b-b7c0-974177ebb3b9",
        "cursor": {
          "ref": "69ae48a8-8405-4c94-8e25-057125588905",
          "length": 157,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b372a4d8-3577-4ac2-9168-fd33442de827"
        },
        "item": {
          "id": "66262a53-ed9f-456b-b7c0-974177ebb3b9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c8fd85a8-375e-48d7-999d-f79868a8057d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352110b3-df17-4a90-9b1f-02bd81f33804",
        "cursor": {
          "ref": "64ae5f27-9a43-45f5-ad7c-285b15ea257d",
          "length": 157,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "dc9b70d0-7ec1-462e-a2af-ad1921521b9d"
        },
        "item": {
          "id": "352110b3-df17-4a90-9b1f-02bd81f33804",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5adf6c8a-275e-4ee5-bc00-658a053aea9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7d3c41-3e7a-4030-b6fb-bcc85367f25f",
        "cursor": {
          "ref": "dd2109e9-e66f-4116-9e72-f746d5166c1a",
          "length": 157,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2282ba97-9923-4e9d-808e-7916da4be2d2"
        },
        "item": {
          "id": "9b7d3c41-3e7a-4030-b6fb-bcc85367f25f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "44d4f2f0-46a5-46d7-904d-0e76785cf032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9c52c9-59ba-426d-854b-44f665dfa863",
        "cursor": {
          "ref": "c4510044-4ec1-47ca-822c-491e0c5238c8",
          "length": 157,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fbfa5837-abc1-4ff2-b8a0-68aeae541ef7"
        },
        "item": {
          "id": "de9c52c9-59ba-426d-854b-44f665dfa863",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0c532f05-f6b5-48ec-af22-af32bc172374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df891c2-c041-411f-ac61-7c02172639f4",
        "cursor": {
          "ref": "e1ab6000-67f1-4353-a5d4-47c3392ee175",
          "length": 157,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "23fc8875-123e-4137-8ad3-996b75f8f52c"
        },
        "item": {
          "id": "2df891c2-c041-411f-ac61-7c02172639f4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e3382271-5a5d-410d-9548-8740f8ed3387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9599f97-c0fb-488d-9327-6c2428673d79",
        "cursor": {
          "ref": "435ef533-9b75-4b0f-976a-75140b72ddfc",
          "length": 157,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ebaf179c-d118-4d46-95e4-11d0485e46da"
        },
        "item": {
          "id": "d9599f97-c0fb-488d-9327-6c2428673d79",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d3425104-cff3-4010-8a74-f72b54b9f8b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10319c2b-0b76-4682-8ab8-fac0261515fd",
        "cursor": {
          "ref": "af597a6a-09e3-4388-915b-e63f218d5ce4",
          "length": 157,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3e2464b9-2239-4242-bfb8-77309a99fdd2"
        },
        "item": {
          "id": "10319c2b-0b76-4682-8ab8-fac0261515fd",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ec623d8e-ac3f-45dd-986d-76a749b3ddd6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 18,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25879588-7506-4aa6-bf24-14083b13ec49",
        "cursor": {
          "ref": "43fb5635-60b0-4672-96ba-5cfc354abaaf",
          "length": 157,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5bb0a541-f3b5-4c37-af19-b6f332893923"
        },
        "item": {
          "id": "25879588-7506-4aa6-bf24-14083b13ec49",
          "name": "credentials_verify"
        },
        "response": {
          "id": "639dce27-b02b-4258-a79d-39eae5656154",
          "status": "OK",
          "code": 200,
          "responseTime": 636,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db574d6d-5e4a-48e4-b326-409017e0638f",
        "cursor": {
          "ref": "2ad4db58-aaa3-49c3-9105-35b047b587d7",
          "length": 157,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "29a5fe8b-a228-469e-aecb-dc10de761727"
        },
        "item": {
          "id": "db574d6d-5e4a-48e4-b326-409017e0638f",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "5d0db48f-8f36-4be8-9e02-ccad3dd65c0b",
          "status": "OK",
          "code": 200,
          "responseTime": 2896,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37365145-9656-468c-be5c-c6e3564056ac",
        "cursor": {
          "ref": "ac53c21f-8261-448a-94b6-8d2b23a0b2d5",
          "length": 157,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "def0f46c-95ed-4998-93b3-8adb663276b2"
        },
        "item": {
          "id": "37365145-9656-468c-be5c-c6e3564056ac",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "02e7a162-be3c-4ee8-b141-c5ca73b00a58",
          "status": "OK",
          "code": 200,
          "responseTime": 2200,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c74ec4-3399-4fbf-a8f9-c6248490da84",
        "cursor": {
          "ref": "57e51cf9-0ad3-48c5-b528-e96ce2b7e98f",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a59cef29-1296-4a42-a9a9-d704c564a509"
        },
        "item": {
          "id": "e5c74ec4-3399-4fbf-a8f9-c6248490da84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fc3b0697-f38f-4439-8574-5f692bfba630",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 90,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c74ec4-3399-4fbf-a8f9-c6248490da84",
        "cursor": {
          "ref": "57e51cf9-0ad3-48c5-b528-e96ce2b7e98f",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a59cef29-1296-4a42-a9a9-d704c564a509"
        },
        "item": {
          "id": "e5c74ec4-3399-4fbf-a8f9-c6248490da84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fc3b0697-f38f-4439-8574-5f692bfba630",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 90,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c74ec4-3399-4fbf-a8f9-c6248490da84",
        "cursor": {
          "ref": "57e51cf9-0ad3-48c5-b528-e96ce2b7e98f",
          "length": 157,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a59cef29-1296-4a42-a9a9-d704c564a509"
        },
        "item": {
          "id": "e5c74ec4-3399-4fbf-a8f9-c6248490da84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fc3b0697-f38f-4439-8574-5f692bfba630",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 90,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707add2b-f174-492e-b9a0-7f36e6c6d55c",
        "cursor": {
          "ref": "137214cc-1a68-460f-aa6d-b9130406d3e7",
          "length": 157,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ce166447-74f6-4257-ac95-1831c8b4799e"
        },
        "item": {
          "id": "707add2b-f174-492e-b9a0-7f36e6c6d55c",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4a1e9d91-d860-4374-b735-7498298fc090",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 16,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a208a217-95fb-4a58-9b6d-6decc85374ae",
        "cursor": {
          "ref": "c26871dd-6723-4663-9518-d2f6163e3366",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bdfeeb3c-119f-498f-9228-f286a6cec5a4"
        },
        "item": {
          "id": "a208a217-95fb-4a58-9b6d-6decc85374ae",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6538cc66-6ad9-45a8-8b51-134b7486bcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "a208a217-95fb-4a58-9b6d-6decc85374ae",
        "cursor": {
          "ref": "c26871dd-6723-4663-9518-d2f6163e3366",
          "length": 157,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bdfeeb3c-119f-498f-9228-f286a6cec5a4"
        },
        "item": {
          "id": "a208a217-95fb-4a58-9b6d-6decc85374ae",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6538cc66-6ad9-45a8-8b51-134b7486bcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:154)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:154)"
            }
          }
        ]
      },
      {
        "id": "bf3842de-8eac-4de8-acba-5961684922aa",
        "cursor": {
          "ref": "f4efb4a5-11ea-4d2b-a674-5f0db395ecde",
          "length": 157,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "08a36c50-dfa3-42a8-a0a6-f1c8386a31df"
        },
        "item": {
          "id": "bf3842de-8eac-4de8-acba-5961684922aa",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "8063a1e9-96d8-49ec-a28f-e6f4aebe450c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "ada526e3-3433-4dd6-b456-8b35536ce974",
        "cursor": {
          "ref": "8d4cbf64-da21-4efe-b97e-36b1553a7f7c",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7aa4feab-ec10-461c-b841-709ce1f5de48"
        },
        "item": {
          "id": "ada526e3-3433-4dd6-b456-8b35536ce974",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "44a15a97-cbc5-455b-b6b6-72cb9c12ae0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada526e3-3433-4dd6-b456-8b35536ce974",
        "cursor": {
          "ref": "8d4cbf64-da21-4efe-b97e-36b1553a7f7c",
          "length": 157,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7aa4feab-ec10-461c-b841-709ce1f5de48"
        },
        "item": {
          "id": "ada526e3-3433-4dd6-b456-8b35536ce974",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "44a15a97-cbc5-455b-b6b6-72cb9c12ae0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 14,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af63743-5657-447c-b5dd-08f923889be9",
        "cursor": {
          "ref": "e3314dfc-3f3d-4d7a-857d-8cd0a4418c4b",
          "length": 157,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d7941ce3-8b24-4d6a-a332-e94244a5613f"
        },
        "item": {
          "id": "4af63743-5657-447c-b5dd-08f923889be9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "ec80449e-1349-4783-8953-c3b2bf084039",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 27,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}