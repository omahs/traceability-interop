{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "55023103-b792-4e2f-91c1-48523f413a6a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6b04004e-10b9-475f-b252-f8393a90b0cd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a7e3f72-f4eb-4ef7-8030-7ff1f034fe14",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e5796da5-9a5e-438e-b3d7-b1214ca9fad0"
                }
              }
            ]
          },
          {
            "id": "46e49e79-8edc-46bc-855b-bf481db156a5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "582b3226-00ba-4b11-8970-90fe6ffe608a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f480ba96-7470-4351-9aac-9983a0555218"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0a936230-fd69-496d-b920-01a4edd640bf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "76dc8b25-aae9-4f51-8183-88512c7d9736",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc363bad-d8b1-4a1e-a0cf-af4731697f74",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44ca5e61-0971-4fa8-b364-b3c56b6ae651",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1567f064-767a-4e01-b449-729fb41fb894"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74484f67-0ff7-4e8f-a85b-41e6f45ff0ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5728ee06-5bff-40c9-ad3f-8cf50f5cd351"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f53f94da-ee27-46fc-b768-67a6525f0603",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3baade03-7052-43c0-afd9-93d3f47dd0e6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e90c31af-d865-46eb-90ba-dc3e49a8b9d4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1877057d-9fa9-4547-bc3e-cade2e8c01cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16699d6e-96a3-42ff-a7cb-6f83e3621126",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50aa86d2-e515-4826-b9fb-e5064ab27c92"
            }
          }
        ]
      },
      {
        "id": "54681c5e-eb91-4350-92e4-83a225facab7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "37b8dc04-04d9-4693-8b72-ef0bcb4a4976",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9416e4d-adac-42fc-b007-04c98a1bdb13",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e54d3624-ca91-477f-b73b-624c3e64d73f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fb1930-2d6c-4813-8acf-213cd67e83a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d19d6a1-f146-4b1a-94bc-356c96582920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a43e11-4a56-4d31-8663-683aa5aa5e84",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24e63f5-b633-4ab9-ae13-aa7980d0bd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37fd2550-754c-4ac9-8afc-c2e205c7a38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d0bbf6-f1ea-4b08-b56b-5eebe7a44e3f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec75775e-64a7-4efc-a681-8d6a357a2e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "057f9f5a-eb07-4374-bfee-9f75da1e1a4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d17aede-0909-4fb5-81b5-876c1d34fe1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16922bee-2c8b-4b00-96c9-a003b469ada0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a12f9ac-6b45-450e-b062-9eca9312f6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c73d2c1-42e3-4338-93a7-2c4351d5653c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e03dd2-0b8e-49bf-95f4-8b5022f93581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dba3f2-6668-45df-98ae-a2ff55163e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4003964b-d37e-4ed2-b0be-77ba0d4e1c5f",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758b30c0-de56-424f-a428-1cab2d1b80f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6724b482-64ec-4a12-baa1-93d1da3316f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79e6235-e255-46a1-98a4-2cfdb8532aa5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "74096aa0-7665-4f82-a3c3-e00f379ba657"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "66aaeb6b-825c-4cf1-a812-2bec1eedf490",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48b3c522-c21d-4c92-a1ae-6709fa3719fe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68e020d8-1d40-49d5-a578-bb95e69c3b52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1072d243-65ed-46e8-8f4c-26fa33806389"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6fa6113-2aec-45d0-ad54-d7e74e2620bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "30531eca-a4e8-4953-85c0-c6089287613d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23cbc173-5174-4e59-b01f-b9927583264a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9131f319-8aae-41e8-9725-a8460bb2d559"
            }
          }
        ]
      },
      {
        "id": "5383a1cf-6830-4e1b-9acd-6f97faae4c6a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "004b8f68-8677-41a5-94c0-2da4eef95c62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93264d93-5024-4512-abba-4946277d952c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b6eea308-e2f9-4344-ae53-cd597f3acdd5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4d0d30-a54b-44da-a0d7-cdd414285ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224de5e4-32da-4b0e-aae0-3467f56f8082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253f9544-13df-408a-82ef-5689910aaeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96b2200d-0793-4a57-85c6-68e86a6c1ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1678da-dc28-4910-8fe2-6ea0e78521fd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a098694-d797-45bf-9aa3-7ac7067e42cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0f90c0-ad81-43ce-b246-8a51a38b865c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5842cd3-fb91-4523-be18-bcdee2fd6eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d98a4cff-785f-475b-acdb-89f0243aa9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d58a5d-cd62-4757-9e51-d654bd25fa0a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfddcbf-f619-4e10-a649-87777a79b1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e7a533-6075-4bdc-8301-2c4b4fa46a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a94ee5a-5fa2-4369-ae35-846976ad926c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1e32604-8936-4ab5-b179-ae6ab5973c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2594426-6786-4e00-9288-059edaf1fd14",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765515b6-2812-4053-aa44-8591250981ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78509433-0dae-4049-8286-625b5d5e76a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1403c19-a198-40f2-8b72-aecd517db141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cad9429-24b5-4804-aa46-5c7a75503840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d75f80-1f19-4d89-8a8c-13f48608def9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da017b86-918d-41dc-90e5-43f738358acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c94bfb-392c-4437-854c-7105ecb71e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d2e52f-d757-4513-b9f2-b44391266c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecaa0a88-bad1-4513-969c-1c0c207cb4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a612f784-f1c5-46e3-8cff-65b2a8b325a2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d828735-7614-4d5c-a288-fe2dc747cfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9674470-6a9b-4646-bd5c-c02ace3fee0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b951ed-6d71-4166-a4c5-725755984083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9e27426-b41a-4e01-af49-1409c413ba16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4a33d2-f22b-4f08-bb9b-9ed9079cf684",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82ddca7-539f-44c8-9030-a0b52615d7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae0eea2-e17d-4c3c-aa27-5dfd6ec2ae35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d503ecec-0e8e-44c1-89c7-15b27123ddb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "437b5547-ff08-4779-934e-9f6651dd6207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f52e00-fbfc-4204-a67a-1e64e9c1df31",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565f4f6c-d472-4bd6-993c-6e6583ce4cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b588ffda-3ea9-44f7-b205-c566ff9a18d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d682a4a8-0811-4d93-a5d3-ac5dc57cdcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "860b7a2a-bacb-4064-aad3-70b4766408b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b25c04-284d-4440-87cb-e8ab495e8b62",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7931f923-0807-46e8-9c6f-ce59602ba08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b68f23-3ce4-4d80-8586-7dd8ee5a5e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b6785f-8c58-4f44-a13e-05d340d4b29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51946534-0fea-4d36-be18-d36e3be328fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fae276-53f0-48ab-857e-f3e2d309ac57",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf6669c-3761-47b9-9a84-01bc32eea6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157930e7-781e-43a4-997b-2d4f41218ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52b312a-92f3-40a5-982b-02c1b674d2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b188155-418c-47b7-9221-373409a29dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc00483-a5de-46b2-8696-8af065efa65a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3fec32-1140-46d0-8045-d1e13686989b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd81fd0-66ed-4fa5-bacd-2481c43426eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356ba0d3-d107-4b4f-a81b-e443d583eff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0215c8bf-8df7-4c06-a036-40cd1b93ded1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f699f609-cefa-4a2a-af87-274c68e406f7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5940aa-d256-4189-b5d1-79a4e6ddb86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4b2122-db96-42b1-8b8d-19f646f08a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e865f85e-c748-4bb4-ab3b-e5273612014b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03422a5e-dfe5-43ce-a338-7e3281e5501c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42dee25-cb0e-464f-8eef-8bfd917171a9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e05953-2399-4e77-a9b8-27a73ddd3164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee93602-1a68-423b-9376-ad3f355daf64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0617d960-da3c-4097-97c1-55b0b6ea4396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3307cd7-cda7-4800-b2bc-0bee51f0498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b82a2a-6984-4ab7-92d1-ccd42f286369",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ddcee3-7f24-4ffb-b796-3b340688bffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62fb18b-ddd9-46fb-80db-1b8aec07bcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4601324f-a590-4371-81cb-2704153d57ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fb85ae5-5e90-46c5-879f-45db7351facc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c7bacf-f67b-41e4-9316-91df17b617d3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee39c28-9bbe-4a08-8d00-c5640cf1be3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0122a245-6761-424f-a460-2f5d4140d4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97543f8-116c-48d1-acdc-6a690fc5d76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7578c5f-44a4-487a-a627-33d637ace346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8583d9c1-ebb9-469f-86ac-5c09dcef2ef7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7fcbb4-7d76-4930-aaa5-9cdf2f0d33ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba22abf9-277c-4378-b1bb-f9556a1318d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a78aa5-0e55-4e12-9336-912112a15b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8147e513-9180-473e-b9ae-5bd759e06f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d26c2d-c5fc-40fe-a288-99845b4f0127",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3dd6e7-ba70-494a-8f68-80cb18e4b889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3733f1c-39a5-4f6d-8c16-d841e4061d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d45f891-1026-46e5-96ba-0c5755f8df4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2387c061-da11-48ab-886c-a97dd8a47794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32219c8-3293-41d6-946b-1484e34361eb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805403f3-6ec2-434f-8d49-0aff6cebb36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4fb04b-daf8-4ca7-8c24-863f741623a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6552c4c1-a4fc-4e2b-8371-496f199b6ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e19c647-6902-412f-9376-74be67128622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd13e03-6b43-4a1a-95cc-3d1c4677f2b4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4711e5ec-0098-4d17-8eca-4400fb6afcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023f13d6-4756-40fd-a696-405132c26dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a169ccf0-a47f-47f5-a351-0aae54ebbfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41c1a57c-7433-4d9e-9040-e3a828e4827f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404d1cd2-70be-4733-822e-30207b688edc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adeb0f7-b675-446a-ab43-060e9846cc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e100a8-8207-4593-b3cf-79de32be752c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69065494-654f-4c86-b337-9b9ed8c004af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c3b48f-566d-4239-b8f3-d1081db03b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0be5789-84b3-4c0a-8077-f4d16c964353",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79feeaa5-39ae-47b0-a9c0-d0f97d4b3a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49574749-715c-4f14-8edd-99215154569b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a0ca57-a183-4204-a624-797e2e97b8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea966aa-c02a-4736-8b90-5d87167bb88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58777703-4282-4244-b397-5d495c9f3576",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6250f5e2-de03-4cf4-9c2d-61f56caa45d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6656b57-2139-40b7-8219-1170f995f017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b404d0ff-c5d7-4ff1-a9f0-9f9605336bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cab04a53-1b95-4a75-a5d1-3230efa98359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fda7f9-e05e-440d-9a5f-387b1aca06c6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8f1afc-3369-484a-ab16-c683f0159836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0017e272-4c25-4319-a56e-077e82965dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dfa447-cf01-4e99-824e-ff7d551a7435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8f05cc-1bbb-4755-9b4c-25b9989adea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ca365c-fae6-48d7-a5bc-bb0730bfa233",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d940df0-e5b1-4845-99c5-83b7f938c28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a584a86-7954-4c9e-80ef-c058e228c47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed661541-59f2-472f-86f3-3d10e6d44736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a23fa5-750e-4284-9fd3-3b9abb3611f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee26d1e0-0830-43b9-86bf-349241007985",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6faf5e7-3469-4270-b2d9-a1b971de1ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba076ef-b40a-482a-aa7c-6058cbd0801b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f0c00a-d6b0-4533-bf8c-643b1a4ac84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58747441-065f-4d66-b7d3-1630d8466948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c215fc90-7ff0-42d0-bf39-2a635ad52a7f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047b0e27-cfa0-4343-97e7-dd9b98d6509d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ad1d4e-6b64-49f1-b6c8-6f185b4d3004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b2ca8a-1d1a-4d2f-9d9b-fd72fd6df670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ece8136-0daa-4508-bf89-265ba6666e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cfa009-4ad2-4069-b329-81c461016924",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de981f78-d59b-4f24-986b-329afbb93f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bf120a-7544-410d-8e09-577d62e305b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62900b3b-5258-4d6a-b1e6-a68495d19efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded7b429-8193-4a3e-9358-c8fcaefb500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7040984e-f5a7-4df0-940c-87641f806b8d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0959fd-a194-4ecb-b8ac-9b0ebbda09d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a72bec1-be75-41a0-bdb6-01cecbe25687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1cdcf9-7c89-4541-bf71-f4d619902cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5882f9-c825-4f43-95b9-bc74d76edcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e1f4d3-27c0-45b0-8744-4a2940e528be",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac97e5bd-01bf-4022-93ac-e6c7c91fd007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45aad2c-4351-46dd-a0f1-2f21601197f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f364825-dff8-4094-b152-1f047a47d303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22f4ce85-f8c6-43c6-998d-e9e6681fe80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbd40e7-e67e-4f01-878b-dc1630908be8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8306ca8-0c40-48f4-a0dc-19e72ace3f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6875bc-f282-4037-9be4-5b1eec40c650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b8fea6-abbe-41a8-abee-a674652f3334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c8b0e5-a064-4079-ad59-aa74b1bbc547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bff0b9-7d1c-4ea8-af0b-90ddbf613963",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40cf122-ea67-44f4-a6ca-915a2ba96c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e626d7-dafe-4a25-adcb-e29219450078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3703602-51b4-4c22-8f2a-0aef3f845492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fecf86fb-e5d6-4385-9506-87fb54a70377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda7729c-7f33-4e1a-9652-6461e843bf1a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a58eda-cae1-48ef-adf7-66b79c4c9f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae49c7e0-3410-40c8-b3ad-6f6c22f15499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec56e5da-672d-4ccf-b045-eb0767b235df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40329b4e-b2bb-4822-aa8c-81b3b46d2f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba3a240-7bed-425b-9879-4d2018960a36",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a165dbae-49da-45cf-a331-9ee503b19850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8997ac69-5839-4f9d-9175-341e1a3883e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb27384c-76e1-4878-9761-e6e1eb075250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e88054-9294-41bc-9109-32e5e0caf710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1edcca1-e923-4fbd-b4f7-3a8968a7e226",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02be9be4-7934-4292-9de4-23a272050526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96806b32-5d5d-48ed-b38f-10e9b17c6d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cff046-2076-4658-b657-f8a748f868bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3b809a-4b57-4dbd-9f9d-9cdb37761db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ceac32-0d7e-4143-b08f-eb17728e4b6b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d942815-752a-4c41-a5dd-95279eb80a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0b554d-6d20-4e42-ac41-94a257bdad59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5923f17-75bb-444a-8cd4-7f86c7fcb5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4b6415-ecc5-495d-ad1e-c6a37e113f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bef1da4-c108-4723-b746-869475897fb6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5850ad4d-94bf-4cb5-87f9-2585458b9a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40bf98ab-689e-4bdc-8037-16d0b65892e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9666fb2d-d547-469b-9f8e-d79d17b9535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5344dae-4c3b-4dc1-abc1-c853ee23a121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d11732-fdce-431d-b38f-dfb91915292b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cb455f-43c6-49f3-b190-f1ac5215efd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac69215-c621-4e21-b069-463fb1f03c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5d9b2e-4b16-4c46-83b2-8f7fa086b6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce868c33-a9b5-4d22-8e16-4f6b136665a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd8f4cc-5275-4d5e-8fa1-3a8be90dca4a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cc5a8e-ed6e-4e6b-a51a-5df07282e6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8415fa6-116e-4193-93d0-5009e40b55ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c9a8b0-247c-4195-92cb-dd56cf3465c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6da65329-c8c1-455c-afb2-e0c426d96afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de24aad5-c45e-457d-b08d-ab63e82bc4ae",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf91970-5e5e-4517-afef-cf38b5647a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fd0240-a4c8-4f3a-b690-a36460c162af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df4e2d4-f15f-41a5-88cc-4ce05ce846c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95958fc2-144b-4b56-9993-b02188563801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cccc147-b87c-4396-afdb-b4bdd52ed422",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cde4145-bcaa-4c20-a98f-d30d96efe19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4a8fc7-b53d-42cd-b888-3ba234fc7fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45af479c-9f4a-4b34-b3ac-41f426e0dbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed0eccd-a5f3-44b9-900c-d9ff93d608e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6000fc0c-f1f7-441f-bcf4-1fcd76ed1494",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faebb65-6fed-416d-8fc4-271670f8633e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1a07a5-9b8a-4a71-afa6-9153607559ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24998229-4e3e-42f8-9518-b10d3cc8884c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8b2de8-e0b4-465c-b7fc-081eddd00526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca27e54-6ba2-472a-b667-cc11fdd1a8df",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b9840e-3205-4b89-b908-5f5f3d0ba6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed96409-31d9-4e45-ae9f-a26a0ebc389c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60e4d97-a94e-4241-875d-138e8205449b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "244c424e-7c6a-468b-9dfe-a61526d20c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b446416-9f2c-4811-8a96-f2322473ee51",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f7ee0e-d03f-4811-90ad-d68d2dd705e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3d7262-23a1-4ff4-b902-3305282a18e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb122b58-a306-443d-b01f-d0e33015971a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee2cda1-16e2-4de7-9c3d-65d7e02dab61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88af88b8-1172-471a-a326-87989e25b74d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb2245a-b6df-4b8b-ab0f-712ec59591af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3baa12d2-b7d1-4d92-9443-6847416cb8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1f556c-9c9c-4ee4-8741-ed1a3fb744e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad84cabb-def8-470e-9775-0e129442b619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c4049d-3373-4898-8325-84d247d8ac3a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f2c4be-4a81-49ba-8aaf-3867f8d3f50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baafe451-2448-45f6-88fb-7bd1663725b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ab11a5-ebe1-422f-b21d-78bd0821e637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a996e4e2-a2a4-402a-9b9f-b90f6d12c4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79553959-c104-4c8a-9ffc-005611fdad30",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd13057-9c08-4255-9d2d-8529b698452d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f204b3d9-aa54-4c5e-81b8-fa69e04b4db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161d78a8-fd1e-42ee-9b33-80e0154956e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63626c42-dc73-49f4-b428-8821fb63327e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ff7734-25be-425a-bdd9-2b60fae4dd6c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f331bb-fc99-4b41-89e2-ab92aea9124c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2555150-bca2-48b9-86de-064da1a48965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3fe47d-211c-48f5-94e8-53321fbb3886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ccc954-bf03-4858-baa0-ace6322ba600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12897eb1-1285-439d-b714-ee63924cd16c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89c0890-978d-4d32-a7ad-dc7a87510a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e299fcdb-20ec-4e28-9c37-66b271fd4bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273cdd66-d058-4ed6-87e8-7ea557785854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e383f0c-7868-4e63-9029-8dfbb20b2afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2c269b-d16b-4fc1-b127-3fa2cfd56be8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689f6951-545a-43de-9069-0d399fb627ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11aa1cf-02e1-4636-951a-af1946315458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750e40c2-a904-4764-afb0-ba4393fce0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c29ddd5-cf6b-4d15-9870-5feb1b408875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469dbc54-4530-4230-a344-3e7ade3ac789",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e8d909-84cb-4c7f-80d0-a75874c79760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb399c3-2d22-4976-9fb8-d07a0797b830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576017d7-c54a-4034-82fd-f4d8196a5f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e65a91ab-76ad-4408-b2e6-e344695dd3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c8088c-ba65-4c06-80c5-83d9b8a4338a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fdc724-40e4-4a09-a027-678efd47e57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3ffb1c-e410-4ff4-8554-acbc5b11dd38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20863c6a-3a1d-4185-92d8-b048d5a3cbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7b579c-e559-46aa-91c7-e9b421e012c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ef6c59-1921-4548-b78c-e99baf619412",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a452f8e-4033-4318-9dbd-bc93e5f98440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64744089-3c51-4456-ba95-ab7adce465e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fedc75-8512-4f1a-bf13-1a2ab5abb4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "02c1fc3f-af75-4e9e-ab86-e3677c276fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca57d2b-6ceb-40b2-934a-1f35fa4694ea",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254f4755-a0fa-4f1e-bc34-81ee2ed2d97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7fc431-339f-44cd-a81e-e2031f10dd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919c28d8-7750-4b92-9c91-9a7b0a90f236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c89f43-1cc1-46bf-a297-ed307a725622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326d6b1f-ccd1-45eb-8354-4d94c9c809b8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62ba11a-bc6f-4e45-b64b-009d6b18ed03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c39c11-b434-4da8-9891-ea2561252fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76aef6c4-20a6-47bf-be81-c8ab36535f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "983e0b13-50f8-420f-8fd4-a38cf3d9954b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3540350e-d9f6-4bf9-918d-3cd6e84fd4f1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae59e76a-41c6-4880-9217-518befeb2160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce60cba5-4c66-45ce-bc4e-c92e9f260bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1478505a-1bf0-4738-8217-11dde5b56e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac0f2c0-7302-4ea7-a6ea-98d2dd0dd7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb575b9-0abc-450d-8367-9b018bae6311",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a93e8c5-438e-47e7-bcbf-df33c19fa6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6dea4b1-263f-4694-8e24-dc8ded973bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85794b4-9139-4c70-bd29-3401fd1e3464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddf745c-4dbc-4319-8f8c-3b115b32b1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90c8439-18c9-4d1b-b806-510480510e55",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2dc9b72-867a-4eaa-89fb-b1707b53b537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94abf13-d783-43e0-862b-32f422295c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7b6c12-0075-483d-a11b-08abb76e7ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6431bd3-097f-48f6-ab9e-48572822ebde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbde2834-3300-429e-b949-0560683b512e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eca2ae6-86f2-4a7a-9922-604fe61e2600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441b3c4b-a414-44b4-a951-feddef25836e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3d8c05-1733-4928-b602-a16ff86d6a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "316f10a4-22b5-479c-8a73-1af96ec5fd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0715b1-f719-4ca0-863e-d5255c75812c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714f9a28-a48d-4d05-87c1-a4029dc34f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49861264-f45f-467f-9417-4bb0c3ee0526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d999ca-83b3-4f18-8440-85dd00b11a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a957448d-e461-47ab-8b4a-ace5ab6c2318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055fa3b2-5988-4723-a44f-8b99bbd1f91c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbbfac0-951e-431f-a703-a8fb6d09dc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29de615b-2a88-48c0-93c1-e1b644ad8f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225b8203-8b1e-4594-929a-4d0feec49f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "046cb109-77c9-46e2-ad15-075ad2f6fbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5f4c9b-477b-49de-ac1b-ff5a4ec045dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8a03e4-bb80-4a80-8386-bb6afaea0814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4c619b-2b8b-4a53-b46d-bd941d4d4c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734d7dca-61f8-424e-bb7b-5b65af62749a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8be017-249d-462e-ac5b-ad76b2df569f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c812b38f-f762-4f62-b6d5-06c07fdbdfb8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac8501d-ab28-4e02-b7c7-412002996b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e81ef60-aede-4f90-ac80-2e04ed27eb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e0073e-406b-4e0e-82ba-b5e6f5a77f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce9997a-0f25-4cb4-865d-c558a5738bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c7d71f-6c4a-4157-b50b-c15591b85edd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbe8470-d791-47f9-bf7a-195cb5231f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176f7972-154b-4225-aee7-0f75ffd9a96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1876de9f-3ac8-4875-8f77-f43b2aa63ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f14f1809-05ba-466b-adb8-30cf781e1b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48abb2b9-a5f3-4230-a7bb-3435825a9799",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7981e4d9-3a17-4435-8e04-9263c8c2cf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e301f419-c113-44b4-94ff-df9880fc6c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a48a4a5-8b07-4610-9432-67cc84f23f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de613d7e-9699-4687-a39c-b2a5e44a9c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704f3796-e173-452b-9743-dc30839b8f18",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b1128d-c665-4325-ad62-82c0fc67855b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839a7f28-c0ea-4763-8e33-397286bfcf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82f65fd-8336-4612-bb10-8bd54d7a9faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf377473-89a8-49b0-a066-aa7b8a7342ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e928503d-dac5-419a-af13-b724db98571f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9989197b-16c2-4aba-853a-6a742aeb0aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1102c48e-6149-48c9-b2e9-cd5d06ee8ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8715e6b7-f946-47b7-bbeb-72fd96cd12a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff334425-4b69-4b8f-8f9e-a398135aff25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa7b149-de43-4bc9-a5e8-809d2f3fbe26",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58340557-bab8-4ac4-9f35-be342e4c55cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df73732-0be7-4bd7-8de9-82721562f6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b4ffbb-d6ae-4405-83eb-f8dc8c783ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd2877e-f8bd-4a60-8e53-08c518a5b196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba24de9-ec71-454a-8156-3a29b51e17b4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49df6646-a0db-45ff-ab54-357cdb2658f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf96c9c3-b877-41da-8194-cb34d0ad2982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec7b75a-b8ad-4b8d-9398-02b8c0bdda20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace4af0d-ff59-4790-b0f7-0ea4a01c5e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9c364b-42fc-411a-96b8-e9b974f9a53d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020ae8cf-69ad-4110-af70-f82bac48e5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728d4fc3-2e26-4399-ae75-e3f1d36c6a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81ce60d-6920-4236-97c3-36b052457016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c05a34f1-4082-4e51-bb35-b2cd9bb1c85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60613f93-3d4d-4397-91e8-0fa5eb72d51e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1715d70d-8317-4f77-9be4-7b47ef25b71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc4c7b3-0939-44ed-87a5-173a32883d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c71c47f-36dd-4c71-ad5e-6939fbea04c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d0c4f3-a54e-4a8d-a3aa-03e639e49a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c34de9c-38b0-4fc5-815e-74cadba304f7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82009018-774c-40a0-a07b-9376120a9364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb593014-b226-4513-be6e-82fc11326537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d92052-b2b6-405e-8297-fd0412aae0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "713333ec-e77f-4f7b-a38a-8c4a46e1e17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e1a630-74ba-47bd-97c9-ddf6669e6caa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c8264b-b889-42ea-94b5-45576b311b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a1b700-2daf-4148-99e4-5920d0cb4cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39be3ed6-6821-42fa-aa6b-8fa4414b6184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8b10f0-aa17-41b3-9f61-43a3e31e0c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96d2afd-c1fb-4020-9ca3-7ce74eb78577",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a88ad0a-507e-4c2c-9332-8651bddd5f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda21071-2b7a-4f6d-9718-941be6f4293f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14d1ed6-345b-4322-95c6-5923738e7269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "817829f5-edca-425e-8a21-04a70c8aad11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d23d57d-ada8-477d-99d3-127970c6e64e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49a911b-2bba-487b-a267-ff630395b651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea92bd9-4750-4290-8abd-56e2eb181772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2813c211-9403-4a24-ae93-f12500ced2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "899dc670-bfad-4f3c-a4f8-ec7efb3a0971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bf24d1-38d4-4596-bb18-949166dd3f38",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127adc3b-f70e-42ed-96c6-c8be68edbb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141b5dd8-0b66-4ddb-a6ce-1b25292c1e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063a5768-48eb-4c64-8330-ff1b199f736f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "251348dd-9ae1-4037-97f2-bc90b753a19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e4a0dc-f755-4b9e-afd9-56cdc5d312a3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d714473b-3c54-4f1f-b8e8-2e2b3a5dcd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbae38d-84f4-4968-946f-f23e84bdb228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec21588-cf3a-4d80-925f-2bf97a2d74fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edf33388-b399-493f-8f9d-d41c5cadbc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8cf3c9-3b7b-43cb-b42a-fe09714d7aaa",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4152a53-5214-41fa-bea8-7d4a6347922b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f928a7a5-3d2e-48fa-bb66-a7f8d1c8936f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9cebbe-e1da-4baa-b638-af4a80275b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "735d5cb4-2d70-47c6-94a8-ac967e3f8ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0ad941-1e68-4280-9c16-b918ad3f9e80",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5438737-a8f9-49f9-b380-f477dd1dcfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9218ab7d-6e13-470a-a279-d64da51076a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ec9d89-971e-42e5-a537-8ee22c419fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06f1cc89-6dc9-467b-87db-4674cf819206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e84bf65-78dc-44eb-a354-1331d1141f3e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec12d507-1815-4f8d-8030-2b5549cbd670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb5a90b-0115-48ff-986c-470e8322682b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ed6f8f-5c1e-4c22-91d7-370f5f627cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "080e1a5a-e568-4eac-95ab-9ab66018ac08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94397f7-1a3a-45ee-bb31-93a6176d6bfa",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7936015a-bdad-4998-9017-7ed77adf5cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942137fe-1617-4de9-ba36-a411782a8df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7fa6b0-2487-44fc-8321-8088ff0d720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9bec052a-169f-42f8-ad1c-83d8a0170ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16973d2-47bd-486b-a29a-ff7aabbec46f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea59904-9a92-49bb-b146-6d096efa6ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62812c0-168b-4dca-ac06-28532a5beec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f1b785-ac37-48e3-a955-bc033ee63e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c0dd03-e7c7-4052-894f-cb6701db37dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6721307b-fbdd-4b9d-9441-54f7cdd62d84",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08136e06-5d31-46c8-b8db-c365a3fe6c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3fedd0-8093-4fdd-bd7f-4100ed065392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827b94ef-50be-45ce-b96a-6d8f66fbabe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98de3ccd-52e4-4a18-90c2-416c7d70c66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5557f631-80ce-47bb-b811-8ca9de2507c4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d88c06-0321-443a-bbb1-2845dc6195d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716d83e1-ac75-4320-9d0b-051ab15bcc8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c07d604-7bdc-4178-9318-d26ecccb752e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abf52348-7caa-48cd-931d-0e06fc09940a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ec2de5-5d5b-4b47-9bc1-e1ab090c0cf2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123b5174-81c9-4880-8f09-04300424cd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17314af6-497a-4370-842f-71138ef20341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3674d68d-d848-432b-83ac-e87de0e1a566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c268712d-aee0-4faf-9b3b-234e324e4869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20604a5d-5202-4c50-bf2f-d75c9d32c50e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52000a2-b07d-4fff-8a4e-f006743bee48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d44377b-0108-434d-96d1-7e57509a6403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee13775-4206-4be2-9629-9ffea00efa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14719390-9302-432c-a824-c9c68b50b615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2dea37-0f67-413a-a6d1-81f30a3ee6c3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fe5c2a-1d8a-4b33-beac-1ede21dacf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a8c35c-ee48-47b9-870a-ac05b7ffb8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8548685d-e4a0-47fe-a77d-4b560ed6aded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56f0f33c-04b7-493d-a58e-c823a0580012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f6c2ce-dc45-4e60-ae62-405f4a70b63c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c523f5-5e33-432d-b74f-5b276726b0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc4492a-fee1-4358-8c44-dad0edc6af10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8e46aa-fe4e-4016-bd74-78a7e6ce56b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30e5de65-540e-46e0-9ef8-12174b754a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4335872e-32ce-46e2-a381-5ab86dda07c6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bddd61a-00a1-46b5-8703-04c1cf85cafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d793372-4efe-4701-8143-b5293ada6191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0cdbdd-4164-4486-bcd6-6cad64580e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb56fa9a-7d8d-4067-908d-e59666e77bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb02ef4-028f-47b8-b88d-e6eb11020a89",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60586b5-6ef9-46da-9a20-5e3c0e9ab4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf6f23d-b689-49cd-acbd-d3b0aaa58c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ae45e0-4496-43ef-9d71-7226534fce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6fd497-56ef-4cee-b69c-2cefbb2a56cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5059c6-2e55-4606-ac36-ba55025811a4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ce5e12-9733-43b1-9eea-f572be48f2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b44e962-4d88-44dd-8b26-4da11b07b72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342630d7-dba3-433e-b90b-c1fbe232ff9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0eae84d-4a26-4871-b453-58e0c4893c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8776df11-0d80-4cea-bc4e-946b0f6c9b41",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266a8305-b4a5-4d38-8173-c9c5da75d465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0786a6-9a31-416a-8603-4e27b02946ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cbf837-7354-4b42-a816-11779f903833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "23d7eddd-008f-44c2-8754-56c8f0b297ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54eb42f0-f43d-4289-aebf-17e36921d5f3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd102bc-1f82-4db5-80fa-870ce519c2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3b92cb35-f114-4c34-a083-5bd365c2f26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baacf965-1ae4-43da-b78d-04a029fc5678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd484fe-5b3e-48d8-8699-14a92a6c043b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "137c71ab-1e20-4b31-9c1a-76a2e001361b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c4710a7-68e8-49fa-92c1-e73da0c11f4e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c796c8-e097-4648-ad72-2e129216da39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8cc9460-e877-4ad8-abee-73c0b83da2ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac896f92-a3e8-4322-b508-1c942bdf9abd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "12e7edf7-f006-48e9-9243-59e838285710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619aa006-d2c3-4d37-ad25-98cce3c682a7",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795bbed0-e9b9-4b94-90ea-e821ca629e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26cca74c-b1c9-4ce9-b034-1c88744192d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2178e2b8-8214-4a3e-ae6b-777fdf68ba8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "6bbe1574-e43b-4fb8-aa12-25956aa51501"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b0ab04b-b0f2-4fdc-a008-6a0963d05930",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7a99688-03b4-4ff3-8ac8-515bac7d5e6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "590a733d-1c0a-4eba-806c-4ff7976dd068",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7bcbc4f-3e95-47f6-8db6-cf7fb339c8ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7c39c0e-4ca0-443f-bbe0-760a3ef562c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a938f658-6b8c-4d1d-acf4-b7aa43050435"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f7e421e5-0862-4013-9e5d-23b305560e2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3ea1f88-3014-40e3-bff2-73b41c618d83"
                }
              }
            ]
          },
          {
            "id": "eda1ed15-9802-42b0-8ea7-5244b025783b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6a8c89f-58f8-45e6-b39d-025304a24c39",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e8127b9-2067-4637-bb07-1ab10f9c17b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68b32d39-9cc0-440e-9a7b-50b604fc7474"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32f0415e-1d6f-4767-82ae-48ff35842014",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "872ad4cf-a45e-4b6e-937a-7a8ef7648ef5"
                    }
                  }
                ]
              },
              {
                "id": "417dea8f-150c-49e2-9aed-8e39fec0c8fe",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91c65d2b-4181-4427-a1f0-5c7672810df9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1602b7e7-1695-4239-a60c-4a8bd69b3eef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16431092-3d25-41c2-a3e6-05f2a11fc619",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e39a53d7-3c42-479f-88a9-475dd975b753"
                    }
                  }
                ]
              },
              {
                "id": "7243454b-cdeb-41ca-a848-13a0b5012b4b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "824614f3-8bc2-4cf2-aab7-4dbde1e4b2ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f92b913-257b-488a-a2da-b5f5b46db15c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7753e306-a120-4884-b9bd-9272ef255af1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "15954478-32e0-4594-85a3-beee0229faad"
                    }
                  }
                ]
              },
              {
                "id": "a03f063d-faa0-4345-8831-147e83ba3ce4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "593e35ea-c03c-4304-a4c9-70ea222452c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "001cf5b4-e2f2-4f3b-a54c-ab6d8cfb398e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "748b2475-9f36-488a-aa88-b6c84e591814",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ac2282bd-8642-4ff0-84ac-53618801c07e"
                    }
                  }
                ]
              },
              {
                "id": "c7c28e16-fbfc-42cf-a56d-21706e42f735",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2b453ae-621f-4b6d-b491-6196616c30fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb6274ff-b2a4-4120-a6b2-0d3809ff0572"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dec1f47d-fe62-4639-bdf0-228b23574c6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5fbbeee0-8b82-4c4c-8a22-6326a87448db"
                    }
                  }
                ]
              },
              {
                "id": "06ce1a48-a33f-4549-876c-9e3fef43aa22",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99c38a78-58d8-41ce-9b76-d188df43158e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "950991d7-5e25-4e64-957c-c7331ab1e0d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffefa0a6-cb1c-408a-b6ba-367af881300c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9651f1f-0be7-4f66-becd-da9631354c84"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbb9353b-1208-425f-9bad-d9bd631246c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95726d13-9eaf-45f1-b31c-ffdc794ec303"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d17400c8-6fd8-4008-8846-b2108633defd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73ba6d2f-8c2f-4bc6-ba8b-05014ed511cd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc956900-acfc-419a-b74f-06273660a700",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "eb10f7fe-d206-4734-a1da-646561178183"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1805cab4-6b6d-45dc-a801-9b03f63034d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e32fac93-f1c4-4157-bc82-d771c2aee67c"
            }
          }
        ]
      },
      {
        "id": "c2b3ee74-fa6c-406d-b6c7-4f2cf7af881f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ea42b1f6-b9b3-4c6a-9bb7-fbdc29b8dbd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ee31ffa-cdfb-4e28-b397-4c6abd535fe9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6c1b6fdd-7197-490b-a183-8025b8ec8a0f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b038bb-136d-4e80-aa7e-e65bf9eba833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb8b8f0-e3e0-49de-8466-8a95dd8b40fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822f20c5-c078-45c1-86b0-3d9906ffa654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "639b9698-10ee-4473-9cac-8915fd3330e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4b2d99-9af2-4645-b970-d14e57b09171",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1044d104-0052-452d-9430-896fd7e0abbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712d0d93-b63c-492b-851d-6d486289568c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dff088-b97d-441b-b851-498acca706b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "761dc234-ac6f-4c8f-86d4-865ffa08a2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df40d37c-78b3-4985-a768-7d9076fdaf74",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72604f5a-ef31-4aec-81bb-a6b268b962a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0236b697-98cf-487d-8729-687d1155bc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf515db-1593-4df4-b6ae-605d986856a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "961ec629-2552-4060-80e8-61c7772006d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fec394-d877-44b3-a9ea-22403a0b1219",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb38af6a-2acf-4d19-adcc-75ec01878f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0045879d-6da6-44d8-bfd5-f01de33836be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc61702-a238-41d1-adc2-00423418c530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74318d27-5d27-4e27-818a-e434c6f23e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca07c428-b9b0-4d68-91d2-1a1a54120660",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade595ab-38ec-4915-a12c-d739c49ffa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718f7ad7-4119-4525-ae37-807b32f30162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a627f2e-fdaa-47f9-861c-98bcb0398cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "377f225b-277d-40ea-9d1b-0309a91537f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbff9f2-e630-4951-be88-9ec72788598e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17edd1e-ef6d-4dad-8f54-f507c4ea15b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc5b411-e62f-4c74-8cd6-47ff8aa6febf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7f4506-26bd-4d17-af2b-a2f29e3840b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92c08615-a05b-4251-b42a-ae3235c516c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a898e1-aae5-4b67-9905-3bb8c99bf77a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2bcd6f-c11a-425f-aa2b-3ee59fd01873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbef340-b7f8-4627-a2e3-840a4a64520c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31531f40-c61f-47c0-bf7a-057bdbf72437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "60efe581-f319-4d25-910b-00bd51eb2003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275a3f92-01ab-48d0-a77c-6a7ddef93b46",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2826d9e4-ef71-4dd4-a651-1eff976e560b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21371325-f782-4870-adab-e4efed197975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8b92f9-db8f-4c72-818a-0ae35a0e929b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d180d0d8-8af9-4c59-9e6d-0c067b2ed59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a04813-24cf-4e34-bd80-b66b66f63bfc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4602a29-93e2-4a04-80c0-3186a5e33f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39befcec-0f33-46cf-8e3b-3356fa1f55f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2922b79f-8715-4bb7-941e-5cdcb64e2231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "781e738a-136b-4748-b0ac-eec2ba998f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83ae917-12a0-48e8-9086-7b087b873b55",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cca5d5-c403-4d20-a945-6c01c3c71ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f0be31-ef40-4a0e-8f71-810ea635c0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990f7205-aaee-4c14-a50e-59657daa3f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1553dd9e-b928-4e1e-856b-a45a7f4c3377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0c7c65-ef20-4cb6-b6e3-df28f56eada2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06718421-69ac-46d7-870f-6d120128d6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539fd77e-e292-4e02-94a9-84ca6bf75c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ceb2b1-33fa-4a9a-82df-c145e00566e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4db994bc-8f15-42de-9384-342b0de4152d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ca2205-4833-45bc-a632-4069928bd8b1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37522efb-7327-4717-a05b-e1f96c01ad6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232ae9bc-ea64-4c7b-8cca-2865be3f4588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35562679-3d87-43c5-adcf-1844671d5537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5064382e-b0d8-4e21-a33e-fa7461cc9084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e7a04b-5f24-48ac-9f2f-4d512d20ba7c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7248b90e-1c01-47f5-9187-7e75f5d7a7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a97277a-1a89-4057-993e-c9b264fd7249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee1ea2c-e124-4246-ade7-320e5b2f8aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "062c5434-b4f9-49c9-b68f-e04183e59749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3b6a74-2ac3-4de4-8afa-ec1a32c3eff9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da54d6f-7889-4cd2-a727-2a49942d8006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab21e0b-740e-41b5-929a-d63bed9dc733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5660186-3f3c-4fc7-b9e2-af13928ef4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "934cadfe-05ec-4b41-ade1-de3b75a02b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d5700c-7afe-4efc-bb5d-dac2ce3b7e09",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26b8545-7b57-461a-886d-f646da5419f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f1f244-a6ad-4ef7-853b-e8f2a7bc48ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883731c8-ddbf-4623-8ce5-985c508c30f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "12d7e7e5-b4b4-4942-bbdf-fd28f6ecfdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f3620b-3832-4369-b390-723be68bd66d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3b4c06-0f6f-495e-a4a1-59d963f3a1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717fa718-dd2a-44ab-98a7-e4ae35d19c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521cf7b2-c49f-493f-9f70-a8f0e29f32e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "163c2df7-0569-421c-90d9-c41025e1978a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bc0b80-8489-4697-a832-d971de8c65df",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b54848-c07a-4d87-8bf2-27136fe12ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce5ae15-8869-4fd2-bba0-feeb4e4b680b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64b144b-0e89-49bb-8d46-9ecb3ddeb125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "168e6aa9-cd71-46e9-b611-17e270419eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a71ed32-ec9b-4878-b4d7-66f45350d5fd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f6a1e1-e642-4794-9f5f-d73b9cae26c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5732b180-d21d-4a25-9af3-84ab8b5223a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8739ab0d-b4e7-4e0e-a1ec-79346c78b7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e79e6eb-9dca-4dd4-9350-4fe33ca55fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e616855-cfca-45e2-b6b4-d2bb6ccbd7dd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7aee9a1-c058-4622-8dc9-0376b824c0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5caf9e-ba84-4867-8940-4afade72db13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ea1122-b516-4299-91e7-bde7b2682c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3679a295-9d9c-4f1f-b74c-180ae08c216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e1bf98-a3cf-42b0-9a19-832cca42e680",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec8f04c-d9cc-4841-926f-b1fd1dbc1a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecb87bc-39a9-4ed3-a841-f89754799903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bb2157-bc28-405e-863f-706a507dd165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bef4ad84-7279-47a8-a715-ff705f2f9259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba56c58-8194-4cbf-b6b6-74f691d04181",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b629e5-4992-4108-951f-cfa90f886628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335f7071-87f9-4970-b929-c90d00420339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83268d6c-7f32-45dd-86ca-cab121550564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "724deaa5-dd44-4a72-a247-f0f2d0061a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36217783-0712-4b47-a11d-361121f40ce2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0292a0e4-fadc-4712-92d7-6295f9786c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedc2ec0-7d85-46d3-bdc2-8ffe889615ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7158a3-fe13-40e1-a949-a9bb538517c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "686723b3-44c8-471b-ad72-cef92a9d208c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ce59f8-9e69-4098-88e3-ccc2667abc1c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252a1ff5-daf9-4c98-b227-6646d0a70176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ca04d6-c85f-410c-8a16-d37806dbfff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65cd877-adee-4768-8bfe-8e445065b345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47df9daf-155f-4b80-871f-a99d04efb7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f5596b-7144-4cf9-8854-38c1b9d02520",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbbf0ec-eda4-42e8-9dea-3f5f28d7d20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e214ec6a-c025-4e79-9cca-77e77693945d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb05d24-c839-498f-b08d-c06b12738974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fb0769-b9fb-45c2-9a2e-e46d502c6fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca26f14-39a1-4608-867d-28c470fca410",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5afb17-ba02-467c-85c6-00a85c54bb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb666cc1-7dd0-4430-be5b-1e15b54029c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef7936c-f359-47ec-956e-591fa583f498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "350e4cb9-353d-4449-af21-247d9b646714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ebec43-39ad-4a83-892c-537535e38ce6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a1c76b-cae2-4015-bb78-34912dc9933c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31c8a17-05bf-4045-b751-53b1a4bdd040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c69c27-6eba-4ae6-bb36-1ef5297b4619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75c6540f-0f15-4ed9-b0ad-ca29098d9444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fc60b4-7c9a-4019-b618-08f4d98df425",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd3a4cf-afc0-4752-b510-4aeb2cac7a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380d8382-404e-4bdb-a58b-1a897c1ee3d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0ddefe-ab31-427e-ba6c-c3c5496fb4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6f16c9-90bc-48f7-b442-fc36eb8db4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc988974-da96-42e1-a7ce-43390e026f24",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef417e2a-7bf4-4239-a8a7-385f663a07b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0833bb-c07e-41a9-b763-1359f2354492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58dbaa7-def4-41db-ad1c-3b0648ea1e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9054042-d92e-424b-86d6-f66f70bbace5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01fe018-78da-4fa2-9738-852532b4da5a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ac7f44-1d9f-4a64-8587-c3cb85a03f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e35a070-29db-4d54-8664-cdd802461e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d46c6f3-c1b6-408c-8db5-9850688b8748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b833b91-d82c-43a9-abb7-bcfd4a60798f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330faee8-a435-4f97-96a2-340642252757",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d9587d-99fd-4df0-b441-c7f10cac1a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745b8809-406d-4599-9594-7267d00b19c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5265287b-625b-4ede-8e37-f96ae7554c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a30f9bc0-8efb-48d5-9a8d-16823a233707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a196633-7ef6-40e8-9ba3-de780bcf3d8d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e035234e-5e30-44fb-8eea-5468213a1725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073be04b-5a7c-4842-871d-fb3fa8ea15b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587f337d-cdf2-4574-8854-e77bd909cda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74f75f42-26c6-43a9-aee7-0075d7366aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848ea301-13b6-405e-9754-c88982baf041",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3c7c42-71f3-448d-86d5-e3548d6ddbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b954e390-0316-4790-a162-3f0979d79b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fa3bcd-c21b-4dbd-be19-a914a776cad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb605d3-ff2f-4a86-8fdf-2b430220c62e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53934028-48ec-40d8-812e-933d895ebbad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d4b9529-3f4a-4152-8ad4-9b26f423f9a9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d294d28-2b33-4c80-b4cd-bfae554c2dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f9b6b0-8439-4e95-ba69-f83bfb58f34e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20fe9a4-09c1-4a75-bb3b-5931c7c9599e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "074816cb-6951-403d-ba5d-6bc4fc5b31ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270b9f4f-97f1-449e-a40c-6cdf61fa069f",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f81bf6-7ebc-41dd-a8af-6535619a3cb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "076b6cda-3018-459a-a2b0-e4bcb8c57291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef3b3c9-3d89-4b5c-8552-87959416b87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "709fea2e-676d-418f-b9b5-6e8d6e11b552"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7663752-d128-449e-9899-b739fbfd1bcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba86d778-667b-4c39-b301-efc7fcffaf78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef87993b-453c-44c0-9cd4-f30cfabf1ef3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7f560dc-dbbc-4605-978d-6df76975c3fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c12b87b2-809f-47c7-8c63-bef6b112c111",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f3f2cba-86dc-4524-bfe2-bf71510ef007"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26eee900-3f0f-42da-b932-7e39c5342f68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be65f958-afe8-4147-bf29-5fa1ad49c607"
            }
          }
        ]
      },
      {
        "id": "e9191690-4113-4472-9196-eefe489aa959",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f7e24103-1697-433d-8900-3fd2ad9afd1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b36abf1e-743b-49b6-a73e-152edb2fbb11",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "58aa73d2-6705-494b-a39d-f9fa1453e696",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3028592-2fec-4f02-a06a-f741d94958de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aaad609-b2b3-48b8-b0e7-7d0e1735531a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcc1f09-98cb-4269-8fae-71ba06faee71",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e77598-84de-4305-82cb-eb5279c11b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b4b703-2a14-4e44-8752-245c82c7f727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c510a6b-961f-48df-814e-46314b3505c4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491fdfee-deef-4e9b-bdb0-a8a1fc8b1ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d27a1e-2bd1-4e4a-8fbe-6813aab4ff01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3c3143-6c25-43d6-ba55-6a9871013146",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440efe3f-f276-4623-baa2-e847ded6d869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a443b935-c038-40e2-bcbe-b1f6f1713d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525f3803-3e33-4d46-84fe-16c624f6b5ed",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bdb754-2d4f-4a84-8738-a1c9d77dd9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6aaded-2ff7-45f3-a530-52bbdce8e051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3578023-2da4-40e6-9d27-537ac060f16b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926c1ba1-397a-435f-8e72-bfa4cdfd2cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c788df1-2577-4244-b9bc-d1ed78533ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d4396c-8df6-4eaf-8656-e2d7fa91d995",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9952380-f248-4a2a-9211-f1bec69ff0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bffda5-46d8-4486-97c1-fea83aaa58f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b4197f-bbea-4fd7-b97e-c2bc7900d1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbddd5d4-6e05-4a46-9277-c507702fe77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a00441b-2959-4aeb-abf9-c9e577491986",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06ecdf7-95c1-41d3-9e19-ffc93cb49227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485cadfb-13fd-4f4b-8707-be048845b7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21faf688-825c-4f65-97ca-bf558f4822fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fddd21-e450-46f7-9d1c-479725adb14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1374c0c9-4e7c-43a0-9353-e044789cca41",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d6014-13bd-4713-b865-7593027acae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9edb42-32b9-42e3-8b22-081b07673ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2647b36-a995-49b5-b247-8a374683b2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d7c2cf-feb9-44da-b71c-fd2ebb0b617e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a28faf-6098-4250-b3b4-210208ccc617",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831cc1ee-1df6-4830-b68c-4ba2b3bda50d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6697c1b2-a13d-45a5-aaba-48f961528727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f33f19e-5b91-42f4-93de-964f30a99c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f2cefa-2579-4b5c-b3e3-9a580f844d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27c5548-ed01-4eca-9e8c-7c79832b699b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8211c58-6e36-4d61-b2d4-b98d17eed559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e4daf9-6bfe-4418-aebc-b1c141a8a2e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23ab1d1-fba4-4e55-8330-69851be1f2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738f9acb-7980-4d99-9aa2-a0c5da8d00f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c6ed8b-a74c-44e9-9451-ac0f4663b475",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe9d296-0ab2-42d0-a8ea-0ee18c1fc2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a351bb31-7008-4298-b683-ffd43cd00464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b98d374-a035-4ac9-8dc7-b2b7d4e555b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be689c1b-d52b-4b12-a7f1-42e5f7f2ae28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b596899-0e6a-4b64-8d07-090dabfb5e7b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56c6404-837b-4f93-825e-50bef293c680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9adb6fc-c3f1-4b3e-ab0e-c72fda638a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1a5c8a-b92c-4ff6-93f5-e684225c7e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ca70fe-f5e4-42d8-8331-a6367df638a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6c9841-3464-4c7d-bb19-50418e291c84",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c48c915-4d38-4c8d-828c-bcef878c139b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cc76979-6519-4072-9ad6-23813fd15256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22e3981-374e-47e6-aa60-fd9aaf60901e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efca6dc7-b564-403e-9fb8-9f48b1c52620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28bee71-59e7-4089-b777-55bd9c03f51e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fb0fff-33fb-417a-b367-1fcd8aa5dcaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63530b92-b907-481d-9227-6eca671a295d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f739ed-1132-45dd-b1e2-32c3e6079cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389aea4d-8c14-4234-aac2-a41d69014e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73140087-b147-4a87-aab8-988074e96e38",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3b317a-4c56-4b1f-bd58-a01b7e405ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d7e2ae-501f-485f-909a-668cbdc73fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c77863-5b5f-4fcc-88e1-ef73743c687f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66380d3e-354d-47c6-b51b-ec64a8fe1094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2250ce2-377e-44a7-b481-908136ca8b99",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19979195-3154-4edd-9bd9-c888849153e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c524a803-c44c-419e-97e6-4f4d55c37b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be88100f-ff28-4908-ad98-152730434103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe01a904-6c06-44bb-9500-f1f23c71ec2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdc3095-a6b5-444f-9cc9-a27f008a1ce0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91a6279-5b26-4207-82d8-e3de879421e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b50cbc7-36fb-41bd-9877-e7784f2efd7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b21c8c-655d-4df7-9b0d-31b657efb3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfead69-04e3-4868-a939-51db60d86be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20f37c3-6331-4eb1-a64c-f0ade60d3710",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69b747d-78db-4261-9912-b88a3268a0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551f8f84-8999-4b12-9828-956146ea6f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d270e582-60a4-42a6-ad33-5e9c94cf7034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2014eab-20e1-4caa-8924-682edbd870e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b73014a-2903-46bb-ab3e-08967074abf5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd5b87a-50fe-4f68-b15d-fba7d2c8e429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc98ba4e-2ffc-44aa-af5e-c78b4e0a910a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6e1178-d57d-4b9c-b13d-d79d05449b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ca3029-9f38-432a-af3c-6c8e386d2a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5d41de-8eb8-4d8b-ad28-b1e364eba58a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3230c357-d072-4707-9c18-f364b3c044b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae46a1d7-dd58-4fae-ab84-5361f39b7fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c834dd-c4a7-4256-8e88-5b6d701d45de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e77967-5e41-4e40-a429-60c0b9cfc590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ae2603-1ad3-465d-a4eb-122383797341",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccab96b6-2b70-4c27-bb72-27ecf41dfe7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f95ea9e-96cd-49d4-94a9-cbb98c6d6d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7821b021-bdd2-497c-b44e-07aaf0abb8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2fccec-a8b7-4161-ab15-9b5ea07bb2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8b305f-7440-45af-8d45-f107385f39d6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912ae6fd-b8c9-4820-ba29-026cb7c9e25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2196c14f-cd66-4ca4-9135-21f3de9555ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3df0b8-b936-4ca8-8911-6d2e7d52a1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ebb2f8-4a56-4ff4-ba25-ab4f8260da1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587e8d63-d84a-485c-a85c-1abb3bd9978b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754d0dc2-938d-4e82-a559-6693e1060721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdebe0fb-6063-4a80-94ed-a21e6802b9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53941f20-6942-4c09-aaa4-295505c77c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c17c8dc-d71c-4721-8acd-1090336e88d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956e48f3-c0de-4602-8c14-2ead236725ac",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245d6b6d-4548-40f3-8f5b-f184bedc64dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "020be162-9090-492b-957a-ba91969e0004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ce65fc-d4ab-4448-a65e-325e6ac7ebc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62807904-2513-41d9-b045-3075bcbed4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1dd927-4c12-41b2-8d19-cba117cd7a19",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7add90-3e11-446d-98e4-378da868486c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0426fe59-e1ea-4fab-8def-cb0d59c29f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829cf4f9-f227-4039-aab6-86450531cd29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e59e9c7-d5c2-4ca6-9752-8e6818fb06d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9306ef94-7149-4b36-b00d-75c00753f582",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48360d76-221b-42a3-9d47-6cedbfd4dc34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69256136-deca-4235-a4a8-b5646e420631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f7ec36-0f8b-46e4-8759-147372c593e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb40de4-b9ac-48b9-ab75-46aea5f5f4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e279d952-f56b-4f33-ba8e-be21f5491a2d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11de51e0-c777-40e7-9e74-079ef4baa774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c738788-d8c6-49ef-ac9b-a0d795faa750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcdee81-e518-47ca-84a0-0278499af80e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee9f8fe-30e9-48a6-ad52-99b6db069d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42036e84-5cd0-421f-8cf2-aadb96940b80",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75df41c8-a066-46f9-b768-cd37d0befac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d415feae-8971-444a-97de-a0527fa7941d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9430163d-c399-4724-8ba3-651cf8938c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9d78db-9d98-4f1c-b3b9-f7b41317abd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea2e043-d9b2-43df-8dd7-c21732d210e7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1728e44e-3946-4e7f-a65c-f1fd03d6e71b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b1853e7-a165-453b-a4f9-b16c1515e2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfc097f-1a52-424a-85e1-d2bd75b706d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8158a7-540e-41ea-826e-db5ea86ee3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129e4827-64fc-491d-ba7b-6cbb71909e14",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98d90cd-9ed9-4dc1-afac-26b13903a9f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef456983-848b-4e86-bf20-f19f584dc2c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1f131e-75ec-4b9f-9d06-576df38252f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef59d7c4-b7b1-4f6a-b990-73a97967788d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1f0774-35e2-445b-8822-62e6c21538b1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a423a47e-158e-4409-aa5c-0303210a78e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2885c735-3997-4545-a21e-fe63dfbfc98a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ca49b1-29b6-46f5-bbf0-d2a4077174d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffbb7166-f596-4612-8692-7654130fbf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d385908-a69a-4955-8795-cc6aad3f7221",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6212290-acc1-4ea7-bb0a-a12d1781a73d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0374ecdb-7692-4d71-96c1-4aa7af39d022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce57641-b1e5-4782-9382-3f2adee16f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3308d083-e750-4125-a42f-bf07debcb98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d710873-4708-4335-8c17-8f7c7983ebb4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60e32f7-a610-42cd-b408-a9122ba5c3c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "632b4717-c49d-44c3-aa36-9141317c14ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b0da7f-bcae-4544-925a-1f434ab47092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb8d310-4872-44a2-8735-ebaa3d68903e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a9002a-6f3b-419b-b8c0-c3b1a9bd425a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41085efe-ab77-4ca8-be4d-1e11c0a2e053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eaf9eea-2f4b-4099-b0b7-27352b2f6946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0996f502-2aeb-4686-b4d9-6db89a21558e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fddc90bc-72e4-4cf8-ab8c-2db3f0bd43d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a78778d-7d25-4c27-8ef6-fd2b16412488",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303baa2e-8f65-4401-9ac1-924e090c437e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2661b58e-caef-47ca-b4cc-498daa9ec925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a72c21-b6f5-4626-adb4-36d154b7f0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17571abb-7cb7-45fd-a098-be17744882bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bda2692-28ff-45b1-bcb9-2e17f1f7c5ae",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e96fdd8-8315-4c2d-b6b5-8a08b4ebafb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17c3af8-f3ee-469d-8943-89f6f6907107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ea519f-6266-45a5-8c38-788628b6e8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0474ae-a1ee-4b84-b35b-8c2b836d376b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6bf5bc-bb43-4062-bf82-e6267b05bf11",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973c843c-b497-4a64-a2f9-dd2e7625b517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3989f8-f21e-4bc5-aa4f-60b42fa9ee10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3d6949-dc57-4c4c-b11d-485173d73f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8371b53-20e9-45c2-ad24-43d9bc7d448f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a341a663-f5a0-4ff8-8dec-fcd1a160d5b6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53feeaff-f0ea-4edf-8cea-7900c1f4c484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad61be4-fd2a-41d0-be94-8f2afacf1739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06171ab7-7f17-48e5-bcc9-604aa2f31137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3603787e-8ef9-4899-b4a1-84753bfe109c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc8e32f-e78b-4c8c-a60a-7bf1f55b0c49",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6930ced7-b84f-4267-9b8d-7685a23830d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c17479b-29fd-42d5-aa16-cc223af84dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261c4b0d-bc0a-44fe-baaa-029de3ead1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ef2cc7-6ef6-4381-b2b6-fb6f837e055d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af88280-817e-45f3-bcf4-64031611e31c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9568541-42ea-4cad-8bea-a61aa592aaeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663f6cf3-b07a-4ec8-90d3-4af54174f170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95981c14-d3a9-41ff-ab95-0606c49bf04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e21852-f903-49f7-a751-3c02aff6aa0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec4312d-eb19-4842-b407-1a2f39a8645f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ac15ba-293e-4e24-90d7-874748710c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8329a792-b507-4c8a-920c-d3978ddf7258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa0823d-4412-436a-af96-411e698c9391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64de18d2-746b-4f40-a296-7beb7ffbb901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab29f7f-5ccd-427b-ac4e-95c1201b59bd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e8cd6f-37bb-4ba0-80bf-a40e3f125805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf66cea3-cd60-4fbe-9743-a3538f15f747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a92d5f-c98c-4029-ac8f-68cd3712e066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32fd47c-0cbe-4ea3-b2c2-3aa0274309a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6878ea42-2445-4f52-9944-759b6b4c16f8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3657542-3778-4796-9232-e415b021c8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abedb48-cf2b-4616-af7f-c63be82755af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66ebe38-f23e-43f5-954b-c83f4180c69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6abcc0a-fb71-415c-b159-0604085433b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71265e6-bfa3-4f50-ba9e-3d9e744ce075",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaaf6fc-1d75-4f90-8b75-38e222b1143d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7fbc6d-6c0e-4f03-b786-c5a89e733237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab2069c-775a-430e-a19b-798e5ea98bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0c0e28-069e-46bf-b63b-ede3e3c4180c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fecf43f-f0d6-43e1-b15f-575e5db46401",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ab4a32-aff3-40f1-9535-02efefdbe489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31670e1a-c1db-464c-b4a5-2798071f74e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0b8e9f-23f7-4e6e-87d0-8636b079cef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7911cd-ac7c-458a-a1da-5f31a1a23be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2aaff3-7ac6-4788-b35e-c7678bd0e08f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b04dea0-7074-44ce-af64-18fb77d2f7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b8c1d5-5966-4a62-935a-db253acac27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828be98b-adf0-4b41-a542-7829c978df2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb3198a-e16f-4f41-a71d-12c02440ce40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb81949-f50a-4287-b567-0ecb1261e452",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90725556-08d3-4d32-89e6-a29cdaae53c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baff3ef0-bcc7-4dff-a769-9af5c64ea10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b15e18-3e7e-4fdf-99d9-69c64a48b448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6698ad7b-9790-484d-baea-59cb26471172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb41527-744a-4a24-8419-fb599103c0d2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2beca803-72d1-4538-ac73-7476d5abb0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb7ad2f-3c69-4940-8d4c-8022d9618be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46ac19c-7f19-4864-9de7-f20938684716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47b99e2-0104-4e38-b526-b69bba821266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd974e3-9e70-4680-aab4-41d41fb0761f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce03c1a4-9a77-4467-9396-dfa494013bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed700df3-69a1-427a-918a-911eab302d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b590014-3a4f-4b55-acbd-5beca5926d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b696f4e1-d885-4c1d-9017-4deab10b01fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0819bac-0d4e-4c27-8e27-e78445f3f33b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e96b68-4b32-4e65-8507-cf82bb397048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3f30d8-8ac2-460d-8671-0ee070115efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a97bb8-102b-4a40-ab86-2447e9c7169c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f596cb6-0527-4175-b78a-6caac6ccb370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85aec98-dbab-43e5-8e74-110320fd2596",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f24183-2eee-407a-8977-ef85f131a42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db0b2ea-6877-465d-850a-93c3399b8d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ac92c1-2d88-49e6-b9d5-a157d6dfc9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78201a5d-bc49-42c8-b0b2-8b5b36f1e198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38108c63-141e-4df2-8285-67f2d619931b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5e3eb2-b74c-4577-b2ff-f30ad9f6024f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271bcf15-3982-4b16-bf7b-c77fb185f97b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031fb43a-d00d-416f-a904-33eae9e5e1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9ec275-3f3d-4127-b749-6979639b1f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bf64cc-27ce-4add-bda2-324b31e5ee10",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5deedd-fe4d-41c2-af82-0624a3d9dd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac0bfe5-3b3e-448f-a7fd-b8e52b190cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dc98d4-7b37-419c-98d0-b49a8ee5b9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494f9f11-47d2-4104-a537-e803fdf50c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ce7bc4-a44a-4263-b2d8-19fd8af29a36",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f700166d-8f6b-44c5-9348-0993ca8abee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee6162e-208c-4c49-8b4b-c7ba32b4dbd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de105f7-98f9-45f4-a436-41aed365e271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d72e40-c955-4b21-afc8-6687ea037031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de8cb75-a721-4f70-b530-f07a84651449",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0811eb45-78a3-41c5-acef-fccad3ef77c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c57b25-701b-4748-bd9d-b245737f8741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d84a3bc-7063-4859-98dc-5e4d85f5cca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1c97b1-fa92-475b-87d9-095a19ea35e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8440f791-cd30-44cf-afc6-129cc68e86b7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26628d8f-1d3a-41c8-8e7f-7b6208dc88f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e5f51e-1b39-4666-9b17-a34fd78264a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57aa64c-0f64-41d7-ac83-b3c4a7bc122c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428b9d1e-51b8-4d93-b8a0-98cefb2a26ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d3388b-2231-48c3-a86a-2864c72f3173",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65d1936-b2c3-4b60-af32-676f75b9862a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed2e0c3-ab03-440b-b4c8-5eaa4c46310d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b736de7-cfe7-419e-b2e1-58b6c62418c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef764f5e-c090-46f1-9b74-3aa356949d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625c7703-013d-4f14-b378-456dd8bb6876",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36da625-322f-425c-917a-ef21aebced95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5270b2b8-3fae-4e5b-b3fb-e0d0a3555c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bd7a29-ce79-4f83-b4f4-9e30e248519d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67faff5f-87be-429d-8952-996ee580faf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c8f5ed-bbbe-4c99-8ccd-68cda49652e0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fe8564-e44e-498c-9dc7-93754c84eb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab09f754-81c3-40cc-b1ce-67f9cc5a12e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164bd947-b8e9-4c39-97d3-f992db269fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91474dba-33be-4f3a-bf55-e82a732ba45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6274ac97-adf3-4072-8f5d-eba59697841e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8e958b-35be-4f8b-9903-e37995677a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4b4ac8-f840-4f05-bd91-e47f4a2040e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31071bb-279b-408c-9a71-e1fff7565704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4328a2c7-8ad4-4970-9265-5ccdade62e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c4cc42-eca1-46e9-b6a7-8f35bc6f96a2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6250b651-4a51-4fd9-979d-c1feedef2f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017e5a13-c92e-4750-88c2-fe144dcf2115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c1c118-1a75-4c98-9865-c78bdc47658f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6550670a-0856-4be6-9251-a5e47f7c5450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db098b36-3f4d-4029-a461-681d897b5ce8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9d347f-6ad1-408e-9c03-50fa7289b535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad73f1e3-0c56-49e8-bfd5-cead29498c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3755f186-cdab-4d24-8a21-af0f61b8dd60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bd7acb-5abe-444f-9865-5de48274666a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56074898-4ae6-426f-b26c-2da163b2f9e8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf064e4-7ffa-48c6-83ae-beb9302d9915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21febdd5-47e8-4eca-ae90-8acbe7c1798f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9652f46-ed0c-4e67-bd76-7dbb5865d489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37af8784-e3f0-4d73-9263-e5c6ac3297e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236981b6-13ed-4daf-8d74-dc1c4d36202a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b01e83a-9b07-4b97-a5c8-2e09d140a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06da5be-dc53-4fe5-9326-d6357cc6ef0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c9a213-f16e-4472-ab9b-fbc663ade0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4ff0cf-8c40-4438-8374-ac74be45a3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04fcd7c-9817-4521-bd32-8965f94c371b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ecacee-0cbf-47fc-a112-08d047baea99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bbf7bd3-e998-4cb5-87dd-adaa7f554305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09363609-bb2b-4ef9-9c2d-4c7d92cdab7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfb3fbe-ded6-4d18-8bd8-601964d32cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72571f98-5a41-4868-9bc9-07ae070047cf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215ac3f4-6a2b-4e37-acb6-f1c75afd33fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db48379b-141c-4bef-a197-eda7a35afc4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590d49b8-8b60-4f7c-bcc8-44b8a3bd1ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f207d2b-051c-47ee-a842-280240842bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a7659f-a7f5-4ac7-b053-bd5e76b4a363",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec299ffb-8222-451d-8908-3219d22b3147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f87fe132-77b8-4930-8637-71404c0486e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396958df-4ba9-424b-a3c3-63c71f4ac439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8531e73-7aef-419b-822f-adb11d03826a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24abec7-c4f5-4e87-975a-807a0596308d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca41943-6d41-4ac0-a591-4d6dbc7a66d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ff9798-ba54-4de1-847d-00de81a19588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752afdbd-e4b8-48ab-9203-84a524cf9725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ff3945-dfd6-471d-8e06-2d034c8715fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746fb3ce-8d37-44f2-bac6-353e844fa939",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e297f0-1f07-4aa1-8d90-d4b777e18408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e6db80-41f1-4c9f-8826-bf40d297e593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d57cf07-a328-4c91-a47f-09f8b0da9b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee803916-91b6-453c-bbf6-f706d7da7760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db1daa3-acbc-41a2-bb29-22466fad78fd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0348bf8-8f73-4a51-958e-d15d611b109c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de6612f6-8a49-48aa-b8c3-a8ed751dd77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba7052f-b2f3-45ac-b45a-98c0fb706eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd260062-fba3-4105-95f0-4b2401069233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddec8b2-5f53-4a48-8148-a97cdb30037c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b554c6-6861-47ee-9813-89f4042107fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f075939-6f24-4029-ad62-85b92bd1ae10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89898096-7c79-4633-bed5-3b3461c45288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91f82bf-a962-415e-8e21-045f751a1ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf31847-4113-4c7f-83d8-c8f9abbbecf6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2e4aed-2cef-4559-b81d-f2b01532c101",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1030b807-4bf7-47fa-8786-4e257fcdb37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c43aa49-aca6-47e8-b008-ca6b2d059e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27e502e-6d6a-43c8-bc34-9806bf0b11a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a05f34-096e-4151-92c8-d85731259f63",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc175a3-3fd9-4632-b70b-1a8f022cf49b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0873244-0035-4101-8816-12f0e6607b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33ada9b-0375-4368-a661-217078309b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20318d73-b54f-441d-99ff-14faa16533fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffdbe7e-5ab6-4b60-bfeb-335b7f1c6971",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8947d4d6-dc22-41e5-89d5-ac8511c1a34b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33bb3a11-42f5-4237-8f98-95f77a2c512c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72328e2a-6336-4304-829d-bd01574bd0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45a862c-2dc2-4f68-9d10-23e9980e2206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960aec20-ebf0-4382-b771-3b41a15d0a1e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08fc0e0-d3df-417a-97a7-4476d24b6d62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc9449c4-8f12-4666-93db-40f1250403b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a986988e-ba06-4599-b478-b283f0860931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b2a2a8-3856-4d82-abba-40f58b502206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0a39bf-5404-4496-820c-b6f3c58a4d02",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3f2821-cfdd-4191-a2e6-109f2993d6e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e30abe-e3bf-4a68-af54-ad4158af9833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e135dfc-f94a-429d-9902-50edc1064493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7737e9-b4c9-47f0-ac23-73926bedcc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758f8721-b39c-4b85-ae70-b8a8b7659acb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c3e898-991e-4388-9d9a-3efd5c34cabe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee40f77-3c02-4987-89d2-e5794b3d978a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd6078d-8d6b-4532-839b-bf251dbd3a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f56479-2e83-4f0d-bf9a-6e01a7e3ad89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84fe219-aaac-45f3-8bd7-0b9832ebbdbf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390396bb-c73c-4ade-a28d-1b47c93090c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e0439f-0443-41a4-9a28-55ee5b58ba7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e69601-56be-4c04-a5c9-a1302474ff6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397e2ad4-5038-4cf4-b69e-4cacdc29e67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9e6150-664b-4761-9ac4-3d3b245e5bc1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750171cd-a6b2-4c2c-ae2f-2840206d7315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a632fa6d-56e0-46e2-af67-b960957d0cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1266c26-21aa-47b7-a41b-a123e4ce7e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78212991-57d3-4e80-81ba-b2a5d7715561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edba941c-00da-4246-9932-c6bc05244c14",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1051d611-ebd2-4956-a5dd-af1e1b2fc4a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bf9a733-f938-40a7-b3d9-af3b9d8d90e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b76586-1329-4419-883e-5cbea81ea257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981c2047-d55f-4712-926d-6cb8d399e79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d22ecc-d2f5-4cd8-ad33-c430c6c57098",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e084d2-c47f-4c54-8746-9de2716b6b0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "246daf17-605d-4b1a-b6f2-31e594623794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545b77d6-ca69-481b-9094-01c8140b27a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd937e88-fe6c-4b8d-a1e4-6d89e5237ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cffdb71-f991-4792-8bae-eb7c1fdfd84f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a52ca80-29a8-41fa-8d07-2440d4ba4f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac2e8b9-60f5-4cfb-9642-99095472faee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e108b7aa-dccd-48c7-8b64-3fea48bfc75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f1788e-c185-4db4-a0a2-f9168a2e712b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1183ee57-35bc-42a7-ae08-bf11f8685a90",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdd98af-92a2-4b48-994e-da7773c62923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69b41542-6c8a-4ba1-b0fc-1c3054860c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04116ba2-c60b-4547-9c5d-b4c7e478c624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42888d65-a104-4ca5-820a-02955fe22250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6e91c3-49e0-41bf-a231-c2776cad3825",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478f1d43-ca79-4a66-b999-217b2e114186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28705050-3077-42e6-952b-397ba7a0c773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d1dc0d-6c12-41bc-bd12-78257a53ce5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c3fdef-999b-4845-b201-5963b35f0b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbb7c40-389c-43f7-aaeb-547fdff76345",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf70105-2ee9-4bb7-8e94-d240c387947a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b865f4c9-57e7-4eb8-9059-d540c17079af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6325bdf8-ab3e-4505-a567-d75d941976c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79eded45-8d1c-4bb8-9851-555c31ef73cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ea1637-a6cf-4e2e-978a-eea689d09bde",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e306e0-f295-47f9-b20d-0ca56f38ac26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b57ce7-09f9-4253-b73e-7b63af5aac53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587eb022-a883-47f1-b312-c4767a2e0166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fea0eb2-2f15-4dbc-ab89-64dacc7e13e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38141320-bb82-48dc-b1e1-01a600f2d707",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59473272-8687-4b0b-bc24-d8e4f3adb592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05279823-a889-4ac8-87f2-5fc77bbad36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a462f0b7-5e45-4ab4-8690-da89eed417c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a67d948-5d0c-4b2b-8d49-199ca252924a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15e3a5c-1ddd-464b-b8a5-f37e882c2006",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7423cb-5b33-4abc-a6a0-8a7a88dbb71e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b4c3c8-5f7d-46a3-b101-ff07bfac42bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9f994a-49de-4c1a-903c-b6d94c4380f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ac2ef4-d11d-4558-a380-3e4981374956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bfd730-ee32-4fff-9775-f6291a5169d0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b22629-bc4e-4048-93fb-b1ed912fb664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b58f8583-1f95-46fe-8dbb-88187dfeef33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c0795b-304d-4175-8358-4ddd5ce31a64",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc30005-fb9d-4909-994b-783c33dbb4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f241cd1-1c65-4443-870b-ce7376c3c9e9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafef0c0-843e-415d-88e8-d9472bc73975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8feb530-e047-4092-8583-d56908cf6eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fd2236-fbf8-47bb-acce-3106382ad7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661fb83f-eaa4-41a4-aade-af1dc30a599e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c35890-d20b-41a7-8397-0f53a9104fec",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919b1c28-b050-4f63-a607-2f6654f3a7a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7de44764-d342-423e-a962-892de3bc438e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89357e20-1aa3-48d1-8889-e6d7cad4c774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ceae38f-f243-4c8f-a548-ce50e2d03d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f42151-0351-4486-823d-59c10b29352b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d010ab37-4b05-421f-8a4b-96f5a3975341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5697924c-43f3-4363-8e9d-7d36418d80fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65635fcb-59f6-49ba-9d9c-208c486034b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51215768-3e8c-40dc-b870-2c521c245e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca60c94-0203-4358-a258-04a5b219ea23",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041f1644-265b-487c-9451-885529341cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc568ad8-b64b-4e4c-9993-ea344f9bf8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "debfbf6e-2d75-4910-ac4a-9c9311981983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392e2cb9-fede-4da1-81bc-782c9a6e32e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003a8c0e-519d-4ded-9e3c-b8ae063f7b28",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca77287-1850-4bbd-9126-40d8da03e800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222e83fd-816b-4da9-b7c0-518bc46ce128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b240e40-f3d0-4070-a768-4016eb0c3cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc7414f-ca1b-4903-9a76-c6d67bad9007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0204f2-b4f9-4806-8800-b67f6c29e1a7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed0f3d7-966c-40e6-a103-b75b42e99888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e230dd6-07d2-4f55-85d5-c433fa6759f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f16d690-1f8e-4632-b9b9-fe7bd89bc657",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5401e97b-d0bb-4aa1-b909-582745134e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a221fd9-287d-4e69-9423-211350cd6259",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a95e757-bab4-440f-b346-e34eb99c8e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f783b4c-e805-41a0-8e45-853e21859cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018cfe00-3a7c-4275-bc0d-9dca44ad520b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63146876-d26e-434f-914f-0c2d663adab2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8629565-0ecc-41f1-8b98-b04b5a0bd3c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7acaea5-b6ff-443e-96be-24489eb30651"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4947956e-e5b8-4802-a851-1c838c27af86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1ffcf0c-27d5-4fa2-87c2-4055d9f3d6bb"
                    }
                  }
                ]
              },
              {
                "id": "2c327ac0-2227-4fed-a476-01b79dac2552",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c810aa06-518f-483b-bb3c-b13d3087fbd8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdaba2a-685c-4fba-b0a8-e3be54b94054",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2e2d793e-4261-42ec-b2ad-9100888c0d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5ceaac-e5a0-4a93-a124-a42c3524fb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dd1e04d-ea17-461a-9c76-65966e35b2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da76109e-494d-455a-886a-f09ed1664416",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49a7bb3-ca44-4b18-92aa-1c57a2811b52",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "db8bd323-0bca-473d-aaaa-2baa2d83d83d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdda594f-2d11-43da-88f9-de437f784693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bc40d24-f83e-4fed-b26a-6f4d5bac4bd5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef2e1d1d-db5e-4a44-95d2-93f865d21d1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a85ee35-f53b-49e2-a8bc-a9b6b3b25023"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a9989f9-69ef-4c68-9a3f-9dfd624f42b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54dbb431-d82a-400f-b6cf-31d911ce57a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "3e5b2e8f-c321-4fef-9816-25628c4335e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b5cf7d0e-879d-4e72-afd8-9f534bd111ef",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53054d45-efcb-43c3-9d19-3860edee2bd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d09b71c4-f9d4-45f1-a9fb-8574a26d47a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddedf743-56b3-436a-929a-ac16e150b379",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16d3ffc6-6576-40cf-96af-a6b80cb5fd1f"
                    }
                  }
                ]
              },
              {
                "id": "9306cf5f-d2bc-4f98-89e9-56e7d462300d",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4a29408-fd06-42e3-8311-e684b2f758cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8aeb33c-c862-4ee1-b34c-1d0e4d460276"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d006ef3-4e39-48b9-93a1-58cbd07c19f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0f4e35a-d6e3-4b83-ad1c-e14bbd9be97a"
                    }
                  }
                ]
              },
              {
                "id": "a4cf872a-3571-471e-b06b-9679435fe4e8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f9f7db5-1ba5-4d38-a1de-5df9e91aa093",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df920b00-5c61-41e3-abbb-eca418e93252"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b732d59-5cf5-4ce6-8005-059c2515b50c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8b161f9-7f83-4089-9e22-6204a56040ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c009818a-381f-49a8-a877-aa6e93e81a7f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7a666493-f4e6-4913-b99e-bf37627676ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af8d6702-746c-40a7-ad90-7e324296e26d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "586f80cb-9b9a-4255-9a58-a6cea094eb59"
            }
          }
        ]
      },
      {
        "id": "14509680-5c0b-4920-8f6e-c226ece3f59a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "26b15f75-c963-462d-8a19-4556dcc284b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9fa94f44-8ac7-4bee-a056-79e7b7c3c1a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d7e865a-cb99-48ab-8323-d1f94898594b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bde8ffa-44d9-459a-a438-af1b4ff98375",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e64f0c8f-e8c6-4fd3-8667-24cb543c0e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c114d8-e065-48a5-9462-b5a3681cb55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db3c7d15-cada-4b1c-bbb8-febc3eff9e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec7f21d-9036-4003-a384-07c3a6eb4104",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef02f42a-35f8-4f4f-a6c6-8fa4557a06ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "988e0444-2bfb-40ff-873c-ccf819079011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad16e34-57cc-4d88-bbcc-c8deb8356324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1354bb1-730d-4dd7-8ec8-ef5b43bfee90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d990bb3-0897-475c-b779-ba875e0ad1a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2324fd5d-7125-46e6-8081-1a7f6a585fcd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b78f0ff-8965-40c7-aae8-415b11056851",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09fb7ca8-1b12-4f90-9bfd-0de65ad37610"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac83315a-acbe-449b-bb88-5c2e00445630",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0390d73f-668e-4170-abe9-3f64dc5df7b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4d2203b-dcba-49c8-91c0-2ec0be91035d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0b8392b-e1e0-441b-986a-a1068d440fd2"
            }
          }
        ]
      },
      {
        "id": "ebf88db7-2f02-4310-bb03-b8d279b9c0bd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b883c8f0-f131-4825-9988-21ecfe0de265",
            "name": "Negative Testing",
            "item": [
              {
                "id": "433e0d64-54f3-4c6b-b460-387eca26e7df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c488a69a-3443-4f10-b426-eef9bb1b86ec",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8be940d-ff6b-4b05-b54c-a30679b1bcc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1e7e4035-412d-4d70-bb09-b0c8fc1023cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7ee564-3d8c-4188-89b3-e1caccf4afbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ef33680-ff0d-4a13-93da-ff137799cf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e509a1c-e137-4f17-a614-832fc867aa9a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f13deda-a929-4187-ad25-23daec07f876",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a3f22cb1-e036-414a-89de-41b9e18ea936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9db73e-c770-4b62-aa8b-ec8e308e1ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4929fee0-5c8d-4dcd-a181-04db206ebec3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a1f15ef-7a5b-4c84-bf86-b34e783d511b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57a6bd18-9e4d-4017-af30-ca9c76288378"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25ec2f59-95d1-41bf-b189-f2507386c97d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f4f079b-2a6f-40d8-8d30-707bcab223cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "876cb693-0211-46ea-87f6-fcdf096e2a6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "81a8b3a1-1ed7-4759-bc01-ef5cb4064ff6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcd812c1-d2aa-4c0d-8f91-162570baf8e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94592beb-e514-401c-9a8b-b753ddbdc1d3"
            }
          }
        ]
      },
      {
        "id": "f3fc675e-480f-4c72-823d-968de2a3f3ce",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e43e7577-71c3-4901-a98e-cfb683f989d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f64ceee-f9d7-4a51-9451-a3f5a0efb8c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0e72b6e-726f-4324-9610-b1bc7934685a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e13f5e3-2759-4c2a-ae26-7d0cac9b1ecb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f27aafa1-d152-47ff-868f-07a138b8b402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6d2fc6-0634-4daf-9a27-79414b764811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b609f84-d5cb-46fb-8eae-a140e8cf010f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaec9c2-1bea-4433-a59f-8cc91dcdfc6b",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a30c42-27c3-4320-9493-4240752180c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f9603cb4-1c83-4b51-b03e-b656fc167a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53de84f8-cb0c-4317-ba07-15d655378fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d869690e-a490-433e-9b9d-0c7d5d7602ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd685e95-4c72-42d3-86cb-5e4223a1a082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8a5db93-849b-42eb-a0dd-bc452abbda1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6aa386d4-6ab6-487c-a647-a69799fb72ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89b6f226-d3b3-4066-93fd-a22308b5489c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53fce5ef-2586-43a1-baa9-727ca35e4374",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "50fd6642-dcbc-40f7-bb36-f684f5a875fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f9e9888-aec7-4837-989c-4a7acf4b961a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37ff6cda-44cc-4fae-8713-f4adc598ef9c"
            }
          }
        ]
      },
      {
        "id": "43d8fdc7-2c02-4482-8acb-a7b49bd16a13",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "705bacf8-aec2-4ecc-903d-8a5630251ed8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e860e156-bad7-4237-b2e2-fbbce56b7870",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "262338b6-945e-4b09-a33a-affcbe1371cb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e644454-1730-45df-a20b-957ed4e79e1f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d805c2a8-4917-4dd1-b349-4f7cc8fd930b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 447.5192307692308,
      "responseMin": 15,
      "responseMax": 4247,
      "responseSd": 424.9287039920127,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667004241684,
      "completed": 1667004371932
    },
    "executions": [
      {
        "id": "6b04004e-10b9-475f-b252-f8393a90b0cd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f68a91ae-014d-4238-8517-446be19dd5b9",
          "httpRequestId": "61939521-6768-4b89-a479-7d577b5ede25"
        },
        "item": {
          "id": "6b04004e-10b9-475f-b252-f8393a90b0cd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b5bfa942-944d-462b-9476-35e188059895",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 0
        }
      },
      {
        "id": "46e49e79-8edc-46bc-855b-bf481db156a5",
        "cursor": {
          "ref": "c797ac9d-6066-4941-932a-2c2398c0f83d",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "208c1a45-0e6b-46a0-9799-4b9d74b7cf27"
        },
        "item": {
          "id": "46e49e79-8edc-46bc-855b-bf481db156a5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "02e828af-4e16-4aad-9319-20f48fdfda3f",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "cc363bad-d8b1-4a1e-a0cf-af4731697f74",
        "cursor": {
          "ref": "0c2c1faa-17bb-457c-82f3-5c0bc0312075",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "71d9dba2-4d90-48c8-acfa-1dc047852653"
        },
        "item": {
          "id": "cc363bad-d8b1-4a1e-a0cf-af4731697f74",
          "name": "did_json"
        },
        "response": {
          "id": "71dc3b2d-4bf1-4c29-ae06-21c88635f50f",
          "status": "OK",
          "code": 200,
          "responseTime": 532,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54d3624-ca91-477f-b73b-624c3e64d73f",
        "cursor": {
          "ref": "87dcd649-1921-4c4d-b02a-96dd42ea826e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "db4ff87d-844d-4a38-9e0f-9b69f6ca520c"
        },
        "item": {
          "id": "e54d3624-ca91-477f-b73b-624c3e64d73f",
          "name": "did:invalid"
        },
        "response": {
          "id": "52e3e946-33a7-4687-9508-83f1bf4a4ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54d3624-ca91-477f-b73b-624c3e64d73f",
        "cursor": {
          "ref": "87dcd649-1921-4c4d-b02a-96dd42ea826e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "db4ff87d-844d-4a38-9e0f-9b69f6ca520c"
        },
        "item": {
          "id": "e54d3624-ca91-477f-b73b-624c3e64d73f",
          "name": "did:invalid"
        },
        "response": {
          "id": "52e3e946-33a7-4687-9508-83f1bf4a4ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a43e11-4a56-4d31-8663-683aa5aa5e84",
        "cursor": {
          "ref": "848841c9-d4c5-4d03-855c-82d5222ce463",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "57457630-a203-4530-9add-03502c113d55"
        },
        "item": {
          "id": "42a43e11-4a56-4d31-8663-683aa5aa5e84",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a6f35309-cdd5-4ec9-9817-bde538c5e893",
          "status": "Not Found",
          "code": 404,
          "responseTime": 515,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d0bbf6-f1ea-4b08-b56b-5eebe7a44e3f",
        "cursor": {
          "ref": "a65f6f05-c794-47d3-b12f-19216f4c7547",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c0cd13ea-f983-4a84-949c-cd98c72e70d0"
        },
        "item": {
          "id": "30d0bbf6-f1ea-4b08-b56b-5eebe7a44e3f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a204625d-e482-468d-bdde-cd2e2b8da484",
          "status": "Not Found",
          "code": 404,
          "responseTime": 447,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16922bee-2c8b-4b00-96c9-a003b469ada0",
        "cursor": {
          "ref": "e2b38e26-1a8d-46cc-8d78-c98cff8fb2ad",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5ab2357a-f68a-4cd8-9700-f356d1ace47d"
        },
        "item": {
          "id": "16922bee-2c8b-4b00-96c9-a003b469ada0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3f69afc3-7343-4a67-947c-4180d292a85f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4003964b-d37e-4ed2-b0be-77ba0d4e1c5f",
        "cursor": {
          "ref": "7aa69733-7a50-4e06-9e11-885056e01785",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c502eb71-1cf3-47bc-b933-1412ff04a574"
        },
        "item": {
          "id": "4003964b-d37e-4ed2-b0be-77ba0d4e1c5f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "beb0f5bc-cd18-4e89-8df7-23b02197712d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 524,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4003964b-d37e-4ed2-b0be-77ba0d4e1c5f",
        "cursor": {
          "ref": "7aa69733-7a50-4e06-9e11-885056e01785",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c502eb71-1cf3-47bc-b933-1412ff04a574"
        },
        "item": {
          "id": "4003964b-d37e-4ed2-b0be-77ba0d4e1c5f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "beb0f5bc-cd18-4e89-8df7-23b02197712d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 524,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b3c522-c21d-4c92-a1ae-6709fa3719fe",
        "cursor": {
          "ref": "f60707de-3465-4bd4-b6bb-0ab381cefcc6",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7bb7c4d1-d289-43fc-b24b-b03f53440094"
        },
        "item": {
          "id": "48b3c522-c21d-4c92-a1ae-6709fa3719fe",
          "name": "identifiers"
        },
        "response": {
          "id": "7554df65-9645-48b2-8c01-ffd220c7b39e",
          "status": "OK",
          "code": 200,
          "responseTime": 1131,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6eea308-e2f9-4344-ae53-cd597f3acdd5",
        "cursor": {
          "ref": "b4e0321b-44d7-4a4c-ad04-b5f8ffd5ff9b",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2199490c-8930-448f-b99b-b422b1d69e51"
        },
        "item": {
          "id": "b6eea308-e2f9-4344-ae53-cd597f3acdd5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ff0f881b-3082-4195-ba43-74a0f2573d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6eea308-e2f9-4344-ae53-cd597f3acdd5",
        "cursor": {
          "ref": "b4e0321b-44d7-4a4c-ad04-b5f8ffd5ff9b",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2199490c-8930-448f-b99b-b422b1d69e51"
        },
        "item": {
          "id": "b6eea308-e2f9-4344-ae53-cd597f3acdd5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ff0f881b-3082-4195-ba43-74a0f2573d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1678da-dc28-4910-8fe2-6ea0e78521fd",
        "cursor": {
          "ref": "c6b88782-2d75-4eb2-9f08-9764c4e9d21b",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9074a954-9c1e-446b-af03-4d706e34b1c6"
        },
        "item": {
          "id": "0e1678da-dc28-4910-8fe2-6ea0e78521fd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bea19f9a-e007-494b-99a0-c38eb7d9b876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d58a5d-cd62-4757-9e51-d654bd25fa0a",
        "cursor": {
          "ref": "9a7c96ca-befe-4bc5-94cb-5e366326c951",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0802e1d5-b398-4b5f-bcd1-f48089eaa9ce"
        },
        "item": {
          "id": "73d58a5d-cd62-4757-9e51-d654bd25fa0a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "25f0750e-60fc-4ee8-9c90-c6a631aaf647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2594426-6786-4e00-9288-059edaf1fd14",
        "cursor": {
          "ref": "ccecc3f9-c1b6-4835-a35d-157e89cf8a70",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "beb39b52-06f6-441c-9d8c-e1dee6f1cfac"
        },
        "item": {
          "id": "c2594426-6786-4e00-9288-059edaf1fd14",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b0417024-2514-446d-a952-f5321e430d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d75f80-1f19-4d89-8a8c-13f48608def9",
        "cursor": {
          "ref": "7a90c926-4e83-4a8d-bd71-c0ca30a470f2",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "69ead22e-7505-493c-9b8b-fa8d5b85a32d"
        },
        "item": {
          "id": "48d75f80-1f19-4d89-8a8c-13f48608def9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e1e39e1d-2429-4a1d-81ea-e478aba1b75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a612f784-f1c5-46e3-8cff-65b2a8b325a2",
        "cursor": {
          "ref": "f6212949-ab66-4311-87f1-c6ff5047c935",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ccff8d64-3752-4c1a-b5ad-2c2183e31338"
        },
        "item": {
          "id": "a612f784-f1c5-46e3-8cff-65b2a8b325a2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9a66a38a-2e6b-4cff-9d84-2a1391d74c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4a33d2-f22b-4f08-bb9b-9ed9079cf684",
        "cursor": {
          "ref": "d1592d89-21a9-46c8-938e-434c7751b088",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f4f613e5-6e4d-4265-ab3e-b92dd56d0d6b"
        },
        "item": {
          "id": "0b4a33d2-f22b-4f08-bb9b-9ed9079cf684",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a015bce9-d769-4c3f-bea1-af69e38c68ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f52e00-fbfc-4204-a67a-1e64e9c1df31",
        "cursor": {
          "ref": "c6ae107a-2c4b-4c0b-b29a-66b1d249b2c7",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "35ec2d7e-5ef9-4c74-850c-5208ff0aad0b"
        },
        "item": {
          "id": "e1f52e00-fbfc-4204-a67a-1e64e9c1df31",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d074d932-ffe0-4cd6-ab4b-2506749738bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b25c04-284d-4440-87cb-e8ab495e8b62",
        "cursor": {
          "ref": "a06039c7-a70b-4781-a628-4d5459006110",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "36a88d00-5ca3-40b4-953d-da6c52dc306d"
        },
        "item": {
          "id": "f9b25c04-284d-4440-87cb-e8ab495e8b62",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0a4e1f7e-140f-44b3-9867-393a63fa55c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fae276-53f0-48ab-857e-f3e2d309ac57",
        "cursor": {
          "ref": "26b0e1b7-b0ae-4438-8c36-fcf615612b76",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "12503953-3d58-489c-b11a-85669bccb7e2"
        },
        "item": {
          "id": "27fae276-53f0-48ab-857e-f3e2d309ac57",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "67e029fb-792b-49c0-9316-cc6d949fdbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc00483-a5de-46b2-8696-8af065efa65a",
        "cursor": {
          "ref": "58c3ae0f-bfbf-4de6-aefb-f5f039d42151",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "465f9879-a334-407f-95ef-5cfa7acc2b10"
        },
        "item": {
          "id": "ccc00483-a5de-46b2-8696-8af065efa65a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a665063c-40cf-4289-a0be-cca69c202cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f699f609-cefa-4a2a-af87-274c68e406f7",
        "cursor": {
          "ref": "b2cd6562-fc52-4d2f-ae5f-2a52c7ec2d9a",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0e3f1933-bd9d-44be-91c0-430a70a7a666"
        },
        "item": {
          "id": "f699f609-cefa-4a2a-af87-274c68e406f7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4a7fc8c2-4316-4edb-b34d-00e83403562b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42dee25-cb0e-464f-8eef-8bfd917171a9",
        "cursor": {
          "ref": "5175083b-8dde-4136-8d4f-93e43d1a7560",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4bb71124-4d41-43ac-b642-de401a7c05ce"
        },
        "item": {
          "id": "b42dee25-cb0e-464f-8eef-8bfd917171a9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4580dc22-7957-49e6-b1b7-ad3b9d8c391b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b82a2a-6984-4ab7-92d1-ccd42f286369",
        "cursor": {
          "ref": "8fc28af7-505d-4d3a-a2e5-54263704ef64",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bc9dc0e0-d8ae-4780-98f9-bdbb9d68acf0"
        },
        "item": {
          "id": "93b82a2a-6984-4ab7-92d1-ccd42f286369",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "14fb3b06-337e-4c19-99ae-dc85cc4eb78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c7bacf-f67b-41e4-9316-91df17b617d3",
        "cursor": {
          "ref": "b2f9e889-d66f-4b61-a098-d0a345189c61",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9559a253-d6b9-4b2e-be09-66213313ee7f"
        },
        "item": {
          "id": "d4c7bacf-f67b-41e4-9316-91df17b617d3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "75ee27e7-25fd-4c1b-ba0d-4dbea409f166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8583d9c1-ebb9-469f-86ac-5c09dcef2ef7",
        "cursor": {
          "ref": "94ea54c3-8b90-4f85-a50e-e6ba3e954b50",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f607502b-e19b-432f-918d-7e421a825cdd"
        },
        "item": {
          "id": "8583d9c1-ebb9-469f-86ac-5c09dcef2ef7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "213a434f-03b1-4bd5-beae-da81a4a35575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d26c2d-c5fc-40fe-a288-99845b4f0127",
        "cursor": {
          "ref": "ded8a1d4-434a-4d32-a209-a288db60480f",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "188bc9d9-4e61-4bda-a48e-759b1b79f6b9"
        },
        "item": {
          "id": "e8d26c2d-c5fc-40fe-a288-99845b4f0127",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b08aa0f3-6ce0-463a-a1a0-b29c1cb0f443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32219c8-3293-41d6-946b-1484e34361eb",
        "cursor": {
          "ref": "ed3868ea-c18f-46f6-a1f7-9d4d21b2a1c2",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "06924fc9-fd66-4083-8525-507b92a27eff"
        },
        "item": {
          "id": "e32219c8-3293-41d6-946b-1484e34361eb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "130577e8-3c2e-4169-9b69-1030add200c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd13e03-6b43-4a1a-95cc-3d1c4677f2b4",
        "cursor": {
          "ref": "300cc693-b33d-4537-9d52-0a9277b71339",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "099f52e7-7173-4e5d-97da-6379c858ab8b"
        },
        "item": {
          "id": "dbd13e03-6b43-4a1a-95cc-3d1c4677f2b4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "355f0dff-e403-4cc3-88c3-e8d5d4d6c7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404d1cd2-70be-4733-822e-30207b688edc",
        "cursor": {
          "ref": "4c9664dd-f41f-435d-96f3-9074102a2ff1",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "484f5dbc-91c6-4769-949b-a05bb94dae8a"
        },
        "item": {
          "id": "404d1cd2-70be-4733-822e-30207b688edc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "856a817f-1aac-46ab-a369-4bb800da661b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0be5789-84b3-4c0a-8077-f4d16c964353",
        "cursor": {
          "ref": "e22e78a6-b34f-4adf-873c-710bc175d276",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5c682eb5-29b3-4156-ae32-53418e419ece"
        },
        "item": {
          "id": "b0be5789-84b3-4c0a-8077-f4d16c964353",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "684eb83a-1da3-4bf4-9b6b-30e7f2678b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58777703-4282-4244-b397-5d495c9f3576",
        "cursor": {
          "ref": "c64bb78a-69cd-4726-9615-069b20e959cf",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "24e7a24f-01d1-4a92-9123-86f523f10113"
        },
        "item": {
          "id": "58777703-4282-4244-b397-5d495c9f3576",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "06780a38-fbcd-46cc-8eeb-2dc3e3f6eeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fda7f9-e05e-440d-9a5f-387b1aca06c6",
        "cursor": {
          "ref": "eff6e288-89df-4474-b5f0-59d0a1461f70",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "22bc2583-5474-439e-9550-83b3a178f757"
        },
        "item": {
          "id": "f9fda7f9-e05e-440d-9a5f-387b1aca06c6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "09f7333e-a7e7-4018-995c-ebd1b76aff16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ca365c-fae6-48d7-a5bc-bb0730bfa233",
        "cursor": {
          "ref": "e1a92696-9caf-4f3c-a410-d6d76f1e41e9",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "71c97c63-9b41-435c-bb41-136113e46669"
        },
        "item": {
          "id": "08ca365c-fae6-48d7-a5bc-bb0730bfa233",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "be7fe829-a2ec-4677-9894-e02c289d3521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee26d1e0-0830-43b9-86bf-349241007985",
        "cursor": {
          "ref": "f369a469-afae-44ec-9fc1-28a7a1c8e2a8",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a9f11f58-7e9f-4c00-9c24-f1202a02d02a"
        },
        "item": {
          "id": "ee26d1e0-0830-43b9-86bf-349241007985",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eba130d8-e5be-4e99-bcc2-ffd9d3e27f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c215fc90-7ff0-42d0-bf39-2a635ad52a7f",
        "cursor": {
          "ref": "5b7a05f0-3b9e-4bfd-933b-a1f027852bc3",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b76d0f95-a37c-4c90-9a58-14efef574716"
        },
        "item": {
          "id": "c215fc90-7ff0-42d0-bf39-2a635ad52a7f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ad2c329c-f24d-4f84-a9af-80f956668f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cfa009-4ad2-4069-b329-81c461016924",
        "cursor": {
          "ref": "8bec2db8-e79c-4e07-a9c0-5e1dd3ad908f",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "147a3875-25e2-4046-a7b8-272aa02ab539"
        },
        "item": {
          "id": "e7cfa009-4ad2-4069-b329-81c461016924",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "346c18d6-4946-489d-b120-bca747a005e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7040984e-f5a7-4df0-940c-87641f806b8d",
        "cursor": {
          "ref": "1ccdccee-8b03-4adc-bef1-038b45acbfa3",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a4b540aa-1c1f-403e-b765-1160e3a5d466"
        },
        "item": {
          "id": "7040984e-f5a7-4df0-940c-87641f806b8d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e01577f3-d69e-4ce6-8d37-6a330e44840c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e1f4d3-27c0-45b0-8744-4a2940e528be",
        "cursor": {
          "ref": "0452ccd9-92b0-4489-9d30-d73660bbe529",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "08ceadbd-df7e-47cd-9dbe-b73035848470"
        },
        "item": {
          "id": "a6e1f4d3-27c0-45b0-8744-4a2940e528be",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "21e84ec2-5120-40a4-aeaa-442734d09db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbd40e7-e67e-4f01-878b-dc1630908be8",
        "cursor": {
          "ref": "1e690966-cdc5-4f80-8727-5dc5c9046faa",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ba2e77ed-9e4f-449b-99a1-c9c3c6456d15"
        },
        "item": {
          "id": "dfbd40e7-e67e-4f01-878b-dc1630908be8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "058c7dc3-0d8a-48ee-aab9-37077e4d0e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bff0b9-7d1c-4ea8-af0b-90ddbf613963",
        "cursor": {
          "ref": "3084b5b1-d094-4db5-aec9-f07615814502",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "01de876c-3109-4d18-8988-cd60133f8d7d"
        },
        "item": {
          "id": "24bff0b9-7d1c-4ea8-af0b-90ddbf613963",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d3590dd2-d047-4dc4-8d16-ab5547444d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda7729c-7f33-4e1a-9652-6461e843bf1a",
        "cursor": {
          "ref": "eb00b5a7-3ca2-4dca-b338-e19e2365a8a5",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5a80ef58-701d-490c-8694-9ed383f082a3"
        },
        "item": {
          "id": "bda7729c-7f33-4e1a-9652-6461e843bf1a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c58f7201-c36d-4b8a-a427-4e7f64f6d833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba3a240-7bed-425b-9879-4d2018960a36",
        "cursor": {
          "ref": "f4d851b2-b827-4506-a201-99f015f17dc5",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cea1b857-ad29-43e0-952e-745562824d3b"
        },
        "item": {
          "id": "1ba3a240-7bed-425b-9879-4d2018960a36",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1b0094db-1e04-4487-9a5b-f7220f2efcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1edcca1-e923-4fbd-b4f7-3a8968a7e226",
        "cursor": {
          "ref": "308c59d1-6855-4137-8aba-7136096ea4ca",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a49e6a09-5b28-453d-b59a-849ade23fb99"
        },
        "item": {
          "id": "a1edcca1-e923-4fbd-b4f7-3a8968a7e226",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "eb51831a-f0ac-46ce-993f-df7339ae961e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ceac32-0d7e-4143-b08f-eb17728e4b6b",
        "cursor": {
          "ref": "f33184e7-2cab-47d9-93be-465aff2bcba5",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ef4ea1d0-2c24-4083-b742-c9d03cae2b10"
        },
        "item": {
          "id": "82ceac32-0d7e-4143-b08f-eb17728e4b6b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dddf87bb-d020-4db5-a73e-5a19fdee2bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bef1da4-c108-4723-b746-869475897fb6",
        "cursor": {
          "ref": "6c3148b7-f5ce-4a57-928b-5ba6b16ef3a5",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ad3358a6-ccc4-491d-8053-e87bc11e57e9"
        },
        "item": {
          "id": "2bef1da4-c108-4723-b746-869475897fb6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "38f2a6ca-08ba-4732-98cb-7483dd7ec9f7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 489,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d11732-fdce-431d-b38f-dfb91915292b",
        "cursor": {
          "ref": "95572820-9a5a-47aa-8dff-78c5ee1b09d4",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1668bcd4-79c8-43b7-a0a2-af29e7b2853c"
        },
        "item": {
          "id": "f2d11732-fdce-431d-b38f-dfb91915292b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c54196d0-74d2-498d-8b47-76b60c2a91a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd8f4cc-5275-4d5e-8fa1-3a8be90dca4a",
        "cursor": {
          "ref": "3ab38536-8fe3-490f-86f9-8493565807fa",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "600c8514-1711-440f-b7bd-c15be7c2085c"
        },
        "item": {
          "id": "9dd8f4cc-5275-4d5e-8fa1-3a8be90dca4a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "557854b5-a25d-4ebe-8975-604a81568579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de24aad5-c45e-457d-b08d-ab63e82bc4ae",
        "cursor": {
          "ref": "c711ec7e-979f-4f67-a3ba-fe3e6fc63d28",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "74505b7c-4f88-4942-95ce-be2d2ee8b0eb"
        },
        "item": {
          "id": "de24aad5-c45e-457d-b08d-ab63e82bc4ae",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "748bcf5a-f720-4d1c-b8af-5f8b394f4c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cccc147-b87c-4396-afdb-b4bdd52ed422",
        "cursor": {
          "ref": "77ced94a-1be4-436f-9026-6e47f38d2d6c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "acfb86a3-98e6-4549-92da-463afb9dac5f"
        },
        "item": {
          "id": "8cccc147-b87c-4396-afdb-b4bdd52ed422",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "567340fe-6905-410e-8d08-9875b7a8a56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6000fc0c-f1f7-441f-bcf4-1fcd76ed1494",
        "cursor": {
          "ref": "8edb7907-4882-4488-992e-20a923eb5f2f",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e73f7318-0d1b-497a-b84f-3da8fb8dbf99"
        },
        "item": {
          "id": "6000fc0c-f1f7-441f-bcf4-1fcd76ed1494",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "35489cb8-74d4-431f-9a7f-362faaf91844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca27e54-6ba2-472a-b667-cc11fdd1a8df",
        "cursor": {
          "ref": "e7a48b0d-60e8-4eb6-b11a-eacfc288276f",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8037d64b-454c-4df8-8131-e139c524f031"
        },
        "item": {
          "id": "7ca27e54-6ba2-472a-b667-cc11fdd1a8df",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5abc6b18-92d2-40e8-bd5f-ebe6af42c191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b446416-9f2c-4811-8a96-f2322473ee51",
        "cursor": {
          "ref": "e5f19f80-671f-447f-b8aa-f706da2d9224",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f2146514-122b-42ae-823a-814c6d137cec"
        },
        "item": {
          "id": "8b446416-9f2c-4811-8a96-f2322473ee51",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b3c8058b-93e5-4d46-b932-bed12c2a2f3e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 501,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88af88b8-1172-471a-a326-87989e25b74d",
        "cursor": {
          "ref": "b86ad8be-fcb3-453d-b6aa-70538ae270bd",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cc4cab75-e22b-4c18-8b98-eacc0c7da95b"
        },
        "item": {
          "id": "88af88b8-1172-471a-a326-87989e25b74d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d40d788c-c840-4b29-aad4-f976680c5f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c4049d-3373-4898-8325-84d247d8ac3a",
        "cursor": {
          "ref": "4eb3faf4-81e1-4d5d-a134-ba6f45676593",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "18f46b37-a3ac-46fb-b2e2-98ac89c33353"
        },
        "item": {
          "id": "30c4049d-3373-4898-8325-84d247d8ac3a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "41bb1344-d1a5-43fe-8a11-cd7e0bf19df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79553959-c104-4c8a-9ffc-005611fdad30",
        "cursor": {
          "ref": "e49241ad-f844-4db2-8c15-321e2b13181b",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "de31db5d-ba86-491e-b117-aa49b2ab7354"
        },
        "item": {
          "id": "79553959-c104-4c8a-9ffc-005611fdad30",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7d8b463e-fa6b-416a-9105-fb5d6ba4bd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ff7734-25be-425a-bdd9-2b60fae4dd6c",
        "cursor": {
          "ref": "904e382b-e662-43cd-a77a-88bf001eda78",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4f5116c8-d3eb-4f72-a314-2251b34312e4"
        },
        "item": {
          "id": "a8ff7734-25be-425a-bdd9-2b60fae4dd6c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4fbc0e75-08e4-48df-966a-06feaa865b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12897eb1-1285-439d-b714-ee63924cd16c",
        "cursor": {
          "ref": "ac17e387-1670-4f3d-9d9b-239cdea2f179",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "168b5241-1519-4e23-bfd2-1ba5d9cde056"
        },
        "item": {
          "id": "12897eb1-1285-439d-b714-ee63924cd16c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d4a89b2f-f016-44a0-9474-f3e8b11642d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2c269b-d16b-4fc1-b127-3fa2cfd56be8",
        "cursor": {
          "ref": "c0215aa2-4b60-4481-a00a-4e12c511d22f",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "640b8d0f-10c4-4ace-82a3-1eed7b8a215c"
        },
        "item": {
          "id": "7a2c269b-d16b-4fc1-b127-3fa2cfd56be8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "31802559-4217-4687-8e93-87f479c31b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469dbc54-4530-4230-a344-3e7ade3ac789",
        "cursor": {
          "ref": "e8c6b909-a1a5-4c44-b3cc-36070a1d81fc",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3162ca83-6f13-4ffd-ad7a-c076db080e82"
        },
        "item": {
          "id": "469dbc54-4530-4230-a344-3e7ade3ac789",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2aa3f861-74c7-485f-acef-da11b0938b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c8088c-ba65-4c06-80c5-83d9b8a4338a",
        "cursor": {
          "ref": "4aba36d2-9285-4c0d-9584-dc237994e555",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e8be84e2-fed4-4465-87a7-080118d814c4"
        },
        "item": {
          "id": "79c8088c-ba65-4c06-80c5-83d9b8a4338a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "81700bbd-5b0e-4bfd-9133-850914a2614e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ef6c59-1921-4548-b78c-e99baf619412",
        "cursor": {
          "ref": "3ce93963-ca83-461f-985d-5769e56c450b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7af6bfac-0889-4b0d-b3e3-e7f822df9068"
        },
        "item": {
          "id": "b7ef6c59-1921-4548-b78c-e99baf619412",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a2dc4611-0ca9-484f-85b8-64369765a517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca57d2b-6ceb-40b2-934a-1f35fa4694ea",
        "cursor": {
          "ref": "d62f8aea-c3e4-46ed-9433-374ee781e5ab",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6128a2cf-9d29-44c7-89d6-69f663ea0b4b"
        },
        "item": {
          "id": "eca57d2b-6ceb-40b2-934a-1f35fa4694ea",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "da473103-9542-4ae5-8be7-46d3ce146ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326d6b1f-ccd1-45eb-8354-4d94c9c809b8",
        "cursor": {
          "ref": "f7bdd390-e5bf-45c9-9c78-9eff978aa12a",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4fc18f4a-c647-4380-b486-03ff69871f9d"
        },
        "item": {
          "id": "326d6b1f-ccd1-45eb-8354-4d94c9c809b8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "90ee351a-b6db-43ed-9a23-bcdcf339b3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3540350e-d9f6-4bf9-918d-3cd6e84fd4f1",
        "cursor": {
          "ref": "f685492f-00b6-4319-9ce7-9a4f32dd673c",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c9f898a5-9dd7-4cc3-9e50-09c44b884021"
        },
        "item": {
          "id": "3540350e-d9f6-4bf9-918d-3cd6e84fd4f1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "473944bb-26bb-4c45-a6a7-00527d454409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb575b9-0abc-450d-8367-9b018bae6311",
        "cursor": {
          "ref": "684c238f-0d2c-4731-ba25-23b8340deec2",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4ba66c2c-40ff-46fc-ab8b-2f7e858fd3d1"
        },
        "item": {
          "id": "afb575b9-0abc-450d-8367-9b018bae6311",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c4904fa1-5a07-4884-b6a5-05482a70273c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90c8439-18c9-4d1b-b806-510480510e55",
        "cursor": {
          "ref": "77c9d2a0-62e6-4bd0-a0c6-3758603425aa",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a9d5275e-4910-4176-98c7-a63ea6ca81cb"
        },
        "item": {
          "id": "b90c8439-18c9-4d1b-b806-510480510e55",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8f1d5629-bf3d-43d1-a655-b2c3290321fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbde2834-3300-429e-b949-0560683b512e",
        "cursor": {
          "ref": "1ea3e49e-7166-41bf-a835-a55bff4d122e",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fbbdb1c0-4a80-40d7-9ddc-cdecb357e7be"
        },
        "item": {
          "id": "cbde2834-3300-429e-b949-0560683b512e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a55fe0ab-9da3-4d89-84ff-c69646ffc2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0715b1-f719-4ca0-863e-d5255c75812c",
        "cursor": {
          "ref": "942e3bd3-bb4e-4758-a0b6-3f8eca03accc",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f75d11ce-e58b-4b5e-ac3c-809796e151ab"
        },
        "item": {
          "id": "7c0715b1-f719-4ca0-863e-d5255c75812c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1f852bc3-98be-4041-ad7d-f72bdea99ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055fa3b2-5988-4723-a44f-8b99bbd1f91c",
        "cursor": {
          "ref": "b25299dc-3a0d-4422-9444-6cfda310891d",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7fe0c7d5-b775-4e60-86dc-87a2d0f6e7a5"
        },
        "item": {
          "id": "055fa3b2-5988-4723-a44f-8b99bbd1f91c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c967a456-c390-4de0-a01a-8242d3083819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5f4c9b-477b-49de-ac1b-ff5a4ec045dc",
        "cursor": {
          "ref": "809ef063-1353-466a-968e-b8768e56c1c7",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a90bdc55-b1f0-4248-9f51-1afe7eb701ff"
        },
        "item": {
          "id": "4a5f4c9b-477b-49de-ac1b-ff5a4ec045dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "691cf3f5-a9cb-464b-90fc-e8ca7c59bc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c812b38f-f762-4f62-b6d5-06c07fdbdfb8",
        "cursor": {
          "ref": "d749b936-cdb4-418a-aaa8-48b401e1845d",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e7cddc9f-919e-414c-89c9-a44e3f43a960"
        },
        "item": {
          "id": "c812b38f-f762-4f62-b6d5-06c07fdbdfb8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "310f6a23-12f5-465c-a2b1-90371c63ab80",
          "status": "Created",
          "code": 201,
          "responseTime": 1841,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "54c7d71f-6c4a-4157-b50b-c15591b85edd",
        "cursor": {
          "ref": "766459c7-0dab-4989-858c-214f1f491370",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "05c58157-19fc-4c36-8462-6fa83d7b29fa"
        },
        "item": {
          "id": "54c7d71f-6c4a-4157-b50b-c15591b85edd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e2076048-19af-46bc-b707-b5435611e55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48abb2b9-a5f3-4230-a7bb-3435825a9799",
        "cursor": {
          "ref": "b8c6f9a7-7ab7-4de8-a41e-16b84d3a23cd",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c9f6f271-8c24-4971-a5b9-37afbc204594"
        },
        "item": {
          "id": "48abb2b9-a5f3-4230-a7bb-3435825a9799",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f1f3f489-0a66-429a-8e1b-442f2e5f8695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704f3796-e173-452b-9743-dc30839b8f18",
        "cursor": {
          "ref": "4db0c183-87fc-4cb5-b562-a6f6cf7ffb0c",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b01dd374-0bff-4025-926f-c91d01fa8b39"
        },
        "item": {
          "id": "704f3796-e173-452b-9743-dc30839b8f18",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "041a8054-86aa-47fe-a370-3238895af6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e928503d-dac5-419a-af13-b724db98571f",
        "cursor": {
          "ref": "fc73454c-cb50-41b7-927d-6a60bb4373dd",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0349ab39-0581-439a-b616-398901991226"
        },
        "item": {
          "id": "e928503d-dac5-419a-af13-b724db98571f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3de0e3be-11d8-47b6-bc3d-bf761573ba96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa7b149-de43-4bc9-a5e8-809d2f3fbe26",
        "cursor": {
          "ref": "cb491c08-d727-47b9-8dc9-291190bfdba6",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4464fb13-ecbe-4ed9-9939-ab9c130aec52"
        },
        "item": {
          "id": "4aa7b149-de43-4bc9-a5e8-809d2f3fbe26",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "999fdf73-ed65-4fd0-b92d-e981d6ca4ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba24de9-ec71-454a-8156-3a29b51e17b4",
        "cursor": {
          "ref": "3efbb89f-2e15-42fa-a1f3-3d28f346832d",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6d1e855e-a296-4920-85ce-d0a74e0724a9"
        },
        "item": {
          "id": "aba24de9-ec71-454a-8156-3a29b51e17b4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "144d051c-596b-4e5b-991b-519aaa31a4ea",
          "status": "Created",
          "code": 201,
          "responseTime": 1691,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "6d9c364b-42fc-411a-96b8-e9b974f9a53d",
        "cursor": {
          "ref": "1559f67a-9e12-461d-a515-50b66bf6cc27",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "378a3c1a-237b-40ee-8315-51a6e0b393b6"
        },
        "item": {
          "id": "6d9c364b-42fc-411a-96b8-e9b974f9a53d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fda9e86a-ec30-4754-868d-f3f4a443a3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60613f93-3d4d-4397-91e8-0fa5eb72d51e",
        "cursor": {
          "ref": "e1c891f1-de61-4e2b-a905-817eebe00890",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bf4b0614-600c-4e9a-bd56-6c332e1a9130"
        },
        "item": {
          "id": "60613f93-3d4d-4397-91e8-0fa5eb72d51e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f5e7a7c7-8177-4c40-aa25-bde2b9378859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c34de9c-38b0-4fc5-815e-74cadba304f7",
        "cursor": {
          "ref": "c4cef3e0-8e52-42a2-b2a0-a9622a568e2e",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2450997e-8751-4a7b-96b5-4a6a007bbc7e"
        },
        "item": {
          "id": "1c34de9c-38b0-4fc5-815e-74cadba304f7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b55266f3-8d44-4daa-8f5f-8540c5bfefb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e1a630-74ba-47bd-97c9-ddf6669e6caa",
        "cursor": {
          "ref": "4b982dea-b014-42fc-94cc-ad4c45c1a2d6",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4d1a7489-f84e-4963-9685-5a9abfbbdd27"
        },
        "item": {
          "id": "59e1a630-74ba-47bd-97c9-ddf6669e6caa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8fdcffed-ec18-48ed-96a5-cb81d065065b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96d2afd-c1fb-4020-9ca3-7ce74eb78577",
        "cursor": {
          "ref": "efbc3537-d93d-448e-8c72-42c11caa783c",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "86ff889a-39c0-4784-9850-382fcc1945e1"
        },
        "item": {
          "id": "f96d2afd-c1fb-4020-9ca3-7ce74eb78577",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ea25e311-d5e3-42f2-b0f5-a9f000ab13d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d23d57d-ada8-477d-99d3-127970c6e64e",
        "cursor": {
          "ref": "20f6f1fd-0d26-490b-a6fe-5819e442e25b",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c4e5d466-709b-4233-a905-e5b0abc918c9"
        },
        "item": {
          "id": "7d23d57d-ada8-477d-99d3-127970c6e64e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "21f12f20-f4fc-4681-a6a1-bac8ee4598cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bf24d1-38d4-4596-bb18-949166dd3f38",
        "cursor": {
          "ref": "9fc52c6b-4823-4a03-9168-6f722881b2f7",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bbbd680f-3c1d-41bc-8303-4158cdbf7a04"
        },
        "item": {
          "id": "c2bf24d1-38d4-4596-bb18-949166dd3f38",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "508163ba-8028-4ad9-8ac8-dc5758887ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e4a0dc-f755-4b9e-afd9-56cdc5d312a3",
        "cursor": {
          "ref": "9b33190e-684d-481a-890a-207040ad1bea",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "888eb42b-4577-4896-a850-38b66fefd822"
        },
        "item": {
          "id": "c4e4a0dc-f755-4b9e-afd9-56cdc5d312a3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3fa4c351-2293-42b5-9bd9-8b67a062570c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8cf3c9-3b7b-43cb-b42a-fe09714d7aaa",
        "cursor": {
          "ref": "eb79f0b3-678a-4ee9-87f6-3acceb2076b5",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "479731ae-af33-4dcc-94f4-1c0f7e26a232"
        },
        "item": {
          "id": "9d8cf3c9-3b7b-43cb-b42a-fe09714d7aaa",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8a475931-e758-4437-95cc-08d28e91acf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0ad941-1e68-4280-9c16-b918ad3f9e80",
        "cursor": {
          "ref": "531065f3-c205-4c86-b800-1deb48e273c9",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "29966714-ba1a-413e-84fa-cb1e2c481ec5"
        },
        "item": {
          "id": "2d0ad941-1e68-4280-9c16-b918ad3f9e80",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2d7f5e70-329d-4372-8332-dfc4fa6ae565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e84bf65-78dc-44eb-a354-1331d1141f3e",
        "cursor": {
          "ref": "3ef7dec3-f56b-4273-a782-caf85bbe8ada",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "26868dd6-2543-4137-9ca6-f41f4cac28b0"
        },
        "item": {
          "id": "0e84bf65-78dc-44eb-a354-1331d1141f3e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f3eeee97-5e57-425b-9e02-8881b09274c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94397f7-1a3a-45ee-bb31-93a6176d6bfa",
        "cursor": {
          "ref": "25d3f7c9-77e4-48f8-bbe6-3331163879f6",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5903fe69-76b5-48a6-9cfb-690e8fe9888e"
        },
        "item": {
          "id": "b94397f7-1a3a-45ee-bb31-93a6176d6bfa",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b8a34340-c2af-4cff-962f-573db4626da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16973d2-47bd-486b-a29a-ff7aabbec46f",
        "cursor": {
          "ref": "048ca9d6-78a3-482b-8a13-90899c39defd",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "22431f51-6965-48f1-a1cd-142cc04e0509"
        },
        "item": {
          "id": "b16973d2-47bd-486b-a29a-ff7aabbec46f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c5f87a31-fcd9-480c-9fc4-c65c6029f550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6721307b-fbdd-4b9d-9441-54f7cdd62d84",
        "cursor": {
          "ref": "4d264106-b776-4792-91a9-125b451b950d",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9cdb2d2b-f44f-4fcf-a771-95be30f31e9b"
        },
        "item": {
          "id": "6721307b-fbdd-4b9d-9441-54f7cdd62d84",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e450293b-5e7d-410c-81da-464a99e4bea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5557f631-80ce-47bb-b811-8ca9de2507c4",
        "cursor": {
          "ref": "11d58d82-1325-4f0a-bac7-da5e706cbf44",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a6f32e60-6d70-4136-a655-a841f40a66fe"
        },
        "item": {
          "id": "5557f631-80ce-47bb-b811-8ca9de2507c4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3d061286-9588-4d75-a34f-e013e23a8d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ec2de5-5d5b-4b47-9bc1-e1ab090c0cf2",
        "cursor": {
          "ref": "55cd308c-5df9-49d0-a93f-f2df23d836a9",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0f110c1e-9a5c-4f12-83f0-de17190b01e6"
        },
        "item": {
          "id": "15ec2de5-5d5b-4b47-9bc1-e1ab090c0cf2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5ffa9109-43f5-41ed-a92f-9d92cb7a127e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20604a5d-5202-4c50-bf2f-d75c9d32c50e",
        "cursor": {
          "ref": "89df6232-aa52-478e-827a-9b2ccd96334c",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9ab6cc95-a587-4767-bd4c-8095d8557a9c"
        },
        "item": {
          "id": "20604a5d-5202-4c50-bf2f-d75c9d32c50e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1e8bf4c1-ec22-48d5-adb3-0661d208f706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2dea37-0f67-413a-a6d1-81f30a3ee6c3",
        "cursor": {
          "ref": "063f1354-27ca-4dbf-a30e-d426cd2ca137",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e6ebd27f-6bc2-4261-9025-e1ac925274e9"
        },
        "item": {
          "id": "7e2dea37-0f67-413a-a6d1-81f30a3ee6c3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a25e99b5-2035-45fc-97ef-b59b2a9e0de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f6c2ce-dc45-4e60-ae62-405f4a70b63c",
        "cursor": {
          "ref": "413eb857-1bb5-4d81-81e0-e2a2a909a230",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a79d3f3e-c065-47ed-96d1-10efd1048709"
        },
        "item": {
          "id": "25f6c2ce-dc45-4e60-ae62-405f4a70b63c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6dc292a1-5834-4ef6-926f-047b59b93c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1061,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4335872e-32ce-46e2-a381-5ab86dda07c6",
        "cursor": {
          "ref": "86edc370-2cd2-492a-84ec-332c459ab7ac",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3d83c123-ac69-47f4-a1ce-ce3f24153268"
        },
        "item": {
          "id": "4335872e-32ce-46e2-a381-5ab86dda07c6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fec9eef3-a8d9-45aa-b4e8-c1ddd02e5b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb02ef4-028f-47b8-b88d-e6eb11020a89",
        "cursor": {
          "ref": "57c9b578-6d58-4015-97b0-629be2c399c4",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c7271641-7d73-483c-ac65-770df7c002aa"
        },
        "item": {
          "id": "9eb02ef4-028f-47b8-b88d-e6eb11020a89",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f6edafa1-3f68-4fb7-a05c-5a113c2e38e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5059c6-2e55-4606-ac36-ba55025811a4",
        "cursor": {
          "ref": "bfbcc4b6-2f65-4f07-8aaf-b87909e08726",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c4278fe1-2315-4818-afc6-3221bf53171e"
        },
        "item": {
          "id": "9e5059c6-2e55-4606-ac36-ba55025811a4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "70a0db51-3ae0-4b54-9cf3-67bef546c63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8776df11-0d80-4cea-bc4e-946b0f6c9b41",
        "cursor": {
          "ref": "d8e46086-a435-4976-96a3-b59cbb8bb89a",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "85994606-da39-4b26-bec7-c6cfbfa3bb81"
        },
        "item": {
          "id": "8776df11-0d80-4cea-bc4e-946b0f6c9b41",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f0dd12b7-9ab3-4053-a4b7-f37b2430408d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eb42f0-f43d-4289-aebf-17e36921d5f3",
        "cursor": {
          "ref": "5f7465c1-270b-4537-9637-5f4de1d7b7fe",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d665defb-31c9-45ba-bc4c-3c21b11b9b86"
        },
        "item": {
          "id": "54eb42f0-f43d-4289-aebf-17e36921d5f3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f4ec54af-4118-4f67-8ce9-9f21a3b01976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4710a7-68e8-49fa-92c1-e73da0c11f4e",
        "cursor": {
          "ref": "240170c3-a5cf-4b69-a7db-b6e9b424c841",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a52a2c33-f944-4e87-80a2-12ea605f882e"
        },
        "item": {
          "id": "7c4710a7-68e8-49fa-92c1-e73da0c11f4e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e2cef3a2-84ce-431e-8472-e2b852dc7b84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619aa006-d2c3-4d37-ad25-98cce3c682a7",
        "cursor": {
          "ref": "d2afea7f-a14d-4516-938e-afcf1a2b9b79",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b8d13de5-00cc-4028-be02-a4cc7765f8f7"
        },
        "item": {
          "id": "619aa006-d2c3-4d37-ad25-98cce3c682a7",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "bb49875b-d71f-4027-93fc-79c63829c08a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 451,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a8c89f-58f8-45e6-b39d-025304a24c39",
        "cursor": {
          "ref": "66018eca-03c3-42f2-b8ff-40af3d8aa86e",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "62b53b7e-248d-49e4-a9bd-3fe81823d8f7"
        },
        "item": {
          "id": "f6a8c89f-58f8-45e6-b39d-025304a24c39",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b022a8b2-c446-42e7-96fe-41805007349b",
          "status": "Created",
          "code": 201,
          "responseTime": 1918,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "417dea8f-150c-49e2-9aed-8e39fec0c8fe",
        "cursor": {
          "ref": "53feca44-f203-46bd-91f2-1afb937fec23",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a22e8022-7ce5-4a3a-8db9-1c90b96dd983"
        },
        "item": {
          "id": "417dea8f-150c-49e2-9aed-8e39fec0c8fe",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "30103c3e-35af-4c7b-bc83-3165f51556eb",
          "status": "Created",
          "code": 201,
          "responseTime": 4247,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7243454b-cdeb-41ca-a848-13a0b5012b4b",
        "cursor": {
          "ref": "6850cfe1-b202-4b0d-9903-1145582ddc39",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9557243e-711f-4544-a74b-8375a3e72cc9"
        },
        "item": {
          "id": "7243454b-cdeb-41ca-a848-13a0b5012b4b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5f4fc885-4ed4-481c-87ae-61aa31e0caa2",
          "status": "Created",
          "code": 201,
          "responseTime": 3045,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03f063d-faa0-4345-8831-147e83ba3ce4",
        "cursor": {
          "ref": "07153149-6bd9-4c81-9e3a-a2b5fa842618",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a3412eed-3935-40b6-afb2-f92cf1bcad21"
        },
        "item": {
          "id": "a03f063d-faa0-4345-8831-147e83ba3ce4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4ce0675f-800a-41c3-a973-184f45fe311d",
          "status": "Created",
          "code": 201,
          "responseTime": 1906,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c28e16-fbfc-42cf-a56d-21706e42f735",
        "cursor": {
          "ref": "aed45f02-d151-4686-b44d-cc09a150d68a",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "69248870-fc32-4eb9-a2ab-fa0a02fa4300"
        },
        "item": {
          "id": "c7c28e16-fbfc-42cf-a56d-21706e42f735",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a1d26c11-fc5a-467a-9db9-2e27a4bd5118",
          "status": "Created",
          "code": 201,
          "responseTime": 2189,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ce1a48-a33f-4549-876c-9e3fef43aa22",
        "cursor": {
          "ref": "33153cca-22aa-41ef-ad2f-9c7ebaa96484",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "95ae3073-f454-4e5d-ba93-356ada90a0e6"
        },
        "item": {
          "id": "06ce1a48-a33f-4549-876c-9e3fef43aa22",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "83e65d8e-4153-4022-ab79-10d125a6552f",
          "status": "Created",
          "code": 201,
          "responseTime": 2438,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1b6fdd-7197-490b-a183-8025b8ec8a0f",
        "cursor": {
          "ref": "4d7664cd-e9e4-426a-8f3f-bf875b6200b2",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4ce8e76d-4b4d-4cf1-898c-cad27a5bf1a8"
        },
        "item": {
          "id": "6c1b6fdd-7197-490b-a183-8025b8ec8a0f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1f78adf6-dff3-4690-9455-459967d5ca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1b6fdd-7197-490b-a183-8025b8ec8a0f",
        "cursor": {
          "ref": "4d7664cd-e9e4-426a-8f3f-bf875b6200b2",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4ce8e76d-4b4d-4cf1-898c-cad27a5bf1a8"
        },
        "item": {
          "id": "6c1b6fdd-7197-490b-a183-8025b8ec8a0f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1f78adf6-dff3-4690-9455-459967d5ca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4b2d99-9af2-4645-b970-d14e57b09171",
        "cursor": {
          "ref": "fe18bb14-4e61-406a-ad48-44193ed03875",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "43310e69-e190-48a1-909f-3df6805cf820"
        },
        "item": {
          "id": "4e4b2d99-9af2-4645-b970-d14e57b09171",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5f0382e0-f88d-4bf5-8674-3f40d33585aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df40d37c-78b3-4985-a768-7d9076fdaf74",
        "cursor": {
          "ref": "ec43f276-e1e0-46cf-9498-3290da8978bf",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "44814323-3db4-4ceb-bcb2-a779422096df"
        },
        "item": {
          "id": "df40d37c-78b3-4985-a768-7d9076fdaf74",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "45e37bc0-1658-42b4-abb3-23bea5a8e24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fec394-d877-44b3-a9ea-22403a0b1219",
        "cursor": {
          "ref": "53a2e7d0-c2f4-4525-9252-ccfa97252f16",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f7cfcb1e-87e3-4407-912f-3d05eeadaf21"
        },
        "item": {
          "id": "52fec394-d877-44b3-a9ea-22403a0b1219",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "07347649-d3f0-442c-9199-2c5e2fe02d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca07c428-b9b0-4d68-91d2-1a1a54120660",
        "cursor": {
          "ref": "8f764b2a-d418-400f-a086-011d5163fad9",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2deee48d-e2d4-4dfe-8398-b9725876c02d"
        },
        "item": {
          "id": "ca07c428-b9b0-4d68-91d2-1a1a54120660",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "16ff845a-f3d7-4475-95cd-cd920ea7197b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbff9f2-e630-4951-be88-9ec72788598e",
        "cursor": {
          "ref": "a1b22119-42e3-4501-8780-46415c492e44",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "59b0962e-f8f3-45ea-8543-6880289ff80c"
        },
        "item": {
          "id": "fcbff9f2-e630-4951-be88-9ec72788598e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6a4eb0c5-b5e7-4b7a-8ff1-119ce2c28675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a898e1-aae5-4b67-9905-3bb8c99bf77a",
        "cursor": {
          "ref": "803d31be-acaa-40f4-8163-b4e560517c2e",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3428d7cd-6b4f-4688-88a4-b5074c0641d1"
        },
        "item": {
          "id": "13a898e1-aae5-4b67-9905-3bb8c99bf77a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8bd239fc-3f91-4eaf-b449-23ef0efcfad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275a3f92-01ab-48d0-a77c-6a7ddef93b46",
        "cursor": {
          "ref": "b0090df7-01db-4100-8d88-10d1b132d109",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "65328ea6-417b-421d-b89b-d417ecb87db9"
        },
        "item": {
          "id": "275a3f92-01ab-48d0-a77c-6a7ddef93b46",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b392e861-4372-4916-b67e-90655db8ee46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a04813-24cf-4e34-bd80-b66b66f63bfc",
        "cursor": {
          "ref": "3e156afa-1d67-4891-a857-e9c3da2d227c",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f3777c74-1fab-4c2d-9638-1b87a3b98558"
        },
        "item": {
          "id": "b4a04813-24cf-4e34-bd80-b66b66f63bfc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "367f5158-b698-481d-9530-11e236b9cb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83ae917-12a0-48e8-9086-7b087b873b55",
        "cursor": {
          "ref": "6e6e3ef8-896f-493d-a50c-b3e3a89473ae",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3e9f53f4-7007-4a81-b51f-7e9d52046036"
        },
        "item": {
          "id": "e83ae917-12a0-48e8-9086-7b087b873b55",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "46401708-8e2a-405a-8675-b6ef3d12f0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0c7c65-ef20-4cb6-b6e3-df28f56eada2",
        "cursor": {
          "ref": "8b8d1ecc-1815-4923-abf4-29f0887e6d0f",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a88c03de-9cda-4878-9f6d-ddba7942d2c0"
        },
        "item": {
          "id": "3f0c7c65-ef20-4cb6-b6e3-df28f56eada2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0f1c75cd-cce1-4d25-b3c3-c25547b1139b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ca2205-4833-45bc-a632-4069928bd8b1",
        "cursor": {
          "ref": "521f03f9-3173-4e60-979f-76ec4c61e06e",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a19b1fdc-79e6-4a96-81ea-165cc3ff8e72"
        },
        "item": {
          "id": "b0ca2205-4833-45bc-a632-4069928bd8b1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "22b0d2e3-d30f-476b-b5f0-e368d3e203bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e7a04b-5f24-48ac-9f2f-4d512d20ba7c",
        "cursor": {
          "ref": "f7c4084f-db8b-46d8-9a3c-7200f22e2e83",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fb66afaa-647b-41d5-8f43-68db0263fcbb"
        },
        "item": {
          "id": "a4e7a04b-5f24-48ac-9f2f-4d512d20ba7c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c18000b6-f36c-48de-bb1f-4efc7de571f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3b6a74-2ac3-4de4-8afa-ec1a32c3eff9",
        "cursor": {
          "ref": "771bbf2e-1722-4e93-9f31-45d893c55251",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "568eaecd-80e3-4b8c-8465-f3e645b29d65"
        },
        "item": {
          "id": "5a3b6a74-2ac3-4de4-8afa-ec1a32c3eff9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "50cc0a29-a242-40da-94f6-429436e3fc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d5700c-7afe-4efc-bb5d-dac2ce3b7e09",
        "cursor": {
          "ref": "812b5ab2-0d9b-4868-a62a-f6026891ef94",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7f8349dd-a45d-4c5c-8bf0-c98f34725b8f"
        },
        "item": {
          "id": "12d5700c-7afe-4efc-bb5d-dac2ce3b7e09",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bc9c1cb2-59c8-4d0b-9c54-9983ce558d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f3620b-3832-4369-b390-723be68bd66d",
        "cursor": {
          "ref": "95a51d3a-5ffd-48b6-8d91-b4532d8ff404",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6cc58ff6-dca1-47ff-8a9c-05ef0263f7d5"
        },
        "item": {
          "id": "e6f3620b-3832-4369-b390-723be68bd66d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1f5a1f3c-b1e1-43b0-b1c7-bf82642d8821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bc0b80-8489-4697-a832-d971de8c65df",
        "cursor": {
          "ref": "b4d18edf-6e4c-4aa9-8119-8f10012aa0be",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4aeb0d7d-58e2-4594-a017-0cf80e64b727"
        },
        "item": {
          "id": "e3bc0b80-8489-4697-a832-d971de8c65df",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d3f45974-12db-402a-abad-45b12fe61117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a71ed32-ec9b-4878-b4d7-66f45350d5fd",
        "cursor": {
          "ref": "5f5ba399-e609-45ff-9134-e07c64f18dfb",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "72b2d223-097d-4c54-bc4f-ea4957d7a05a"
        },
        "item": {
          "id": "9a71ed32-ec9b-4878-b4d7-66f45350d5fd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8c51b6fd-1091-4a6a-8a2f-434022e88a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e616855-cfca-45e2-b6b4-d2bb6ccbd7dd",
        "cursor": {
          "ref": "7850b23b-33ec-4810-b747-e8964d0b5eb1",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6909e0ae-8aef-4eaf-9638-122a44cdae46"
        },
        "item": {
          "id": "0e616855-cfca-45e2-b6b4-d2bb6ccbd7dd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "155fbcfb-20ae-41fd-9630-4f594881ee2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e1bf98-a3cf-42b0-9a19-832cca42e680",
        "cursor": {
          "ref": "70bf3489-b9c0-41de-8edc-6f2cc9edd71c",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b41ebc95-b47b-4194-94d7-13aa788afcc6"
        },
        "item": {
          "id": "b9e1bf98-a3cf-42b0-9a19-832cca42e680",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8f1b4a87-a4cd-4263-aa72-9e48c3ed07fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba56c58-8194-4cbf-b6b6-74f691d04181",
        "cursor": {
          "ref": "3e2a2d4c-31e2-453e-b179-541ff83324fe",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3bb63efc-c781-42ee-9d27-d6b673bdbcb7"
        },
        "item": {
          "id": "2ba56c58-8194-4cbf-b6b6-74f691d04181",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f43483dc-16b4-4049-b0ab-adba46b6e6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36217783-0712-4b47-a11d-361121f40ce2",
        "cursor": {
          "ref": "161e6652-3b9e-4c13-b98c-84b6a6ba1da4",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "aace8eee-2af8-4c64-bb03-5b85eee42ad9"
        },
        "item": {
          "id": "36217783-0712-4b47-a11d-361121f40ce2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5ea0dc07-3f46-4724-881e-7965619deb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ce59f8-9e69-4098-88e3-ccc2667abc1c",
        "cursor": {
          "ref": "d99cdd56-5ece-43fb-bc56-4f442f2e1c07",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "eca9e0dc-55e1-4f03-9e29-b1b18e545cd1"
        },
        "item": {
          "id": "89ce59f8-9e69-4098-88e3-ccc2667abc1c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "52b019df-8d0d-41b2-947a-0a79b43042b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f5596b-7144-4cf9-8854-38c1b9d02520",
        "cursor": {
          "ref": "64e94b54-099e-4b5d-9a1f-87fece61917a",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4343e2a3-12bd-4f6b-839d-df13f404617f"
        },
        "item": {
          "id": "04f5596b-7144-4cf9-8854-38c1b9d02520",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ba3fd29d-70af-40dc-87d0-6df461d98e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca26f14-39a1-4608-867d-28c470fca410",
        "cursor": {
          "ref": "a396afd1-16ec-4583-9f4c-c55046805ef5",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "161f2633-6055-4121-a108-856f5c12b5e0"
        },
        "item": {
          "id": "4ca26f14-39a1-4608-867d-28c470fca410",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "916fd2c6-d8a2-4460-977b-098f754d9afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ebec43-39ad-4a83-892c-537535e38ce6",
        "cursor": {
          "ref": "8ca0cd77-13c7-44fb-94b9-53f6b1734a7c",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "305320b0-a713-4f85-82f0-1afee8af9465"
        },
        "item": {
          "id": "d6ebec43-39ad-4a83-892c-537535e38ce6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5ecb338c-682e-4204-9d8f-5bf0dcd08324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fc60b4-7c9a-4019-b618-08f4d98df425",
        "cursor": {
          "ref": "b173bf86-4295-4b78-bd0e-8eb1abfe0771",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "66c3b349-8109-4f21-a776-93283319a7ba"
        },
        "item": {
          "id": "a7fc60b4-7c9a-4019-b618-08f4d98df425",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dbc3d8c8-d346-4329-8643-ec9768f862d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc988974-da96-42e1-a7ce-43390e026f24",
        "cursor": {
          "ref": "eabbc433-b906-4852-be13-dd9e86882a89",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "43e79a44-ca8e-4cbf-a627-78b31176a231"
        },
        "item": {
          "id": "dc988974-da96-42e1-a7ce-43390e026f24",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b81d5c46-11a2-454e-8365-3292e817ecf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01fe018-78da-4fa2-9738-852532b4da5a",
        "cursor": {
          "ref": "7f1a85c9-99f5-4272-af56-db3176cb2be7",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cf3fdd6e-44f1-48b2-8a8f-a3d537782fcf"
        },
        "item": {
          "id": "c01fe018-78da-4fa2-9738-852532b4da5a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6071c87f-9309-4900-9707-d9703c3e5323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330faee8-a435-4f97-96a2-340642252757",
        "cursor": {
          "ref": "9504256b-e850-4d5d-a30f-cc52dde803f4",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d4ec2ba1-e086-4ecf-81b2-b155192a5a61"
        },
        "item": {
          "id": "330faee8-a435-4f97-96a2-340642252757",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9fcac1e0-65a2-4893-b2a0-8774d94e7eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a196633-7ef6-40e8-9ba3-de780bcf3d8d",
        "cursor": {
          "ref": "d32f35cb-4cbc-40fa-98e9-a9c09e375fde",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "92728e6e-dd8b-4fac-a280-4926ae274974"
        },
        "item": {
          "id": "7a196633-7ef6-40e8-9ba3-de780bcf3d8d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "243597f8-578e-49ef-bbf5-c916ac44803d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848ea301-13b6-405e-9754-c88982baf041",
        "cursor": {
          "ref": "591a9cac-8e35-4558-be94-84fd83c5928a",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0c4c32a8-7491-4db0-a116-16fe0d8e1737"
        },
        "item": {
          "id": "848ea301-13b6-405e-9754-c88982baf041",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "72ee56ea-c460-4a79-81a4-5c620b4e1235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4b9529-3f4a-4152-8ad4-9b26f423f9a9",
        "cursor": {
          "ref": "50a84d4d-65a4-41f8-98fe-7a3ae59141d6",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5a266ced-49b4-49bd-a1c0-bf932b3f1418"
        },
        "item": {
          "id": "8d4b9529-3f4a-4152-8ad4-9b26f423f9a9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "293b32bf-c8e7-4e64-b4c0-aeee72517ca7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270b9f4f-97f1-449e-a40c-6cdf61fa069f",
        "cursor": {
          "ref": "6f379091-fbd6-4b82-86db-5ab113fea8cc",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "650bd708-545b-4524-bd5b-0797115da46f"
        },
        "item": {
          "id": "270b9f4f-97f1-449e-a40c-6cdf61fa069f",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "eddd8c80-8dda-421b-a906-82fba98919f9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 422,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58aa73d2-6705-494b-a39d-f9fa1453e696",
        "cursor": {
          "ref": "3273f138-95ea-4b77-9033-7a3d4973a6c1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "79849c5c-88bf-4896-a5b9-ba510d501d7c"
        },
        "item": {
          "id": "58aa73d2-6705-494b-a39d-f9fa1453e696",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "18f1a40b-5494-4f96-b089-acbc08201d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58aa73d2-6705-494b-a39d-f9fa1453e696",
        "cursor": {
          "ref": "3273f138-95ea-4b77-9033-7a3d4973a6c1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "79849c5c-88bf-4896-a5b9-ba510d501d7c"
        },
        "item": {
          "id": "58aa73d2-6705-494b-a39d-f9fa1453e696",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "18f1a40b-5494-4f96-b089-acbc08201d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcc1f09-98cb-4269-8fae-71ba06faee71",
        "cursor": {
          "ref": "a06f818d-7c5f-463e-b32e-8908f5f2c46a",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b1aea3c3-5d5a-488e-a525-50d2654abc08"
        },
        "item": {
          "id": "cdcc1f09-98cb-4269-8fae-71ba06faee71",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5ee17a7f-7e4f-4651-8661-f9ad4c3825e2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 216,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9c510a6b-961f-48df-814e-46314b3505c4",
        "cursor": {
          "ref": "1aae4bfb-82cd-443b-9981-5d172ff284de",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fd4aa373-dbc4-413a-beca-a8547bea64a1"
        },
        "item": {
          "id": "9c510a6b-961f-48df-814e-46314b3505c4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "584d3d8e-8566-4dea-965a-67c9e9e49857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3c3143-6c25-43d6-ba55-6a9871013146",
        "cursor": {
          "ref": "43ec4042-b8fa-49ab-bebd-701091b19033",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "21ca1162-22f1-4475-8555-c3bb0bf7647f"
        },
        "item": {
          "id": "4c3c3143-6c25-43d6-ba55-6a9871013146",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "de8ea465-f92d-4878-8a2f-0089030cea74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525f3803-3e33-4d46-84fe-16c624f6b5ed",
        "cursor": {
          "ref": "7c728ff4-d1ec-4194-8e0d-bcf81f589ece",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "552f0461-f46c-4e29-a5d4-edb33d577b19"
        },
        "item": {
          "id": "525f3803-3e33-4d46-84fe-16c624f6b5ed",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "53841d95-3294-4073-b0f4-7489dadf2858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3578023-2da4-40e6-9d27-537ac060f16b",
        "cursor": {
          "ref": "c8a5cb3f-99ef-4e7d-b497-738e1fb06b09",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ec6606ea-92b1-4f1f-a423-b3bf5da5db3f"
        },
        "item": {
          "id": "b3578023-2da4-40e6-9d27-537ac060f16b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f0ca1f38-c17a-4a36-860f-65605b43f6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d4396c-8df6-4eaf-8656-e2d7fa91d995",
        "cursor": {
          "ref": "08daaef7-3e58-4a52-b6c0-75545f8d2b61",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "04fb759c-5cb8-4958-9639-884ea5e82027"
        },
        "item": {
          "id": "a5d4396c-8df6-4eaf-8656-e2d7fa91d995",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f76b2a09-3900-4431-99e5-2f213c309030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a00441b-2959-4aeb-abf9-c9e577491986",
        "cursor": {
          "ref": "afe9af64-e20c-41ea-9f0a-fc2746cb6c98",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3e3d46fa-6e32-4fd6-9f61-1a23681a9f2b"
        },
        "item": {
          "id": "3a00441b-2959-4aeb-abf9-c9e577491986",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "091ad061-7362-434f-ae7b-fcd72b321d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1374c0c9-4e7c-43a0-9353-e044789cca41",
        "cursor": {
          "ref": "b698190a-eb0d-4f77-99e1-cf9df8bca764",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0d02b42c-30c6-4737-826f-48b9d31fd98e"
        },
        "item": {
          "id": "1374c0c9-4e7c-43a0-9353-e044789cca41",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f963f89e-5ef6-49be-a7be-fb707fff1980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a28faf-6098-4250-b3b4-210208ccc617",
        "cursor": {
          "ref": "89cb0e6d-6298-471e-a232-eaaabd6d1195",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "48fe591a-7f98-4a8c-b93d-952ab28048bb"
        },
        "item": {
          "id": "58a28faf-6098-4250-b3b4-210208ccc617",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "efad5073-8f22-4396-9eb4-d993e7b27e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27c5548-ed01-4eca-9e8c-7c79832b699b",
        "cursor": {
          "ref": "b8149103-a09f-4323-9527-7428048eda86",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "119b001d-c7fc-489f-8c1b-6e8992524b3a"
        },
        "item": {
          "id": "b27c5548-ed01-4eca-9e8c-7c79832b699b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d43af7f1-7f9f-480a-9c5a-2ec36c9e486c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c6ed8b-a74c-44e9-9451-ac0f4663b475",
        "cursor": {
          "ref": "0b2cf475-c346-4acd-8839-7643618ff3fa",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b4ebabfd-909a-4ee8-af65-94e476a2fce1"
        },
        "item": {
          "id": "c6c6ed8b-a74c-44e9-9451-ac0f4663b475",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e3a4b498-1bf9-410f-a28e-098cc0a0a1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b596899-0e6a-4b64-8d07-090dabfb5e7b",
        "cursor": {
          "ref": "6a2f87a7-4efa-4eb1-bd1c-e58c04db4296",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5f79a82d-dcbc-4f07-b33c-afdc70131bc4"
        },
        "item": {
          "id": "0b596899-0e6a-4b64-8d07-090dabfb5e7b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "28b8e561-e203-4747-9e48-300ab90586c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6c9841-3464-4c7d-bb19-50418e291c84",
        "cursor": {
          "ref": "83d21f43-130c-49b9-8549-880923a76c45",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "031d90d5-e5b2-47fd-9386-5cac14a3bd29"
        },
        "item": {
          "id": "5b6c9841-3464-4c7d-bb19-50418e291c84",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3e1bf098-b80d-43b6-879b-83b8851784b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28bee71-59e7-4089-b777-55bd9c03f51e",
        "cursor": {
          "ref": "9c624a4d-4729-4799-bfe3-ff26dbc8bea2",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6511e055-8a41-4deb-a533-9d0601e74d99"
        },
        "item": {
          "id": "f28bee71-59e7-4089-b777-55bd9c03f51e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fa61eaca-2ae8-4e84-af07-fca4f1a806d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73140087-b147-4a87-aab8-988074e96e38",
        "cursor": {
          "ref": "791c06d8-d47f-4ee5-b2d8-4ae0c952d231",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bc37e5e5-705d-4788-99eb-da300ee184d5"
        },
        "item": {
          "id": "73140087-b147-4a87-aab8-988074e96e38",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "aed41276-8328-42a8-89ff-4028163e53e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2250ce2-377e-44a7-b481-908136ca8b99",
        "cursor": {
          "ref": "943e8031-5ddd-45b5-a156-bc118307a311",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "54407bbf-95a0-41df-8ed2-2ff124e716e3"
        },
        "item": {
          "id": "e2250ce2-377e-44a7-b481-908136ca8b99",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f1c64ddd-dd51-4253-8cec-3aa81a3567ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdc3095-a6b5-444f-9cc9-a27f008a1ce0",
        "cursor": {
          "ref": "53f7d59d-8c95-4da5-86cb-4af2169f1c73",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7bc6df73-4605-4908-a938-7e5cfe0ea9e5"
        },
        "item": {
          "id": "cfdc3095-a6b5-444f-9cc9-a27f008a1ce0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "689f1d2d-8698-448d-86b7-2861b8a806a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20f37c3-6331-4eb1-a64c-f0ade60d3710",
        "cursor": {
          "ref": "f1f0cad9-58d6-4453-97b8-5827c67a316c",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8205b34a-d4c0-43d3-ae28-c124b6d543a3"
        },
        "item": {
          "id": "a20f37c3-6331-4eb1-a64c-f0ade60d3710",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "129f7371-b326-4e7a-8633-cd46131691d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b73014a-2903-46bb-ab3e-08967074abf5",
        "cursor": {
          "ref": "0d1774f1-4a5d-477e-97a4-0e24140ead1d",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a4dfad99-6c7b-4136-9274-af82b3c00d79"
        },
        "item": {
          "id": "5b73014a-2903-46bb-ab3e-08967074abf5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ee661a8d-9141-4f76-9c21-729a676d52f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5d41de-8eb8-4d8b-ad28-b1e364eba58a",
        "cursor": {
          "ref": "551fd4b3-f7b8-4cf5-b0b0-f58b4319ca9c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "572c00cf-26bc-4fa3-a41f-676df61f9da7"
        },
        "item": {
          "id": "6e5d41de-8eb8-4d8b-ad28-b1e364eba58a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ce00ce81-6cfb-488a-9b9c-1af8aa57bafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ae2603-1ad3-465d-a4eb-122383797341",
        "cursor": {
          "ref": "a38e833d-6199-49d7-a170-f92f116d2a1c",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cd91d9f1-ca4e-4361-87f1-0348c667e6d4"
        },
        "item": {
          "id": "65ae2603-1ad3-465d-a4eb-122383797341",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "680fcce3-cb0c-4974-9632-2640d372ad40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8b305f-7440-45af-8d45-f107385f39d6",
        "cursor": {
          "ref": "292719f4-8790-4813-b225-e0e88f27ad82",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "89932942-314c-4256-b2a8-6e9c62ae0536"
        },
        "item": {
          "id": "9a8b305f-7440-45af-8d45-f107385f39d6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "355f8ba5-b67a-47c3-8624-78461854964b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587e8d63-d84a-485c-a85c-1abb3bd9978b",
        "cursor": {
          "ref": "28ee1cf7-b790-4e68-8122-27d361bd2052",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "498d208d-4a28-4786-bc97-db66ae8a31d3"
        },
        "item": {
          "id": "587e8d63-d84a-485c-a85c-1abb3bd9978b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b0326022-674a-4275-8d5d-0be6c3ab5e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956e48f3-c0de-4602-8c14-2ead236725ac",
        "cursor": {
          "ref": "acca3213-7273-4b9d-93fa-38030d87145e",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e08f9f92-f6b4-4a04-a423-e7b411dc3e49"
        },
        "item": {
          "id": "956e48f3-c0de-4602-8c14-2ead236725ac",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fa3015d2-7dfd-420a-b7b5-54ef28fa0cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1dd927-4c12-41b2-8d19-cba117cd7a19",
        "cursor": {
          "ref": "e9f7176d-f89f-48f5-98e4-29b211efa3f6",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cdf3a23d-04e4-4861-99ac-f8d7fd1a3863"
        },
        "item": {
          "id": "ac1dd927-4c12-41b2-8d19-cba117cd7a19",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d9f7312c-23e6-4e05-bced-c14517cfc9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9306ef94-7149-4b36-b00d-75c00753f582",
        "cursor": {
          "ref": "7c54d161-67b7-4ec3-a6f5-3dcd88920be0",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fb54c4be-390b-4670-93b3-d7489945d23d"
        },
        "item": {
          "id": "9306ef94-7149-4b36-b00d-75c00753f582",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "778bff1a-351d-4de4-b566-b000a0931089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e279d952-f56b-4f33-ba8e-be21f5491a2d",
        "cursor": {
          "ref": "2a9396ff-f192-4044-a4fb-363c29353ee0",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "64f5c062-4d19-48a6-974a-c0fe9132db9c"
        },
        "item": {
          "id": "e279d952-f56b-4f33-ba8e-be21f5491a2d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5d4200bf-1bc6-487d-a8ff-fdfb4469def8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 200,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42036e84-5cd0-421f-8cf2-aadb96940b80",
        "cursor": {
          "ref": "94013ec9-d0b1-475e-a8c0-39f909be759c",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "30a03229-524e-4842-9ba3-66de4f6cd53e"
        },
        "item": {
          "id": "42036e84-5cd0-421f-8cf2-aadb96940b80",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "728acdbc-52c7-4626-b5fa-0fe0dd437dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea2e043-d9b2-43df-8dd7-c21732d210e7",
        "cursor": {
          "ref": "d1458ebe-14eb-4d7a-9647-773de7cb8808",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a0842e1d-3080-45f0-b8cd-283331f18684"
        },
        "item": {
          "id": "4ea2e043-d9b2-43df-8dd7-c21732d210e7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cc26bd81-c091-403e-b8c1-831105a26af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129e4827-64fc-491d-ba7b-6cbb71909e14",
        "cursor": {
          "ref": "15c3eb02-8f46-4fd8-b0b1-2cc1e0485a11",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "86c990a7-2848-40c4-b987-f997f95f8644"
        },
        "item": {
          "id": "129e4827-64fc-491d-ba7b-6cbb71909e14",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "183120ce-5724-405c-a77c-dec79d165b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1f0774-35e2-445b-8822-62e6c21538b1",
        "cursor": {
          "ref": "c23ce4a3-3b59-4fa2-ae29-e059d3321bf3",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d99e4b03-0373-46cb-b786-3fd027933a99"
        },
        "item": {
          "id": "5f1f0774-35e2-445b-8822-62e6c21538b1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3fa12383-061a-4d41-ac9a-3a371c62ede6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d385908-a69a-4955-8795-cc6aad3f7221",
        "cursor": {
          "ref": "8ea5d383-0f72-43a1-8e82-5f31e6815bea",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "281038ce-a3b4-466c-9ace-4201e3fae2f8"
        },
        "item": {
          "id": "1d385908-a69a-4955-8795-cc6aad3f7221",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "510ee465-26a1-446b-a01a-6d8ada0c4c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d710873-4708-4335-8c17-8f7c7983ebb4",
        "cursor": {
          "ref": "137a4dcf-059e-4cce-8eae-35cbb59a597a",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5d89e39b-e1d1-4936-b0e0-7700459acc0d"
        },
        "item": {
          "id": "9d710873-4708-4335-8c17-8f7c7983ebb4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "785f9d09-d51c-4e47-9176-5ab34acba237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a9002a-6f3b-419b-b8c0-c3b1a9bd425a",
        "cursor": {
          "ref": "10e2772c-de3f-44bd-ba56-7cd9e89b30ee",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cdc08c48-9e0c-4da4-b5d7-da72b11224bd"
        },
        "item": {
          "id": "53a9002a-6f3b-419b-b8c0-c3b1a9bd425a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ba0ade33-3e09-45a9-8198-b9f856e0cb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a78778d-7d25-4c27-8ef6-fd2b16412488",
        "cursor": {
          "ref": "35836889-867b-4b6a-bab7-f73ce25088ed",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "66e5c2ab-62ba-4b3b-a15d-605faec9d7fe"
        },
        "item": {
          "id": "1a78778d-7d25-4c27-8ef6-fd2b16412488",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c611b63e-0234-4db6-95e3-c488bf4df368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bda2692-28ff-45b1-bcb9-2e17f1f7c5ae",
        "cursor": {
          "ref": "7c78a1ca-1534-4801-af67-7b302efad2e0",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6da2a9bd-3cd2-4d07-b8a8-8312a56ba615"
        },
        "item": {
          "id": "9bda2692-28ff-45b1-bcb9-2e17f1f7c5ae",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "51feddc5-b0b8-4f29-a1bb-df1168ee710d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6bf5bc-bb43-4062-bf82-e6267b05bf11",
        "cursor": {
          "ref": "bcf76a63-8922-47ac-bcb5-74e27fe3db13",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ef503723-356c-4a3b-8faa-41dc330fd850"
        },
        "item": {
          "id": "1d6bf5bc-bb43-4062-bf82-e6267b05bf11",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ffe2b951-0c90-4cee-a924-0b5f9f0d2abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a341a663-f5a0-4ff8-8dec-fcd1a160d5b6",
        "cursor": {
          "ref": "d991e1fc-2d5e-4290-8daa-d2a65d41613e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "750dbf54-8a8d-4f96-91b6-15cac4188f98"
        },
        "item": {
          "id": "a341a663-f5a0-4ff8-8dec-fcd1a160d5b6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e5fdfca3-1ce4-4e6b-aa16-f9bd0595f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc8e32f-e78b-4c8c-a60a-7bf1f55b0c49",
        "cursor": {
          "ref": "775936ab-2b80-4d6e-914d-d3092effbc33",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f8b91959-8f13-45ad-a15b-82d524cec5d0"
        },
        "item": {
          "id": "6dc8e32f-e78b-4c8c-a60a-7bf1f55b0c49",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "568a6adc-2e77-4fc5-8f6b-06c2c0f3220a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af88280-817e-45f3-bcf4-64031611e31c",
        "cursor": {
          "ref": "ae7f8dce-05f2-4f50-b181-951063429b57",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a330639d-06ae-4b33-a262-1833d43b162e"
        },
        "item": {
          "id": "1af88280-817e-45f3-bcf4-64031611e31c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "737680a6-7eb6-4f11-a191-c802f55d58b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec4312d-eb19-4842-b407-1a2f39a8645f",
        "cursor": {
          "ref": "abd0e92b-2beb-43f3-bb6a-2d24037e6809",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9098a20a-4d6c-4888-8a42-b5c762f1e686"
        },
        "item": {
          "id": "1ec4312d-eb19-4842-b407-1a2f39a8645f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "70855519-49d8-4a85-a792-f28e25885c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab29f7f-5ccd-427b-ac4e-95c1201b59bd",
        "cursor": {
          "ref": "a236e7ab-ad6a-435d-a9b5-2093d0b9e39e",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4fd997ce-cd65-41d5-b79d-a22d5f72b828"
        },
        "item": {
          "id": "0ab29f7f-5ccd-427b-ac4e-95c1201b59bd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0652f5e7-b485-4a6a-9505-1c3b4e76e41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6878ea42-2445-4f52-9944-759b6b4c16f8",
        "cursor": {
          "ref": "69180762-e4ae-414c-a039-0aee275a268b",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "88b14a03-ca2e-4878-8901-744118679f10"
        },
        "item": {
          "id": "6878ea42-2445-4f52-9944-759b6b4c16f8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "47db30bb-dcc3-412a-a13b-7d6175447b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71265e6-bfa3-4f50-ba9e-3d9e744ce075",
        "cursor": {
          "ref": "6c19b2c4-c244-4622-af9d-08e28e3b32b4",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "94dd263e-4459-44b3-84e8-464e747d230b"
        },
        "item": {
          "id": "a71265e6-bfa3-4f50-ba9e-3d9e744ce075",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "19d30021-b0d4-4517-9b5f-4b93fbd12ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fecf43f-f0d6-43e1-b15f-575e5db46401",
        "cursor": {
          "ref": "25ad431c-5b3f-4460-8da5-8a34bd7405f5",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d43364c4-06ab-4d63-8206-b01c975107b7"
        },
        "item": {
          "id": "2fecf43f-f0d6-43e1-b15f-575e5db46401",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6925b3a1-af86-4527-88b3-4f2cc8f03410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2aaff3-7ac6-4788-b35e-c7678bd0e08f",
        "cursor": {
          "ref": "771f4760-62c5-4e42-a6b5-03f4c632aac1",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d06b443c-f3cc-45d4-8f54-c1be80aef2b2"
        },
        "item": {
          "id": "6c2aaff3-7ac6-4788-b35e-c7678bd0e08f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "82c7b337-abd8-4e0b-992d-b7ed8cd1ec76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb81949-f50a-4287-b567-0ecb1261e452",
        "cursor": {
          "ref": "637550da-4328-4bf7-8b89-6c2fd6525fc4",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1d5b9592-f8e2-4844-8237-296124697da8"
        },
        "item": {
          "id": "fdb81949-f50a-4287-b567-0ecb1261e452",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d099dcda-a9c4-47c5-bb7f-3454153d199e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb41527-744a-4a24-8419-fb599103c0d2",
        "cursor": {
          "ref": "ad99013b-8914-4c17-ab39-08fe18946e67",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e7c58aad-0aba-4077-bfee-bc82852d1f4e"
        },
        "item": {
          "id": "4fb41527-744a-4a24-8419-fb599103c0d2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6ed7e8a2-244b-402a-a30f-6c412c1fc998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd974e3-9e70-4680-aab4-41d41fb0761f",
        "cursor": {
          "ref": "168f4c83-ed80-42ea-8c26-6c3da59340b3",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "17679aa8-5932-4dcc-bab9-b0417e5214d0"
        },
        "item": {
          "id": "1fd974e3-9e70-4680-aab4-41d41fb0761f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9a1c7b07-f0c4-4c22-9ad7-bb18dcbeb198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0819bac-0d4e-4c27-8e27-e78445f3f33b",
        "cursor": {
          "ref": "2d9f097c-3f41-48e0-bfe5-783bd96f4018",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8e4bb3a4-8fb2-4293-8133-c5c092ae5f3d"
        },
        "item": {
          "id": "d0819bac-0d4e-4c27-8e27-e78445f3f33b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a5baa5b7-4380-4a7b-8067-1b7cf9b8ca44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85aec98-dbab-43e5-8e74-110320fd2596",
        "cursor": {
          "ref": "412b5517-b385-4c42-ae10-d8c07fae50c6",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d96b1103-c776-4966-a93a-c5707627bb71"
        },
        "item": {
          "id": "d85aec98-dbab-43e5-8e74-110320fd2596",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3aa3eb7f-28f9-4241-9640-b5196dbf003b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38108c63-141e-4df2-8285-67f2d619931b",
        "cursor": {
          "ref": "f2493af5-b2b3-474b-bc56-0efdc0e63350",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bce204ef-0353-42ac-8bc5-604cf1578052"
        },
        "item": {
          "id": "38108c63-141e-4df2-8285-67f2d619931b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0cfd79c7-10ee-4a37-9e74-a76bbff3fecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bf64cc-27ce-4add-bda2-324b31e5ee10",
        "cursor": {
          "ref": "4fcc4849-1aeb-448f-85a8-2d715dbcbed9",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b3a1093a-d64b-4ba3-8669-6af41db18c5b"
        },
        "item": {
          "id": "65bf64cc-27ce-4add-bda2-324b31e5ee10",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "882ab66f-61df-4876-8494-b296b5864e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ce7bc4-a44a-4263-b2d8-19fd8af29a36",
        "cursor": {
          "ref": "c4ea8724-09dd-4ce0-8892-4bed704ab033",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2afccdfe-54de-4825-8fec-e1d25aa37c33"
        },
        "item": {
          "id": "a0ce7bc4-a44a-4263-b2d8-19fd8af29a36",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "232b32c4-c1f1-4df5-9e0c-3934f20d8f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de8cb75-a721-4f70-b530-f07a84651449",
        "cursor": {
          "ref": "6b77eb11-6510-4b13-9f0d-d9e6d2414dd7",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d76d1165-b405-4266-9cf7-39fd72660477"
        },
        "item": {
          "id": "8de8cb75-a721-4f70-b530-f07a84651449",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "96261263-d4ad-4555-890b-6806f60f1813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8440f791-cd30-44cf-afc6-129cc68e86b7",
        "cursor": {
          "ref": "d5928a76-da0d-4bc7-8c83-734b2ff9111e",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "28563b94-b2c2-445e-8a43-8ca7e3778a0d"
        },
        "item": {
          "id": "8440f791-cd30-44cf-afc6-129cc68e86b7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0e921887-2d0c-4f5d-a2a3-d98ab5ef2393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d3388b-2231-48c3-a86a-2864c72f3173",
        "cursor": {
          "ref": "2a7a4acf-8d56-45d1-b32d-6215775d5a79",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d972f5fd-a6a9-43e6-93b9-6744c7874fcb"
        },
        "item": {
          "id": "33d3388b-2231-48c3-a86a-2864c72f3173",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cbbb06f4-7c4c-4e78-8e24-584da4a0dcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625c7703-013d-4f14-b378-456dd8bb6876",
        "cursor": {
          "ref": "0214a51b-445f-4828-b443-6610ffe2aa47",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "61480475-cabf-4bc5-8cea-9918f705dfc7"
        },
        "item": {
          "id": "625c7703-013d-4f14-b378-456dd8bb6876",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ca012b7a-3197-48dd-841e-51ab3aa22631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c8f5ed-bbbe-4c99-8ccd-68cda49652e0",
        "cursor": {
          "ref": "2719cae7-8aba-4f63-a283-b78297dbad22",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6605e2b8-579a-46d1-8e8d-04344e5536d8"
        },
        "item": {
          "id": "81c8f5ed-bbbe-4c99-8ccd-68cda49652e0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cdc74ffe-e82f-49a4-8bbb-0aac5801db8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6274ac97-adf3-4072-8f5d-eba59697841e",
        "cursor": {
          "ref": "6f063bb8-e07f-4729-9100-121e8dabd423",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b21cb133-b5cb-447b-88c3-a0fcaef931dd"
        },
        "item": {
          "id": "6274ac97-adf3-4072-8f5d-eba59697841e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9ea2a3ea-f4ff-4dbd-9e56-4c53979f8619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c4cc42-eca1-46e9-b6a7-8f35bc6f96a2",
        "cursor": {
          "ref": "0abaaf47-8ed8-41ac-9e7c-3f877fa27069",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fc16cc45-677e-4b3f-815e-0611a6843166"
        },
        "item": {
          "id": "b9c4cc42-eca1-46e9-b6a7-8f35bc6f96a2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "373ccd7c-83cb-45d9-8932-7e8d0020b857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db098b36-3f4d-4029-a461-681d897b5ce8",
        "cursor": {
          "ref": "0072f986-e35d-47d9-8f18-ab895ee84caf",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e9a524ed-7ddf-457f-9d2f-05b1348521d2"
        },
        "item": {
          "id": "db098b36-3f4d-4029-a461-681d897b5ce8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d6cdea8f-77cf-4360-a199-a5e111ad3706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56074898-4ae6-426f-b26c-2da163b2f9e8",
        "cursor": {
          "ref": "c1cecb64-daba-4241-aa6b-e71ea4853b2c",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f17d6662-6c2d-4668-9318-502f2d1dcf0a"
        },
        "item": {
          "id": "56074898-4ae6-426f-b26c-2da163b2f9e8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8b174673-9f27-4449-bd02-5fa63080fac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236981b6-13ed-4daf-8d74-dc1c4d36202a",
        "cursor": {
          "ref": "8fc36a9c-f5f0-4cd9-90ac-e2e3a1e2e5e8",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2e5210cf-ed92-45de-9f18-05c51c4e8ee2"
        },
        "item": {
          "id": "236981b6-13ed-4daf-8d74-dc1c4d36202a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "09f8eafe-a075-4473-8460-ac12697fb9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04fcd7c-9817-4521-bd32-8965f94c371b",
        "cursor": {
          "ref": "898dceef-5b0a-44c3-83ef-31f6c6cff28f",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f18a9fe5-1f07-4537-99c1-17838bd231cc"
        },
        "item": {
          "id": "d04fcd7c-9817-4521-bd32-8965f94c371b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3ccd9c88-54c8-4e37-9447-00ec6df3375e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72571f98-5a41-4868-9bc9-07ae070047cf",
        "cursor": {
          "ref": "f78c099a-87ae-49e6-a397-4f9371f6cbba",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6dd32da4-22a2-418f-ab8e-40ded7e580a4"
        },
        "item": {
          "id": "72571f98-5a41-4868-9bc9-07ae070047cf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a5a64d20-363e-4079-8d82-1a3c9615046c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a7659f-a7f5-4ac7-b053-bd5e76b4a363",
        "cursor": {
          "ref": "d994ab66-5fcf-4fa3-9a2d-81f0fac8155a",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d98ec1cc-c62d-4e89-9720-7c8322948a1c"
        },
        "item": {
          "id": "64a7659f-a7f5-4ac7-b053-bd5e76b4a363",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "da24ab66-efe2-4f5e-b489-f1d0eb39ea9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24abec7-c4f5-4e87-975a-807a0596308d",
        "cursor": {
          "ref": "f4b7b202-f3e6-40a7-add2-b3d6c6a39fad",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5fc42191-807a-4521-a006-0f308f78aa42"
        },
        "item": {
          "id": "c24abec7-c4f5-4e87-975a-807a0596308d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8fcdf769-921e-48a9-8719-22456ab2f26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746fb3ce-8d37-44f2-bac6-353e844fa939",
        "cursor": {
          "ref": "f40f2499-a057-4713-84e1-e745ad8c4e00",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a2dcfc37-62a6-4971-a8ba-799fad4fbac7"
        },
        "item": {
          "id": "746fb3ce-8d37-44f2-bac6-353e844fa939",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1e433dc4-286c-467b-ad1f-ff0baf6edec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db1daa3-acbc-41a2-bb29-22466fad78fd",
        "cursor": {
          "ref": "75d3ac04-0b0d-4d8c-8bda-d2d4dcd23e62",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a1dd601a-69e0-4340-9540-3f94c025682c"
        },
        "item": {
          "id": "6db1daa3-acbc-41a2-bb29-22466fad78fd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e9ccac11-58c8-4914-917f-064e2b46fa8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddec8b2-5f53-4a48-8148-a97cdb30037c",
        "cursor": {
          "ref": "73d2b149-8372-46fa-9ecc-c3873e94e35a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "11a305a3-8c4f-488b-af2f-ead4a0dae8fd"
        },
        "item": {
          "id": "2ddec8b2-5f53-4a48-8148-a97cdb30037c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "edcf86c6-435d-4468-98b5-b838d9cac7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf31847-4113-4c7f-83d8-c8f9abbbecf6",
        "cursor": {
          "ref": "55e5502c-3a85-4b2b-8eb6-a820fe1dce6c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "70757011-82c2-4909-ad77-63b1adf5c9a4"
        },
        "item": {
          "id": "2bf31847-4113-4c7f-83d8-c8f9abbbecf6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "73011f2a-dd41-49ff-b552-15c557bb8f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a05f34-096e-4151-92c8-d85731259f63",
        "cursor": {
          "ref": "448d8311-8ad4-4e3c-a2b0-9dd808c3d945",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "35a9ac55-323c-418f-8e27-1301763e8ef7"
        },
        "item": {
          "id": "00a05f34-096e-4151-92c8-d85731259f63",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c2b675ac-64db-4972-b809-9dee77750b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffdbe7e-5ab6-4b60-bfeb-335b7f1c6971",
        "cursor": {
          "ref": "5032414b-65f6-47e2-ad38-19831f81c026",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f72dcb88-cf27-43e4-98c3-19863601e73b"
        },
        "item": {
          "id": "fffdbe7e-5ab6-4b60-bfeb-335b7f1c6971",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ba55599d-2a77-4acb-801d-276cd9ba03f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960aec20-ebf0-4382-b771-3b41a15d0a1e",
        "cursor": {
          "ref": "25202ca8-5a03-478e-b4c9-c892990f984e",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c5b0068d-e415-46f9-9a7a-22e9cef48db5"
        },
        "item": {
          "id": "960aec20-ebf0-4382-b771-3b41a15d0a1e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f85c8129-2ab0-45b3-861d-32c31db549cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0a39bf-5404-4496-820c-b6f3c58a4d02",
        "cursor": {
          "ref": "360daeb7-464f-496a-910d-e61603c3d43e",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e062fbb4-480d-48dd-9b9e-6c3dddca5283"
        },
        "item": {
          "id": "6e0a39bf-5404-4496-820c-b6f3c58a4d02",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "101ee8a8-e290-4b0e-9b89-ea7701919903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758f8721-b39c-4b85-ae70-b8a8b7659acb",
        "cursor": {
          "ref": "8186bae7-6855-4fa0-80b3-00ad9da7fb58",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a25486b0-1067-4f5f-b652-46dbda5d4790"
        },
        "item": {
          "id": "758f8721-b39c-4b85-ae70-b8a8b7659acb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6597af72-7c9e-4927-baf3-162a4433b765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84fe219-aaac-45f3-8bd7-0b9832ebbdbf",
        "cursor": {
          "ref": "161b34d4-f00a-47a6-ab77-575460da2a3c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1334c6f3-fdbc-4b46-b619-7110dab560b6"
        },
        "item": {
          "id": "d84fe219-aaac-45f3-8bd7-0b9832ebbdbf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0d23a656-5e68-4b8f-aae1-3c0960cf2fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9e6150-664b-4761-9ac4-3d3b245e5bc1",
        "cursor": {
          "ref": "d82f07ff-0818-41b8-8a1c-9397ce53454e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f69547d9-a89f-464a-9441-d89777e4750b"
        },
        "item": {
          "id": "3e9e6150-664b-4761-9ac4-3d3b245e5bc1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "986f98bd-2595-4515-b236-b29b632e2bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edba941c-00da-4246-9932-c6bc05244c14",
        "cursor": {
          "ref": "5843ef95-6545-4f8c-8846-e1cfb86f9fbc",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "52c48c14-21e8-486e-9d7d-6ca9621d64f5"
        },
        "item": {
          "id": "edba941c-00da-4246-9932-c6bc05244c14",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a802307c-0a72-487a-b054-54c497a454f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d22ecc-d2f5-4cd8-ad33-c430c6c57098",
        "cursor": {
          "ref": "e79a1367-3ee1-47b7-9297-f233e8203ddf",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ffdb4225-5981-461f-a3f1-f7b9d2db3b0c"
        },
        "item": {
          "id": "63d22ecc-d2f5-4cd8-ad33-c430c6c57098",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1791ff6d-2166-4cad-87f3-1326378aac76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cffdb71-f991-4792-8bae-eb7c1fdfd84f",
        "cursor": {
          "ref": "9fb9166c-2d92-4d72-b938-b4592417b6c0",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "368b9af8-c889-4ac3-9490-93383693cddd"
        },
        "item": {
          "id": "8cffdb71-f991-4792-8bae-eb7c1fdfd84f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "376c6dd1-24e5-4a64-a4d4-33bf8e96dc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1183ee57-35bc-42a7-ae08-bf11f8685a90",
        "cursor": {
          "ref": "337c41e3-1174-41a1-8a78-95444a3271ca",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "553e44d8-288f-4501-92dd-2d8d34e24062"
        },
        "item": {
          "id": "1183ee57-35bc-42a7-ae08-bf11f8685a90",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ee17639e-188c-4a28-896d-3986c8bd6b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6e91c3-49e0-41bf-a231-c2776cad3825",
        "cursor": {
          "ref": "11b06387-584f-473c-b562-a11ba64e64f6",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8d3333cd-e74c-44c8-9b18-eb59cf36691f"
        },
        "item": {
          "id": "ec6e91c3-49e0-41bf-a231-c2776cad3825",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e758ecf9-485e-446c-bfdd-03a928cdaa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbb7c40-389c-43f7-aaeb-547fdff76345",
        "cursor": {
          "ref": "34d6ef93-5d57-4759-8cce-cdbdbbb9df57",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1e2c93d8-0563-4c98-b96e-72253f07f10f"
        },
        "item": {
          "id": "4cbb7c40-389c-43f7-aaeb-547fdff76345",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "158663c5-8d64-4e56-9282-d53e3a16def4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ea1637-a6cf-4e2e-978a-eea689d09bde",
        "cursor": {
          "ref": "d0c25106-0654-46fb-98b7-88490a9cefd1",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "04138806-15f0-45d5-b6a4-ff41c5258d05"
        },
        "item": {
          "id": "a3ea1637-a6cf-4e2e-978a-eea689d09bde",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "92b01817-ac5c-4179-9244-b1faecfc2181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38141320-bb82-48dc-b1e1-01a600f2d707",
        "cursor": {
          "ref": "8de2bc18-a7a1-4b46-a67b-99433d06b0c8",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "778d8273-160a-4b14-aa83-2f63b76448b3"
        },
        "item": {
          "id": "38141320-bb82-48dc-b1e1-01a600f2d707",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "15191088-fd88-4665-bc1a-f729cc36e1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15e3a5c-1ddd-464b-b8a5-f37e882c2006",
        "cursor": {
          "ref": "0c545318-ce74-424b-a3b4-c72fee6acaaf",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ca849e5b-3d42-40a3-aa2b-48a561413cb5"
        },
        "item": {
          "id": "d15e3a5c-1ddd-464b-b8a5-f37e882c2006",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "842f99c7-21f3-4822-8b59-0e67e58e7274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bfd730-ee32-4fff-9775-f6291a5169d0",
        "cursor": {
          "ref": "564011e0-7ff9-4851-9989-7906f7e089da",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "11912410-2109-4057-9189-ab6b42238a99"
        },
        "item": {
          "id": "86bfd730-ee32-4fff-9775-f6291a5169d0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2ffe9a2d-8089-4132-9f71-387802f4fff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f241cd1-1c65-4443-870b-ce7376c3c9e9",
        "cursor": {
          "ref": "5089a462-b0db-4336-864c-1e0e88724cf4",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2bbea690-5035-433d-80e0-0da8ec866de4"
        },
        "item": {
          "id": "4f241cd1-1c65-4443-870b-ce7376c3c9e9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bde88e8d-1159-4ee0-8fdb-be96f3eaab49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c35890-d20b-41a7-8397-0f53a9104fec",
        "cursor": {
          "ref": "c39ab35b-f976-43eb-99c1-9b17cb9a3b41",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e97e20c4-2419-4f46-a6bf-d99537f82f3e"
        },
        "item": {
          "id": "30c35890-d20b-41a7-8397-0f53a9104fec",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3c00b12d-8c53-4dc8-8328-295cd592be9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f42151-0351-4486-823d-59c10b29352b",
        "cursor": {
          "ref": "970a1c03-eb85-4252-bd13-c8170078a603",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "649583f4-21ea-4712-a26e-744faa81ab7c"
        },
        "item": {
          "id": "c8f42151-0351-4486-823d-59c10b29352b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "95f103fc-6186-4cda-87c2-0202eb0e4f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca60c94-0203-4358-a258-04a5b219ea23",
        "cursor": {
          "ref": "08b49949-1d7d-46e7-ab3c-cf288d0507e8",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2c135607-23e1-420b-acc2-6c37300b4beb"
        },
        "item": {
          "id": "aca60c94-0203-4358-a258-04a5b219ea23",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0730b083-7262-450b-8ea4-44527e022320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003a8c0e-519d-4ded-9e3c-b8ae063f7b28",
        "cursor": {
          "ref": "fe0ce964-1d22-4eb6-8970-ec31dfe85e6d",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "56cee783-ff74-464f-b5b7-dce3bd303445"
        },
        "item": {
          "id": "003a8c0e-519d-4ded-9e3c-b8ae063f7b28",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "234f098f-23cb-43e7-8d0f-6f6c304bd074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0204f2-b4f9-4806-8800-b67f6c29e1a7",
        "cursor": {
          "ref": "1f7a5c6a-6062-43d4-8fc1-cc868bed703f",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "02e2bbb3-b8df-40a4-bac5-41b3921df08a"
        },
        "item": {
          "id": "1c0204f2-b4f9-4806-8800-b67f6c29e1a7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "74155f26-893a-4edc-a150-3e09518158c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a221fd9-287d-4e69-9423-211350cd6259",
        "cursor": {
          "ref": "41fc7e36-f51c-4091-87f0-ff30d2219e63",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6d1583f4-7641-4032-8769-748c83920f58"
        },
        "item": {
          "id": "5a221fd9-287d-4e69-9423-211350cd6259",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c210da6f-532f-4e91-adc2-56a55b127c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c810aa06-518f-483b-bb3c-b13d3087fbd8",
        "cursor": {
          "ref": "70cfb6dd-00c4-4e71-8112-75fe537ac9bb",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4743e955-3cdd-4bb9-98c5-eb26da795a1a"
        },
        "item": {
          "id": "c810aa06-518f-483b-bb3c-b13d3087fbd8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ea57ba11-2aab-47aa-8390-eeb4bc90f1d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da76109e-494d-455a-886a-f09ed1664416",
        "cursor": {
          "ref": "59a577de-a7cc-4cd7-9277-8058538ce828",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cf6294e0-568d-4249-8199-b2dfb352104b"
        },
        "item": {
          "id": "da76109e-494d-455a-886a-f09ed1664416",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "765548fe-c383-464d-a750-3c7d7d784110",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 234,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cf7d0e-879d-4e72-afd8-9f534bd111ef",
        "cursor": {
          "ref": "fece572b-55fa-4205-8fe1-812a2b9edf1a",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "90b0ae25-93dc-4810-b83d-f2752eb2e30f"
        },
        "item": {
          "id": "b5cf7d0e-879d-4e72-afd8-9f534bd111ef",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2c8a082d-b96f-48b0-93cb-2ea1e8a423ab",
          "status": "OK",
          "code": 200,
          "responseTime": 408,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9306cf5f-d2bc-4f98-89e9-56e7d462300d",
        "cursor": {
          "ref": "57774228-a074-4d89-bc76-2543e12d79b5",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ccefaeb4-e4d0-4f68-b54a-233d350f5e20"
        },
        "item": {
          "id": "9306cf5f-d2bc-4f98-89e9-56e7d462300d",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "7721fc30-0bb2-44fe-a037-1a67a542e433",
          "status": "OK",
          "code": 200,
          "responseTime": 481,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cf872a-3571-471e-b06b-9679435fe4e8",
        "cursor": {
          "ref": "b2ba98b7-9b8e-40c6-8263-c0de19540d4b",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "683c199f-be05-4f67-afb4-72d6f5eb8b61"
        },
        "item": {
          "id": "a4cf872a-3571-471e-b06b-9679435fe4e8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "91dc4804-5633-419e-9e27-3ff7cdc09939",
          "status": "OK",
          "code": 200,
          "responseTime": 474,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7e865a-cb99-48ab-8323-d1f94898594b",
        "cursor": {
          "ref": "3d6d70bb-bff8-4772-b3c9-895a6fcc503d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "03c1274c-04c3-4713-9a3d-f6f1d6281a26"
        },
        "item": {
          "id": "1d7e865a-cb99-48ab-8323-d1f94898594b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a0ca8a40-774e-4d1b-a9e8-98c9bd5f4f13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7e865a-cb99-48ab-8323-d1f94898594b",
        "cursor": {
          "ref": "3d6d70bb-bff8-4772-b3c9-895a6fcc503d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "03c1274c-04c3-4713-9a3d-f6f1d6281a26"
        },
        "item": {
          "id": "1d7e865a-cb99-48ab-8323-d1f94898594b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a0ca8a40-774e-4d1b-a9e8-98c9bd5f4f13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7e865a-cb99-48ab-8323-d1f94898594b",
        "cursor": {
          "ref": "3d6d70bb-bff8-4772-b3c9-895a6fcc503d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "03c1274c-04c3-4713-9a3d-f6f1d6281a26"
        },
        "item": {
          "id": "1d7e865a-cb99-48ab-8323-d1f94898594b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a0ca8a40-774e-4d1b-a9e8-98c9bd5f4f13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec7f21d-9036-4003-a384-07c3a6eb4104",
        "cursor": {
          "ref": "9431aaa5-9b45-434d-bd49-3b35279f921f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f88a3e90-a283-4e30-a5df-7c1f6a48cdb7"
        },
        "item": {
          "id": "cec7f21d-9036-4003-a384-07c3a6eb4104",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c21b0a8b-fd22-48d9-8d58-ff06efa3a15a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 808,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c488a69a-3443-4f10-b426-eef9bb1b86ec",
        "cursor": {
          "ref": "8b65813f-7589-429b-b4ad-9d9e29fd3dcd",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4a226b3c-bb3a-4a48-8d3d-188101838fc0"
        },
        "item": {
          "id": "c488a69a-3443-4f10-b426-eef9bb1b86ec",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dd8b2315-0aea-4f5d-be04-331689ad57a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c488a69a-3443-4f10-b426-eef9bb1b86ec",
        "cursor": {
          "ref": "8b65813f-7589-429b-b4ad-9d9e29fd3dcd",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4a226b3c-bb3a-4a48-8d3d-188101838fc0"
        },
        "item": {
          "id": "c488a69a-3443-4f10-b426-eef9bb1b86ec",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dd8b2315-0aea-4f5d-be04-331689ad57a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e509a1c-e137-4f17-a614-832fc867aa9a",
        "cursor": {
          "ref": "39787cbb-f8c2-4a3b-8837-bf301c50c30b",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4d3e396f-3951-4f30-aaef-c4d21ca2bf26"
        },
        "item": {
          "id": "8e509a1c-e137-4f17-a614-832fc867aa9a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e5674d9f-eb65-4632-a909-05c8fb0e3119",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1407,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e72b6e-726f-4324-9610-b1bc7934685a",
        "cursor": {
          "ref": "7012d1c9-d1b7-424e-bc24-62a3210b83d7",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f92d9b29-9abe-4411-8a53-40b06991d229"
        },
        "item": {
          "id": "a0e72b6e-726f-4324-9610-b1bc7934685a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "243957be-07b2-4dd3-a9fc-ad4023c87714",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e72b6e-726f-4324-9610-b1bc7934685a",
        "cursor": {
          "ref": "7012d1c9-d1b7-424e-bc24-62a3210b83d7",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f92d9b29-9abe-4411-8a53-40b06991d229"
        },
        "item": {
          "id": "a0e72b6e-726f-4324-9610-b1bc7934685a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "243957be-07b2-4dd3-a9fc-ad4023c87714",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaec9c2-1bea-4433-a59f-8cc91dcdfc6b",
        "cursor": {
          "ref": "2ad43215-7772-40a7-aeec-4efa7a6d355f",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c9e509bf-df00-4c94-afd1-580b9991fccd"
        },
        "item": {
          "id": "ddaec9c2-1bea-4433-a59f-8cc91dcdfc6b",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "383d696b-d8ff-475f-9cd0-342e05d49580",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1161,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}