{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7654934c-f0d5-4b0c-8e4b-9586728acd07",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "975db7e5-e216-494f-bf1e-f2815d0cbc56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15545bda-6c45-46ef-9fa3-e0e052084250",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b492b28-24c5-4430-b445-b6b6949d3894",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c2b4464-2a57-4c18-b76d-cde57299d035"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "5e1f1184-12ae-434c-b174-f3e7dc4bfc95",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6ecd7fe4-5a0a-4842-bc09-26dca1ba2846",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23e4830c-3c41-468b-82cf-7356caac54f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "39fa4cca-c281-4229-9bf9-97074a35393f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ceaf12-7df4-4435-b4fa-4863aed12faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08a7571c-79d2-4c5e-b75f-b900bc7b05a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a079639-26c3-4e48-bed7-10109d94eaa2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad5bbda-a658-4b46-ba2c-edb2dffaf633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec44a373-9924-46c2-9504-a022fe33d261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db7b989-9d58-4db1-bf37-1b3320767957",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b61c6a-c24d-4335-9f32-4540ae1539ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "462cd474-ebe5-4de8-a63b-ba90098e16a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b002adda-5f07-4e81-a2ae-c04605da3227",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b025b9a-6079-4afb-84a7-aacd54cb47a0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee85a3f-b6dc-4e8c-bba8-d9784a4a6081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8624e905-eafd-4ca8-81b5-659e6595806c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ce95d4-82fa-4305-abe2-c26864a6eed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d67a1b-aa16-482d-a24c-c6f087b49b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54d5807-db7b-49be-8fe9-739ed43686ef",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f10b232-fa1f-4b0a-b697-d5272d2248c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25a0a953-9c49-47ec-aaa3-5801c253f72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc3bb89-b3f3-461d-9beb-cb81bfdf9d33",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "8b4c3899-82cd-4cb6-8216-6e8ed8a45fd7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9d601e0e-2d62-488b-9621-842f9a46818f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fcc50064-8c69-481e-b79f-eb7c22c78ee8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db669f88-e0f6-4139-bb5a-1f1d3a9737a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "727791eb-4899-4844-af21-86ffe738bf50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec255825-087d-43de-b6be-5578dc6912db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "0d1d55e1-c2fe-47d2-94a0-3d595555fc83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27cc9079-926f-41b8-b532-42acd635cc42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7a76230-1f1e-468b-baa2-d76cf5ed736b"
            }
          }
        ]
      },
      {
        "id": "3c030523-dc60-4231-bd31-32cec689f052",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e7d161c4-b9f0-41c8-a3d7-571d518fd835",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d53f810f-f450-46ef-8afc-fcb2afe5446c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "dd580db4-90fa-4d83-854c-6603d1cbd667",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0912297-f9e0-4f77-997f-71086c8b0164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17dbdd91-b2be-4790-ba7b-86c14e8601cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4519e84-1b6a-4095-8cd8-72ffd6ffc4f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b994e19d-269c-4e10-b05f-1dd69a588d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30146b3f-486c-4493-9417-4d963adbe4fb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b951af-da11-4a52-83cc-6ceac587eaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6707bff5-e03f-4b3b-8585-447b2eeef98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775eeae6-9793-402a-9938-7d272f65d1da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d6f1552-0286-4d1c-8f96-b10ba814a484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796c83d3-d9be-48ff-8c21-8c1ff6622a2d",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5410da50-1083-40af-9190-f6d3bfadc6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3049ab-80ce-48ca-9a85-8d51ccc527f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac734613-8e48-4b9e-9518-0ba162b2bcd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb7d517a-e26b-402f-a9b5-c195b0fab2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfee72b8-8718-4436-9d26-0bc109a62c6f",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844b50b8-aeaf-41a0-9642-7ec67c17a2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42186a5f-bff5-4ebc-8d59-c8470cbdbad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c8ef2f-cfbb-4fc7-a674-ae8582a192a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "316e0c19-a734-4399-a5ff-6d89326cd2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f07c7d-6d16-43cf-a151-abaa51913a2f",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab2bb8f-43bb-493d-bd84-6e599c11a577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a05928-fff7-4e8c-aeb2-b4412b0a4151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025fa4c1-0c9f-4d3b-883b-2c3d064433bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ea1d9d-944e-42fa-a0d8-4e91fe61bbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7735a99d-2219-4b54-bbe8-01dff3c2ba19",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18026db-c1b9-48f2-9b11-d8fd2dafa964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16495473-440b-4b04-843b-b9ff7e2d55f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d88e9a-898d-4c04-94f1-03c9abe72bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab98335f-18e2-4090-92a1-48a31777c0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f6c48a-a7a5-4595-8c22-fd422e34d58a",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b03ff85-a265-4a37-a5d9-f92dee2613bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6e4d62-b799-40d0-a088-6942faeacb7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7b99cf-dc10-4fb0-8655-8131e28277ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1ab563-ed4a-444b-9031-c9030c965385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e12509e-3539-4d0b-8d4d-ed37bd9fa802",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9844254-13f9-4705-b221-a5af0a5a0db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a776009-8528-49e6-b8d5-1b996b7e1ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c341344-8d2d-41bb-ad23-3908e326e2bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e4fb92-977e-4cd4-9b8a-57cf5b278f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81667d6c-6077-46c6-bb8a-b633b98213e6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174ee3df-3ddd-4c4d-9bf5-6dbcd7d010aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e826795-920d-429a-a4be-22b87a09d608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445818d5-ddb7-40ee-bd2c-b72fe367673d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d10df65-9ef2-43c6-8dc2-7dd6a8e0f2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684ce4dd-c8b2-4aef-9ab5-9c677b7e9839",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e878b2c-8016-4816-b633-dc4e5fd66ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40790fde-a740-4e57-88b0-7dace6eb2378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909d400a-cb31-4267-add4-b35c3773ae5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bea0560c-e8f3-4bd5-9b3a-0bf7f8dc0d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068ee382-08fd-4d1f-8462-16d9f4b2c449",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d90aaf0-ea0d-47d6-85e2-c524d373ca1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a418566d-9f9d-45f0-8581-e671ef064bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bf93e6-21f8-4895-9cee-86f52557dd64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "c90d1688-a2a1-4eea-b3a5-d1ee9e4d21ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ec9ec5-fb14-44f6-a815-519664b6f908",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a78343b-d16d-4bb7-a86b-25d3663298e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291cbdb5-2c53-4629-bbe4-c6f300e268bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0dafe8-6522-4dad-a1e2-07649070033d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "34adddec-d921-4185-9c2d-f2618038e5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7606ae-d8d6-48e8-b280-e3e7806d1fd9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c451622-861e-4df3-910b-c2232d99752b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879f2ce1-5a95-4ceb-9ccc-9170573a5ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be44cba-b07a-4129-9a66-036ebeec26f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe888c4-0374-4c7f-a101-630c9a89db16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3139d404-d8f2-4d2f-acb3-379f233f5a22",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b471ec36-1889-4f7f-aee3-92902fe200f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b83ec82-fac7-475d-8958-18bd36b2a17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f252ccd-d152-4267-8c7d-aec41893f03f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39d26f56-9d67-4c13-8ca4-bfb0ce9660aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f8b2ca-b76b-4579-8815-f753bd82c3da",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3ad5bd-02ae-4ba3-a1ed-e86764e96b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04c9583-6db3-4687-8c2e-80fc4ed7c3b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad8bc3b-4c87-4d91-a361-caa75a546f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "b90e881b-e8ea-4357-b748-26931d85ad3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d59b9ba-c98e-46fa-af52-09b9e05cc72f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d65114-0d4c-4bb7-8ee3-902fb618aed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b133aac-7d41-41bb-97c9-0d840d5e24dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df6a14b-91b5-40bc-9116-18dc9abc7e80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "7ba2700b-c322-4005-a37b-4de9c7c97fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a99377-0f18-4751-ac8a-a78210c6d9bb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b54a19-17e6-427a-9364-0fe14046b5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f88079-a63d-4a2e-a2c8-0baff786a859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cba5ed3-b0e4-4f51-b56d-38a237bdbc13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97d24a9c-1a3d-46db-941a-967922025190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc457d7-6d1b-4e86-860b-33e750790c7d",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea30255-15aa-4cca-906c-2a37afc45b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2172f5-d7f4-4c07-8189-3ed385b6adec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0d38e9-1a25-49ce-8c4b-abfb5d86e15a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25180b72-386c-4be8-807f-2431cadeab7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b07efb3-e2e7-4724-aa75-9356eebc92ac",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9d0d39-60d7-44e4-91e0-631a10acba25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175e2751-446c-482f-bc60-b8d065a00dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7f25a8-59d9-4d6d-83b0-e7d07c128c7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a81bca4-2ccd-4dc8-8186-ae9c3c18e478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e9b143-7e16-4dbc-ba2c-af3fa797378c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28a8873-1ef0-48f0-b358-1c232227ae14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7c3b5e-c738-4bfe-9872-38fd0b2e6b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf937fb-65b3-4e83-9ce5-83bf9694b5ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7be6d0fe-bd26-4396-bab4-b32392126490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cb7314-ce31-4383-8ed3-8fb71d2caff7",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0928ba7f-8bf9-4a28-b32c-433a51ac71d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0db39cd-65e3-4991-b3d1-44166f3ccc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c764ad-ff0e-4a64-85e8-097a11b14cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d5bb52c-0700-4e8f-9d4f-fd64ee015d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271cf152-6e0d-4a35-8829-2f95b2ec6041",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51e92a2-ddf5-498d-bf9c-d35d24f22aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a34739f-b9f0-41d1-91e5-6fa3b05b53a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45434bb9-e835-4142-b734-54dd80845c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "079fa226-623f-4990-aba8-ff4a00e641a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a6210a-ea12-4ddb-8f37-8464270d0269",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3cf0fe-851b-4d46-9e3c-bea1c44572a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2479035-ffac-4952-aa96-64865decc821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af14bad-01a3-4d7b-9da6-ba47510662f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fde7630-501c-415c-9f9f-8848ad5f4237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ada84d-c03e-43ac-afd2-033cb16b4e34",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbed53e-a3da-4760-a349-a566b27023a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4696b1-cb67-4776-9e57-c6b9d556c456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f8359a-6dd6-4631-8deb-03dd2bb4478e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eae91a5b-5757-4f62-a22d-0384c6ee3e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5313c792-de70-4533-99c2-3170e12dfafe",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b55b09-0189-4123-beac-a491042e4684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ff83d4-beb5-4a1f-85d0-fa08597992a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd18040a-48ce-4fc7-bdcc-7e9ab26741f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a1aa1c-e091-4696-8c63-bdd9d999a955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c078e94-479d-4708-8023-6f4a4b493c53",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bce0318-283e-47b2-99c6-f60d0752905a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c560a8-8460-49a0-a814-9e094b958618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0975976-e2ec-40e8-80fa-397bd799a7ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8209d260-b17f-43ba-8478-ff69be543ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf74f5d0-cc9c-41f7-8467-6202935ef5b6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84f4ca3-59d0-4cc3-9d67-d0b4095b4af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159c4b78-5d9b-4948-8b0c-6239f21c5261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9108ff-2a94-49be-962c-2430e1f4d307",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f31a868-2852-4bf9-8126-654a85150639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028aecf5-e7c8-4cbf-b3b3-9a81fdb946d6",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf9e0d2-38cc-4a94-9410-f38192ee0a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a36d775-0e22-4dc0-8e20-f6c4cc7086bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a874e9bb-ea00-4c64-bfc2-18dc902b2cf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dddce19-1b5c-4353-8910-e7d3cdfd79b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c35cfa3-581d-49a6-a154-00b065720ad1",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e10e10d-ee54-4ff4-aab5-f7e22f998db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99695636-9fe0-4fdd-9b01-5a8c8497c182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5781ac9e-9a85-4354-8e26-655c6347b0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bedc537-62d7-4cfe-b046-451803aa062a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0f71b0-4684-46bc-a8d4-64f924247797",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672d4676-2788-49f9-87d5-2bda2bcf2a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ebf563-43ad-4cb3-b5fb-8d343d0f9ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cdc8f9-5534-4461-a1db-88179659aef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725859ec-6ff5-4e60-9184-32610cc8ef9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a697ed3f-f29e-455b-995c-17496fe7913f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1997cac-9fed-4642-baf2-a7bbf86b59cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9ff2545-f6e4-4ad1-8e9a-b5a225bc963e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02150c2a-118c-463b-a58f-fbb8c245d7af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b44be730-dbcf-4159-9e6b-ad9e264fd0a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "080685e2-2943-48a8-a851-7dcfda6e75f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6863de6c-1da3-4ff3-83eb-25dadfe9f3cf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf353637-a292-4434-a5cd-85630a9f55bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9791393-d023-419b-a923-f771de010e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8a232b-8d19-4c3d-98b8-26dadd8fad40",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "6bac74b3-37a2-475f-a56e-b204399a8455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d001167-6a53-4969-8538-9b950758aed6",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b809ddbb-dfe9-4f0f-a831-929629331806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e75a907-4fd9-4da2-ac5a-e7e58e41c474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7eb30b-2f50-4ddb-a3d2-8d1579f5f0ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "df92933a-45c4-46be-9578-c7bcb0bbaa9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d75c3f69-0461-4fca-851c-c4f32638fb7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84d29b61-d996-4d25-9b70-146c51c6d473"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9c0ee9a-4f39-44d9-8af3-3b71bb151cd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a03eb95b-4b38-496c-b316-885834fb3340"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e05b342b-839e-454e-b0fd-01a67b7e2136",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa1bd29d-1202-4bc4-bf09-cd491583b9d0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "29491b7b-393d-4b69-a8ab-94f5a70a79c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4264123-dc08-4a8b-b83a-a39b78867b2a"
                }
              }
            ]
          },
          {
            "id": "37cacb8e-8b50-420d-b1b3-5507d9918c32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa477fc1-a99c-47b0-878e-c11231591491",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f2fb67f-55b4-47e9-b6e2-afba692ac426",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "791c486b-383a-4a65-b544-956a739bbb79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d2f715c-c695-4be8-a846-842f7d8d41bb",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "d256adb6-3e24-4c7e-9ce1-3468ff174868"
                    }
                  }
                ]
              },
              {
                "id": "8930c380-9a49-4e17-a965-611baa1b6123",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "676b7d0a-8a7e-41b2-b65b-0e0af7bb4f12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7056c19b-d656-4498-9cbf-2c21f481cb30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16b7a5df-4536-4075-9e8e-a3c738f0a34c",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "2950900c-250b-4056-8330-fcc5a31cef88"
                    }
                  }
                ]
              },
              {
                "id": "1278e4bd-3217-4c69-83ab-3521e7ffac8c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6481ea67-bea6-4383-9559-6ad76256c645",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18465811-4905-4d61-9694-bb1e03b1c89c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1835044d-1817-4869-968b-ef2825474fc7",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "fdfdaf69-9c20-4db8-bc70-b0852a22d2db"
                    }
                  }
                ]
              },
              {
                "id": "6538f86e-a2cb-45f1-8624-a30d0b9ff27e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c18d3f22-6b77-4e1f-9324-4b75a8f3df88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b27e518f-5c00-4b79-8bf7-c313a0cbc8d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d864630-9338-4ec7-9e09-f7175994c41e",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "b4163e92-fc49-4007-b149-82c0fdc9911f"
                    }
                  }
                ]
              },
              {
                "id": "c9f99380-2141-4bc5-817e-8f3fceaeeda9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "223e3b4a-bf46-4c24-9e27-4eeb3639ff50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ea6ca79-5ea6-4af6-a298-aeda92a2cdc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce0053cc-d8d4-415d-bfaf-4bc6dbffe21c",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "8159fe92-65ab-4eab-8403-62bee295ae2c"
                    }
                  }
                ]
              },
              {
                "id": "430ff228-851a-4b42-8ff6-3fffbfca71d3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fe8f38b-ef37-4f3f-b5e0-31b97e4e054b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2cac9d1-b751-4428-a35e-34ad2a555fbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ccabd3a-cb04-43e6-a682-b6406baa6877",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "65fc25cd-824a-462b-8f21-2692a346b5e4"
                    }
                  }
                ]
              },
              {
                "id": "42095e8d-6292-4e92-a5e0-e74a2f102887",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21c0f4d6-fb84-4640-a5de-63ca68a90061",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d58f3d88-1b18-4544-a5d5-d3dbcd49c06e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b53feba8-c9f3-48c5-af52-98bd39cbae01",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f9052d46-2cd8-45f9-bd17-e1d70a8e846a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "806783e4-f667-438f-89f9-b9afeb7f6fa1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e012001-1c36-46bf-8608-a9b6b66c5bf3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "49dc57c8-ca5a-4ccd-81f6-da8572cb047a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6a9355f-158a-4823-9810-66f4960d1ce6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b427d6d6-ab4f-40bd-907f-a3332814119f",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "d466e53c-f361-4015-87ba-225416988e77"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3118996d-2791-4f57-990b-4daf4022353a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c063ff0c-daaf-4986-9947-288c86e6c19a"
            }
          }
        ]
      },
      {
        "id": "d3b80ce1-ebfe-47ad-a681-a3766b8a8009",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "51603135-1ec6-44d5-9d5e-72084d43fb1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "405aaaba-45a4-42bf-8bde-b9a9c24160d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1263f836-e300-405d-8630-f4ae629090a8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315c5d00-27c4-474c-8ccd-ee3b1fd150ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f723963d-a00c-4b8c-a4fb-c0e17f8a5c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9112b3ce-578f-4e06-9257-ead3f980ba01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5937d8ae-d0e9-4eb4-a0a7-735bd928caad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67a43d1-aa5a-4ed7-ace5-9d6b1e1ebbae",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ba3bb9-4c8a-4228-b8e2-97be389eb281",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "0e896b01-d936-4c49-ab4c-2aec0b2428ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d159eb3-8775-45b1-bee2-9ba9fd1d922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8066148-2f49-41eb-ab58-85323bde995b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea29991e-d9e3-41db-b078-150958b304d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd9aed32-e53b-478b-adca-75cd7eb2cf5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a55f9db1-cf00-454a-93da-2d489fe4825d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b15cc4f5-064b-4e3d-8dfa-cac955f289b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18fc3575-e533-4723-9a93-efdd7c521156",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "4e123df0-a8bf-4a1b-92cf-72a0e7768df4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01eecac8-480e-4034-aa44-e56b969a65bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fe64161-b6d6-48f6-9673-cb512da2e0c6"
            }
          }
        ]
      },
      {
        "id": "31d685c5-ea12-48ea-9ffc-ab989fe1664a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3ff22681-04d6-41d1-bcbe-0819062557ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d433815-7d5c-472a-8da9-f7052b8f0e5e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "edfb63ba-96bb-4d9b-8f32-b2f421cedf24",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702acc19-f5c4-48cb-a961-27b384b86fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eadaa77-b49f-4bc3-9303-1043e6a2a1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a311da45-4416-407f-92d7-60f0ff0909e6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d56152-4679-46bf-b63c-35c3a4c171b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedb75db-3c81-4c88-89c5-f82a0dd7d4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9629ec-382e-49dc-b2db-cedca62839ab",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2caec6-49e3-4f7d-88d2-024fb7a8ad5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1e34f1-ad50-4e90-ab30-8730adadd17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31677e3d-0084-4e58-9914-1b9babf93da8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060d2bcb-97d3-4c8d-9395-0aa428123cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a543fe51-6051-4222-9368-d4c43cd33b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046b26c8-faf5-46a4-a4da-ac366dea58b8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2a1e4d-13cd-46ba-b8f2-7b31120a5392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2117811f-1b8a-4279-843b-d0656991e9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cba648-98b9-4561-b9f4-cce01b00421c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84954eb8-59fc-43c6-91d3-53f5db4f2be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3efe830-9031-484c-a33a-06da20c220e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21437808-5c09-433b-9564-76c7b3b12b0c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bd07e7-e5b7-49c0-a423-9c5945d9a574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d228574c-e6f5-46ec-9d48-99d89a4d3576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb1d107-505d-40e4-9313-a75d326abb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91078082-7d63-4596-9e87-b7f1cfcd4507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66a23f3-53ef-4810-8616-cd4913b2eefd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17010d86-3819-4d23-9527-31b406e1b840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba4906f5-e667-426c-a1d8-e163c6118676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "599a79c5-ac4b-4fb0-a950-e4ea4a4f2f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddaab41-2ae5-4b21-a853-74b8ce7e8d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbf7894-5936-4fa4-8e0f-fff21d4b599c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348faab5-0bf2-4aa6-89e7-09af8253abda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260ffaa6-828e-4134-a7a4-8af4e5907208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3b1150-7de4-4ab8-8b97-4c145d3ed057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b80a28-79e6-4845-83be-e3945212839e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc35032-fa31-4b4e-884a-4bcce49c4127",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0453d7c-feb4-4822-968b-e7261760d5b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe41128-3134-40ea-ac8a-b3f7d00994c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebea329-b8fb-4900-b0c1-10372058afba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8ecd30-b450-4f8c-a3ca-be993811018a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bd203d-4641-4746-bf53-a953db2f4e5a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743eede8-c417-4eff-8ffa-b32f73cd63ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27120f0e-6699-4e1e-b0c4-208ee4055788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899955b2-941d-4208-a559-7f77539aecaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16eb4c85-67ea-44d9-8f7e-26c23a08f2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe47c2e-c14b-4119-be3c-403e9462adad",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c5103d-4105-4356-ba25-6f39236ba322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99adf13a-c200-412e-ad2a-f9d8773d9712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e5742a-969f-4334-b234-3a955e8e7385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42909bb5-f158-46ea-9293-752b9e4de30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9c934a-4583-4f42-a579-b32cda9b6afc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f918eac-9ced-494a-98c2-0ea99dc070d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb323d96-49aa-4c88-9c63-74079bef532a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88990eb-7841-43af-adac-d88968adb17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f8a7a0-79e5-4c33-b740-ec5caccc149a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16453fa-12f2-42c4-b4c1-3179fe7ff89a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faba10d-8d6c-4973-bceb-f305187300ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4998b5e6-84ba-4838-af69-bb3375a55fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65dfce1-0162-4745-9b1c-2252f36312f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e821d9-e105-45e1-b054-738941744e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4602906f-b6ee-4526-8574-b67a9dfd425e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c621855-77ad-4d91-a3d9-b5915b475e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88c00c56-afae-4418-a625-465a4155807c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1ca4a4-514c-4256-90d4-e27c1325b933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae920d3-f92d-4165-991f-338243108d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966ea9dd-484c-4992-b3d0-35162e6d62fc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48ac25e-9cd9-49ee-9bdd-5a8ccd66b693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "209a904b-0732-4472-b654-cdaec5b9f3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37800439-f69f-47f6-a93b-f5613c945236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412075b4-f3df-40e7-b4cf-ec86e6faf7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e71aaa-1acd-434c-a8ca-eeeaa7bef567",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1c3cd5-2282-4dc9-824e-236af2a44850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe77361a-dc16-4ab6-9462-b6fc64f04f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7ae3e8-c5ac-4f32-b025-a2d06b42b017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ddffce-442b-4bd8-afd7-504e483690e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d63751-6304-40a7-b865-d970fa26d333",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38c6cbc-729b-422a-ac1f-67240ef5ff70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9f4dfc-22c2-4f2e-80f2-278be665600f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c6382b-9343-44f5-9d1e-166ef0c9f0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca32c8c8-d714-4068-83b5-c1182fb2d7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6812ea73-47f7-4a1c-ab36-f87fea253a2d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef21e6a7-dc21-46e9-9035-bc962b94cc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1644f8-2aad-4295-8d4b-e52c41b9bed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d9e9c4-5927-4810-9346-db466d698cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a279d0fd-83cc-4d25-b989-d3e5f35eb456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1dd885-9da6-4ff8-91ff-01d5fc678046",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c79799-df24-4a37-a38a-36b030b5c58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6116d6d-addc-4de9-9b43-41f1866a8679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d09446-b25c-4ce5-90e2-036640a200fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6b38d8-e8c7-4f24-903b-e0f8c25744bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263c5e62-adb6-46aa-a319-94908288b0d3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a2ec4f-86be-4a5b-9966-65d398abc9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c15640-fda9-414c-92e0-439662206330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96918b2d-8e0e-46fc-b087-ff69edcf0239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5299a6-1336-460e-ad44-093de74f0eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc3eb98-06ca-4d69-83c8-eb9ccd043171",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee18beaf-813c-4ca6-a3ca-7dca3af847bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecd410e-ca63-4940-b812-a1cc736f9a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af83f7d6-448f-4884-ad1c-eaeda777c846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ddcc36-88a5-4c2c-97df-17e6c60544f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8bcf67-6002-4e88-b314-117e5ea96aa5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c95d69-c208-4f0e-8809-96308657371d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5821dd7-6e8a-456a-bb80-0eee64c07d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3cff3a-4019-4683-ae2c-975cf83f6ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a073dec3-963b-43c7-a249-784efcba8819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f7e5eb-9b59-4235-b582-a64565b75753",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8a0724-ed8d-43f3-b234-42c94bd16692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13df45f8-34f2-44c8-9490-aa6cc95d4005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40f94cd-437d-404b-98d4-3d49c8e1afdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0adbc1-e9a5-4697-b41e-05f6a97bdd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96aece6-df99-4b58-97e3-099c6cb3a89e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b4b3d8-5560-4d90-a134-f96cd2d93128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f84271f-a37c-4a8d-b370-74873bc49104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e6045c-fec8-432c-9f8e-f34225dd2534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71cee999-e1a8-47cd-a2d6-ad985d216306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d426d4a1-b53b-458d-b039-4d99d859cf2d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8b587c-2789-454d-9151-554a3e6f68ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44bf9dff-6c0f-49da-80fd-676bc943efc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5adc3c-8afe-4a84-93a5-21907821b71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86fd1cb-efa9-4417-a68c-c023e01adba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34177c40-03b3-4f6a-aa71-aae242b5186f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e66597-5ef0-438d-ac5d-09cdde7cd445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02cfefd7-adfb-4b6b-a0b2-4e090cb2cc95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3d2f3e-b4cc-4d66-8d1a-8825a67da183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1916acd-3f23-45de-88c7-17878b47564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b9f950-e773-4227-9b53-73accf7f9230",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909cd474-638a-48d1-ba79-9457ace1f932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85f6c8d-da5d-404a-8098-a7d13ad71be1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422bfa27-6caf-4a59-a2c8-9e3db4478d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1851f418-dc55-460a-853b-2931b059929d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f07eac-ac87-444d-8b92-efb86c98409f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd120c83-377c-4978-8085-95fed934d8b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f7d5c3-a989-4536-a683-730fc39f2705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bdef15-2946-46bf-b7f8-75f6e91f02f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cee6528-c3a1-44c3-a057-0292e1f3780d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e40431c-b0fc-49bb-ad56-57dc998bb6da",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20cf052-c8c6-4e4d-9065-d6a0d6438af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5658848-7a2f-4245-81fc-c7f4b82b3b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d132ca-b799-4a2a-b6ac-7368158a285e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f24d914-0189-4512-b25f-24a3201c70b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32cc07c-e4c3-4e0b-a042-99633f4235c6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269364b8-1522-4257-ab63-15c52d4405bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede7cd49-c01b-4e1a-b0c0-fd27f193ebdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3b8bbf-923e-415c-860c-f55d92f17598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed7f49d-439d-4276-aa02-6486ca0dafdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b64a10-cb8a-4b52-9243-a9c996c2743d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4c1b52-caaf-4139-a455-5ff88326dfcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1db06e20-97cf-474b-be33-591e686941ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbabedb-e911-4b92-b09b-fcb04a01f317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6dba98-f14b-47b1-842d-8e0f04b918a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af15afaf-ae5a-4bc4-b3cf-6a3cee387596",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257d807f-efdf-4c38-b2ac-f32fc0d1a760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee10a99d-b82e-4ef6-a3f9-1b1f4f925a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80b1239-f726-4147-8015-0cfab7784871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f7460b-2034-403a-a049-87dbf0ef7389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695b453b-2e10-4da9-9d34-773e4ac03993",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d91e61-0bed-4bf9-8891-51656e1a0199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73236fa5-4334-4e07-918f-a3f6af9eb615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a679cb12-b04c-4bcf-bda0-807ccb2248e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8248d6-6136-4f4c-bd80-7cef2029861a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ce4f89-1058-40cf-b5be-729688bf9ff2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ed236f-7f71-4fe8-9868-1420d9d5efb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6a2ad3-9fe5-4d87-81a1-dc4e51db82b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f6eff1-fba2-41ce-a7dc-32df6d78daa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44185c37-efac-4f91-a01b-34c1d48bd2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f4786f-67e7-445a-8347-fa5db2207c74",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a978ee90-e533-4ea4-bb55-87bcc75fddb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a001fbc-2891-422b-86b9-aeb5354d48ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae04da73-982f-4afa-89b1-d083663b0718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288a305c-98aa-4685-8dd1-50936c1e2f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0971b96a-7bb0-4550-a3f4-b8d64c1ac114",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaebee6-d6b9-4ad9-9d66-9ac80559e4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb59da9-9642-4007-9cc0-b870fec6f9a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4855dac0-15b1-4f47-ace2-2dd3019d33e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a933f75-75a5-47e4-b9bd-0bcdfb2b1a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041dab8c-65d7-4324-b7bf-f8ae47d6229f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a152a4d-8d16-4f9b-8313-bd090479a320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24e5919-fcc1-494b-b946-f423b5f8580c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bae2fc1-ca1b-4914-9db6-ed73f7ee6da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7efb2e-63af-4638-9f42-d13b69dd6d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24e2d1b-7aaf-414c-9aab-18d0d46c9ece",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e3a084-c527-4f39-9e7b-ec302a0043a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e1e8df-3ad9-4f26-9a1e-f4b1ed6bac07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb6fb6d-325b-4769-8be4-2d58d2ece0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e39c4f-07f9-4612-a2cd-8aefccca8620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b538e2-0c3b-4016-90f8-5851686195b8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ed10d8-e575-489b-aac9-1dc62477872b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d00328-2765-457f-9efa-50cd846059c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee261fd-ea9c-4c3d-bb52-3a1f418d5089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042a935e-29de-4d6d-b482-60ad94e3e614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e931e9e4-37c2-49d6-a270-368f6fbb1848",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a9c14e-fff7-4edb-b74c-a1c4e59798b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b2982e-88fe-426f-819b-bbca0105fca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a31e1b2-e4c0-471e-9d1c-cdbff2206940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f881dc-eb8a-4f44-aa86-aac3fa8a31f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352f4552-87e2-4ee3-b5da-1d15c9eb8c37",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8f2ef0-9154-4b1a-88f5-45ca827884b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb236cf-1d0c-4c83-b062-52a608b4f8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7356c34-0566-49c3-a7ca-c77b121cf62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f18ef44-3f2c-4632-965f-1ec75bf6f93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4ef25f-b047-4593-a45e-8f6567bae02f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f44204-09d5-4cd8-a64a-1c29c49fe021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d63b4f-1faa-402a-901a-b04c575f22c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdc45d4-f49a-4857-b19c-1515b4a70fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5a249b-5416-4291-8c2c-e14ee9665c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f324c981-1081-45bd-86e3-cea0398596b9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30113f0a-919d-47e0-8ac0-886e003d2c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d120a999-f07e-4329-83e8-57410f31a37e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb30c5f0-44c3-480d-8241-db2b028e7a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc83a103-1963-4984-a452-0d0f9b006560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9323b0b-668c-4955-abb8-cfbfd3e68e6a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0f8c66-d028-4c2d-a5e4-ae6543916b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db4101e-cbd8-4ae2-8bd8-4cb9774eef9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33eb2c6c-d01f-49f3-bf14-8d3518a03618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfdaa4f-98b0-4b02-a892-6ee24956cc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a75d0d-dc88-4815-9273-cb38ca1d3b42",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc345853-9555-470a-b6d1-455cd5790871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0045ca3b-7539-4cd2-ac92-f9ff0490c5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bdba52-e7c5-4cb9-98da-3ef4c5190c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21a995e-af6e-4856-9ea1-4328c81d43b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0f4914-d660-4bc6-92af-59e073d810b6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dea02fd-aa0a-4a11-b709-e1bbd746c868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e9667b-6d20-4108-8711-415d5a559026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da19ec92-c839-428d-83ad-8d3c0ac8bf6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0821bb-c100-4f41-8228-d0ce01452201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d2e4f7-5f98-4656-bdd7-e5b8dff1bacb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a101de7f-3c95-4190-9a7a-a87fcd150950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5faab529-8415-4dec-bf7c-d25b0361a82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da57541-66ad-4367-a483-48d6c029661b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86125de5-7d85-41e6-a2e6-822a6fab81e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04aef497-4f0b-474a-a284-6dd1932c6131",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6695230-7a75-4674-a4f1-482430eb399f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6903398c-fb34-473d-aac4-fde0a6d11943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f68cb16-1461-4474-b5cb-81ee6a6ac09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb9b6f9-a3ef-4d0d-b998-7574d13032b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522ac9e8-5a53-4488-b698-b5a9ba723bb1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f9122a-5448-4ab5-9410-f5cc966e6d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab929436-5104-4abd-a9a5-9147cbcddf13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf9bfd9-350a-4d12-8fc3-0c93be4a7761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fff5073-db67-46f9-ac53-d75935b86269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc76bd54-e40f-4c6d-bfc5-b3b51848689c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f26f72-e9da-4521-aeb8-90be71fb58eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fabc391-d881-4a30-99b2-1e488a050eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01c4ceb-4d9d-45ef-a5e8-6dffeb17e6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700444e7-2b2e-4721-827a-4c2d49318a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5f095a-45fd-4f69-9a9d-6b521b07be8e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0989aa09-15b4-4f28-800b-e9107299ce14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43f13d7-270a-4517-8113-061403ac146d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4590013b-2f31-4fbf-910f-ab10cfe69f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3db020-04dc-4d7f-9ae6-b4be15f7a141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09e2c45-fdf2-4947-8872-f8c0386c8e75",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8ed537-f6d5-4c85-bc6b-a2145061c86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cf4955-4091-48e8-adf7-c9c732df6847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4497b9cd-4dda-4164-84a9-d8ef19dd97b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54abeaed-b4dd-4135-b548-89a5b37ed170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f347ff18-ea23-4457-b9a0-99e330467e60",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4acac5-4da5-4823-b778-c3a7772f6b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be56d27e-1d28-43bf-b067-72acc93af8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1680b4c3-8e69-451a-a6cd-42b11fdd9f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420b7428-5fc7-4ef5-af0d-947a90709621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754355e2-d509-46ee-83c7-f0b47c9ac7e7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15718bfe-daa8-4228-b925-79d88b6c04fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd93d5f2-ae1c-4fb4-b1b8-4f642cdf87d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab54457c-7f66-4ac0-883e-af30ca144021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c70705eb-67c3-479f-bef2-de2f41a850b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ac331a-fa92-4f8f-a02f-daf9536ff8a4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90b4da6-d45e-4843-a006-1778563c4d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e43c751-ef6f-4648-bae7-e68949ebf283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5179063c-1868-4f31-8cd5-221ae9b2879a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164c92ef-2751-4c15-85c6-95752e4ff2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8765b2-8296-4716-aaee-5957a85a7683",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab2a4c9-f1e2-4717-a6b2-9471df7f778e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232062a9-200e-4044-bc52-b52b34ebc2d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878f69aa-14af-4d83-ac69-2c2d2e16daf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aece911-f530-40c8-8087-361d889dc75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb76cbe-c7e7-4901-979d-988aba996835",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30783047-2d70-45b3-9a58-a024c34cf6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9d79e1-e69a-44e1-852e-c20b86b5bd73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3a8711-d65a-48c1-9cf0-8f68947c561b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc65cb25-08a2-433f-952c-e50eeb7d67a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a62faf4-9d41-45f7-8412-85441ca340a2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dac41f-fdaf-4603-8ed1-482b046db1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fab86f-a026-48bc-8e75-0d4417afa773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6585ef2-f582-49d2-af83-2a21f0796d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd54cc04-8d58-4a13-8a67-964f62326a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b7d705-881a-4500-8a32-5e4fde6592e7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17314c8-7cac-4f74-8c80-ab60b9e87d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562609e8-880a-4fc7-b763-fe6171e54e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d44d854-228d-4311-b238-31a9c08df812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89904ab1-884e-43cd-a1d1-bea7ced91992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be849c2e-b2a4-4596-89b6-e6b088c785a2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a09a651-c480-4972-bcfc-4b2aebbebf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355bfbfe-50d2-429e-b459-6ec76f825066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e447aee-acd9-45d3-bb96-7dea1a79a8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090043d9-ead9-47c7-8678-99984f9290d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e978925-3443-4544-8d6a-7a9f0e412c25",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b53c1e-370b-4ace-8724-7766ff096313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d644d5-476c-44ea-a1ef-68cef907aef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c195d77-be37-478e-b5ea-42e29481a549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3ec68a-4cc9-4c21-8c36-dafaf3e4fd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118809b7-4a8f-428c-8cce-751894a8a4fc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41291101-5d2b-410e-bc74-73e3adae9793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fa77438-5222-4d5b-9361-f6593bcddd74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10e0b9b-25c6-4515-ab49-71ef39a93446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e21f11-007f-4e6c-a750-b3add66f5b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74eaa39d-dedb-431f-aaa8-eef7341d57b2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de6b361-ff3a-41cc-bcce-be221fcc029d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3cf2724-251a-4c35-8b81-712546f4f7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5612e2-c04b-47d7-8368-5f1ea2a09fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b5dafa-bfe7-4540-be25-e98e9e059fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50eaf7eb-e68e-47a3-941f-7a9af2cd3a1b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f18b36-cfbe-477d-a6e3-e6d93793cbc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "799c30f1-0f0e-4ee3-9803-576bc8cb2c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ea6a23-f1d2-4668-8e3b-199721d4b2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732759ff-5f73-4182-bde5-848989713567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99814019-e055-4d81-aaf2-92ea86cc6d17",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754149cb-b6ff-4145-ab16-322d1c6fe4b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adefcbf9-df44-45a6-93d7-1d810d51e5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a2a037-3679-4e90-b7e0-78757f0008f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16814722-f277-46c0-b755-00e8af578e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3d5ce7-4a48-495e-9a84-b2b92cdc4b67",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33426cfe-e4b5-4e94-b2b2-dd2e4cfc86ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bef389c7-933c-4993-9b3f-70c663f6a5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bd8283-0599-423e-9219-3e37264eb60f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1095081-6352-4495-9f29-b9ac6beb23db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e72d949-e502-4af0-8d5a-1a18df52eb2a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13637f13-b1b1-4c85-8c99-5faafc71f21a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f8438a2-6e7d-471b-bc13-a52d5e6652e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aed4cae-4158-4fb1-b517-adad205762c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288710f0-1801-4065-a792-8faf1c0e7aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6417751-391d-49ec-b3d9-35e5ce2caab6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c447c921-6fd2-4e7c-bb69-3c741d7fd004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1131163a-e791-47b8-bcbe-9ad0a1e43654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fe743f-e1b4-432e-8984-0dcbca1bdf71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec8959d-e629-4eb7-84a3-8645a95a6d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732cace7-7fb2-4627-86bb-3c33d35f62e8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d17cbf-f3c8-488a-809d-13022078bdf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "142da6b9-7ae4-492c-b563-ea373e6e9814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70984352-30d4-40b0-ac00-885fb336fd5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072d1fd9-6791-488f-81a6-d9b215a00526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507d1bc9-b00f-403a-ab53-cf576efa5d72",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45264243-61c7-40fd-9d00-0206c3be845f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0bb69b0-ca3e-4368-8c7c-d08aa6fba998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eb4aef-65a7-40bf-a0e2-e6221ecb6361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa02921-a871-4df0-aed2-20d8b046e720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c12bed-36ff-4bdb-886e-91bc495190c7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723ab7df-f55f-496f-abb0-0fc9012cfaa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8921108c-ca7f-4f35-a627-3714cca62c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2ba754-5ebc-42da-9b7d-73b311c89fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c0bace-2a7a-478c-85e4-545a88cb19b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6b5fe2-8082-4827-880e-47dedb9ea89c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1c154c-67e7-492b-9c09-6372ffea2ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "094beeda-46be-4c0d-8b13-90c9c6760ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c716d-70d3-4363-b771-eb8d27669036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63aab425-53c1-42d3-a233-68c1d55dbe7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238d09d9-9a86-4483-9d58-77fa5709a030",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e15f86b-cd0a-4d7d-b5b8-7524ef3a1ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee56705b-1e44-4529-8607-b088c5846104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdccd90-18e6-4220-bb87-af7aa39d88e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1867db-5c01-4ee2-aa6f-1fdffcd7a109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b192d856-49c6-489c-a3e8-094485f14774",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff63788-5e5f-48f3-ae11-faf0e685e308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f88a5b8-516e-435a-8588-1aa92ff8d707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bf49c7-3870-418f-9a4d-c10e310c7e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c58b28-d138-43ad-88a9-37d52a6f0d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2bbc6c-b841-4906-a5f0-8fbd53c36efe",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c2ed59-3450-4838-a8ab-3e51eefe708f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ee7afce-42ba-42e2-b7ff-0a8d9147c73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8646bf-b191-4228-9735-d0167f2fe562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1dbcc7-9a3f-434a-a541-3ac0d141ca82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101554cd-366a-4351-836b-7d1a95d428b9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f946516-1bb3-4c06-85bd-55e49b5ccc9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dd9fe06-b06c-44c0-8d9c-5beb31076fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a56dbbf-51b3-45ec-9743-53c9349fd066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852b8406-822e-4c34-9e9c-edb245eea02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef74ad5-3cd2-4f32-9296-97ba06a93198",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01a7bfe-acc1-40c3-a543-d2dc02388ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa8730fd-90e9-4833-b85b-d0e64aec94cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1435aa4b-7b3d-44e8-a19f-5ac4f1755058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2439aa9-a5b3-42db-b718-756855c51623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f8a34d-72cd-4955-829e-9971d8a24e81",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893a1c83-aebd-4656-aa70-46c9a65af2d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ca31f1c-85a3-4b83-b7e3-eb7f1be80324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaa6861-3e6d-4e92-8e9f-c22293332931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bed25a-443f-4aaa-b8e3-b966c3986874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7105eb45-168a-47ac-a596-718e20643fbe",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f6f97f-08b2-40ed-84ca-6862ec8e6f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a32c7584-9bbb-4f9f-a7c3-ec260b8573a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542ff44b-2d81-4615-a6aa-46d09ecd99a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6fa4de-b3bb-4e1a-8032-5413d83b2ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9b1033-4bdb-4097-8974-8571b8921f2b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec21187d-43ed-435b-bab6-6d6e3232f722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40bc54c8-6122-47a9-bab7-3039178fb65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd225213-3369-4115-9ad2-f1bf08739425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2eda70-8ed3-4f9d-accd-1b239d429636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d27f140-0390-4024-b354-3c6cb024f799",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dee9fe-98d6-4436-b736-17d20e07bbda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba3cf3d3-3b55-4c2a-bd21-dd51d5e97449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33b0a18-7ed1-4341-8e17-241e05418f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19918c4c-55cd-4335-bbbe-72bfd5946162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990934c5-e84c-49f8-9d39-952fe5eec224",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf06964d-c13f-4b16-8391-ddb633e79af6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106ac6fa-605e-4927-b451-c6b2d3f91623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa3c676-8f87-4400-ad90-10457a939db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8befdd53-3dfd-4342-8a1b-850c15642842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d850ae-b249-4e17-840a-d734cacb5ca8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8a9de5-8b87-488b-a1eb-160f94bbd6cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "927f0ab2-6d7c-4f70-a5ef-a0c90705db9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c805f14-237f-4e87-95eb-484a06f20260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004acab4-420b-4f95-a926-d0560db2bde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccbd4fb-5842-4fb6-82e9-5d54e978cb39",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bc81ea-bd03-4e3d-803e-a75bd87a5f6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7ce4957-2a7d-4d5b-8e64-618248f9997d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aa836c-f092-49a3-b666-c96b1df91535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66064925-146d-49cd-b890-b101988a64bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e86c3b1-f035-4d26-b260-724e3d1d4136",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab7b900-9391-476b-99f4-aaa76346de24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6311dda-7238-4c89-9d09-dbc0498c72b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d12474-870c-4947-8ebc-a424befa3b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7860772a-407c-4558-9c12-34c85b181836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f39728-d84c-43ce-bb49-1156f5758425",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad09dd7e-1e98-49eb-aef4-03070970cf0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f41611f-4d8b-4732-8df9-54f6b43a2d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbe1e6d-4d0f-49d6-a9a2-c61456331efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301304d8-b31e-435a-8c26-b19a9339a934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be7b7ef-b211-4540-b603-424d11a35fd4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daa1a8e-df4d-4d7e-9bf3-3c4ca93d9fad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32ec45c6-9cb5-4630-9547-7534d6c5dc5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14004ff2-5d69-4317-b12c-5bbec268292b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac40a119-3252-4f35-8a3d-6ffb1f75e580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94575781-7611-4ad4-b58d-e72d2b48ff99",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ed93ce-5178-480b-8c3f-57b2ad4ace53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e93b2b4-09b3-4143-98eb-402d9d5ef65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b291f48-608e-4f46-88ad-edd6bee54db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ead95b-fb3d-47d6-8743-990d91b3e4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaba6f67-e894-48a2-819f-3b732008083f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfbab8e-1ca3-4a1a-8da2-1c88679d33b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c27a08e7-2b3e-4b11-8387-761a498978ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f80fea5-0619-470c-9d30-c4efbac3f461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341c589f-e442-40b5-a072-4bf48f1c261a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb11d184-0136-4185-813e-52a335ebce6d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e10beb-27fb-4a1b-91c1-a461cc9ff8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5415babc-3b75-4940-9419-d5303cf39fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6787b094-0472-4e6d-a12a-d70c15d03348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8490182e-e18b-4281-a3de-7b835e107575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ef001c-7b7a-48e0-9a54-eec423572965",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d2a58c-a5d1-4163-89c6-b828f181fab8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9518c3a1-14c4-4b5c-93ce-8fe13cdd8c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc5cd61-e0e3-4a03-a6d6-aa987806e81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55067794-45c0-4c2b-98e3-77cb5e5ab241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff34cf5-a2c4-418e-bf99-0d67b91e46d4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24d6de0-0e66-4b29-98bd-8e33b8e57921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "331b6c3b-5410-49ed-8aa3-cf93cba567bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645066d2-ddbb-4d91-9505-83d6c59d1261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90995b8f-ca66-4967-926e-befc2b81e41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d3cb5b-1a5f-4dc0-a2d6-51222c3f4d06",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8452e56d-610a-42ca-9dd8-0cdaf965a9d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "546822a2-81df-441f-8e39-968cf6e3b683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ef0954-8d4c-4159-9278-f8862b7e30bc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7eb99f9-e39a-4627-ac2d-ac3210af98ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a493b1-12ed-4226-9eea-7411ec71946d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2efd53-04e4-4811-b9e0-413d6e8c4d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "076379f9-8cb4-427b-9f07-4a535f6e30d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3346774d-1acb-4c37-9d3e-6ca0a2debc1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2997cc-f24c-48a1-a257-ece93b68518d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "649b654c-723e-46ba-bdd8-7172a6105f38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef47c938-9005-42c3-8d34-8fc71bfe6909"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc2917cf-d2d0-4bcc-85b5-90c63205efe5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff9560f4-d0af-40b3-8bed-543fde8a0c60"
                    }
                  }
                ]
              },
              {
                "id": "e915297d-c4d9-40c8-8772-167d8bfcfb49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3aeafe60-4656-4da4-aaf4-b7bcf9464ac2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586bd41b-c6cf-4328-b76c-b558086e675e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "331f9af5-dda6-4392-a0ed-a180e99f5863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34542e3a-9767-4d8b-bf2e-5c0f4beb11ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68ab8161-ae8e-4ef7-9e4d-3ecab83f87cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0627f4-249c-45ec-839d-49a71c82eeb8",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c663b661-eba0-4977-b72f-f04a9467809b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "93def458-999e-4b2a-a44e-4f102d5fe504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a6275b-47d4-4eb5-9118-ed224ed21808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3878a3c8-a5c1-4205-93f7-02f1070fdf2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23b249ef-01f3-42fe-afc9-507303c05e69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "077ba978-64df-4fe6-8343-a96a0c335936"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a24e329-80c8-443a-b5ac-35c351c2d13f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6331cd32-e354-4e83-9faa-8bbd4a48d6b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "42701ff2-00df-4e83-89f9-1f58604d1ade",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb95e27a-1e73-487c-b2b0-f22ff86c82d2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35a62e2e-c9c1-4738-8b83-082407f8ee67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bfb93562-7f12-43a5-9880-5c9c8b0d1ace"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c48a37b8-d71e-4f2b-8119-b6b769b539d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12eda26f-0a31-45ae-bd74-af6698b8a7e2"
                    }
                  }
                ]
              },
              {
                "id": "f06dd8be-6612-45de-b313-ec477ad5a72c",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56c41bf3-6df0-4d2b-9d1a-c0dddba0806a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5245b5d8-9d82-44a1-a9a9-38793bc56083"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "806be596-355b-4792-939a-5ac25cbc1844",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c18731a-080e-4432-bbf2-a94c6426bc57"
                    }
                  }
                ]
              },
              {
                "id": "661ac4c2-065f-46bb-8996-67548a8eda9a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8e91235-048b-4971-8a62-797f5383872a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c784cc0a-965f-4313-9d6c-f1f6046af4eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fab3f7c-730b-4fdc-83ae-2ff4eb113b00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75dfd8f0-3e59-4060-ad44-8093207d632f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0038b5c2-3381-4cce-ae59-e3cac8d306e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7de98c82-3ac0-48ac-9643-3ea7f6636908"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af5b8a0e-4050-47c8-b952-b97235803ff4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa51803d-23bd-4879-a977-ca4d399ee957"
            }
          }
        ]
      },
      {
        "id": "2586e97b-3fc4-485a-9cb3-b9694d2b0aaf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "59d02ca7-43c1-48a4-a712-d5632e1966c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b42b80bc-7ac9-4bf5-a139-bced1660e458",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db19625c-91bb-4670-9603-1c85e47a60d9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127a7667-24ed-43b5-bf3a-f883045037f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b573665-ad6a-41f0-b835-4fb811dea0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86a15eb-615b-414b-8a0e-ad4d82e35130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ab49305-1521-4e0b-8384-3f62fa9f4f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561e465a-0b07-4516-b861-ada6696cab51",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af1f067-686b-4885-81c0-680b18a7f124",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "b23a8fa6-59b5-4b37-9824-ada30aaa55bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3779209e-4119-4f5a-935a-ada2d1660693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6080d5b-db5a-4956-9e1a-2c753def309e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d6b65d0-7259-4a36-8974-fdb194b00480",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "578b9d9e-7927-4e67-8c0b-cd111f48f7fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83af024e-a500-41e4-a5ae-2af63f12c786",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ea10d29-f8d1-475b-88b3-ce5637b87de4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9dc4a5f-3e36-4913-8929-68aad83908e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "a95d34d1-54b1-4e1d-9cc7-2ee8369b4c65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1db54ff5-7e47-4f73-b2ec-50563f497cc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "178c775d-bbd9-435c-a28d-d0d290d251c4"
            }
          }
        ]
      },
      {
        "id": "4419fb3a-c21c-4150-93af-357506e7180d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "65cbbef1-b40a-4319-a541-43d6f26f5d5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edc6b10f-f662-4a25-aa6d-86f45d4b8222",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c68de86-1bd6-4500-8bf2-f2b2a2e704b9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35465e3a-ea02-4191-92cf-2d44c7ad3a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31425f7c-bf4f-40a7-9051-c45e9e32f29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22295c94-83ef-4de2-ba81-917e80c595c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88e09c46-dc74-4d1a-a388-1d123d51f3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7506a83-449f-4917-a700-0c654564a252",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ec0f99-4d54-452a-8167-10a1e6f52388",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "66db5c31-ed6a-4f39-9e5f-7120780e68cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb70a1b-38f3-4937-a888-39c2fe411802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dc6001f-baa3-4fa2-9765-224a976167ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "296cf8f0-49fb-4e9a-9bca-ed0770d21292",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c973f0a6-a3c2-4f3e-8ff3-45ae005d1065"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad19fb26-bb1a-4f56-98fe-2237261fb2d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55b2590b-e0a1-4c63-81d1-01bb65d74121"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be54df00-9f76-4214-b0a9-3bdbfb8add1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "aba28a20-8db8-4870-8508-6767e13dd96e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11ac00f2-9038-40ef-a481-5fe94b2b96e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64d21959-f596-432a-b7fc-d2095f3a6c94"
            }
          }
        ]
      },
      {
        "id": "5665b3f2-2836-4a84-920c-3ff14e93a0cf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "654f5bb5-daeb-4724-b3ef-392332f89889",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b2ead8a-a5ab-4d29-a3f2-091ab01fbf03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34d5a8b0-6356-4873-9daf-f9712353d51d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a5b84e-61e2-4001-971e-3cbf57657062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4eab37-fd37-498d-92e5-4aa56d230d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5dff68-744b-4c50-b418-c302a4276e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be31cc36-e872-4f66-85f9-8fe8bde3ae74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe947af-ed49-475a-9361-8ac14ab1ff52",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136a8180-d413-4200-9ad8-ab38e3d6e463",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "8ff00a3e-05dc-4cfe-98a5-97e34ce5e83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7591e8e-fc38-4636-b56a-b2844e47f589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12a537dc-19f2-415f-a118-69bacfe8b1c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "878261c8-6f42-48f0-9de4-ffddadca30e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "306ed00a-ddc9-434e-8b2e-c3291e3aa45a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01df7b62-2f78-413f-b2aa-2f3ca89f3e44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d729e9b9-f458-4123-b17d-d34ba9ec6beb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9eaf70ee-c243-4ed2-86d0-c4e31774f166",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "05fe895d-af63-4d67-9420-46fd701082e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a22ee8b7-6c44-4290-b1ec-af1c5a5d7f3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cda696b7-53c9-4253-a881-2a930eddb096"
            }
          }
        ]
      },
      {
        "id": "3a575469-d2ea-426c-9806-235101f9a5c4",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "c52d1e48-7f8e-48d4-ad57-4a857e2f4c1d",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1211,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 203,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 315,
        "pending": 0,
        "failed": 8
      },
      "testScripts": {
        "total": 611,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 600,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 223.02955665024635,
      "responseMin": 44,
      "responseMax": 2907,
      "responseSd": 355.24063739450435,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664672480524,
      "completed": 1664672533030
    },
    "executions": [
      {
        "id": "15545bda-6c45-46ef-9fa3-e0e052084250",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 155,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ae2b3459-97e4-4a27-ba80-1d3caf04d527",
          "httpRequestId": "ff10ce66-014b-4fc3-984a-edce4576141c"
        },
        "item": {
          "id": "15545bda-6c45-46ef-9fa3-e0e052084250",
          "name": "did_json"
        },
        "response": {
          "id": "31428016-8e1c-4b47-ae28-a742fe724795",
          "status": "OK",
          "code": 200,
          "responseTime": 2907,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fa4cca-c281-4229-9bf9-97074a35393f",
        "cursor": {
          "ref": "f7d75735-a6f9-4192-9d98-d91a459421d2",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "87de9f52-ce1f-4742-9305-b4eb2860faa6"
        },
        "item": {
          "id": "39fa4cca-c281-4229-9bf9-97074a35393f",
          "name": "did:invalid"
        },
        "response": {
          "id": "102f72b2-2ddc-461f-a7c7-6a62a341bed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fa4cca-c281-4229-9bf9-97074a35393f",
        "cursor": {
          "ref": "f7d75735-a6f9-4192-9d98-d91a459421d2",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "87de9f52-ce1f-4742-9305-b4eb2860faa6"
        },
        "item": {
          "id": "39fa4cca-c281-4229-9bf9-97074a35393f",
          "name": "did:invalid"
        },
        "response": {
          "id": "102f72b2-2ddc-461f-a7c7-6a62a341bed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a079639-26c3-4e48-bed7-10109d94eaa2",
        "cursor": {
          "ref": "c20199d8-ef90-4893-9fa2-ed478b866711",
          "length": 155,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c7d9279c-02c5-4ff6-9949-ecaa4161a400"
        },
        "item": {
          "id": "9a079639-26c3-4e48-bed7-10109d94eaa2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "88d308ac-3760-46e7-a582-9476ebae9005",
          "status": "Not Found",
          "code": 404,
          "responseTime": 448,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db7b989-9d58-4db1-bf37-1b3320767957",
        "cursor": {
          "ref": "5208df8c-d89d-4ef8-bd5f-84cfdf0195cd",
          "length": 155,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "49549c25-8071-4b68-9a39-be10852b8d51"
        },
        "item": {
          "id": "1db7b989-9d58-4db1-bf37-1b3320767957",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a472e80f-c52e-43ce-a635-5c69d1f0034c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 106,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b025b9a-6079-4afb-84a7-aacd54cb47a0",
        "cursor": {
          "ref": "42504f79-a909-488f-b23f-8011358da8d6",
          "length": 155,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "de375e2e-9a4b-450e-83ef-e973516a7455"
        },
        "item": {
          "id": "7b025b9a-6079-4afb-84a7-aacd54cb47a0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ad291fa0-3ac3-40b0-a4c4-a31cd4205995",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54d5807-db7b-49be-8fe9-739ed43686ef",
        "cursor": {
          "ref": "be045aef-3284-4d43-812a-ff5656372287",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8ce81484-fea3-483d-901a-ddebbe980886"
        },
        "item": {
          "id": "c54d5807-db7b-49be-8fe9-739ed43686ef",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "898dfd3f-1194-4e64-a8a4-9c153c824a38",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 134,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54d5807-db7b-49be-8fe9-739ed43686ef",
        "cursor": {
          "ref": "be045aef-3284-4d43-812a-ff5656372287",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8ce81484-fea3-483d-901a-ddebbe980886"
        },
        "item": {
          "id": "c54d5807-db7b-49be-8fe9-739ed43686ef",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "898dfd3f-1194-4e64-a8a4-9c153c824a38",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 134,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc50064-8c69-481e-b79f-eb7c22c78ee8",
        "cursor": {
          "ref": "58cea68b-ba73-40a4-a7ff-90dbdb4dca5c",
          "length": 155,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5f7d4f1c-5673-4d89-8d88-060902a0984b"
        },
        "item": {
          "id": "fcc50064-8c69-481e-b79f-eb7c22c78ee8",
          "name": "identifiers"
        },
        "response": {
          "id": "e584c84b-bba3-4a93-8fdb-f53ca4947855",
          "status": "OK",
          "code": 200,
          "responseTime": 343,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd580db4-90fa-4d83-854c-6603d1cbd667",
        "cursor": {
          "ref": "b14e1e00-ce23-4008-83eb-6925424e5591",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9ac5d472-4120-4c75-8984-2ac6b3963892"
        },
        "item": {
          "id": "dd580db4-90fa-4d83-854c-6603d1cbd667",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "28acc4d0-1db9-4e06-a8ec-f2c728b94b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd580db4-90fa-4d83-854c-6603d1cbd667",
        "cursor": {
          "ref": "b14e1e00-ce23-4008-83eb-6925424e5591",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9ac5d472-4120-4c75-8984-2ac6b3963892"
        },
        "item": {
          "id": "dd580db4-90fa-4d83-854c-6603d1cbd667",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "28acc4d0-1db9-4e06-a8ec-f2c728b94b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd580db4-90fa-4d83-854c-6603d1cbd667",
        "cursor": {
          "ref": "b14e1e00-ce23-4008-83eb-6925424e5591",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9ac5d472-4120-4c75-8984-2ac6b3963892"
        },
        "item": {
          "id": "dd580db4-90fa-4d83-854c-6603d1cbd667",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "28acc4d0-1db9-4e06-a8ec-f2c728b94b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30146b3f-486c-4493-9417-4d963adbe4fb",
        "cursor": {
          "ref": "5da2e225-06b7-4b78-b80b-b48ebf673c4f",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "143cd4f8-1c77-4fe0-8d4c-673d45bb782b"
        },
        "item": {
          "id": "30146b3f-486c-4493-9417-4d963adbe4fb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "93b0270b-3023-4628-96bc-3f7adc8341d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30146b3f-486c-4493-9417-4d963adbe4fb",
        "cursor": {
          "ref": "5da2e225-06b7-4b78-b80b-b48ebf673c4f",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "143cd4f8-1c77-4fe0-8d4c-673d45bb782b"
        },
        "item": {
          "id": "30146b3f-486c-4493-9417-4d963adbe4fb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "93b0270b-3023-4628-96bc-3f7adc8341d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796c83d3-d9be-48ff-8c21-8c1ff6622a2d",
        "cursor": {
          "ref": "dc0c6a8e-7461-4a37-97ed-cdd67cb39470",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "54bdc529-6e0d-470c-8d00-0745166be1ac"
        },
        "item": {
          "id": "796c83d3-d9be-48ff-8c21-8c1ff6622a2d",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "b5206deb-4334-42df-97c8-db1cb8b9c8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796c83d3-d9be-48ff-8c21-8c1ff6622a2d",
        "cursor": {
          "ref": "dc0c6a8e-7461-4a37-97ed-cdd67cb39470",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "54bdc529-6e0d-470c-8d00-0745166be1ac"
        },
        "item": {
          "id": "796c83d3-d9be-48ff-8c21-8c1ff6622a2d",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "b5206deb-4334-42df-97c8-db1cb8b9c8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfee72b8-8718-4436-9d26-0bc109a62c6f",
        "cursor": {
          "ref": "b181f17d-7cb6-4d2e-9999-144a44b0dcc0",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e3c7205d-2130-4f33-98b6-d6399d2cd837"
        },
        "item": {
          "id": "dfee72b8-8718-4436-9d26-0bc109a62c6f",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "51bf4a49-3c90-4ffe-91b9-59328f0f9ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfee72b8-8718-4436-9d26-0bc109a62c6f",
        "cursor": {
          "ref": "b181f17d-7cb6-4d2e-9999-144a44b0dcc0",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e3c7205d-2130-4f33-98b6-d6399d2cd837"
        },
        "item": {
          "id": "dfee72b8-8718-4436-9d26-0bc109a62c6f",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "51bf4a49-3c90-4ffe-91b9-59328f0f9ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f07c7d-6d16-43cf-a151-abaa51913a2f",
        "cursor": {
          "ref": "2d141a09-b3dc-46ac-bc7b-e4641217933f",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "601a9b74-b053-4dc5-865f-79fab9fd9469"
        },
        "item": {
          "id": "80f07c7d-6d16-43cf-a151-abaa51913a2f",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "75c0032c-0658-4fe6-965e-fc166f32e4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f07c7d-6d16-43cf-a151-abaa51913a2f",
        "cursor": {
          "ref": "2d141a09-b3dc-46ac-bc7b-e4641217933f",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "601a9b74-b053-4dc5-865f-79fab9fd9469"
        },
        "item": {
          "id": "80f07c7d-6d16-43cf-a151-abaa51913a2f",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "75c0032c-0658-4fe6-965e-fc166f32e4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7735a99d-2219-4b54-bbe8-01dff3c2ba19",
        "cursor": {
          "ref": "f8808754-c552-4c86-8617-596b64290502",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a31cbced-4150-4f9d-afed-57b48f8a4854"
        },
        "item": {
          "id": "7735a99d-2219-4b54-bbe8-01dff3c2ba19",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ca826014-1a9c-4ee4-88b7-97a1027b2dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7735a99d-2219-4b54-bbe8-01dff3c2ba19",
        "cursor": {
          "ref": "f8808754-c552-4c86-8617-596b64290502",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a31cbced-4150-4f9d-afed-57b48f8a4854"
        },
        "item": {
          "id": "7735a99d-2219-4b54-bbe8-01dff3c2ba19",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ca826014-1a9c-4ee4-88b7-97a1027b2dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f6c48a-a7a5-4595-8c22-fd422e34d58a",
        "cursor": {
          "ref": "fa9c3eb1-0d15-4b6e-9ceb-e612420bfdf5",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6b559ec5-61ad-4e3a-aa7e-2857292a0302"
        },
        "item": {
          "id": "73f6c48a-a7a5-4595-8c22-fd422e34d58a",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "dd1b38fd-829e-47cd-8977-b677e0e6931e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f6c48a-a7a5-4595-8c22-fd422e34d58a",
        "cursor": {
          "ref": "fa9c3eb1-0d15-4b6e-9ceb-e612420bfdf5",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6b559ec5-61ad-4e3a-aa7e-2857292a0302"
        },
        "item": {
          "id": "73f6c48a-a7a5-4595-8c22-fd422e34d58a",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "dd1b38fd-829e-47cd-8977-b677e0e6931e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e12509e-3539-4d0b-8d4d-ed37bd9fa802",
        "cursor": {
          "ref": "74965d96-431d-4d5b-88e0-896d06236c26",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "83919059-c7a9-431e-a381-54b3a69b974e"
        },
        "item": {
          "id": "4e12509e-3539-4d0b-8d4d-ed37bd9fa802",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "253414c4-e8b5-40fb-9e72-acf493cdf358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e12509e-3539-4d0b-8d4d-ed37bd9fa802",
        "cursor": {
          "ref": "74965d96-431d-4d5b-88e0-896d06236c26",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "83919059-c7a9-431e-a381-54b3a69b974e"
        },
        "item": {
          "id": "4e12509e-3539-4d0b-8d4d-ed37bd9fa802",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "253414c4-e8b5-40fb-9e72-acf493cdf358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81667d6c-6077-46c6-bb8a-b633b98213e6",
        "cursor": {
          "ref": "71c07b58-7869-4af1-affd-03f9b5bdb822",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2eb9d503-7a75-4d88-b6d0-538971da5c61"
        },
        "item": {
          "id": "81667d6c-6077-46c6-bb8a-b633b98213e6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1afe925d-1b21-4682-9b31-b3732c6bf540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81667d6c-6077-46c6-bb8a-b633b98213e6",
        "cursor": {
          "ref": "71c07b58-7869-4af1-affd-03f9b5bdb822",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2eb9d503-7a75-4d88-b6d0-538971da5c61"
        },
        "item": {
          "id": "81667d6c-6077-46c6-bb8a-b633b98213e6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1afe925d-1b21-4682-9b31-b3732c6bf540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684ce4dd-c8b2-4aef-9ab5-9c677b7e9839",
        "cursor": {
          "ref": "82732411-0af6-414e-a831-ff55480df56b",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c6358ae5-cd97-44a5-bbdb-b5527d35641e"
        },
        "item": {
          "id": "684ce4dd-c8b2-4aef-9ab5-9c677b7e9839",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "759ee5cb-3a8a-4336-b228-101ff62d0321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684ce4dd-c8b2-4aef-9ab5-9c677b7e9839",
        "cursor": {
          "ref": "82732411-0af6-414e-a831-ff55480df56b",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c6358ae5-cd97-44a5-bbdb-b5527d35641e"
        },
        "item": {
          "id": "684ce4dd-c8b2-4aef-9ab5-9c677b7e9839",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "759ee5cb-3a8a-4336-b228-101ff62d0321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068ee382-08fd-4d1f-8462-16d9f4b2c449",
        "cursor": {
          "ref": "52ed47fa-a7ac-4c81-b9d0-d2bd522aeb06",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d80a72c6-8dc9-404d-8f09-68d7a5a46e8e"
        },
        "item": {
          "id": "068ee382-08fd-4d1f-8462-16d9f4b2c449",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "8f7aeb83-1711-410a-8402-ba736475fac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068ee382-08fd-4d1f-8462-16d9f4b2c449",
        "cursor": {
          "ref": "52ed47fa-a7ac-4c81-b9d0-d2bd522aeb06",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d80a72c6-8dc9-404d-8f09-68d7a5a46e8e"
        },
        "item": {
          "id": "068ee382-08fd-4d1f-8462-16d9f4b2c449",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "8f7aeb83-1711-410a-8402-ba736475fac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ec9ec5-fb14-44f6-a815-519664b6f908",
        "cursor": {
          "ref": "0af11832-78b7-486e-8a54-f201288d8a49",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "47ba01be-6bec-4d23-91ea-921e81cc3d54"
        },
        "item": {
          "id": "04ec9ec5-fb14-44f6-a815-519664b6f908",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9ebc8b31-dca1-4e41-b97a-90950a5ada5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ec9ec5-fb14-44f6-a815-519664b6f908",
        "cursor": {
          "ref": "0af11832-78b7-486e-8a54-f201288d8a49",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "47ba01be-6bec-4d23-91ea-921e81cc3d54"
        },
        "item": {
          "id": "04ec9ec5-fb14-44f6-a815-519664b6f908",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9ebc8b31-dca1-4e41-b97a-90950a5ada5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7606ae-d8d6-48e8-b280-e3e7806d1fd9",
        "cursor": {
          "ref": "09447bb7-9ad5-4931-ad4c-f5700f9a1ec0",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1e411022-1a51-435f-b4e3-318e5ef38159"
        },
        "item": {
          "id": "7f7606ae-d8d6-48e8-b280-e3e7806d1fd9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "18010fed-3326-40d6-9db3-f0c951039529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7606ae-d8d6-48e8-b280-e3e7806d1fd9",
        "cursor": {
          "ref": "09447bb7-9ad5-4931-ad4c-f5700f9a1ec0",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1e411022-1a51-435f-b4e3-318e5ef38159"
        },
        "item": {
          "id": "7f7606ae-d8d6-48e8-b280-e3e7806d1fd9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "18010fed-3326-40d6-9db3-f0c951039529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3139d404-d8f2-4d2f-acb3-379f233f5a22",
        "cursor": {
          "ref": "7a2342d8-3fe1-4ca9-abbd-c949331d81c7",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "be03e025-5f5a-4c54-8fe8-372e15a63f87"
        },
        "item": {
          "id": "3139d404-d8f2-4d2f-acb3-379f233f5a22",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "7daf2280-8a31-4185-9624-5ac2b1306d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3139d404-d8f2-4d2f-acb3-379f233f5a22",
        "cursor": {
          "ref": "7a2342d8-3fe1-4ca9-abbd-c949331d81c7",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "be03e025-5f5a-4c54-8fe8-372e15a63f87"
        },
        "item": {
          "id": "3139d404-d8f2-4d2f-acb3-379f233f5a22",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "7daf2280-8a31-4185-9624-5ac2b1306d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f8b2ca-b76b-4579-8815-f753bd82c3da",
        "cursor": {
          "ref": "f2feeeb9-cd2d-4c5a-9753-8c4a111c9896",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ea3da1b9-8c44-4a0e-9d6f-62c36914e79d"
        },
        "item": {
          "id": "14f8b2ca-b76b-4579-8815-f753bd82c3da",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "848be0b7-7193-4702-bcec-d5953820fd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f8b2ca-b76b-4579-8815-f753bd82c3da",
        "cursor": {
          "ref": "f2feeeb9-cd2d-4c5a-9753-8c4a111c9896",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ea3da1b9-8c44-4a0e-9d6f-62c36914e79d"
        },
        "item": {
          "id": "14f8b2ca-b76b-4579-8815-f753bd82c3da",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "848be0b7-7193-4702-bcec-d5953820fd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d59b9ba-c98e-46fa-af52-09b9e05cc72f",
        "cursor": {
          "ref": "fac3f5ff-96fa-4fc2-adef-7fea1d0dcfdb",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7e45a05a-c4b5-4ee2-9b89-67b158a2bff0"
        },
        "item": {
          "id": "4d59b9ba-c98e-46fa-af52-09b9e05cc72f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "37a00f39-e748-4690-bf9e-f0d46de0d12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d59b9ba-c98e-46fa-af52-09b9e05cc72f",
        "cursor": {
          "ref": "fac3f5ff-96fa-4fc2-adef-7fea1d0dcfdb",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7e45a05a-c4b5-4ee2-9b89-67b158a2bff0"
        },
        "item": {
          "id": "4d59b9ba-c98e-46fa-af52-09b9e05cc72f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "37a00f39-e748-4690-bf9e-f0d46de0d12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a99377-0f18-4751-ac8a-a78210c6d9bb",
        "cursor": {
          "ref": "3f0c9443-3436-4097-8902-9bd67a20de07",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d2bef96b-ecf7-4cfa-b57f-29cd0c84b18a"
        },
        "item": {
          "id": "a3a99377-0f18-4751-ac8a-a78210c6d9bb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8ef3658b-0737-4643-9118-78d5bd43ff99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a99377-0f18-4751-ac8a-a78210c6d9bb",
        "cursor": {
          "ref": "3f0c9443-3436-4097-8902-9bd67a20de07",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d2bef96b-ecf7-4cfa-b57f-29cd0c84b18a"
        },
        "item": {
          "id": "a3a99377-0f18-4751-ac8a-a78210c6d9bb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8ef3658b-0737-4643-9118-78d5bd43ff99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc457d7-6d1b-4e86-860b-33e750790c7d",
        "cursor": {
          "ref": "fbb4a8e1-1d5a-484a-8110-03e7c697a022",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9bf6190f-8b44-43da-b756-bfd7f98bf400"
        },
        "item": {
          "id": "5bc457d7-6d1b-4e86-860b-33e750790c7d",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "590e2d54-247b-4243-a32e-0eb7406a74a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc457d7-6d1b-4e86-860b-33e750790c7d",
        "cursor": {
          "ref": "fbb4a8e1-1d5a-484a-8110-03e7c697a022",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9bf6190f-8b44-43da-b756-bfd7f98bf400"
        },
        "item": {
          "id": "5bc457d7-6d1b-4e86-860b-33e750790c7d",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "590e2d54-247b-4243-a32e-0eb7406a74a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b07efb3-e2e7-4724-aa75-9356eebc92ac",
        "cursor": {
          "ref": "e5460efa-2a38-48e8-8249-dbb48364f867",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "847e7ca8-d45e-4b9b-ba5b-bdb2574abcd8"
        },
        "item": {
          "id": "7b07efb3-e2e7-4724-aa75-9356eebc92ac",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ca2f69eb-971a-46a2-899a-f81066c03747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b07efb3-e2e7-4724-aa75-9356eebc92ac",
        "cursor": {
          "ref": "e5460efa-2a38-48e8-8249-dbb48364f867",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "847e7ca8-d45e-4b9b-ba5b-bdb2574abcd8"
        },
        "item": {
          "id": "7b07efb3-e2e7-4724-aa75-9356eebc92ac",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ca2f69eb-971a-46a2-899a-f81066c03747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e9b143-7e16-4dbc-ba2c-af3fa797378c",
        "cursor": {
          "ref": "bae4f46e-bd85-42be-b7a0-3cc3a2475676",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cec5e879-2db3-423e-824a-b2e526486ded"
        },
        "item": {
          "id": "23e9b143-7e16-4dbc-ba2c-af3fa797378c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9c750ab3-6e68-4db5-9b03-4f0dd1193481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e9b143-7e16-4dbc-ba2c-af3fa797378c",
        "cursor": {
          "ref": "bae4f46e-bd85-42be-b7a0-3cc3a2475676",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cec5e879-2db3-423e-824a-b2e526486ded"
        },
        "item": {
          "id": "23e9b143-7e16-4dbc-ba2c-af3fa797378c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9c750ab3-6e68-4db5-9b03-4f0dd1193481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cb7314-ce31-4383-8ed3-8fb71d2caff7",
        "cursor": {
          "ref": "4391798a-d892-46a1-8a22-b2732b0e934f",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "59bb0e1a-5a8e-4144-87bf-b4775125299f"
        },
        "item": {
          "id": "10cb7314-ce31-4383-8ed3-8fb71d2caff7",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "d27b673b-5cff-4e8d-b38e-0bfd886a8383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cb7314-ce31-4383-8ed3-8fb71d2caff7",
        "cursor": {
          "ref": "4391798a-d892-46a1-8a22-b2732b0e934f",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "59bb0e1a-5a8e-4144-87bf-b4775125299f"
        },
        "item": {
          "id": "10cb7314-ce31-4383-8ed3-8fb71d2caff7",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "d27b673b-5cff-4e8d-b38e-0bfd886a8383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271cf152-6e0d-4a35-8829-2f95b2ec6041",
        "cursor": {
          "ref": "81b9b6af-0480-4026-a265-dd0f8a3480ed",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9332ad12-cfb0-4135-8ebd-c01399cddb68"
        },
        "item": {
          "id": "271cf152-6e0d-4a35-8829-2f95b2ec6041",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "a5cb0301-8c51-46f4-89f2-a15eea33911f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271cf152-6e0d-4a35-8829-2f95b2ec6041",
        "cursor": {
          "ref": "81b9b6af-0480-4026-a265-dd0f8a3480ed",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9332ad12-cfb0-4135-8ebd-c01399cddb68"
        },
        "item": {
          "id": "271cf152-6e0d-4a35-8829-2f95b2ec6041",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "a5cb0301-8c51-46f4-89f2-a15eea33911f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a6210a-ea12-4ddb-8f37-8464270d0269",
        "cursor": {
          "ref": "82570dc8-0042-4cc6-891f-fddada20b824",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dec27d29-810b-4c86-ae35-071107c5285f"
        },
        "item": {
          "id": "b9a6210a-ea12-4ddb-8f37-8464270d0269",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2bd35283-66a5-4eab-84af-474f928b8698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a6210a-ea12-4ddb-8f37-8464270d0269",
        "cursor": {
          "ref": "82570dc8-0042-4cc6-891f-fddada20b824",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dec27d29-810b-4c86-ae35-071107c5285f"
        },
        "item": {
          "id": "b9a6210a-ea12-4ddb-8f37-8464270d0269",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2bd35283-66a5-4eab-84af-474f928b8698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ada84d-c03e-43ac-afd2-033cb16b4e34",
        "cursor": {
          "ref": "adc764a4-76ed-43f9-8c1a-46970aac79d5",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a0628673-2e74-4f4c-88c5-9064820b05fd"
        },
        "item": {
          "id": "76ada84d-c03e-43ac-afd2-033cb16b4e34",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "4b72c761-3786-489c-b766-9492503931ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ada84d-c03e-43ac-afd2-033cb16b4e34",
        "cursor": {
          "ref": "adc764a4-76ed-43f9-8c1a-46970aac79d5",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a0628673-2e74-4f4c-88c5-9064820b05fd"
        },
        "item": {
          "id": "76ada84d-c03e-43ac-afd2-033cb16b4e34",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "4b72c761-3786-489c-b766-9492503931ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5313c792-de70-4533-99c2-3170e12dfafe",
        "cursor": {
          "ref": "9dc5f7a6-b7d0-445c-b18d-b187a718cff4",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bbe2c16d-c77e-4c47-b0d5-5146277701df"
        },
        "item": {
          "id": "5313c792-de70-4533-99c2-3170e12dfafe",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3610dd32-ec3d-4af4-8e7e-97293802fac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5313c792-de70-4533-99c2-3170e12dfafe",
        "cursor": {
          "ref": "9dc5f7a6-b7d0-445c-b18d-b187a718cff4",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bbe2c16d-c77e-4c47-b0d5-5146277701df"
        },
        "item": {
          "id": "5313c792-de70-4533-99c2-3170e12dfafe",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3610dd32-ec3d-4af4-8e7e-97293802fac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c078e94-479d-4708-8023-6f4a4b493c53",
        "cursor": {
          "ref": "2b47e3f7-3aeb-42dc-b3b7-0d28a8f556c2",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "887b5e7d-6d6b-496d-87ef-e21a5e894c9f"
        },
        "item": {
          "id": "7c078e94-479d-4708-8023-6f4a4b493c53",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "14415c2a-2cd1-46c2-8364-fa3dc4b5ad21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c078e94-479d-4708-8023-6f4a4b493c53",
        "cursor": {
          "ref": "2b47e3f7-3aeb-42dc-b3b7-0d28a8f556c2",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "887b5e7d-6d6b-496d-87ef-e21a5e894c9f"
        },
        "item": {
          "id": "7c078e94-479d-4708-8023-6f4a4b493c53",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "14415c2a-2cd1-46c2-8364-fa3dc4b5ad21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf74f5d0-cc9c-41f7-8467-6202935ef5b6",
        "cursor": {
          "ref": "96b79f5b-78e8-4ee4-a85d-c03bdaa1141d",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a7b9a63b-2f6b-432c-81b3-895633260683"
        },
        "item": {
          "id": "bf74f5d0-cc9c-41f7-8467-6202935ef5b6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e47664c1-c27d-4719-9f08-ac34fe0b300d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf74f5d0-cc9c-41f7-8467-6202935ef5b6",
        "cursor": {
          "ref": "96b79f5b-78e8-4ee4-a85d-c03bdaa1141d",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a7b9a63b-2f6b-432c-81b3-895633260683"
        },
        "item": {
          "id": "bf74f5d0-cc9c-41f7-8467-6202935ef5b6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e47664c1-c27d-4719-9f08-ac34fe0b300d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028aecf5-e7c8-4cbf-b3b3-9a81fdb946d6",
        "cursor": {
          "ref": "43ae1719-e734-4d60-8581-d2ecbf71be0b",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "db1f7b70-5109-48a7-a407-6e4308b059e6"
        },
        "item": {
          "id": "028aecf5-e7c8-4cbf-b3b3-9a81fdb946d6",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "ee6c45f2-601c-4ef9-ad6d-2a31966c4eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028aecf5-e7c8-4cbf-b3b3-9a81fdb946d6",
        "cursor": {
          "ref": "43ae1719-e734-4d60-8581-d2ecbf71be0b",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "db1f7b70-5109-48a7-a407-6e4308b059e6"
        },
        "item": {
          "id": "028aecf5-e7c8-4cbf-b3b3-9a81fdb946d6",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "ee6c45f2-601c-4ef9-ad6d-2a31966c4eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c35cfa3-581d-49a6-a154-00b065720ad1",
        "cursor": {
          "ref": "c85ab417-af05-4882-b1cd-176e76e15444",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9e2f7986-0f09-4f36-9555-773193811563"
        },
        "item": {
          "id": "5c35cfa3-581d-49a6-a154-00b065720ad1",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "634663b8-ea6d-4abd-a59a-a29ec27f3da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c35cfa3-581d-49a6-a154-00b065720ad1",
        "cursor": {
          "ref": "c85ab417-af05-4882-b1cd-176e76e15444",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9e2f7986-0f09-4f36-9555-773193811563"
        },
        "item": {
          "id": "5c35cfa3-581d-49a6-a154-00b065720ad1",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "634663b8-ea6d-4abd-a59a-a29ec27f3da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0f71b0-4684-46bc-a8d4-64f924247797",
        "cursor": {
          "ref": "5471c1fe-e812-4ade-842c-278c42a6ab53",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "992d5d2c-8955-43e0-9bb4-fedfee44e048"
        },
        "item": {
          "id": "9c0f71b0-4684-46bc-a8d4-64f924247797",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "ee485a02-391f-4253-b87c-b381bf217139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0f71b0-4684-46bc-a8d4-64f924247797",
        "cursor": {
          "ref": "5471c1fe-e812-4ade-842c-278c42a6ab53",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "992d5d2c-8955-43e0-9bb4-fedfee44e048"
        },
        "item": {
          "id": "9c0f71b0-4684-46bc-a8d4-64f924247797",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "ee485a02-391f-4253-b87c-b381bf217139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a697ed3f-f29e-455b-995c-17496fe7913f",
        "cursor": {
          "ref": "9c7a51b4-4b9c-4e1a-b9b0-e332d85cf623",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6a802b2b-392a-4664-a2e1-a05cb58a9f2d"
        },
        "item": {
          "id": "a697ed3f-f29e-455b-995c-17496fe7913f",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "3c022883-4c4f-44a3-8561-a3b3650021d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a697ed3f-f29e-455b-995c-17496fe7913f",
        "cursor": {
          "ref": "9c7a51b4-4b9c-4e1a-b9b0-e332d85cf623",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6a802b2b-392a-4664-a2e1-a05cb58a9f2d"
        },
        "item": {
          "id": "a697ed3f-f29e-455b-995c-17496fe7913f",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "3c022883-4c4f-44a3-8561-a3b3650021d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6863de6c-1da3-4ff3-83eb-25dadfe9f3cf",
        "cursor": {
          "ref": "6655ee49-db04-4200-b83f-d7466a9a575d",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ddb0e0e9-8851-404e-8833-1e94585a1f98"
        },
        "item": {
          "id": "6863de6c-1da3-4ff3-83eb-25dadfe9f3cf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2cb92293-4733-45ce-9c61-4cf3e1320ef1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 113,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6863de6c-1da3-4ff3-83eb-25dadfe9f3cf",
        "cursor": {
          "ref": "6655ee49-db04-4200-b83f-d7466a9a575d",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ddb0e0e9-8851-404e-8833-1e94585a1f98"
        },
        "item": {
          "id": "6863de6c-1da3-4ff3-83eb-25dadfe9f3cf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2cb92293-4733-45ce-9c61-4cf3e1320ef1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 113,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d001167-6a53-4969-8538-9b950758aed6",
        "cursor": {
          "ref": "a96d16cd-482a-4cda-8e1b-fe09d613cac5",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "42d46613-ca53-4ac2-9f81-15290b6fd61c"
        },
        "item": {
          "id": "7d001167-6a53-4969-8538-9b950758aed6",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "57a0ddc1-59eb-4b16-8a46-d7c5efb90df6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 121,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d001167-6a53-4969-8538-9b950758aed6",
        "cursor": {
          "ref": "a96d16cd-482a-4cda-8e1b-fe09d613cac5",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "42d46613-ca53-4ac2-9f81-15290b6fd61c"
        },
        "item": {
          "id": "7d001167-6a53-4969-8538-9b950758aed6",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "57a0ddc1-59eb-4b16-8a46-d7c5efb90df6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 121,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa477fc1-a99c-47b0-878e-c11231591491",
        "cursor": {
          "ref": "d0ec64db-28e9-48c7-b807-60703eaf215b",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f325c75b-b35b-44ee-93fa-44a07d5f55be"
        },
        "item": {
          "id": "aa477fc1-a99c-47b0-878e-c11231591491",
          "name": "credentials_issue"
        },
        "response": {
          "id": "df50c580-09f3-4c77-b4a2-a5896bcd8d7d",
          "status": "Created",
          "code": 201,
          "responseTime": 1209,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa477fc1-a99c-47b0-878e-c11231591491",
        "cursor": {
          "ref": "d0ec64db-28e9-48c7-b807-60703eaf215b",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f325c75b-b35b-44ee-93fa-44a07d5f55be"
        },
        "item": {
          "id": "aa477fc1-a99c-47b0-878e-c11231591491",
          "name": "credentials_issue"
        },
        "response": {
          "id": "df50c580-09f3-4c77-b4a2-a5896bcd8d7d",
          "status": "Created",
          "code": 201,
          "responseTime": 1209,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "8930c380-9a49-4e17-a965-611baa1b6123",
        "cursor": {
          "ref": "44270dc3-1456-4079-9bd0-97a4dde8b464",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "70269d3b-5c97-4405-a1a9-cf0d8162675f"
        },
        "item": {
          "id": "8930c380-9a49-4e17-a965-611baa1b6123",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "2f37fbb0-cefe-42b2-84bd-ddfefedfe01f",
          "status": "Created",
          "code": 201,
          "responseTime": 622,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8930c380-9a49-4e17-a965-611baa1b6123",
        "cursor": {
          "ref": "44270dc3-1456-4079-9bd0-97a4dde8b464",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "70269d3b-5c97-4405-a1a9-cf0d8162675f"
        },
        "item": {
          "id": "8930c380-9a49-4e17-a965-611baa1b6123",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "2f37fbb0-cefe-42b2-84bd-ddfefedfe01f",
          "status": "Created",
          "code": 201,
          "responseTime": 622,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1278e4bd-3217-4c69-83ab-3521e7ffac8c",
        "cursor": {
          "ref": "c2879cd6-9c15-41d3-a954-2073836aeec1",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "55926c2c-606d-4511-95f1-dc160da8eab8"
        },
        "item": {
          "id": "1278e4bd-3217-4c69-83ab-3521e7ffac8c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1826a800-0e21-41a7-b6c9-e37b0523e8b6",
          "status": "Created",
          "code": 201,
          "responseTime": 428,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1278e4bd-3217-4c69-83ab-3521e7ffac8c",
        "cursor": {
          "ref": "c2879cd6-9c15-41d3-a954-2073836aeec1",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "55926c2c-606d-4511-95f1-dc160da8eab8"
        },
        "item": {
          "id": "1278e4bd-3217-4c69-83ab-3521e7ffac8c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1826a800-0e21-41a7-b6c9-e37b0523e8b6",
          "status": "Created",
          "code": 201,
          "responseTime": 428,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6538f86e-a2cb-45f1-8624-a30d0b9ff27e",
        "cursor": {
          "ref": "451c7083-bb10-4c8f-b21d-b908127832c5",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a74cb1bc-fda3-4237-8a17-310a7e2031aa"
        },
        "item": {
          "id": "6538f86e-a2cb-45f1-8624-a30d0b9ff27e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "885313cb-3997-4fbb-8808-1b8eb87d59df",
          "status": "Created",
          "code": 201,
          "responseTime": 426,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6538f86e-a2cb-45f1-8624-a30d0b9ff27e",
        "cursor": {
          "ref": "451c7083-bb10-4c8f-b21d-b908127832c5",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a74cb1bc-fda3-4237-8a17-310a7e2031aa"
        },
        "item": {
          "id": "6538f86e-a2cb-45f1-8624-a30d0b9ff27e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "885313cb-3997-4fbb-8808-1b8eb87d59df",
          "status": "Created",
          "code": 201,
          "responseTime": 426,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f99380-2141-4bc5-817e-8f3fceaeeda9",
        "cursor": {
          "ref": "f856ed0a-277a-497b-8148-d78f9cb8e44b",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a7833723-baea-4396-aaed-f0ea32058f54"
        },
        "item": {
          "id": "c9f99380-2141-4bc5-817e-8f3fceaeeda9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7a848794-daad-4d40-b094-d92e574bccf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "c9f99380-2141-4bc5-817e-8f3fceaeeda9",
        "cursor": {
          "ref": "f856ed0a-277a-497b-8148-d78f9cb8e44b",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a7833723-baea-4396-aaed-f0ea32058f54"
        },
        "item": {
          "id": "c9f99380-2141-4bc5-817e-8f3fceaeeda9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7a848794-daad-4d40-b094-d92e574bccf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "430ff228-851a-4b42-8ff6-3fffbfca71d3",
        "cursor": {
          "ref": "36bcf014-d982-4a90-93cc-8b6ffcb14ddc",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8c1befe3-041e-4402-9144-3e3e51fe6dc1"
        },
        "item": {
          "id": "430ff228-851a-4b42-8ff6-3fffbfca71d3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a77bed33-c488-42e2-8cff-af8c1eb0ce73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "430ff228-851a-4b42-8ff6-3fffbfca71d3",
        "cursor": {
          "ref": "36bcf014-d982-4a90-93cc-8b6ffcb14ddc",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8c1befe3-041e-4402-9144-3e3e51fe6dc1"
        },
        "item": {
          "id": "430ff228-851a-4b42-8ff6-3fffbfca71d3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a77bed33-c488-42e2-8cff-af8c1eb0ce73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "42095e8d-6292-4e92-a5e0-e74a2f102887",
        "cursor": {
          "ref": "243afbb1-604e-4d15-b010-f496788657ba",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b8387207-3c8a-42fa-a72d-9da025b1aa64"
        },
        "item": {
          "id": "42095e8d-6292-4e92-a5e0-e74a2f102887",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "1c423851-5f14-42f5-983c-d2c7ef567215",
          "status": "Created",
          "code": 201,
          "responseTime": 722,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42095e8d-6292-4e92-a5e0-e74a2f102887",
        "cursor": {
          "ref": "243afbb1-604e-4d15-b010-f496788657ba",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b8387207-3c8a-42fa-a72d-9da025b1aa64"
        },
        "item": {
          "id": "42095e8d-6292-4e92-a5e0-e74a2f102887",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "1c423851-5f14-42f5-983c-d2c7ef567215",
          "status": "Created",
          "code": 201,
          "responseTime": 722,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1263f836-e300-405d-8630-f4ae629090a8",
        "cursor": {
          "ref": "967dd007-d0ef-4b24-a7ac-28d7f6a82adf",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "aa35f367-132b-48d2-9b3b-3e6ec765f58a"
        },
        "item": {
          "id": "1263f836-e300-405d-8630-f4ae629090a8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dacdf3ca-2095-4d71-90f6-8205cc4e8e98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1263f836-e300-405d-8630-f4ae629090a8",
        "cursor": {
          "ref": "967dd007-d0ef-4b24-a7ac-28d7f6a82adf",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "aa35f367-132b-48d2-9b3b-3e6ec765f58a"
        },
        "item": {
          "id": "1263f836-e300-405d-8630-f4ae629090a8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dacdf3ca-2095-4d71-90f6-8205cc4e8e98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67a43d1-aa5a-4ed7-ace5-9d6b1e1ebbae",
        "cursor": {
          "ref": "f724673e-f7cc-43c2-a002-9a5891689b09",
          "length": 155,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "32529a80-a0b2-4664-85b0-686fbccf263f"
        },
        "item": {
          "id": "b67a43d1-aa5a-4ed7-ace5-9d6b1e1ebbae",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "9f8ddcd0-c678-44e8-9196-67b534819827",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 89,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfb63ba-96bb-4d9b-8f32-b2f421cedf24",
        "cursor": {
          "ref": "d07f9757-b433-4c36-8455-b2d53d8851b0",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ef8b7bf3-3569-4f7c-878e-3a7022c8af33"
        },
        "item": {
          "id": "edfb63ba-96bb-4d9b-8f32-b2f421cedf24",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a8d1012c-cc9f-4b9d-9ae3-21da67392d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfb63ba-96bb-4d9b-8f32-b2f421cedf24",
        "cursor": {
          "ref": "d07f9757-b433-4c36-8455-b2d53d8851b0",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ef8b7bf3-3569-4f7c-878e-3a7022c8af33"
        },
        "item": {
          "id": "edfb63ba-96bb-4d9b-8f32-b2f421cedf24",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a8d1012c-cc9f-4b9d-9ae3-21da67392d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a311da45-4416-407f-92d7-60f0ff0909e6",
        "cursor": {
          "ref": "48d59f99-9280-4035-9293-2ea04e004f5e",
          "length": 155,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6148c7d6-cd8a-4c4b-93f2-37d6d7d7bab6"
        },
        "item": {
          "id": "a311da45-4416-407f-92d7-60f0ff0909e6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6abc2f25-1b2a-4c46-8bcd-24b397af7a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9629ec-382e-49dc-b2db-cedca62839ab",
        "cursor": {
          "ref": "828d8827-63ef-4038-9122-c664c66e90e0",
          "length": 155,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9b5f67cd-d49b-40f3-b616-8d7347b01c36"
        },
        "item": {
          "id": "da9629ec-382e-49dc-b2db-cedca62839ab",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d0385421-f248-4eaf-9096-c3b9928f53ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31677e3d-0084-4e58-9914-1b9babf93da8",
        "cursor": {
          "ref": "1764c69e-c578-4c1e-ae99-a1c1a731d03f",
          "length": 155,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2f83d592-9a91-45a0-a06e-cdbae9d34147"
        },
        "item": {
          "id": "31677e3d-0084-4e58-9914-1b9babf93da8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b49f60f2-32c4-4f97-b2d6-7838d9cfdecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046b26c8-faf5-46a4-a4da-ac366dea58b8",
        "cursor": {
          "ref": "ca749524-8fec-4398-bba2-46e26d7a10c0",
          "length": 155,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "72a7b88b-4142-48f5-8316-9d5da9c0cfd6"
        },
        "item": {
          "id": "046b26c8-faf5-46a4-a4da-ac366dea58b8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4c0e958f-5b75-4211-8d5f-27ee4b1fa3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cba648-98b9-4561-b9f4-cce01b00421c",
        "cursor": {
          "ref": "e2648bec-9fde-48a1-b077-f2dc2cf84dd6",
          "length": 155,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a0d75f75-3fcf-4877-9c7f-6ff63f666fd1"
        },
        "item": {
          "id": "94cba648-98b9-4561-b9f4-cce01b00421c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c5dc8633-a20a-4d77-aedd-bb5e844c1470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21437808-5c09-433b-9564-76c7b3b12b0c",
        "cursor": {
          "ref": "0179ead4-19c7-4ea9-8c47-80435b8ed9b5",
          "length": 155,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7ab98e91-3f5e-4c76-ae31-42466d12061a"
        },
        "item": {
          "id": "21437808-5c09-433b-9564-76c7b3b12b0c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "de8b9b69-177e-48f7-a2bc-90015437eaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1467,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66a23f3-53ef-4810-8616-cd4913b2eefd",
        "cursor": {
          "ref": "9082658d-19a0-46b4-b651-6e913df69f3c",
          "length": 155,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "29b0d0e9-068a-4f89-9a68-b8deb36f2689"
        },
        "item": {
          "id": "d66a23f3-53ef-4810-8616-cd4913b2eefd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "96834c7c-bd2f-4e6d-9305-24af66f36f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbf7894-5936-4fa4-8e0f-fff21d4b599c",
        "cursor": {
          "ref": "1fa454d3-de02-4136-a81d-8f5cdb3b6ef5",
          "length": 155,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2594a75b-c0d7-4da4-ba35-83ea7c9def0e"
        },
        "item": {
          "id": "6cbf7894-5936-4fa4-8e0f-fff21d4b599c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e3f62a5f-5c77-4df3-afad-3a24bfa6e381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc35032-fa31-4b4e-884a-4bcce49c4127",
        "cursor": {
          "ref": "871845c6-d08a-4054-81ba-5f254144fa02",
          "length": 155,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ce074aaf-89e0-4133-a1bb-5f1a5ec74d68"
        },
        "item": {
          "id": "3dc35032-fa31-4b4e-884a-4bcce49c4127",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d9e1098e-d8e4-4ca5-aaaa-b69895326cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bd203d-4641-4746-bf53-a953db2f4e5a",
        "cursor": {
          "ref": "8bac308b-bf33-4146-9760-6eba45ee925b",
          "length": 155,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f2943f86-a5b6-49a3-8753-a8edacaee2fe"
        },
        "item": {
          "id": "42bd203d-4641-4746-bf53-a953db2f4e5a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3f664257-2eb7-4252-89b5-1f739bca355f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe47c2e-c14b-4119-be3c-403e9462adad",
        "cursor": {
          "ref": "d39751c0-d5d8-457b-b89a-9169b4ba36b8",
          "length": 155,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "56933ea5-2ab4-416f-8a56-2d610bd2ac71"
        },
        "item": {
          "id": "4fe47c2e-c14b-4119-be3c-403e9462adad",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a79966f6-0327-478a-88fa-04d8441c77fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9c934a-4583-4f42-a579-b32cda9b6afc",
        "cursor": {
          "ref": "6b5eb9dd-925e-481a-a07d-f71cdc407cd9",
          "length": 155,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2cfb5276-1c5d-4257-8382-7a1312d0c600"
        },
        "item": {
          "id": "2e9c934a-4583-4f42-a579-b32cda9b6afc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9021d5d7-0c26-4c22-adc3-3fe378b3046e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16453fa-12f2-42c4-b4c1-3179fe7ff89a",
        "cursor": {
          "ref": "70669768-6689-43c6-8345-9b1012b775eb",
          "length": 155,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b1c59935-df9e-4c2e-8b7e-a609c403fc71"
        },
        "item": {
          "id": "d16453fa-12f2-42c4-b4c1-3179fe7ff89a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "30cb564e-6b69-431d-908b-a299be210761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4602906f-b6ee-4526-8574-b67a9dfd425e",
        "cursor": {
          "ref": "c1984e5f-ff10-478f-8203-29eb0f65da80",
          "length": 155,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f0d3eafa-2a72-4fa4-98b4-857718880740"
        },
        "item": {
          "id": "4602906f-b6ee-4526-8574-b67a9dfd425e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "746ea752-deff-467f-8069-aa15a2aa43e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966ea9dd-484c-4992-b3d0-35162e6d62fc",
        "cursor": {
          "ref": "0c8fa7ac-47fb-42a2-b608-a3f2bf03e9ae",
          "length": 155,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cc5a1131-6ac6-440e-b4e9-ee47c7138021"
        },
        "item": {
          "id": "966ea9dd-484c-4992-b3d0-35162e6d62fc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "998b8036-1d13-4a96-96ff-cfbaba676436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e71aaa-1acd-434c-a8ca-eeeaa7bef567",
        "cursor": {
          "ref": "c38151c0-a096-444b-8cf4-5e31aac89264",
          "length": 155,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "44f9d694-a4b0-4949-9bce-e6bc12b387f9"
        },
        "item": {
          "id": "75e71aaa-1acd-434c-a8ca-eeeaa7bef567",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8f43934f-b895-4ff9-ac53-b79dbdd989d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d63751-6304-40a7-b865-d970fa26d333",
        "cursor": {
          "ref": "b7ee7ea4-39c7-43d8-b714-2c6d97b5ca78",
          "length": 155,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "177ee76a-e5cf-4c89-8078-76a2343ec6f1"
        },
        "item": {
          "id": "d3d63751-6304-40a7-b865-d970fa26d333",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7011de31-cec8-4e0c-9fc9-85f1cfb83593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 913,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6812ea73-47f7-4a1c-ab36-f87fea253a2d",
        "cursor": {
          "ref": "ea683756-2e6c-4e88-a588-525b3692992a",
          "length": 155,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0cd24242-e630-4e89-a0fe-36f53a3b6b91"
        },
        "item": {
          "id": "6812ea73-47f7-4a1c-ab36-f87fea253a2d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e1031941-1b34-44a0-a0c8-eccae798b4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1055,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1dd885-9da6-4ff8-91ff-01d5fc678046",
        "cursor": {
          "ref": "892ae716-63fb-4d3c-83c9-849747ccaf3d",
          "length": 155,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "71964f28-d63a-4a10-affd-6e631e460b68"
        },
        "item": {
          "id": "dd1dd885-9da6-4ff8-91ff-01d5fc678046",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b9f870f4-1382-47a7-b48e-43cc820ad202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1190,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263c5e62-adb6-46aa-a319-94908288b0d3",
        "cursor": {
          "ref": "1df3edaf-87c9-4495-9440-2acf889b4612",
          "length": 155,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cbd15073-84cc-4813-b144-991b44e00a01"
        },
        "item": {
          "id": "263c5e62-adb6-46aa-a319-94908288b0d3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0d721573-a3d0-4b9f-a61f-7b08137f9ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc3eb98-06ca-4d69-83c8-eb9ccd043171",
        "cursor": {
          "ref": "4b4e949a-e570-4961-8742-bdc4c158a6d0",
          "length": 155,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0f8aa885-46e7-49d9-b5c4-62491d209ec2"
        },
        "item": {
          "id": "bbc3eb98-06ca-4d69-83c8-eb9ccd043171",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "33e03831-69b0-4ffd-b808-9b6ed61438ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8bcf67-6002-4e88-b314-117e5ea96aa5",
        "cursor": {
          "ref": "e33f7b05-8a86-4ddd-b0d0-4b5b3379c208",
          "length": 155,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c46f482f-69dc-4db9-b3d3-037b748cce26"
        },
        "item": {
          "id": "0f8bcf67-6002-4e88-b314-117e5ea96aa5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3fb65eb6-0310-4b0c-8abc-61957e3beb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f7e5eb-9b59-4235-b582-a64565b75753",
        "cursor": {
          "ref": "09584e03-b1d0-4b2e-a89a-ac331b5b6c97",
          "length": 155,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4bc8b856-4733-4371-a572-f4b8eaf3d9b9"
        },
        "item": {
          "id": "35f7e5eb-9b59-4235-b582-a64565b75753",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "656dec9e-9d59-458b-b132-7c995bc9b0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96aece6-df99-4b58-97e3-099c6cb3a89e",
        "cursor": {
          "ref": "ece6458f-bfb0-4ab4-b6b7-b8211f635e80",
          "length": 155,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dad0db89-3c97-43b6-8e24-f7311bae5f10"
        },
        "item": {
          "id": "f96aece6-df99-4b58-97e3-099c6cb3a89e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "91129b50-2b6f-4e9e-99e1-8b31a81f4544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d426d4a1-b53b-458d-b039-4d99d859cf2d",
        "cursor": {
          "ref": "c0ba23df-f389-445c-b6f5-5916cb28d416",
          "length": 155,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d3d33b72-8817-4ade-9170-9072a28dfd8f"
        },
        "item": {
          "id": "d426d4a1-b53b-458d-b039-4d99d859cf2d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8ddd4355-322b-458a-9f28-cd48170c5f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34177c40-03b3-4f6a-aa71-aae242b5186f",
        "cursor": {
          "ref": "4bf1b55b-e036-4b6b-bbf2-d39c294ac768",
          "length": 155,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bdef61b9-dbb8-4432-9ec5-a05dc7b6aceb"
        },
        "item": {
          "id": "34177c40-03b3-4f6a-aa71-aae242b5186f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "430ffaed-04c3-4bb3-99af-64a6d6eb86f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b9f950-e773-4227-9b53-73accf7f9230",
        "cursor": {
          "ref": "2ef00cd1-4cbe-42b6-8bf0-bf224a0c1a50",
          "length": 155,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2357643d-4c79-4100-961c-650a0ae9ac78"
        },
        "item": {
          "id": "f6b9f950-e773-4227-9b53-73accf7f9230",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "69fc4e75-f0e3-4fc4-9284-13f9503b508e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f07eac-ac87-444d-8b92-efb86c98409f",
        "cursor": {
          "ref": "c9b6b7a4-fd9d-4bef-aa19-6ca20b567310",
          "length": 155,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3ccb29b6-bb18-4d8f-a16f-533cadc24dd6"
        },
        "item": {
          "id": "d9f07eac-ac87-444d-8b92-efb86c98409f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "68fac7eb-4dbb-442b-a703-71d37e4416e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e40431c-b0fc-49bb-ad56-57dc998bb6da",
        "cursor": {
          "ref": "88f64db0-b890-48d4-aa13-ccd99f4975c2",
          "length": 155,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "117fd6b7-b616-41cb-b7d7-54b2bd554841"
        },
        "item": {
          "id": "8e40431c-b0fc-49bb-ad56-57dc998bb6da",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2a3d05e4-cf47-4f10-92d3-46c9a4f5bb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32cc07c-e4c3-4e0b-a042-99633f4235c6",
        "cursor": {
          "ref": "ce84008b-cd48-4c45-bd93-eec6c4ec6c79",
          "length": 155,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "64f36d14-8e9f-4722-8516-c05ae5be2895"
        },
        "item": {
          "id": "e32cc07c-e4c3-4e0b-a042-99633f4235c6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "41688c92-b963-4e01-97a5-4d0696aa9b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b64a10-cb8a-4b52-9243-a9c996c2743d",
        "cursor": {
          "ref": "d2c2bc8f-e7fb-4807-95b3-669debf62964",
          "length": 155,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "30937506-d1bd-4ce4-88e4-9807c17a930f"
        },
        "item": {
          "id": "81b64a10-cb8a-4b52-9243-a9c996c2743d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f1ad002e-625b-42f6-8c56-f9dd73e1edfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af15afaf-ae5a-4bc4-b3cf-6a3cee387596",
        "cursor": {
          "ref": "9961b700-ca5a-4508-b8b7-b357cecf908d",
          "length": 155,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "57c28ea8-f1a6-4fb0-8e8d-2f416fc6fd8c"
        },
        "item": {
          "id": "af15afaf-ae5a-4bc4-b3cf-6a3cee387596",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7e3c8d22-be0f-4215-9442-ee99ef5b87c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695b453b-2e10-4da9-9d34-773e4ac03993",
        "cursor": {
          "ref": "6402febc-69f0-4de2-aad9-908fc476a9ff",
          "length": 155,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d60dcbc1-36c6-406f-9166-bd7f6eac04df"
        },
        "item": {
          "id": "695b453b-2e10-4da9-9d34-773e4ac03993",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8c397d44-015b-41c6-8801-81b22768727f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ce4f89-1058-40cf-b5be-729688bf9ff2",
        "cursor": {
          "ref": "4481f228-1334-49b9-bea3-b953c5dcf924",
          "length": 155,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8456d02f-c639-40dd-84a2-20a8e14bd620"
        },
        "item": {
          "id": "e5ce4f89-1058-40cf-b5be-729688bf9ff2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "19fdf15c-6902-47f2-933f-0fee9b5ad52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f4786f-67e7-445a-8347-fa5db2207c74",
        "cursor": {
          "ref": "d6ec7047-cfd8-458e-803d-9506d7a52443",
          "length": 155,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "464acb2d-a201-49bc-9bb5-3bbcee071e0b"
        },
        "item": {
          "id": "49f4786f-67e7-445a-8347-fa5db2207c74",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bfea8d0d-7c67-487e-b1c8-ca34f80a64e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0971b96a-7bb0-4550-a3f4-b8d64c1ac114",
        "cursor": {
          "ref": "daabfa31-54ef-4d69-8654-0eefb5542f8f",
          "length": 155,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1d9446c4-24ad-493d-84c1-a29561ddf837"
        },
        "item": {
          "id": "0971b96a-7bb0-4550-a3f4-b8d64c1ac114",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "02dac24d-2cfb-48d5-8b52-96f07fe33583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041dab8c-65d7-4324-b7bf-f8ae47d6229f",
        "cursor": {
          "ref": "80aceafc-45ec-4ea6-914c-96d85c7f5633",
          "length": 155,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "36bd7685-c2af-4fd4-90b7-3b21107ee45d"
        },
        "item": {
          "id": "041dab8c-65d7-4324-b7bf-f8ae47d6229f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a6dee24b-a3b8-42a3-a2b1-7cb46bb0fade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24e2d1b-7aaf-414c-9aab-18d0d46c9ece",
        "cursor": {
          "ref": "b310b255-38d9-44d7-9beb-280a0de5479e",
          "length": 155,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c034ae79-3a8a-4d58-a517-6b72b64dd67e"
        },
        "item": {
          "id": "e24e2d1b-7aaf-414c-9aab-18d0d46c9ece",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "16c54e4f-8e68-4692-9f4b-b661a7de7ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b538e2-0c3b-4016-90f8-5851686195b8",
        "cursor": {
          "ref": "29cabb42-e6c3-4ff9-aa0b-bb8a2c5c2f4e",
          "length": 155,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "eb9a7d5d-5517-455b-94da-4ea4190e39d8"
        },
        "item": {
          "id": "18b538e2-0c3b-4016-90f8-5851686195b8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4467fb80-6cf7-4097-9f3d-f09f9269193c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e931e9e4-37c2-49d6-a270-368f6fbb1848",
        "cursor": {
          "ref": "90fac510-b268-45c2-8f4c-ebe483393f38",
          "length": 155,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3d9d344b-5684-4ca6-a080-cf7a72a411b5"
        },
        "item": {
          "id": "e931e9e4-37c2-49d6-a270-368f6fbb1848",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "30d7cc02-4274-4b2a-8f33-684d798fffe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352f4552-87e2-4ee3-b5da-1d15c9eb8c37",
        "cursor": {
          "ref": "b68d557f-6799-4720-8b95-47999efc7ed6",
          "length": 155,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "33bd062d-65a4-4ba5-bd90-867b90168aad"
        },
        "item": {
          "id": "352f4552-87e2-4ee3-b5da-1d15c9eb8c37",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bc91841c-870a-40e8-9010-4b0c4aff7b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4ef25f-b047-4593-a45e-8f6567bae02f",
        "cursor": {
          "ref": "3b310d71-2237-4590-a3e7-04f32ca5301f",
          "length": 155,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "009dc441-5a0f-4581-9fe3-e0969e786a4b"
        },
        "item": {
          "id": "ce4ef25f-b047-4593-a45e-8f6567bae02f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a25fcf4a-92b3-42ae-97aa-214c5e648e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f324c981-1081-45bd-86e3-cea0398596b9",
        "cursor": {
          "ref": "58811c12-4617-47df-a6d9-70914455c45d",
          "length": 155,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "823e986a-4666-402e-b3d5-05cc56ab8ea2"
        },
        "item": {
          "id": "f324c981-1081-45bd-86e3-cea0398596b9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1440ea08-901d-49cb-b8a5-79fbbf71e253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9323b0b-668c-4955-abb8-cfbfd3e68e6a",
        "cursor": {
          "ref": "f2f4170e-47ef-4a3e-9506-aa924f5d1174",
          "length": 155,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6e7f0e68-e9be-48a5-b137-5fde0a3e76dc"
        },
        "item": {
          "id": "e9323b0b-668c-4955-abb8-cfbfd3e68e6a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cab65671-7eb9-479e-ae9f-5092f6c1cd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1035,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a75d0d-dc88-4815-9273-cb38ca1d3b42",
        "cursor": {
          "ref": "7f27c867-4713-4507-9def-8fb8d060e3d5",
          "length": 155,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "446df85b-4bcf-4a03-9729-01d90059249c"
        },
        "item": {
          "id": "50a75d0d-dc88-4815-9273-cb38ca1d3b42",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2e96cb7a-90a7-4b18-8dea-0fa56f95f2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0f4914-d660-4bc6-92af-59e073d810b6",
        "cursor": {
          "ref": "67f8dc4d-c2dc-41b7-a0ac-48942dfb65c8",
          "length": 155,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "10b4ebfe-647a-427c-b692-b35ef8a57ee4"
        },
        "item": {
          "id": "3b0f4914-d660-4bc6-92af-59e073d810b6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cb7ec985-2838-4a9c-b5df-3829d5fb605d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d2e4f7-5f98-4656-bdd7-e5b8dff1bacb",
        "cursor": {
          "ref": "e878cb85-f3ca-4423-8555-608b74f8bc1a",
          "length": 155,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c613df36-bb98-4050-9418-6101140f94e1"
        },
        "item": {
          "id": "64d2e4f7-5f98-4656-bdd7-e5b8dff1bacb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a7cdf2f4-62db-4134-9c1d-3529a2c4c118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04aef497-4f0b-474a-a284-6dd1932c6131",
        "cursor": {
          "ref": "374a1bf6-467d-44e7-91aa-0b74881b5473",
          "length": 155,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c5615a0e-9fbd-4d6b-a9bb-005ba5e43771"
        },
        "item": {
          "id": "04aef497-4f0b-474a-a284-6dd1932c6131",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "acf26d99-8e94-4200-a7ec-7086fe9568a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522ac9e8-5a53-4488-b698-b5a9ba723bb1",
        "cursor": {
          "ref": "a31ca336-d0d9-4078-ad81-c955fa7cb015",
          "length": 155,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b14729fa-7197-48c0-a3c2-1141343d9a6f"
        },
        "item": {
          "id": "522ac9e8-5a53-4488-b698-b5a9ba723bb1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "13fd8b21-11a9-42ea-a8c9-c014dff81a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc76bd54-e40f-4c6d-bfc5-b3b51848689c",
        "cursor": {
          "ref": "c1979319-4880-444c-b405-10a6117734f2",
          "length": 155,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e93aa3ee-b1b4-4546-a88a-257442de749d"
        },
        "item": {
          "id": "dc76bd54-e40f-4c6d-bfc5-b3b51848689c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cce3e079-eff5-432d-b5c9-01b9a5fca05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5f095a-45fd-4f69-9a9d-6b521b07be8e",
        "cursor": {
          "ref": "de5fe6fb-6ef8-4700-b706-82d231c8fea2",
          "length": 155,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9ea47c00-a5f1-4be6-818a-96fece4d02f5"
        },
        "item": {
          "id": "9f5f095a-45fd-4f69-9a9d-6b521b07be8e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "45d082e8-bac4-4a3b-8622-925fdca6118e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09e2c45-fdf2-4947-8872-f8c0386c8e75",
        "cursor": {
          "ref": "60932797-a4c6-446e-a00c-8a5e406a394e",
          "length": 155,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ebb4f30d-6f25-4dfc-ac68-752f047485ae"
        },
        "item": {
          "id": "b09e2c45-fdf2-4947-8872-f8c0386c8e75",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "23969854-24ae-457b-8b09-39b1bf1bebbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f347ff18-ea23-4457-b9a0-99e330467e60",
        "cursor": {
          "ref": "51ee4112-d5e6-4034-9ac9-c0f92f137f68",
          "length": 155,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1df9d0db-9706-4a32-8f4f-784debeb8f18"
        },
        "item": {
          "id": "f347ff18-ea23-4457-b9a0-99e330467e60",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e4029285-c614-4a54-a559-e885b02e7911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754355e2-d509-46ee-83c7-f0b47c9ac7e7",
        "cursor": {
          "ref": "f061dfee-ce13-4e07-a762-a20f676bcdcb",
          "length": 155,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7a93afed-af8a-4c06-8191-16baf017a0be"
        },
        "item": {
          "id": "754355e2-d509-46ee-83c7-f0b47c9ac7e7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "41c983e3-2bb1-470b-8f68-d38cb8a0d1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ac331a-fa92-4f8f-a02f-daf9536ff8a4",
        "cursor": {
          "ref": "7d7bbbee-cb33-4edb-af4d-4233d0418500",
          "length": 155,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1f9d8570-ac42-4728-a9c7-8b9f6c70a3d9"
        },
        "item": {
          "id": "50ac331a-fa92-4f8f-a02f-daf9536ff8a4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "585e0cc2-382a-4269-8709-29e2394d5e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1027,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8765b2-8296-4716-aaee-5957a85a7683",
        "cursor": {
          "ref": "a393e0dd-edfa-46b6-8c95-860a8fc3dd2a",
          "length": 155,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6bbca8e1-9591-419d-a332-a69ccf00b0ca"
        },
        "item": {
          "id": "3b8765b2-8296-4716-aaee-5957a85a7683",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4abe2e2b-f362-49b6-a3f7-3d38f024b633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb76cbe-c7e7-4901-979d-988aba996835",
        "cursor": {
          "ref": "0997ad8d-23b4-4675-9d64-66f9f0747512",
          "length": 155,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b48281f9-5365-4918-a7a6-b3ce9199fd14"
        },
        "item": {
          "id": "8fb76cbe-c7e7-4901-979d-988aba996835",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f27eae37-9e94-4e1e-b713-f7794647fdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a62faf4-9d41-45f7-8412-85441ca340a2",
        "cursor": {
          "ref": "8b14c09a-34a6-4a69-9c7e-9dc489e5a400",
          "length": 155,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2a3050e7-f398-4246-9967-89068d631447"
        },
        "item": {
          "id": "3a62faf4-9d41-45f7-8412-85441ca340a2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "74e18b9e-5652-47b1-af28-74f1cf9f0db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b7d705-881a-4500-8a32-5e4fde6592e7",
        "cursor": {
          "ref": "35f37374-f209-415a-8748-57f444af3116",
          "length": 155,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1d46a9c5-160c-489e-9ce4-0284dd0faac1"
        },
        "item": {
          "id": "b8b7d705-881a-4500-8a32-5e4fde6592e7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8ff2472b-77ed-4091-a841-546183201196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be849c2e-b2a4-4596-89b6-e6b088c785a2",
        "cursor": {
          "ref": "6f7c449a-8115-429d-ba93-b0832c6ded5c",
          "length": 155,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5203c6c4-ca40-45ef-b804-1a8927d8d563"
        },
        "item": {
          "id": "be849c2e-b2a4-4596-89b6-e6b088c785a2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "05561b88-9c6d-4357-b779-c2f1e9383b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e978925-3443-4544-8d6a-7a9f0e412c25",
        "cursor": {
          "ref": "615d3f41-b394-4f53-aa93-c1eaf33bf76b",
          "length": 155,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6a56adc1-a2ca-4857-b38a-ffc19e090447"
        },
        "item": {
          "id": "7e978925-3443-4544-8d6a-7a9f0e412c25",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "14cdf6f6-9ceb-4e1d-9d00-b699b481531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118809b7-4a8f-428c-8cce-751894a8a4fc",
        "cursor": {
          "ref": "318033b2-ea78-451e-93b2-f4d3558aeef7",
          "length": 155,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "81e3fc8a-73e0-478e-9bd4-aaae06808d68"
        },
        "item": {
          "id": "118809b7-4a8f-428c-8cce-751894a8a4fc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fbcbf2d2-b759-430b-b832-8f40ab41458a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74eaa39d-dedb-431f-aaa8-eef7341d57b2",
        "cursor": {
          "ref": "895d467f-c262-489f-b8d2-c0691d689af2",
          "length": 155,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ea6adaa9-e3b9-4d8a-8af2-237271657427"
        },
        "item": {
          "id": "74eaa39d-dedb-431f-aaa8-eef7341d57b2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c477a4ad-438e-4c77-8857-75edb12d6bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50eaf7eb-e68e-47a3-941f-7a9af2cd3a1b",
        "cursor": {
          "ref": "dcdda6c8-27cd-45cd-b7af-a4d769d00289",
          "length": 155,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "936af813-1e96-46cf-8201-3e792aff1f13"
        },
        "item": {
          "id": "50eaf7eb-e68e-47a3-941f-7a9af2cd3a1b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "16eb4051-4f23-48c9-bc74-b957663a7f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99814019-e055-4d81-aaf2-92ea86cc6d17",
        "cursor": {
          "ref": "d732054f-f6dc-45c5-ab28-67fffd0b8500",
          "length": 155,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1e44179c-3f5a-4d06-8b20-2139db369345"
        },
        "item": {
          "id": "99814019-e055-4d81-aaf2-92ea86cc6d17",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "84720764-c1ac-4718-a55e-2afd85827d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3d5ce7-4a48-495e-9a84-b2b92cdc4b67",
        "cursor": {
          "ref": "75eff156-c8ed-4c9a-a544-90166a1ba833",
          "length": 155,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "855bc9af-5bb0-44a9-84d8-904005c363df"
        },
        "item": {
          "id": "9e3d5ce7-4a48-495e-9a84-b2b92cdc4b67",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1167b4a5-4801-4136-bdae-d24e1bbb02f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e72d949-e502-4af0-8d5a-1a18df52eb2a",
        "cursor": {
          "ref": "d0b5737b-b117-475a-9dc6-ffc5f0e9cc7e",
          "length": 155,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "478fcc5b-801f-4e17-adb9-5a7f0c19bdcc"
        },
        "item": {
          "id": "7e72d949-e502-4af0-8d5a-1a18df52eb2a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "688718be-9046-4bb5-9c73-75f5d9b58dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6417751-391d-49ec-b3d9-35e5ce2caab6",
        "cursor": {
          "ref": "1a9ae558-1f3b-48d0-967c-f3e596737336",
          "length": 155,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d1b5aabf-5da0-4592-8a8c-2167c90eb562"
        },
        "item": {
          "id": "b6417751-391d-49ec-b3d9-35e5ce2caab6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f5810cf7-c313-40fe-8e86-d989cb0986d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732cace7-7fb2-4627-86bb-3c33d35f62e8",
        "cursor": {
          "ref": "78563b80-9073-4e51-8705-fb20fcd67682",
          "length": 155,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e7bb8827-afdc-4780-a068-c230103f5245"
        },
        "item": {
          "id": "732cace7-7fb2-4627-86bb-3c33d35f62e8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "934934c0-d83c-458c-9424-f057b1214279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507d1bc9-b00f-403a-ab53-cf576efa5d72",
        "cursor": {
          "ref": "f4647896-4721-46aa-9140-015888eb2d70",
          "length": 155,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5c3b00f6-46d5-4851-8926-f200f37d01ed"
        },
        "item": {
          "id": "507d1bc9-b00f-403a-ab53-cf576efa5d72",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5295b9d3-f32b-4fa6-98ba-af4e7ff7cc04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c12bed-36ff-4bdb-886e-91bc495190c7",
        "cursor": {
          "ref": "321739a7-877e-4190-86bd-9dbdaa67d15a",
          "length": 155,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cfe961a6-2d06-4ddd-932a-583297f956e4"
        },
        "item": {
          "id": "65c12bed-36ff-4bdb-886e-91bc495190c7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bd8a2dea-e663-41ca-9f22-353bd502443c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6b5fe2-8082-4827-880e-47dedb9ea89c",
        "cursor": {
          "ref": "4e462f4a-c2d4-4bd7-9c2f-63d21db14bb6",
          "length": 155,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4b0ee4a6-160e-4d3e-824d-13abf3c6f725"
        },
        "item": {
          "id": "fc6b5fe2-8082-4827-880e-47dedb9ea89c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bab409d6-563a-498f-8a26-80bf18e07a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238d09d9-9a86-4483-9d58-77fa5709a030",
        "cursor": {
          "ref": "889d2bd0-a6bc-4ed9-84cf-a9edb5beed24",
          "length": 155,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e3b466f0-750a-42dd-902f-441381754f49"
        },
        "item": {
          "id": "238d09d9-9a86-4483-9d58-77fa5709a030",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7fe8e3d4-9931-4293-940c-0376987917df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b192d856-49c6-489c-a3e8-094485f14774",
        "cursor": {
          "ref": "25681aa8-ab39-4e50-bb3f-e4888bbd7a1d",
          "length": 155,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e4e82471-f42e-4350-9196-2d548944361a"
        },
        "item": {
          "id": "b192d856-49c6-489c-a3e8-094485f14774",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8e28c605-7519-403f-84d7-166a572259a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2bbc6c-b841-4906-a5f0-8fbd53c36efe",
        "cursor": {
          "ref": "22e02263-e2be-4a2e-bc13-a2e88e0bd970",
          "length": 155,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "541ad05b-aada-4d60-98f1-3dd7619e2ce5"
        },
        "item": {
          "id": "fb2bbc6c-b841-4906-a5f0-8fbd53c36efe",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "04b105a9-676e-441a-a1fe-eaf018c181dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101554cd-366a-4351-836b-7d1a95d428b9",
        "cursor": {
          "ref": "8b3cf2fb-6812-4557-9bda-07d2dd2b54c8",
          "length": 155,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c066e61e-696b-43e1-ae4e-7122d3d3b76b"
        },
        "item": {
          "id": "101554cd-366a-4351-836b-7d1a95d428b9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c1310ab2-bc37-49c5-9fc2-9dc5b27e22dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef74ad5-3cd2-4f32-9296-97ba06a93198",
        "cursor": {
          "ref": "2ba97197-5d27-40bd-8bcf-5b2e1098bb54",
          "length": 155,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d9fd4084-4fd7-4557-a0ce-9145d7f682c0"
        },
        "item": {
          "id": "fef74ad5-3cd2-4f32-9296-97ba06a93198",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "44b7d0de-cbe6-45e9-9953-756f246d89bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f8a34d-72cd-4955-829e-9971d8a24e81",
        "cursor": {
          "ref": "465f5907-f35b-4023-a692-19f2200f0431",
          "length": 155,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "10f0daca-f6ac-47b9-abdd-ad52ef6aaf8f"
        },
        "item": {
          "id": "31f8a34d-72cd-4955-829e-9971d8a24e81",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "01fe9a0a-eed1-4254-849d-6a530eff379d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7105eb45-168a-47ac-a596-718e20643fbe",
        "cursor": {
          "ref": "dc5502e0-66af-483d-8513-a62bbc797f2d",
          "length": 155,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f47ba044-19eb-4f3d-862c-ffdc139c6c65"
        },
        "item": {
          "id": "7105eb45-168a-47ac-a596-718e20643fbe",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6cf0eb28-d33a-476e-b9e5-f9f735b66015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9b1033-4bdb-4097-8974-8571b8921f2b",
        "cursor": {
          "ref": "b059a5fc-ff46-4020-b9c5-6a7f0049202e",
          "length": 155,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7684a767-5a5f-4161-a3e2-9de255fdad00"
        },
        "item": {
          "id": "ee9b1033-4bdb-4097-8974-8571b8921f2b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "00ebdc7e-b38e-4511-b293-6d65ad340e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d27f140-0390-4024-b354-3c6cb024f799",
        "cursor": {
          "ref": "872564b8-df12-4f5b-a76c-30eb953ed5b5",
          "length": 155,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "60a3afe5-6743-4783-9135-afd6551e524d"
        },
        "item": {
          "id": "7d27f140-0390-4024-b354-3c6cb024f799",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2ba45d42-1144-45d8-8171-0f24a7e9932d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990934c5-e84c-49f8-9d39-952fe5eec224",
        "cursor": {
          "ref": "d86c1d25-c8c3-4ba7-85a8-0eb85fd3bace",
          "length": 155,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c1c94cdf-99e4-48bb-99b1-632f4d28e97f"
        },
        "item": {
          "id": "990934c5-e84c-49f8-9d39-952fe5eec224",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9346bd13-2d1b-4b51-a97f-8c3bca650eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d850ae-b249-4e17-840a-d734cacb5ca8",
        "cursor": {
          "ref": "a8031692-753c-4044-8daf-48fa23209369",
          "length": 155,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0b942f60-c2a0-48e6-bb2a-1b53ab0031ae"
        },
        "item": {
          "id": "25d850ae-b249-4e17-840a-d734cacb5ca8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "11a0eb8b-abb3-4d9d-8bdf-281341454fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccbd4fb-5842-4fb6-82e9-5d54e978cb39",
        "cursor": {
          "ref": "b720c1c7-25b4-4b60-b355-536f94b241c7",
          "length": 155,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "da6fdde5-bab4-4d05-9512-24b981aec1f3"
        },
        "item": {
          "id": "3ccbd4fb-5842-4fb6-82e9-5d54e978cb39",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c09600cf-5085-43f3-9662-9f0e167a175c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e86c3b1-f035-4d26-b260-724e3d1d4136",
        "cursor": {
          "ref": "d688cbf9-a403-4ab3-84a3-d1b9489618bc",
          "length": 155,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "803f5fdf-96d1-4a97-ab8f-77bfac4b3d20"
        },
        "item": {
          "id": "2e86c3b1-f035-4d26-b260-724e3d1d4136",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "295a45d3-5f28-4433-a82a-15724317078a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f39728-d84c-43ce-bb49-1156f5758425",
        "cursor": {
          "ref": "04edda10-2cc1-4243-8fab-33132d94175b",
          "length": 155,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5232df4a-f334-4ac5-b955-62166e7bb787"
        },
        "item": {
          "id": "48f39728-d84c-43ce-bb49-1156f5758425",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6563a17f-51df-4315-97b6-4957b74e8ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be7b7ef-b211-4540-b603-424d11a35fd4",
        "cursor": {
          "ref": "7cf4dc01-3ec7-40c6-a4d4-35ba2bbff52f",
          "length": 155,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "804e63c9-ef8b-41d8-9d08-0339d284c8e7"
        },
        "item": {
          "id": "9be7b7ef-b211-4540-b603-424d11a35fd4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4b474546-cbbf-41d1-88fd-35fd9137c44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94575781-7611-4ad4-b58d-e72d2b48ff99",
        "cursor": {
          "ref": "0b78a2e4-d34e-41ad-8da8-e6f92fe7936a",
          "length": 155,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e44454e3-ce28-4969-82e6-900be495c66c"
        },
        "item": {
          "id": "94575781-7611-4ad4-b58d-e72d2b48ff99",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "557c4160-1819-401e-b747-ef6aae59a652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaba6f67-e894-48a2-819f-3b732008083f",
        "cursor": {
          "ref": "cccc3700-8c9a-4997-8369-69bf89710a0e",
          "length": 155,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a348595b-3adb-4ce6-9ac5-c20e3f8bb028"
        },
        "item": {
          "id": "eaba6f67-e894-48a2-819f-3b732008083f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9b2bc7d8-2102-417e-89a3-428a4aa285cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb11d184-0136-4185-813e-52a335ebce6d",
        "cursor": {
          "ref": "f2375ffd-816e-4607-b7b1-c2b9d9b752d6",
          "length": 155,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f5beeb6d-601f-4739-92bb-30ed62644185"
        },
        "item": {
          "id": "bb11d184-0136-4185-813e-52a335ebce6d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1d96c304-99c5-4e97-99f7-8fd5b0d63edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ef001c-7b7a-48e0-9a54-eec423572965",
        "cursor": {
          "ref": "773a5a5e-a659-4ecf-89c8-f4149f17a0ee",
          "length": 155,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d774ad14-c3f9-4f91-883f-4abafd34d103"
        },
        "item": {
          "id": "09ef001c-7b7a-48e0-9a54-eec423572965",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "01078b3a-c121-4628-a0ee-5cbf223f7d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff34cf5-a2c4-418e-bf99-0d67b91e46d4",
        "cursor": {
          "ref": "0ca344cc-13c1-43ae-8e9d-22132b97c28f",
          "length": 155,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "de9d3f56-914f-4217-b68a-f65689c92d1d"
        },
        "item": {
          "id": "3ff34cf5-a2c4-418e-bf99-0d67b91e46d4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5dfe65bd-b35d-4d05-94fa-ffbb1e05293e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d3cb5b-1a5f-4dc0-a2d6-51222c3f4d06",
        "cursor": {
          "ref": "b1c1cebf-c311-45a7-af41-7e7d3758cec1",
          "length": 155,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ab627bb2-2c2d-4641-ba75-8d0d54295e2e"
        },
        "item": {
          "id": "f1d3cb5b-1a5f-4dc0-a2d6-51222c3f4d06",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0f6ed038-d567-4ecc-8783-a431e7926b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a493b1-12ed-4226-9eea-7411ec71946d",
        "cursor": {
          "ref": "1fe95cf8-ee05-4d15-ba31-345adf1c1f97",
          "length": 155,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0ed0690a-5630-4d88-8a0b-c308db3dc7f7"
        },
        "item": {
          "id": "78a493b1-12ed-4226-9eea-7411ec71946d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "af35961e-9322-4e47-b5ac-a9c51ef4e12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aeafe60-4656-4da4-aaf4-b7bcf9464ac2",
        "cursor": {
          "ref": "b2888048-8897-4344-929c-3c95d0adedea",
          "length": 155,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5ee52f22-fa3a-4cf4-af1e-a2d0b47a67f5"
        },
        "item": {
          "id": "3aeafe60-4656-4da4-aaf4-b7bcf9464ac2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8b687a21-6f8a-402e-a014-b478d3b75d35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 95,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0627f4-249c-45ec-839d-49a71c82eeb8",
        "cursor": {
          "ref": "aca266db-b4ef-4329-93bb-ce4bd8679da8",
          "length": 155,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dcf68493-da61-485d-a4f8-79c52644a4b5"
        },
        "item": {
          "id": "5f0627f4-249c-45ec-839d-49a71c82eeb8",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "8922d5c2-720c-47c9-92e5-79d63bd86137",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 71,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb95e27a-1e73-487c-b2b0-f22ff86c82d2",
        "cursor": {
          "ref": "d4a86757-a653-4728-864d-46e25648693a",
          "length": 155,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "969afbe6-aaa3-43bd-992e-2bf3964537b2"
        },
        "item": {
          "id": "fb95e27a-1e73-487c-b2b0-f22ff86c82d2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d784a8cd-72b2-4327-9a11-7319457c03a2",
          "status": "OK",
          "code": 200,
          "responseTime": 2478,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06dd8be-6612-45de-b313-ec477ad5a72c",
        "cursor": {
          "ref": "7e22e9ea-fcd7-4b59-9a36-c73b5b15eabc",
          "length": 155,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a153b9c3-9b16-4038-9d7e-ece5b2e69554"
        },
        "item": {
          "id": "f06dd8be-6612-45de-b313-ec477ad5a72c",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "fd8cb204-2d76-48cc-9865-43e7bd95d74e",
          "status": "OK",
          "code": 200,
          "responseTime": 1190,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661ac4c2-065f-46bb-8996-67548a8eda9a",
        "cursor": {
          "ref": "afffce88-f74c-4061-8320-7afa3ae28d6c",
          "length": 155,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9695c928-9a4f-497c-b57f-b20d307c46fe"
        },
        "item": {
          "id": "661ac4c2-065f-46bb-8996-67548a8eda9a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9020aa05-1601-4c7b-9545-140f21a5a258",
          "status": "OK",
          "code": 200,
          "responseTime": 735,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db19625c-91bb-4670-9603-1c85e47a60d9",
        "cursor": {
          "ref": "461381bd-d389-44d8-8ac8-80137248f6f3",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "985c78e5-252d-4d46-b630-bcfe8d57f611"
        },
        "item": {
          "id": "db19625c-91bb-4670-9603-1c85e47a60d9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75eef946-4162-4e90-9499-8507f1d58144",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db19625c-91bb-4670-9603-1c85e47a60d9",
        "cursor": {
          "ref": "461381bd-d389-44d8-8ac8-80137248f6f3",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "985c78e5-252d-4d46-b630-bcfe8d57f611"
        },
        "item": {
          "id": "db19625c-91bb-4670-9603-1c85e47a60d9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75eef946-4162-4e90-9499-8507f1d58144",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561e465a-0b07-4516-b861-ada6696cab51",
        "cursor": {
          "ref": "e77bf2af-6437-44f6-bc7f-fa3cfa9c2e5f",
          "length": 155,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ccc3a163-3cdb-4866-b6ab-a81d239986a2"
        },
        "item": {
          "id": "561e465a-0b07-4516-b861-ada6696cab51",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "187dbac1-a49f-44d3-bde6-cfab19aa20b1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 67,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c68de86-1bd6-4500-8bf2-f2b2a2e704b9",
        "cursor": {
          "ref": "54e4e1eb-f36f-453a-aaf1-44fc6decd416",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8c8e10fc-6d1a-4225-9d8c-e0f42bcd2381"
        },
        "item": {
          "id": "8c68de86-1bd6-4500-8bf2-f2b2a2e704b9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "97eec5b9-64b5-4a3b-9cee-b09ea397886c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "8c68de86-1bd6-4500-8bf2-f2b2a2e704b9",
        "cursor": {
          "ref": "54e4e1eb-f36f-453a-aaf1-44fc6decd416",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8c8e10fc-6d1a-4225-9d8c-e0f42bcd2381"
        },
        "item": {
          "id": "8c68de86-1bd6-4500-8bf2-f2b2a2e704b9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "97eec5b9-64b5-4a3b-9cee-b09ea397886c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "d7506a83-449f-4917-a700-0c654564a252",
        "cursor": {
          "ref": "4d3656a9-ab3c-4804-9dc5-696cebc23dc3",
          "length": 155,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a0a9eb30-6ec5-4f3d-9018-142a33f825c7"
        },
        "item": {
          "id": "d7506a83-449f-4917-a700-0c654564a252",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d892c1b2-f89f-49d1-bf08-eca20515479f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "34d5a8b0-6356-4873-9daf-f9712353d51d",
        "cursor": {
          "ref": "928ac87d-b464-4aa8-ad53-d7c65baf2125",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6be5e99a-07ad-4535-ad1c-b9d3893b9ec4"
        },
        "item": {
          "id": "34d5a8b0-6356-4873-9daf-f9712353d51d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "94e22ad7-e3eb-49d4-86bb-aa06cf9fe718",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d5a8b0-6356-4873-9daf-f9712353d51d",
        "cursor": {
          "ref": "928ac87d-b464-4aa8-ad53-d7c65baf2125",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6be5e99a-07ad-4535-ad1c-b9d3893b9ec4"
        },
        "item": {
          "id": "34d5a8b0-6356-4873-9daf-f9712353d51d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "94e22ad7-e3eb-49d4-86bb-aa06cf9fe718",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe947af-ed49-475a-9361-8ac14ab1ff52",
        "cursor": {
          "ref": "6fb93d90-d384-4651-9d25-8e10ca9f861d",
          "length": 155,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0ff1351b-c6e6-4d3d-ae33-695435026282"
        },
        "item": {
          "id": "bfe947af-ed49-475a-9361-8ac14ab1ff52",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "4965b0b5-bbe2-4be1-bc2a-fee814449b39",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 60,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}