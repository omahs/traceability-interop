{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9bdf8eda-af8a-492f-b4b2-02663c6dc1dc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4d7c3330-d0dd-4b9c-b3bb-970f478b23be",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74d4cfad-2f6c-4abd-9b5d-e764d0b29d41",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "88684c8d-5aca-4426-a87a-92b9c67c11ec"
                }
              }
            ]
          },
          {
            "id": "dfd2ad93-45ac-4d38-8f0c-97c7a489e01c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "561c8d10-c18f-44b5-abf4-f3b60e96f1ab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "23698b1b-d63d-42ab-aa12-5f987490ff24"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d6b6b129-2aaa-4ee3-8fb5-d4dfb48bfa72",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b434f5ed-4502-41fa-81e4-ff983cfa70b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c568dc7c-0bd1-4cf5-8c59-bcf4cb5e0d95",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed62176c-0c07-4f6c-a933-846fe8f47f9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b524e95-1506-47b6-af86-ba95d23c1fbb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56841ba0-c7db-4142-ac88-26499de44a53",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7eb481a1-4766-4924-99f0-3248732a3178"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd0472ec-ac3a-4522-b8ed-c77a18134e80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8937acbc-b304-4d01-b400-0c8766a6c705"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9ca3458-a7d1-44ab-afa6-a9c5fc4b6341",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c5a1edfb-de6c-4423-8a66-8728174624a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fb98479-6e82-4a27-856b-f956c649f113",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da3300f8-c066-4709-9f8c-870c4a0a1c55"
            }
          }
        ]
      },
      {
        "id": "405218c6-6677-4700-bc5b-bbb493f4df8e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "785e2211-6774-4eaf-b7e3-222ba737a7a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35773b7a-dc9c-4ee2-8d36-cde33ff51e6c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "867aa783-af9c-4ced-adac-1d64a6fdd9c9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8f17d2-065d-4753-a2f2-d858eba156db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aab0508a-f076-4416-b67e-ffaedb3c9fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18168ea-08a6-49fa-9c6e-d1d86caafaf5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42cc377-950f-4bd5-b578-ea4a2c26ba38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89bc2670-46e6-4ec2-961e-899e51dbed5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f961d16-8056-4f1d-bc3c-2707858cd9bc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff48a66f-3edd-4e71-877f-751b71fb3cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbcd58db-26ed-42d0-a033-de6cf56043aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2119687b-a4b3-46e1-a712-898fe5113d32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a9e7fcc-ac8e-4c09-95a9-c4f071503831",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1a9bc2-9b91-43f6-8c0a-9844a39ffd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9eb2daa-3ec0-4041-9dbf-99a043d3c42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0daffce2-0944-41af-959b-9079e047149f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace4596d-26f4-4160-b147-bee2a9e9a8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0244564f-0864-41df-81ee-2464b6c5aa75",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b070036-22e5-4698-9569-03005a7751fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86f0d755-962e-49ce-bf07-b156dd086e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5933dbbc-fa6c-46cd-aea1-416366fd6bff",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a6d8bee0-c1b6-4bf6-8bda-dc17fd4813fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b4e2f59e-cd06-42ea-b420-ee761bd2f7be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f619e32-aeb0-4f3a-8c4b-8cf2abd84c6b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aece73c-3f13-4b0b-ad00-f119e3c3dd3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "67b40717-8749-4301-b7d6-9bd2ab9a669c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e73d7306-4793-4e52-b971-fec85ec34bcf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e2970924-ffad-490a-947f-160d4700892a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06734ef8-424b-43b5-86d8-195f2fda50c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13072cdf-71fa-42e2-921e-a8bbf892060d"
            }
          }
        ]
      },
      {
        "id": "97c3cb2a-27ba-46d4-8829-a13e783863b8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "59581f2a-3465-44f3-b8dd-885d05876d98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14c45367-970c-4232-811d-4275680432df",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0acd8161-4314-46fd-b169-d4f31b14f3a1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50178107-6471-488f-b5db-75eaaaf4b4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3455ffc2-0718-424d-acb5-06535cbdc4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edebdb7c-1859-454f-a651-9d64dfacbf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cccea328-8a43-4267-9d49-429bce7f8632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ee2ade-a114-4f55-aca1-f3281ff077c9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ce83b1-c5c1-4319-8df7-8f8a65565308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c8380a-ac7e-4bff-89a2-62b0fbe18ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e5e2c3-47f6-4506-b12e-7fdc83d78f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f455284-85e2-4df5-9a59-fb918526a50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536f0c42-18c6-41e0-8d0f-a02cfe8ce990",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfed03fb-24f5-41bb-bce1-9d3597ed9744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198d4c65-6473-458d-809e-a68b52115725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ad85e3-9319-4c2c-9d70-78a13a122450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0065048b-9e06-4461-b14f-312a7f480459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efca27b-f846-4ce0-af26-edfb2f052665",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2ca4d3-6cc2-48b2-944d-0905d5eb136f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d354e2f-916f-470e-896b-ace109b811f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4564465-d39a-47f0-a128-f244166f1255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e92d5a5-e0f0-4d39-975a-5088bb3fc37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ff5f3b-a783-42f7-96ec-f0f3e665fccc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf856190-ea6f-477f-9a8c-801ab07457aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e584dfa3-2ae0-4f2c-9824-db33e38784ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecf02c6-4a80-4d6a-a206-68f25cdd2afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6533c00-a8fd-45db-a6cb-08c6373c13a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47eea3d-589c-4709-b6a6-24c2a911808e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ffacdc-14e1-4585-8b89-71fa5aa1e14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a43b3d0-b91e-4a4d-a202-83403228e876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9762b2-57db-4d1a-9e45-6af327712ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09f98fb5-534b-467a-9ec0-ac64d2d83190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd0c093-97cb-424b-9d2d-c77b7499b56d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad08d723-91dd-4391-a86c-465d79b34b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6287b5a3-d1d4-47aa-a8ec-84ac8c0707f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365cb09e-82d8-4bd8-9b09-1d9e6a8378f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eb39ac6-e353-427f-b588-541efb70adb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20a06de-5751-4464-bcb1-71968fb85a62",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5264e624-f84a-4977-83ce-8fb449f17934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1598e0ef-0009-4fac-94cf-772146bb476a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33508408-9cbc-484a-a872-2b2a986fe1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9ef2dab-7e9e-4b8c-88eb-16757ac6d8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caec727a-800b-4aeb-a5b7-f4e9649e3682",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6cff93-5294-43c5-9bff-8b948d355670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6032d166-31b2-405b-998b-bd8ce4f3570b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b29458-3665-4a77-96cb-d4041a37b12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a709600-96e9-40c1-aaea-f7c85d806969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa31e22-acb2-47b0-9a3d-88d6b3a43f28",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701c64b4-a1a7-4fdf-8ffb-28fa1e42a13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bdfe33-5508-4d75-93dd-4b6c57996f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2d07e5-200b-4910-9681-dec5fdfed9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89d6f33e-53f9-4043-bd04-b385f7cb67bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963a7d81-c0e6-4dcc-87a2-44b8e5727bc0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d86ef05-2283-471e-af1f-1f0b41995a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e738b49-388b-49ba-b984-693537678df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afb9039-5f1a-44a3-9d42-240806d13796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a159c581-c277-41cb-9cfd-c28d468e9656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6827906-3e7e-443a-be42-a4ce4bd535b3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d2f297-dba8-40a8-badb-10462ff21a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9afc1941-bbe1-4de7-b045-b8d46212215c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b8d90e-8226-4224-9cf4-f0e0a6a4e230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b60785cf-4f4e-4ffb-8152-b036354bc348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b784dd-5476-4fbc-b93f-2857cd19be76",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b71128-77c7-4618-9a6b-336f58722bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f41d86d-7305-42ce-bda2-0f785572804e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9471c9d7-3dab-4225-a717-b618fa70d8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88e07673-74ea-42a7-9a62-62927e3bf53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08262a84-750c-45c1-96a4-e62f4be8e3cb",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80ad0ae-350c-4398-b993-8903968519ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4b0cf1-77bb-4b49-8650-0dc7cb03b2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d837dee-9e47-4e37-9a66-2877e5a0695b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae956594-21f2-4a53-a7e3-e4915fe13981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5833d4f0-fa7a-4e6f-98b9-9224d3a2fd59",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b082dd-d5e0-4432-b5f3-61ea298fbd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e073555-3998-4759-abc3-01c279779e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04953da-9079-49d8-84d3-72aad3aa3c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27a502fe-1ea3-4b89-8059-f28cf878633d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f952d076-a723-44c7-98ca-6660be5802c4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495e2727-af37-4c16-932f-695ee5a144d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51334093-4011-4e4f-86e8-f0be484c21bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e118e81-22d8-4f4f-93f0-2d6fc5eebd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ad03d14-d46a-49a6-948e-953c7e3fdf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe48c495-c64a-418b-840a-f9fc1d1cec29",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b068759-d5bd-4f8b-b352-8189778c1e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583a1a96-2d45-47f1-b146-f13ff43fa57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483c6c4d-80c9-4b84-8092-afc2f867b0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7bf3b20-1d57-4918-bb4c-3dc8272a894e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668d07d1-5e1a-4b9d-ad98-1fa71e57cba2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fca959-b611-4bdc-8108-6ecec65d9c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03bf5ee-0f3b-4915-931b-f355390269c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a037f4f-c48e-4b6f-8cae-adcf8ff36451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16719c05-8ba6-43cb-ba72-a71e2fb34e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e035875-0860-4c61-899e-4c5a938209b4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b5412a-075b-4fd2-af37-43a5f6bdbc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f49dda-9c6b-417f-ae67-34f3c27d60ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963cb86f-d7fd-4390-a149-d7f5f4908e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ec59ae6-60e7-4382-ada3-2510e24171c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2fb8da-38b4-4018-8c97-d1fbc92ddde5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa678b3f-df1d-4900-8b60-daa79251d851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ad9439-4f00-4f03-96de-4db0bbacf796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ac984e-c839-4418-9b00-4a872b233965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "af84cedc-938e-4d83-b98c-635bf259ca44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a79d511-abb5-4bc2-aac1-b622a2f590a3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7955818b-00f4-46af-b936-a0036350dc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf8e23f-4cb9-48e4-abfd-24ce1b346dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42055a15-9b2f-4336-b30c-0c90e57b3a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ecce14-3542-468c-8a91-320ddbae0502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c9fc90-a635-4c6e-b694-ad996a12092f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4366d266-a5df-4b6a-9589-9a18d4142582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a63504-179e-4f35-90c5-1162c1148275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57755838-70e0-49d3-9196-624a7268272b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4d18e8-12b3-481d-87f3-2fcb3dc92ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f36444-89d1-4aea-ae4a-72ae21348821",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f147db6b-e693-4dfc-b73f-83e32b61ea57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4226aa47-e4ca-44ea-9ddb-49bd3fb57240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf00503-7dc7-4800-b51b-02503cb6a00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6c00e0-7ba2-4601-bd3f-2c9124824850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dc8277-e705-44d9-973b-88fb0fe44ac6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ca7794-96b6-4f94-b7fa-deb8b9c29cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a305b2-37fa-4aee-9be6-cde0d6a8e68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837b54ed-7e6e-4619-9345-a4a4473b4cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85e15b0d-2f7d-40ee-a795-4d1e836231e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432f3682-a2fe-40f3-b027-d74c387ae558",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637b9835-0bd8-421d-894a-4cefea6cc5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7be983-e25f-43d5-95e7-36c5098c1507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d2a43f-0cad-4275-bd41-9af736f79fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba03ae8c-1a28-4f8d-a9a6-0459f7ac0d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ace1d01-4097-45d6-be44-bfa7dc662aa3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37361ec3-38db-4266-bb11-08c41758b5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6e44d8-bc81-4850-a2d1-54910a64d403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bdba17-6528-449f-9ef9-b1fa6e4f2b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9442bd-b30e-42ec-b6e4-31ccb75fd4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b969a99-f0bb-4ede-8414-700fe82d41dd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfbb6da-3083-4a73-ae67-c0acb11ff007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0430c399-dd47-4c2d-a2bb-3f8c46974be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3d26ef-8833-4b7e-889d-7c430b02a41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe9f504-7e9d-49b9-ad15-fb206bbc66fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3739eb47-f580-48e6-ae76-a550f580168c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b33a4e1-e7bb-4cbe-a315-f697228ebd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12af1869-1677-4f02-bc29-07cc447f8f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee71ec35-605e-4d5f-8f85-2be7982ae0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6937d37-738e-40ff-834b-44703929d179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d23df3f-0982-430b-9566-7e1648e32c8a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1851f79-f4b8-49cc-a20e-979a6436b8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7363cf9-bec9-4cbd-9f15-50c0da257267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95014c8c-10dc-4668-9ccc-614f81dbad4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd102152-ef74-46a9-a765-6c9b3be0ff42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5094f4-764d-44c5-a0cf-a689fb27a703",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109b7eb2-f3b9-46d2-a3a5-5ce88b89e69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710945dc-cd7e-4518-9902-e10300b6f356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4778c7fb-831a-4196-bd9d-ded184bd8b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "424f7502-9abc-4a19-85bd-f7a0026ddc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd95b609-a0ca-4d9f-8572-869f44e20387",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d803b8-565e-473e-983e-e32d90cf85e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81fec92-d9a1-4862-bbaf-a851d09cec70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5269d58b-7005-435d-a5f8-26f63a2a431f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d725c255-f79f-4130-ae9c-b360f193c078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f87def0-93f1-4abc-bd8f-ece9a0bcccea",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c441e94-7fe4-442b-9626-1c0c7c0544f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781f9591-afc2-43f5-ba3d-a8baf3bf6660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7405051f-86a2-4d39-bf23-8351261ed7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d98b12ce-e70d-4da9-b93f-ecb25980fe54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae4b1a5-0dff-4903-a482-d1c0d90df99d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072aeb2b-435c-46bb-bb43-c2990c122285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6e56ea-a17b-44ea-b2d1-d08a04729f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c0785b-ee95-484e-9ecc-5dfafa10f1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9057c152-2f90-427d-8b8d-d5788808ca98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00c8c66-8282-40ba-9ade-faca356a2a53",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0046c5e5-2ac0-49d4-acff-85ba905f3b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d937356-d213-41d6-9de8-1e1035a75aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0650bdb1-68f8-4696-a701-19233b689d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc944db9-526f-4c98-942f-99e16c05293c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b60c07-92b2-4f6f-bb80-a9340500bed3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13eaad38-56ce-4119-8bdb-35bce4ebdf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf28d66-5a6d-415e-8bb0-d0f4058db187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65cfb8d-87aa-4552-afa5-7f77ee1700c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08ebcdd4-4a94-4d86-b778-9d7d75d645ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834d59ab-e568-4644-a428-b7afdae799f0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa19b033-dfc3-47ec-9d92-d18740d08dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07fce02-d080-4688-83b4-69edcb67043d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be03e4b7-d071-45b7-ac74-cee565341bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "223ea1bd-b31a-4db8-9886-88879ee3247f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2811574f-ed10-44d2-9075-46b60c285a74",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf9d78f-84d5-40a8-920c-982faad66bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d4bcb4-2aa3-4677-a88f-0ecd0c693026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44647588-c11a-4e19-94b9-13e94f7f846d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "82d8b8bc-db3d-4299-b32e-4b9858fdb848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c5019a-c6b6-4507-bf7b-dd81b61477fe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00721ec1-29fe-4991-8de5-acb96499bc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c06e757d-18ea-4a7b-8070-f24d142132f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362de397-9325-40d4-a089-69592fb4db7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d670417-d65b-4058-bbdc-efba8a762f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bbc42e-5219-44b9-baca-cc24397df638",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e269d1e8-9e4b-4790-aaee-fab7cc5bb628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897edc12-d9a6-473e-a739-413c32fb25b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcee080-4d7c-4bab-b8e2-258aef9bce1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a20d6c-c71f-4af2-a99e-1ffbb6347375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf3e1d1-54b9-4695-99eb-7b6589339609",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7e03f5-6edd-43c1-81fe-15d0d05e0d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7171490-8788-4413-8c34-80418127eae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1778a8-7778-44d3-a1fb-68b3d7b651ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5abf8e5-d5cf-4be0-ac03-5638f597b383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47df9c84-fe05-4622-8099-71543e9e1899",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc29a3f4-7691-406a-98be-79ec2852e88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66aeded9-2b7d-4918-95e6-d79b12e467ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a395d979-bc24-447e-bc31-7081a7dc55e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f91c6f24-da11-472c-a9cc-05528db38098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01763659-2913-418d-ad3a-c5a055150634",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e27c046-f505-4e9a-962b-03028c2da78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935026e2-330c-4520-b4be-9abb39190f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00587350-9dc9-4eed-9705-b22a7bd2ea59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "02e68cd6-e2aa-4b2f-9455-c3dc00cb5988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec9c662-c9c7-457d-9c31-6614f8ea157b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9e1da9-c616-4713-a0c5-e262606c9597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac38fa7-db5b-42a6-acf7-2b9a7cfd2f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bab794-d72d-4abb-a79c-901fc1db4938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "788f795d-f197-4fc6-ae01-496ebd24a32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89289dee-930f-49b6-857f-760d8d3cf85d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e689fa41-b3a1-4a51-abcb-25e57ff140f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78bc8422-d51b-4e68-924c-bfad32bdd54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef227280-4b56-4cf9-9966-ef716857ef44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "686fd1c6-8f9a-4fd0-b003-969c07b9293a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5887a558-e615-4a0b-932b-6697af556915",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc67686-e186-4e79-997f-e39c27d913aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1d30fb-c2ba-4059-b7b9-ae838f3dbecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7dbd76-3a85-42cd-8171-6ff2b01d20ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2be82c3a-797a-445f-b6e7-58f3c9528d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98744e76-f38a-4db6-b35d-c3accb694be9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d0ffdc-f78f-4a98-99ad-5e590e91fcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e41ea88-1acd-4d0b-92b5-573200c6942d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fd0cdd-2660-4b9f-8032-4dcb80aa8ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6886ea31-0c81-4db9-897c-050c860b9db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eed5f3e-d8ef-4c95-92d3-70d79d06252b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67b1fed-8024-45e7-96a4-6cb175bb7255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5e08ea-611c-483e-aafb-c675bd9a5b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a245d72a-b87a-4fab-9c43-3023ffa54aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "79992238-c597-4953-884f-2a88d4ff8698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f4dabe-89f7-43d5-8d3a-7d65a75838de",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6f2080-1b8c-4ff4-8bdf-1431b4418e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf85111-b396-49f8-a077-3cec4854abb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8d9abc-be6b-404e-a1f5-1303074ee30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09e525ef-d3ab-4929-9271-e392309629b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df466c7a-d582-46cd-90c9-7c7dd88c5ac1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f5a29d-42ef-4f2a-8ac3-a016da71a1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e12205-f7e6-4805-b9ca-89ed21afeeca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327da135-22bb-48a6-907e-3aa8d6dbe1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed204aa5-0b6f-4426-829d-8cb1cffd7223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c9f56f-9f97-4e01-a53d-d1893f399765",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24199844-27fa-4115-90e7-d8cdfc261a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca937cf6-b0f5-41d0-a953-72dc6f40ebf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974f1433-b632-47a0-aef9-d35948b49569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f901ccf0-4940-4f47-a038-2a127ec3cdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f69ed90-b423-4c86-862c-63ccd90fce79",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef08cbb-fc4d-49ad-bb82-fb5edb75674b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef706d4-724e-44e2-b8fd-700ba795da0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9920eafd-6f29-453f-b334-819b68795b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4af067cb-3879-4749-b7b6-35ef305698a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e74ae72-45fc-4015-a22c-f515a62bc713",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dfa076-3427-4725-9c99-2421b2d91779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523d3b3e-2ff2-490a-9f5b-62c8df3acd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5841fd5d-ee2d-40e9-9728-2e917db2e04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f64569a-8b1b-40b1-b5d0-32eecc69c6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e00137-49b2-43f2-ac42-06b07b27ae6b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "919e76fd-63cb-409d-9279-50b54a11256b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d189322e-3f46-4d0b-bde9-44f77f8d021b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bb6317-9f11-4c14-9c26-11e6200b6fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b784f99-c00e-421c-ba2b-86336c86e45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be01ea7e-7d49-4a69-8354-aa07988baf94",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2434ffba-048f-49b8-b521-eb0b56b3270e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e878f72c-1c20-4138-8d49-48bcd604821b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2660e034-79bd-41b9-aadf-cd8c95523818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57b56db8-873c-4839-945b-403209fa1bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81081ef-d925-493d-87b8-afb836e4ce74",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65e956f-f97c-4b0a-8109-604f88f4d900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4382d8-a4f0-4337-bd39-c3ad9efc4c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb135790-4d5e-435a-9d5d-7b3a0cd30ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9088eeef-d00e-4361-85ce-3b9148bdc2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e8facb-f0c6-40b0-8b75-f16b1ed40143",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252a6705-729c-42fd-9dbe-d7d900158f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cb4186-1630-422f-9fc4-39c4d9e5c5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1479749-724b-47a6-b658-fca214d54138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "348245f4-fb9b-47e1-90b9-5c697960e038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440b32a9-ec65-470d-851c-487f27f24ec0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882beef1-4f31-480a-b4c0-ebc7dc8c5e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fcbfbcf-94c9-4fd3-9755-4954b0ca4905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef02937e-e9a0-42cc-9a81-3bb4a72c3708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "224d4994-e819-48fb-b664-7cc9ba3f4785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598a9a35-2456-41bd-b6ac-54309408dd2e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91b80ed-06cd-46a2-9e8b-f71ca2b2d160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563ffb16-836e-4292-9686-baf88147f654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca24d602-2e2f-4769-b023-b50479edeb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2990ded1-f5ce-4dd7-ad5f-ebb74e8e833f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf3fab2-d3d0-4db8-8bf9-3ecff5635856",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bdb919-0acc-4b31-828c-05a75bda1e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871a2009-cde8-4dae-b38a-55128977abc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9161be6-9c62-4424-b47c-cae3f5a3a260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "998a4069-b650-4fa1-8340-2244d81b770b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3d4108-605b-4319-a346-32ee096c6aec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af7a42d-6ee9-49ce-be51-efed4de82fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54df584e-288c-493d-b9e6-0f9775ed8f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f961d6-dde2-47f8-a0cb-0ab32e5824ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "52b826e4-8519-43b5-bbf3-24e632a1c3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616ce671-e1e6-47b0-8a9b-f32e1156b0a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880c27be-459d-4d40-b191-d3c79fdcf3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598d2b01-6e36-40ad-99ce-9e81263cbc8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ffdbcd-f039-4264-842b-ce970f271a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "19b9671c-2a68-41ab-bbed-391476d0f92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8504d7-0865-4053-b208-cc94ad8b8be6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519b76d2-a703-4bd7-a821-ed2e871ddab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f02562d-b85c-4cad-9956-5ef3187441b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b67d9d-f2bb-42ba-8187-19cf3a9453d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e566824-a464-486b-b8f1-e342d779abff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e091a8f3-3f8d-41e6-95c9-be4e1ef471e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1a00ca-f08e-4f85-aa34-ca8505e5bf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300fd77b-e24e-4196-9bd0-47b0542083e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61acfc90-a36b-469d-af20-c239807dd782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a52cbe47-9634-44f4-bcb2-55cce1a631de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0697cf2-3d86-4167-b94d-16bdf6ca03e3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1503f08f-8248-4dd9-994d-7cc633c1c047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4aa864-8a7e-4476-8ae1-703cc013ecee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b941d97f-350d-4013-b8a4-2feb2faa648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f36d3cb-d554-45b1-a3eb-c20bd987c15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3c5fc2-8f49-4a12-b140-833df3cefe63",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5055b572-5573-415b-a925-8ad1c6490d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8689693-6b3f-40f5-b0df-f99afd778a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8f1233-106d-4d0d-aca4-5776481c004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1da69e-96bd-4c7e-96d2-95af27fc839b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba9dde5-4443-43ef-8b3b-b7215847b8f4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb391eae-3f6f-4ac6-89ca-3c75138208e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410f596e-5b31-4bd2-be14-c633e46c63c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e935c2-b6e9-425e-b4bf-81a6ebff8423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1e00c1-4a00-4ecd-a291-bdeaa164ca07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b9b1f8-c0a7-4446-ba37-484c4cf61b03",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94372838-5753-4555-a144-b62c276eee45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacf009b-7469-49b6-90ca-c1e9c1436111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e493befb-0478-4424-b057-65dd80209a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e918ffe1-d1b8-465e-a7bd-bbf88e8d89c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176f37cd-6333-44c8-abca-6bb60256c834",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc67e5cf-7572-4a3f-9d18-edd29d3f84db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee14e24-9ffe-4785-851d-76cf32dba048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146ec817-63a7-4ede-8a61-5b745ac9f06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4d8880-bea5-46de-a4bd-e12b9aadbb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79281cf-25f3-43bf-8651-b72504b07dd6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b82a7a7-ecc2-429e-a49f-6e7b31ec29cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879384a7-2870-4b99-b75f-aae3a23f96f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a38d22-c515-4d1a-b77d-6a231064b1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9650b53f-7a01-4359-9bfc-b60f10e7fed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bea6ae-3257-406d-8d81-5519b5609df0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a6d863-f82a-431e-88f4-8a1adbfa06c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea11e13-6247-4444-9fee-6addb022a408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c18110b-8150-4dd8-a23f-202a01ccdec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "825699f8-973e-4b5e-bd12-5cdacd0dbb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5103536-b783-4f9e-94ea-47fdfde102b2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2370b5df-36fc-4f6a-9c68-d751820c4735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741a901e-1676-4e8b-870d-5d89a1f51775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610f5a35-dbb6-4b2b-939d-714f50ace5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48613843-56d8-4ff8-a8d6-4e5ae1e9e2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1075866-32c4-4e01-a872-dfc02aac1e6f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713e87c5-b320-4207-9f8a-f079c593b953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1f77a7-91a1-4ae2-9208-6b6ca584eb13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f34904b-f256-4f83-aa2c-1925e502daec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0816f1-c943-43bf-992b-68db8cf5bcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d868f5be-5216-430f-a20a-5677e807ab8c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06626738-8f33-4640-874b-194c3c687cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9980397-d399-4c95-bcd6-bb20a4817da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f688bb-3fe2-4fcd-9215-db17ba16c689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b85bb6b-0598-440b-8458-2f8c6879f2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b2eb52-3b8b-43bf-95c4-20423c9abb12",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f52eb5-bdce-4ad8-a225-7c6f43b38196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e612c706-a40b-434a-81f9-ed92dc5583dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b468e3ab-03b2-434c-860d-5340089fa59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47190d40-99c8-4aaf-a004-97af1d14db67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de955c7-043c-4fd8-9d6d-bfe0ab125c76",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937704c7-26ac-461e-b805-0123ff72d4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1fd96a-7fa3-46d1-a74f-b240e07dc4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c85ec5c-f5f9-46f7-9aaf-64dad84b593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "416a67fe-3749-4ae6-a326-795785bb2c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2a6c8b-75c3-466a-a04d-8464efe2b411",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd2e311-e111-4c6f-be8c-cfa87674dafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c24fe45-98c1-4ea8-8dea-5fa98f0fa907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f9bb32-b82e-48a0-859d-1312feb8822f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "052f0e98-1c51-427f-bcbb-dc7b3ed03893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7ddaea-9a95-4963-b321-7420278af119",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ad5531-c0f5-4bc6-9104-fba6a80ed4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e108a7e-95e5-403c-9e8c-745410eab133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e127e1d-6645-4514-a484-cb076e271183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad37a823-caf3-4cc6-8e75-504df264f8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbdabc7-489b-47e2-acc3-44edd1a6fec3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee983fd7-9de5-421a-9461-ee64b6cd1d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45c1de1-2521-49ad-961e-43c46a056f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85f03e2-2672-47bc-adbe-fff2a50837db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a13f0456-a297-4040-a006-e81f3efb9941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5538a8d7-8374-467f-b815-f6badc5e71c3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5e8d98-8ef0-42a8-9922-dbf358c11f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662a5788-972a-4da1-8462-abde32e1d799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85504f5-9a34-4773-8782-710ebc177bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b44ebacc-8c2a-45c7-80ad-f0d43d7c59b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94316be8-a5ac-4134-8741-5b85597cb317",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f37f9a9-4a73-4d73-aca0-760022e97eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becc9a9c-c155-4ee8-b114-7fb5b511fb13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3987fed2-d558-434f-b870-a629a90fb884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a054dd-d35c-455b-a958-9d16b06c237b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b936459-9c6c-44f8-8f34-104f72507a02",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28120cf-2596-42e0-b84a-910614129600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4064a8d6-e5af-45c3-a3db-c15dbe115969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de6c6af-21ee-4958-9485-fa683f3a08ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff2ff37-8c8d-4c21-a97e-2f42c012f588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd752978-9073-4b75-b19f-b34803a77667",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a29339f-7948-4028-9819-9c0562f21912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cea9c2-e0f0-4e98-90ab-4b3fb8663875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28312f0-6f55-4375-8b86-cd24d8238a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eabd9b84-a065-4e65-9381-1a4b5586200a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805b9129-c751-40c4-b7bd-389b0d83d1a8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edf7bbf-7d11-4244-acb6-97f0c3b31c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d984d93-2156-4699-9d15-25faf269aa56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0953d71c-7514-4843-b02d-749599717dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a7d31d-7fad-4a91-a398-cf6033418ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3fb692-48d7-4014-a655-d23435c2f487",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960a0c16-2746-4c67-9a95-1ae8915fe33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1af2c76-f4d7-4109-afda-4c99ebc93c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd07976-03b6-46a6-a7f0-ff9638d96a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56af5b08-e961-47ce-bec8-185030303685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9289f607-9b4d-4e4d-b1f9-73a07e90be3f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe978f4-060f-4d0b-b6c9-a4b1138592ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842d2b08-c0b2-4652-95a6-801cb5b79b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2720fcb4-ec94-4893-a82a-b39c63dc3e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4f3bda-6458-4831-83fb-5640430295dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4273a476-4a71-42c6-9777-a7d0f24bd978",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a306e0-a4d8-45ff-99d0-b7931eb3604b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba7a62a-3b86-4ba2-88a3-d3651a5359aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c7581a-f36f-420a-bc19-dc251443dc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8efe9488-d08a-4385-9d87-18ea58e27f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007ca623-9072-4878-a3a2-a6d2cfed20f7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84920530-890c-4236-9713-4eb143f242ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37169224-952f-45c4-bef2-94d5845a45a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93ba737-e272-42cd-81cd-8f647fe58361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc2eecd-1098-45c5-815b-26024dbdf175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd16876-1c3d-47a7-96c2-6e07a13bf7af",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fd0b3f-8b9a-44b2-ada6-fd3dbc32d484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8874f58c-2125-491a-b201-795a6f31d37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9271580e-c3b5-4cb7-93a7-aeb9ef051825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "520819b7-9820-4d18-9596-3c5d3dc3a185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d99fae-8db6-43d6-9cfd-6249066ae301",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119de082-2e07-4091-b256-07eb54221a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634ff41d-3f7b-4310-8eb0-0621ac1d4286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd551e65-42be-4c10-8af4-2f2df279861a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5301963d-e90b-4bc5-b8a8-f4d7df7b3192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35626d3d-0cdb-47dd-8ad9-5b7726ab2e63",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edb632d-8f57-49ba-a13c-7243c560d87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11b356b-03db-468e-9cd7-18b0c184a0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a86982-00c5-421c-b9aa-9ae3aea5aa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f07dcabc-430a-4a35-bdae-2113e3dd36b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d385dd-99ea-4488-9632-9da66c7de447",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fdc4fd-4374-4ffd-ac36-acbbcf219a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2aa855-3783-43e3-abbd-13ff8eacda73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451d4771-2273-4bd4-a7c5-87e563eb3113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7576298d-0838-4ea6-9ef5-86588fe3c0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee04ddbe-f642-46af-97f5-ba62849b9e9b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85535336-2659-4413-9a66-ac32653b5cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41634ee5-e53a-4f21-8ce2-89f95852e317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de45c87-9bee-4981-8356-5fba3c70c451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a6a279-ddd4-4c04-abd1-86ec6deae51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756ae7e0-3235-47fa-bf6e-529cf2f9e027",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1640ad0-ef7b-4d82-88cc-954fb5dfbfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926dfafb-6b81-4ad6-b231-b832af316e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868c6a0d-8bfb-4b18-8fcb-6679eff4285c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3224427d-26c7-426d-bbb4-f0e6b7b7f2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6fe975-4215-485c-a38f-9532c79dcb3a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352dbd4d-9cee-4ebb-bb95-211540434276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d19272bc-0159-44c5-9d14-74c0ef1fae2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d9220d-b76d-4993-9e5c-0ce3a2297cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbace0b-d7c8-444b-96c3-830d118ab7bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4f3d9ec2-e19c-4814-b01b-e61ad62ee33e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de0dd1e8-b760-4018-971b-959edad70131",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0284064d-1b99-414a-ba52-741fb609e7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4955a9e-095c-472f-892e-9f94e70ff94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2d66eb-6efd-498d-a4dd-dbb61149df4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "147a3c5d-50f9-4e7e-87e0-ea54b2ff6e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd4bbe7-121b-41e4-b655-89e4daffcefd",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214e84b9-593f-4220-99ec-ba68d7eb45bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae440e1c-fc07-4d05-8e5a-973ac8f0322f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39478cd5-d346-4e55-9b8d-30c48151bbab",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "4b4d0ded-7409-4d59-87b6-19ff46efb19f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb4715dd-574d-4725-889c-5fa913ef7e43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7278136-0186-4765-865b-242e79d8cd21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f764f05d-feca-4085-a2d0-913f34a5a4b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0f8a5fd-117c-4662-bcd8-8a94d6483968"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c7017b8a-8eb0-41dc-aad7-6d3dc849de59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3637c823-9381-40d8-b1bb-b2f0bab4cd1c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bb152a4f-9e02-467f-a867-490506694a78",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57b383dc-a262-427b-bd68-dc4038c0954a"
                }
              }
            ]
          },
          {
            "id": "37f482c9-bf6b-4e79-b045-b4a466a8057c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d37753b-9bde-4023-89e0-2874ef2faaa3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b5d608c-08c8-4f40-ad7d-701c95dfbaba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fea074d-f4f1-4c80-91cc-1424f936555d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92461529-ff23-443b-beb9-da8620f7d125",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "edaefba1-3ebe-44f9-a9fe-52ebe99d1a10"
                    }
                  }
                ]
              },
              {
                "id": "70743446-e8c6-4965-9d33-4ed8876dc1d3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85c4b638-c1be-45bf-a5e2-9ebffa214e71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e888bf10-75e3-40f0-9fc0-4f56694284c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae9b9f3e-c9da-4377-9e83-59c95b30ec9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cea07054-db95-4f16-bda6-8e654e6406c9"
                    }
                  }
                ]
              },
              {
                "id": "320074e1-36ab-4b1f-9f1d-6801dc86400a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5532500-c17b-4449-bc01-14e6f7e46d91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcf15c5f-d717-43d2-82d7-ff0e5a62d279"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03de06ee-5e48-4ddc-9d59-f38b18710442",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "78a41811-47e0-4a75-8af7-cd4d753d3296"
                    }
                  }
                ]
              },
              {
                "id": "2ccf6fef-ff1b-45de-84b6-f44c7e2430c0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aff52c82-67f6-411c-8c55-5aa818d6633d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d67f22d-d864-4a54-a43a-b6c0afce5d3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73612e9c-69f5-42a8-bdb6-65ae3c8ab11f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0d346b9e-12b2-4650-93e0-39e568b767b7"
                    }
                  }
                ]
              },
              {
                "id": "ada15cf3-549d-4f41-b86e-f85ac782b8e8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98877a3b-d2e0-4864-b874-b5c02c3626ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58c82523-6dd9-4cda-994b-4fb1162ed67e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9acba2e-ff19-4cf9-8a2b-9f01e727b3f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3f21c53-d6fc-4993-8641-57c4fef27be7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f27f3a09-ed1f-4d7b-9ff0-3b1e087ca4c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19ae7702-f7d5-428a-87b0-bc1fbd8047c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8434612-f79f-4383-ba64-c50c17775383",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2b61c05-a5e4-4ae9-ad4a-a6c358fff73a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ae4f43f-4dfe-4c2e-b33e-74dc72ce19cf",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8cfc0cc7-ab08-4841-879a-4a9db687a990"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f71e2591-4f30-4f7c-b9da-349e6f604c2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a51395b7-aca2-4e09-9cd6-ac6c201c22b0"
            }
          }
        ]
      },
      {
        "id": "e29a6639-08dd-4f32-93e3-e7588bb00639",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8adf0d2a-9645-4606-ac7b-8f91de8954a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c26532d-48b8-404d-be96-2503fa0ed120",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6056243f-2ef6-4745-bdd2-102a5e1ffd38",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e6c08e-841b-45e2-abec-059ac559a0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc19583-0d33-4b1f-95e3-06b5d8cca2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43963fd-b965-4e01-9d0b-acd51db0c5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f65c9d5a-5cae-46c3-9e67-cf003e2eb999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1d7ff7-434e-4abb-96f1-784ecf0d7789",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf24c16-3cb6-428e-9eb0-ebb7467558ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d260644f-0754-4c08-b438-13a64f79492e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8586be60-bfc6-4d9e-9b51-8681ec55d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "978c861d-e10e-4221-9d43-33aca1288f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c09adc9-d286-45d9-8647-11c81539e2d7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34eb35a-c3f4-448e-afcd-2ff3e9598cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18eaaf06-3d1b-45b9-a1b2-8e142d5a22e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ed3544-89a4-4035-a831-57a3c4221e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f81abe-8a83-4db8-9318-fb6151f9ba9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb214a9-acc2-4f4b-a5cd-1ac364544a09",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec8b63d-4ebb-419e-a87e-552285ac180a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf73685-173d-4b4a-ab71-403badbce0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735acfb2-db54-4618-ad74-2ac27443585c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7028a2-a15b-410a-91cd-37718828a9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5223cfad-b726-4d1f-8fdf-173cb0e41ba2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db2afc2-0ea7-4fc5-9f52-c0fe48979066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1518f82-a7c5-4334-bb64-271e3adce59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ae0013-f240-49b9-b8c0-c97193c183f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "457d6927-284d-4c47-8aa0-f3403010dbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1938741f-7d3f-4442-afd2-7f74b68d7848",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb48f63-1e25-4957-b7a2-b097ed5194a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de46c9b2-fe0e-489d-8a04-64890d24f037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f95ddad-6698-4abf-81e7-7f5d6be0b05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee972e27-5f43-4ab2-8555-3c7aad7483ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be855230-2f78-4428-ad55-052535524512",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950f4928-3bc0-4071-8c87-84d2c0bd15e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa4b46f-a001-41b6-bb5f-27e268c17746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ba9aa1-d380-40ab-8b6f-c9036bb83a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5109014b-ae49-4ff2-9321-772362f3ba71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f5128e-b252-4861-a155-90aa1c34c9af",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd815a5c-c560-4156-bddb-9479604fdeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71beb1d1-fd49-4b73-9c3c-3ab214d4e009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b7cb43-6bd6-4bb6-b4ae-0766cdb048e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "caad7214-c443-4f83-bcb4-ee0649a37b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc26a046-d2b8-4837-a7a8-1baafd52bab0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309400dc-8211-4082-ae6b-17d0ac1e8699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8aad2f-e90e-47f3-9dc5-7e045966d052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bfb33a-9119-4046-b95f-7697dda7fbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39115088-35ee-47b0-b13c-43236e41a0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1004a3-2ed0-4d63-9428-2ea2418aa8e3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d0bf0f-ffe3-4d72-8cf0-62cf59fd83ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f35024-9fb8-44d5-9f0e-3ebc7ea2ded6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa47f20-0d15-4b17-8f9a-6d0d42ff7275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df2e17e4-2ff6-4204-9760-2195c660a0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf2dd23-20c6-4a9e-babd-d6c2770aa9b7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31efa1b0-9eaa-46a2-8526-4912ee3aa2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586228f5-9e8a-4fc4-afca-3eb51d14d90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ddda32-d251-48e1-8414-205569a8dff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a13f083b-2de9-4bc1-8a11-06ea7ef6c0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d0ee76-c92b-427b-8d1d-49f5f9e79b89",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4aff36-ef8d-4374-bfe7-0612f1016671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316170f8-2de7-4c86-82ba-d1afde494e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddabb049-d88f-49ba-b896-9818334f13d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc10b26-3a5e-46bc-b763-482b5d7bcf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c909300e-4ca8-4ac3-aa7a-693c16ae2627",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e179e3f9-0938-4030-855b-16abb5af463d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7418a985-270c-4933-8504-2cc2373df64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63db0d1e-82a8-4e33-9cca-03a8b09985f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a29b6e75-5cbf-40c7-b273-dcc826edbaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b89805d-013a-4f72-81aa-53933c3cb886",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4c583d-f89c-408d-a7ac-ba3b27896eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aea211b-4e50-4b5a-a6fd-5f1f84fd6f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ea8720-734b-4119-be4c-a14ccc9832d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ceb1158-720c-454c-8787-d7468d7fb6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899bfb83-7154-4277-9f6d-61fa84b11f7d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4d2f59-2a33-4e8e-87ce-cfe0db799410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2b8d21-5561-44d5-b9b5-f488ec7e30d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600a717d-ae79-43ee-aeb8-276f1b10aa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3893875-f674-4065-85f0-f9517e301462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f49826-9b56-47d2-a59e-db87ce34bb53",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9eda67-94b2-4dc7-b176-514abc991ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9a4b0a-67b9-4a1c-9b31-bb409ac8a502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7321063-3381-45be-9da9-2dbc646ab8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4c7f81-f0fa-46dd-8e5d-29bba3642d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a316b72d-ded8-496b-8398-e24b8f3c91c1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf29d0b0-9e00-4bef-b32d-2384c51cf462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0dbbd1-3aa7-4a34-a26e-103cce2da4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8231817b-00cb-44e7-a6ea-ae235b588ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "19be5397-35a3-417b-81a8-fcfe8cc0f28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a552d462-55ab-40a3-b784-9ffac6ae8ea3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d99c8f3-401e-4508-8c61-ac0756970efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40927bec-3a9b-4719-b4fe-63c7ec66703d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5162e4ea-4c65-4b1c-84da-bb73790fe8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c9cd28-e0b3-44f0-8318-dc7b79cb525d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c1129e-e60f-4a69-9f6d-233a79147c42",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf2bbaf-b281-4dd7-8b81-c60260c7d125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20da5898-59f3-4537-bad1-ca1f0974a546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0d27f0-eb63-445c-bcaa-312be3a56c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "925a8fed-1366-4e95-a31b-0b0b05b14030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd92e83-064c-4ac0-b050-8672a0b83d68",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6884e8-8962-4931-a995-d6603a67ddbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c0247b-183b-41d3-9665-e2834118c470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0b675e-f16b-4c9c-8483-ed4e86683ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd536bee-0f87-44e0-affa-8f19a1e9fa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0370d1d-d2e8-4c3b-8480-4d2b8730abae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c367e5-2171-4fa7-afe6-2c447277a559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e517ee4f-5c2a-4243-ab73-70dd968add1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da007a6-b9b6-4a35-880d-fcb19c6aa788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7611fa63-6b56-41a3-9b2b-e4bfc9efed2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec7b721-c947-4cae-9e5e-9e7a545bce70",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706a382e-1b5a-41e1-9a9e-ff2793383f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48e45fe-c77e-4e38-b5cc-0bdde6d567c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b450956-9728-4e00-b760-d0d0fa5808e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b25f0baf-1465-4722-8859-76f2a08607a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580ac7e6-6763-4844-9f5d-c704c83ef38d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2121ba-37c9-4810-b4eb-2cf3a87429c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf75acf-1459-46e3-8361-46d175898675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6cfaa5-a62c-447e-bd6f-903620f71944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c946f4c0-ba08-4ce4-b3af-7d069925e02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db421d5b-b839-4a1b-a332-626dcfda48b8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930bcda1-5461-4465-82fb-53cecddd5679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936e3ec1-643c-4668-9e78-2dd1df372b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34a4df2-4917-41f4-bd46-9dc36749c4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7d97fc-9896-4175-928b-06783fa56401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec231410-de6c-492c-9b59-287ab86c7f17",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611a80a3-5b6f-42d2-80b0-bbaaa063f898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101272ab-5c4e-4189-8e6c-5faa4e44c99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef3acb3-476b-4ecf-872b-c116746c2d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "123ab8dc-7a51-4361-80df-504daa9ebdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f346ce1f-203c-4f69-8d33-82d51d6c4bcd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f73efec-9d68-4ad4-8685-4c56dcdb190e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2512c3-6e08-4d55-81ed-910d292410f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4b1937-7230-4ca4-9d0e-6a50ad1b07ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "811d1a8d-f491-41f3-97e9-31bde93854ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5511be9d-590f-4fcb-9e75-770893473d25",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc8adfa-26a3-49a9-984e-41507eda71f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c7a5b5-bb27-475e-954f-d1c46aef895a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0320bed4-ea5e-4b14-b63f-060b14a6e48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9112eee-2656-4ae9-91ae-4e282b82fdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce863d3-b7d9-4fe6-bd57-2c4ded76d188",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9453514a-6651-4658-b4ea-d43a8fa540bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9b6473-0196-460f-826b-1eef44398783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d3a090-0095-4f5a-a369-9ba93d9b51ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b186deb3-a2b4-48f7-8e0b-3b49e44a1185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82ce8c5-edf5-4d6f-850f-5e82bbab6e42",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52318c3f-0020-4ee9-9950-aa3749dc3aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679d813f-d96b-4500-a198-3a4981ba92df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0570e4f7-a03a-4e6b-b624-575d3e3988c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4355d9-545e-43aa-a29c-4081cf4a36b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe2de05-18b9-446c-a4d0-6ca456aaca6e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19aada5-3b28-43d6-bc04-40a928039673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983bae04-41c0-4a86-83fd-0cd2550c1031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3340834d-eef5-4a31-862b-3f3e17257b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "685eda3b-453a-44fd-8b7b-e28ded315332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d3ec5e-8edf-418d-8830-d81fb21ec929",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b748441-d942-4df8-97f9-328c79eba0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fefff7-bd40-4b50-8fa0-83c00aade8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79fc833-c684-4560-b66c-06f69d48dbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3df963c-ad07-4c2e-9de5-a0aa51f15aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d2edec-46a2-4267-80bb-043415172380",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178f3d68-b1ea-46c8-8439-f9f7818629a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3acb4fc-056d-4113-928b-07b1b9406ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0112b839-71ab-4653-a287-08f65cb57d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af24cff6-1499-4564-9f72-1da7c1fe13c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9cc9de4f-4523-46e7-be8f-a3bfe3a983c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0c7ec92-cf5a-4529-8cdf-e66479ebda53",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c662d3ab-9ea8-4355-8994-3e047d4bbc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f24f114-c3df-433b-b336-b74671f85b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9cded5-23d4-4ac8-851a-2be368d595ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0baca6e-acbf-4eb6-bcde-ce8c949b7dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4148e8-7b6a-4241-a93e-3ca7b048916b",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb398982-317b-4048-ae77-1cd307b6b198",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "7ff7ebda-a71c-4e71-b105-d7b91114f660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbad96a2-434c-4e42-b7fe-13badcf1dfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70126fbf-e4ae-4929-b88d-30f995654cdd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8ead4ad-4130-40a9-b6b1-c37b45d335a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65171759-3f1d-4c37-b12b-3a74dc031dfe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6bf1ef4-598b-46f0-9e2c-ed10548e97fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "044b465a-b028-4631-8b0d-f981da9baa4b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71e2ace9-bac4-40ac-a4c0-a7ce5cce6ea5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42b36069-23a6-4d0d-a711-44dbffb0b192"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d23a9a64-1b7d-47d2-9267-46e1652cc869",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aafd7cee-76ac-4346-8e2a-edb6739a10fe"
            }
          }
        ]
      },
      {
        "id": "468497dd-e551-47a0-91d6-39cbb878b12a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "59f372e4-f192-4ab5-96ad-1de26859526d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "095a0c41-870a-431d-aa36-d14607a2cf5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7864fca5-3595-442d-b930-6663c000a426",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150f6ec6-9335-412b-9d5d-28332991cb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89db2f1-839c-4f81-9f7a-85fcd985cd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc3c545-af9b-4905-8133-98c7e71fb0e8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6c9c0f-d019-4f6e-806d-5d324bbb3b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c57b65-b33e-4eb6-9ae5-5902c52ae3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e856e45-4bdb-4187-8747-0f88f4d00132",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e8c2a6-37ae-4181-badf-c1dc3a34231d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01459887-ec8a-407d-a5b4-a94d93bdee3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a590399-acbc-4f25-8e43-4fce33e83a48",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07e57c7-1ffb-4809-8f92-d7b8902e70b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69490d3e-d8af-4319-810a-052d59b87f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58677b5f-a9b0-4ee2-a03e-151a00080613",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a8f88b-4ffd-488a-ad34-32540c44bfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d92047-6cc0-4df3-ad09-4e490c727182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d99e71-326c-4d81-8325-456ab04cfdef",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c2f3e7-a95b-4182-a514-b6e2c4b5df58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ec504a-913b-47ad-a870-9f63abc17a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2051dfee-a0ff-42a1-909f-2f1025b3cf79",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1159261-5270-46f8-b72d-73e62917cd84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba37b95-463d-4e9e-94ce-b8b737abb3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcc5afb-8b17-40ba-ab7c-59c38fd919db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a17fb7a-c842-422c-830f-54a9817a7ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadf7136-ffec-41d4-afa5-4d5ea42e441e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baab1ae-e19f-4ff5-a54a-af5ff91398ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef543d3e-2659-4283-8286-f6bdd04c8301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9311ec07-956d-4058-ac63-9d20eb086074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9937209d-a05f-41b8-93e3-7b9428d153a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d5a63a-9a84-4734-80eb-801ae6003f43",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257e4f56-fd4e-4ca4-8059-90eafdbe6953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea9386a3-d2a5-4305-8295-6779897daf9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dae0ec1-57af-4cce-84a5-d34e2b1faa59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce11ebfe-2a7c-4159-ae4e-11b172f8ccc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b2f857-326e-4212-a0d3-ac70703330bb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc7aba9-42eb-4700-bdb7-c8d9357f0c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff31567-0107-4a58-ac54-f89ee9a8d7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43f181d-4e03-462f-a195-3153a6d4f22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284f2b64-6870-4f01-94dd-ebdce87c222f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f92091-6bb2-4996-9d6b-49c0decac902",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fad4be-fe58-447b-922c-13720632d19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb52ac7-3b4f-4831-9a9b-5bc0096e5381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f66cabf-9998-499a-8fb3-5f32ca3f9031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2818628-1640-4913-a424-b37fae7af7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb96bf0-9035-4e62-966a-2d9cdef92c96",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ab5ef2-ed2c-488a-a229-e14fc04ee893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfac91e-2f58-443d-9a3b-2500abcb8ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a70822-fe64-496d-aab1-f8c34cc9f1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d87fbd-b7de-431a-9da8-fda74406236d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b73c6d-e891-40de-a5d4-57ed1a696269",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719e5127-39f6-4cba-af6a-6ffb6a44d5d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ebe99f-cf7d-46eb-9db5-5040602dd86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faa78cf-2d6b-4f87-a2c9-77a09e410d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e14107-d7ea-4019-bd5d-1bf5e68de810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1289a42-589e-41b3-aa24-92e5848f16b4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdbf565-c4f9-4163-9b27-266b6fc68da9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a2d7a34-cec0-49e2-9323-90cd1018e220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d762d7-d1af-47a1-856f-7719413dbe35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112e9370-624f-4d56-b461-8c1bcd68392f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7645d84d-3e8c-47c2-95ce-54ba7e7c5c9f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8d1496-6892-471c-b598-b4f48968defb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6189ec71-f391-4f71-89f3-c07b3643f114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a308440-4a64-4893-8c9e-c0d4fb82fae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c6ba4a-debe-4d01-8521-92fe5b8d7b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c8af71-b460-4617-a0ed-53e2c9f2d99e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b02d89-49de-4536-b6fa-1d6d1e4f9cfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49f2542e-edad-4d9b-b903-468418f37e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cad531d-7dd8-4b02-a46f-b99d0ed83db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f31d82-7b88-4e45-bda0-47c189a223a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3ae10a-ff3d-4399-a950-cb6369857a01",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8717eb14-f251-4c66-8573-aa21aef38f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f374a521-dd88-467c-8467-89c12b8829d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74a8457-4ccb-45fd-b6ce-5338ec2ab55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b0df23-d35d-48b3-8a9a-182b2ce3621f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2cfe74-93b9-431f-b7c5-f0268ce52945",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77fe8fb-9ffa-4e18-820a-b1621f215cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d90bd7-4d6d-43e2-989a-db4ddc00fb6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3f4e40-afd4-440a-a741-f53c0a8ad433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b734d93d-f6a0-43b5-86d1-191fbaf861da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba43fda-2666-42f8-a9c4-6fa953332d22",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c4dcff-348d-4a5c-8c1e-fccb912485d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d2c61c-302c-4176-8227-5b3ad4dbe10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290d1a75-16f9-4720-b550-3bb0a5a2742c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49893a82-0e77-4952-89cb-c2aac589e4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b3696d-29f5-4617-bdbb-3f4e5622a796",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a220b9ce-838b-4868-9e82-298ea6427112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93547412-0788-4663-a0a2-30755de2c4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd965e7-0dad-4056-86d8-091567734245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f56e2db-5cb2-4e62-89fa-f733163a6996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea662e9f-ce8d-4b49-b280-57c20246988f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af812c57-abaf-4f6e-bc5b-08f76bcbfd47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714b5c4b-b047-40ba-92e5-9ed518adb578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227fd413-3710-4af4-8924-6ce3d5976771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09619b3-5cca-4729-8dd4-c1770def81e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce92c3b-9d49-4b6e-b124-6d37aa8b93f2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef1a85f-2466-4905-a8c2-8b3b119445d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17c2058-6c37-4f5c-9103-fc6fd201b80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69887d1a-5961-476a-ba6a-683d65cdd79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fb92f7-8ab0-4a36-b6e5-00ba59ca3c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17285859-a157-47db-820d-040ce3907c98",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feb4b38-dd38-47b2-a863-453b91bec8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39707e02-c69f-41be-b6c7-196f88062177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7705fe68-a88c-48ba-8ecf-75cdafa616d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e96268-55b5-4eb1-b405-007bb19016eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a441bc78-caec-4ddd-9c3c-d24d48d470c3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b79e2d-61ef-4989-a9c0-20cc1c3a2540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce26d63-5cc6-4a80-95a3-0ef85f1b1f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d15549-da37-4c9c-97b9-cd61ff782fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfbd927-c7ec-4463-85c6-c40a7c5dece3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c0c605-a916-42f2-8fee-1490fd8544d3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b71c34-dce7-4448-ba65-41e473ada5b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6977f3df-05cf-49c5-bfdf-6c4edf22d934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a662b5ed-7697-45ed-a1ed-fd8cc372e13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50196c8a-94a5-4970-a98c-c3b31caf8438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2513fd5f-d4a3-4901-b537-98a25c94e65d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a10ef7-26fb-422f-8086-3e98b3059e0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46220ecc-0345-41f6-95e4-59a4963b09f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc454a6-5edd-47a5-9608-061f56faf394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cd5c3c-6779-4255-96d1-fdb473acadb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ecd525-8657-479c-973c-eea7001711f2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0102b99d-7977-44ac-b80a-4080122b25d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ea46b1-9dbe-4441-9385-39cc42d1523c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ec77a5-0e6b-44d3-bd40-3ff88444741d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958f8a90-1fd2-4feb-b333-1d80effd2757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b80f2fd-7bca-45f1-8a25-2617cd0f66f1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55ea82b-fe65-491f-909d-f93e822d7de9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75b4cb90-20b4-490a-9250-97b05a5c7c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ba2560-362d-4d11-9be3-254f890e0791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d82abc-fca1-415f-8818-7f0a06a61bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8b4629-2545-4629-b7e1-2ead36f638df",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26df81eb-7fb8-4bd0-95f8-dc1236bc9db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109fdd10-dd0b-4a09-954c-bf817799286c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd4fc6e-21b5-4691-bba5-bac6a4591f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30218f2-61d8-444b-91ee-ccbf587a1835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bdc7a6-cf74-4341-a31c-aaa6060a82a0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610b8543-5d81-411c-850d-22f9575f1086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d479ae57-1d60-4d78-8ecf-e83c3410cfcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6893f214-10f4-4464-af57-a7cf90142731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c195589-e99e-445d-ab87-2e3cce28cf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4c0a71-160b-4094-9eb6-c2f7ea67b93d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529acebc-648f-49be-99f8-d253c88a9db4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17ddf24e-03b2-419a-85c8-e23b6a0700e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d26216-21af-48f6-ad40-8efdb6b7a474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0888425-bc92-44f7-82de-334a0d134fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc39f57-15a2-40fe-ac38-48568848e83b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9e3e30-a09c-4d43-9b5a-75b7d0e2bc75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35f4942c-4895-4934-8c04-de730638ec17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5756678-4320-4738-8bcf-2f7e1c6d74cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93847d2-ee83-47b7-8c2d-32159957ef9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091da211-aadf-4ede-bdfc-5c639288fdcf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d805f4-a681-4532-abcd-cff9fd5bcf6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42fe37d-9dd0-42e6-a83b-f87e4e8cc6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2af5ee-934c-493f-953a-42f08a797ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573a145b-b18d-4259-ac39-cd790139c2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfc6c32-4494-4c96-b4aa-9d8c77a61cbc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe2f37c-c3fd-460e-b06e-d78aa5d9f966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2627fadb-ada7-4cd5-b491-27246e4aaa4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee632dc-21b1-49c0-b740-2b6766189054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aad5eee-9ff6-4531-bf66-979383a740e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d586c4f-4b89-4ef1-b5f4-a7054b76231d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d80e680-e98b-472c-9969-7d3287998e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51610824-831f-4118-9f36-8be4e5e90fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5ffdd8-c25e-4c69-a54d-57981c0133d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f15351d-a08c-4123-8f7b-fb454fd16068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1996dc9-1881-4939-a6c9-c0a7e4fc839c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebf0d4a-378a-48ab-8bfc-123cd4418163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfb80e5-7dea-4bda-9c98-6b7ac5b93d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3898f332-8db6-4279-a61e-f324d29ff7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b557fb-2bae-47cd-9d9b-aa9e3317a2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b724633-42a0-4889-af90-27f13fb8b8e8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d19687f-f26c-4fce-a359-797d391a3c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbffccb-0bb4-4a12-828e-717ece0e33d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9713217-c19a-4fba-b27e-48dee45de6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdea6d35-1631-4b67-9f95-af52756109e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a632fe2-e368-4b38-9d1d-179a76fad123",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4033e5b1-d865-4d7d-bacb-5a7e769e5660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6472e3-61b2-464c-bfb8-bc4552162c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c2cf89-1959-48a1-94a3-d5b4665b3bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e172c9-d412-487b-8e50-78aa23cfed1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652cf718-4a01-4091-b128-1a685ca1634b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751683c4-0496-4916-80da-3374301c21db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cf42f2-a2b4-41bf-9cdf-01cfab0b114d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3641fd-0acb-45d4-8600-375b310254cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef575ceb-cd03-4ccf-8048-d7fa55091538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce49dcd8-39d6-4e52-be48-71c3fc891424",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eafcc31-1c4c-40af-be17-e424b8bd0408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a694e6-3b1d-4a9c-b183-e0b2b3f2bc1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1bdd0d-9ff0-4c8f-9d48-1d531607c946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0afabeb-871f-40bc-8dc1-ad259dd51944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53eec02-d395-4f7f-898b-4943b2e4f954",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20eb9a30-21b3-4351-838f-ad73aa3d1e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce37d47-81f7-4bea-bb4e-8ebfad7028b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1716238-9470-4e5b-85ca-9c895ac53b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f095f34-3400-4d1e-919b-8d23414122f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0853b656-b592-4d3c-8008-85c708ebd641",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df24e6ec-9509-43f4-9543-88c5ccde3f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb5268d-9653-4cd4-8d70-f914472c7ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11960a04-4aa8-4913-ae64-28dcc08d6d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93bdd35-233d-4f5e-bb3e-b4c74169d4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d95cc99-0644-4867-90f7-0552510e9659",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9744c4-7cb4-4bd5-be36-1b8b3c356bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e94a8e-41df-486a-a3d1-1a6d68391a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d54ea71-e71c-4f0f-bb08-802d1c395d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf017a5-1c48-4191-9a96-e1943c3d23ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3b1307-3eba-4ed4-a335-dcb94412bf47",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366a1e1a-9622-4959-b278-81744ac7f9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d4d846-3311-479a-9029-1327c18d27c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfc3d07-b7da-42fe-b2a3-0cbb12001c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1606dd5-1f85-43a7-9802-8b1e38e798b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5688a348-5569-47fe-a503-aa3da60a6d9c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916bffd9-49f1-4240-99d2-8efe8fc221fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab42ecde-6272-4ceb-9e2c-f817e6793fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02107018-f14a-46f9-9fe3-27a137ac496e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ece981e-b135-41b0-8168-c1fc34a01045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63179b5b-1ae9-4e52-9ee9-659b95393a2e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1de57e3-3642-4d32-8ee8-7d0cf70e97d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f48da42-ee46-4c6b-845d-427a0c0419bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a9a18f-7a25-40ab-9954-1700a9d808e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7057d717-16cd-4154-882d-50a277ac6931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9b63b1-85f9-4026-b4a4-8cc5b236af5d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5645cb-e336-4222-b1a4-e0bc2fef9c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0fc569-dc89-41a0-868d-cd0baabdc951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23ba8b0-4553-48ed-acc8-0ecd82deee07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81383f0f-a097-436f-ba6f-52b867183e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cf6ec2-63a3-4542-a0be-88d41a490fb1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a47f231-0b34-4f36-b474-5b4e3c390761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e00d80-5566-4bb1-8588-abbcd2508970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab52d4b-7aa2-4c5d-a8ec-d3eab3d55324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be93ee0-4a52-40b2-9d12-eb7beb3e7178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc17c770-fc86-415e-9df3-757c6e992696",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbdc1e3-0069-4a04-81c3-a877583d7258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62419bab-33ab-419d-b608-aa7e60034e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71b083d-5a2d-416c-922b-0a5ec7b77fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f13f42a-6261-4bf9-8e40-cd082d030062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e469e088-3458-4415-b431-dfd711c20ba7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff07b34-42e9-4118-8fe5-3ece53fdf4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb3d387-666f-4931-8977-2177eca7eef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ae96ea-3c39-48c8-a917-790ff37bc461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e9a002-1ab8-45ae-93ba-3f6a22b82481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9b4b3d-b5ce-46aa-bcf5-2a6d0075d683",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08e4049-5665-41a6-91ee-c6b3fd922f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304038d5-5756-4288-a46d-3d04764012af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf2b188-738d-451b-8c27-ba64538b9064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f26b910-e251-48e7-9610-54552ead2a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5741d337-184f-4e60-aca7-c426763c9352",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c4a888-42ad-43fc-b230-c6cae484f25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7224f6-a00c-4956-9e49-cfb7ad5891ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ae6c8b-e5de-40c8-9e51-45ee76c7ef30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb40d9e-8e26-410e-b55f-4a6feb25e7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77b42d1-bc07-4940-915a-a850fbd5e4e1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd67832e-4eb7-4513-8320-d244cb162328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1503599e-0cfe-45cf-9921-c45aa1ad57ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c680df8-e341-426e-9a8b-67dd9651a651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f7330d-4d30-4a0f-af86-d7883dd1075e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672d06e0-9821-45c8-9097-f838cdc331e1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309a54ab-0eec-49d3-b505-f3b6706e1da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375aa2fa-77b7-435e-afe2-554271d6a49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f63854-3569-4115-a9e7-78c0632595b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057e6c73-2635-44c5-bdb7-b62bab4270dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9e967d-6c28-4958-8969-8657ee1e893b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10f70a9-007f-412e-92cc-3393b5a3738a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0319a15-ccce-4cf4-988d-8e61ec086464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671da160-36b1-4cc7-8c99-46cd955c62ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ba00e4-51ea-4c35-ad11-799630f40dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30848d25-353f-492d-a858-cf683411f206",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71b97fb-97bc-4344-847c-20506cec5139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811cca82-02ae-4aa3-9e4c-5b3971bb7131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c75f2a2-9e36-40de-9197-01cddd320ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305125ab-faa9-46f5-9380-7e9f464a04d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9447547c-0e18-4644-9547-6b6313c58fce",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61ad14e-bae7-4dea-a238-859890e4f674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dbcd93-7158-4b71-bf8f-901c9739aa95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3344e29b-c4b3-43f6-b8ed-fbdafe95bb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ec8391-b6bb-4b03-8667-c55bdcc29e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a565441-22ba-45f5-aa86-d2062f9ee99d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ace520-5521-4414-be49-e23c75d356ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcfcbcd-6f8d-4b70-835e-4419db37547a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62b2961-19e1-4152-ad1e-cca7e3aeda14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10541312-9be5-4a44-b4c0-e58ca492e4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347c62b3-73b6-449b-b491-ed6c246087f2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e98d604-bd31-4af3-bf0c-1f1c72762f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840fdd15-334e-4dca-aafc-7e3ac7b3451c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8634e065-1d52-42ba-88f0-3d76b3a2caa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50772917-8dfd-407c-bafd-9214a286935b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d437e9-e650-41ce-b907-f9810a6e685d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9330b5-32ff-41a9-b6c2-9342b3d67114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadf6af1-6ff4-4d6e-b8d1-6d44f0164e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98171e63-3a8d-41e6-9957-f932748850f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f42b8b2-04dd-4755-9b1f-f7621679c2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ee4b2f-2db0-46af-9f92-e98acfd6198a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea05839-e7b1-4ffa-b168-acaffcd666ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b4ce5e-eda2-45ae-8f2d-bc43d889cde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "927cc82b-03ce-4540-a0ab-05d36dc98105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91a7d23-1e05-4a8f-b75f-7034be9c96b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4aea53-4a43-4942-a9bb-db589b0bd647",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a735434-a984-4851-afd0-fd14914707e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e16968-a0b2-4cbc-b5b6-a1ef864135df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d8c02d-56da-4439-93f0-6b7c6cd5f3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51281cf9-6142-4cae-b708-58d95d432416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f6ac50-4adf-4b43-9384-f481d978892d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea869187-e125-44b4-b1b3-bdb525a649ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078664e6-c394-4cc0-88f9-675c5bee97f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6319e01c-f96c-4b3e-aaef-fd48deb7a64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5933776-8846-4cbf-8d3c-1fd9d85ded0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce5d6d8-88a1-4614-af00-c5ce21bdd0fd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b6e192-78bc-45ae-ba84-dc9b8f0360af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcb5a29-c323-453f-a346-5fd38d4aab12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311e6855-26f3-4f56-8c57-e3fa135af774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d462add4-7d3d-405d-8a37-72a0834dc8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7311295e-2cfb-4728-baee-d88c961120af",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fa1e62-8210-4fb3-9c36-a73c12d16a0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28ac115c-ca95-4a6b-9a4d-61b6608233c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3395b7f5-4ef9-493b-bbec-3a42e032f155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32211ed-9b64-4548-a40b-543474d835d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c796abbc-b57a-42ae-b53d-4f137775951c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08650377-d714-4305-a361-6dccda0d01ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "074d89fa-65dc-4384-ade3-6dfbb9af458d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d8441c-9517-4988-b924-d785536c975a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af791399-2487-4995-bb4a-3fedb3830ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c2cc0c-b30d-464d-aca2-e5a8f34514ce",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47708aef-ec24-4edf-820c-cd53294bf965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a9e76a-079e-45d9-a50b-481b7d81ab61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe5715b-8183-453a-9fa3-e64b2db3a648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02115a8b-0e43-403b-9d3f-11229248bde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dd6f55-5003-40c4-814f-86e5b663dbd4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f347c6-c4ea-48a5-a54c-6f2683900822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ace9e5-3506-4036-9f4d-a1f298ac848e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e5c538-1ade-4cbc-b18e-ef493665c996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2ce6f0-4af7-4aa5-8a96-c2624f6367f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f241a8b-ce6c-4ea6-8556-4624de45ebdd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75eb552f-8e2d-4dba-829a-9e5107d8e72c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b785fd9-8ac1-4e38-8d1d-8dd909a3bd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32697f36-27bd-419a-aec2-594b28cf541c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae04d4a9-be3c-4406-9b64-a7bb46062967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b7a6de-70d3-4ffd-a25d-22eb8b25704d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a982ecde-afd8-49f3-b047-66bb28ad6ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac79c55b-a233-4eda-8094-dd22de5c50e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c63bd1-194d-47c5-9c09-e99466af6448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6664f5c4-da9d-4144-82f7-d5687a5f1fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9ea384-7d9a-4255-a23b-be0e7eafcfb7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2537f945-4eb2-4aea-b8ae-04a33aa4e767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f17a81bf-e27f-4ed0-ae0b-210061393490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52aaab89-356f-439e-bfab-02050c8d3241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1caf5251-c2ea-43a8-9182-8f04f0ce2bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78b14a9-85fc-4321-bfce-41c93c45ca0d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86d0576-d180-4858-90cf-d36173d2d843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0760369-9665-42ab-bc85-359a47c934ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cff3c2-947e-425d-ada0-4e43c84b28da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492d6951-671b-4fc0-b583-25eed5bbcaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fc7174-e161-4dbc-b7a1-4bdaaa67718e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192bef45-01c0-4045-ae51-2baacec5f594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9756f16b-a11d-4dc8-9f55-e20153a86b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbc8cce-67fa-42ed-84ac-7ccc8c3c7c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8827ac-3d59-41dc-9129-42f87b45ef50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1539cd-ac6f-4711-87d5-dc130eb551d3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f767e05-407d-447a-b6c3-10a8a9166d76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5cccde7-c01f-4e3c-bfa2-b7a49aee39d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82763ef4-a8f6-498b-aa2c-1a93a3d866bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dbd88c0-2851-4ce1-befc-d55d311b20cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c664f9bc-2c29-4ace-aad3-c3e324dae5a5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0be953-75b6-4ffb-9cdc-5c81f3183145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cac9a39c-4b99-43bf-b52e-da6661f58d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6758c4-6d72-4162-af9e-8abce68859eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486a800b-1e5c-4588-8f37-255cf4fdb44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a0298f-940e-4e7b-9d57-440d19ea6000",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56639b0b-8075-4767-ac38-4a1c075ca83a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f3acd31-76af-4044-99c4-573f042a5897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae411920-b97a-4c5b-b74e-3e186d90893a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45352353-dae9-4e61-8434-57ebd367e0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b60b1a-248f-4b42-a3cf-d439b1145524",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08951fc4-8140-4698-8082-8a0c2484ae64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "073d8148-610f-4b64-a887-348b6d195182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dc2862-ece7-4175-b64d-382d7a0c8728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6fb4a1-d207-43e7-a6e6-37479de6ecc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b53ee3f-48ff-4436-b47c-0c31092f6a04",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8483aa-becc-4d7e-9f83-d3712613a5ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ba298b-947f-4e2b-869a-c5a4fd74d1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e46498-64d4-4064-9d0f-53188d328901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00f64e5-d3d9-417f-9043-77e64e5b8cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3df086d-cde0-4b64-97a3-0d12d3fb84d3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de89cf1f-2f64-4ebd-8cee-4021e26d474c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78eded64-d5c6-4a90-b504-c21ebdbf8635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d27ad0c-bacd-40a4-9d0d-7c771b2f29c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6caa525b-d19c-4b04-a408-8edaff50be1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5492287e-e296-4898-86e8-c6c845bb6fb7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8a7e94-ab72-4098-9d5e-b38e8825c900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe3b4de-0c7d-4c71-8970-f5abc63709b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca34abfc-0e2c-41ec-ada6-8068cca47909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abdeafb-c52b-40c4-9751-7757daceabeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f412f6f-1a54-47e4-8357-7503e2a897ad",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e62f627-37e1-4cb5-aca3-f8d5b9581e42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b4c0d9a-e5e2-461d-8b64-23237ceb8cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6d2206-e9c7-4ead-8366-0e513ab3c181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ad669f-3878-4a37-bd7a-a46beeb68d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bbaff9-e4f7-44d6-989c-5276cf20c166",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de672ec-39ea-4bb2-89d8-f3e472e17007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b98f4c9-08ad-4482-aba5-16d1f33347d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f177891-1ea1-4f0c-ac00-7b36ec544243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af39809b-4764-4086-b3e2-b5c9df014b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa2b414-da82-4b32-9e22-7d522752ef6f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b8a019-13df-409d-9fb2-4bfd3150559a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88131583-4111-48ca-be02-ef4c0ff40adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d297dce9-935f-484a-b1de-9753cb466800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ed920f-48ca-4e32-bdaf-b16c63322ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94c61ed-5dc1-4e2e-b708-33d6d5c5fee0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784e4b5e-657e-4c2d-88d1-b60c0492efef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a44d0fb-5e78-44e4-8119-7acd744bebce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa76377-93b0-41ef-b7b9-c966edb3d508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd5c609-6de6-4702-8377-efeed9d6981a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3349f231-8b0d-44f2-b332-be0dd2931590",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a27d95f-f52c-4c5f-8d13-4617b7f3a9ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67df335-348e-43e2-8e72-6f9b8e04b698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1162458-3352-4c1c-b1ed-769156a3aabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7cbe15-5cae-41ec-ab20-b429950efea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd499bd7-e928-48ac-a3f2-7b5b62d1df91",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc50791-e804-4f06-97ee-00d017a6cc76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e2b923-2a73-4c43-b047-ee53724da854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55627de-6014-478a-8270-c8859bb94aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bca468b-202b-4e7e-bef8-3366cc3f7da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d351f138-0de2-421a-b5b0-2f6f85c2ea77",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751b93a6-c9c7-426f-8eca-0f2dc2b14a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a18fd24-6a01-4a1a-9af0-19c6fd3eb7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620a3b3e-94ea-4942-ae91-d67863b6d204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cea02e8-213d-4b3d-bcc9-50c63dc9eb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a585ca5-36bd-4029-a315-56514422a74b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2be3d7a-af38-444a-ad3f-12594aba7378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e29547fb-eab0-4462-8bbc-373cf3de623b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29569c3d-fd7f-431c-8b75-68b41651d940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b3f5bd-afa3-4dfe-9d8d-573084db34bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602f61c3-503b-43a2-8223-5e2e94515c87",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355a1e24-a5e3-4af6-b743-aadadcf9973e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32397626-3a6c-41ab-a089-26180c191051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b06664-a313-4bb4-bacf-fb61be9ffa3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df97fbe-97c4-49fd-9e77-ae46791cd74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6c4a48-d8b6-40e8-ac93-de142986c93b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7c1e49-c930-418d-aa09-02ffb4a52c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f03eeef2-d29b-4bda-a1b1-a8f813750ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30aa8cdd-68bf-4faf-a999-f67b3f085370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad53951-7e01-4c02-9b29-fe9a2590e041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a09461-cb2f-4bac-b6d1-43fb90bff4e8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595f3562-4743-4f9e-b79c-480ed4fcde9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c36466-2058-4031-a2f0-dbf084271278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80530802-dfee-46d8-8dff-61d9769f778c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4591ff-7e3f-4357-9c5d-0fff2ef31bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa2ea4d-3f79-493e-b72c-4e502b1f927a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14be1e07-6d9c-4acd-80f1-ad69f7193727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeea6f19-d2a4-4b06-bc9e-72fdf6d79bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58bb3d6-afd7-40db-ada9-925a534458bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be197ce0-4a4d-430f-8448-ad5423391136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaa1dcb-4e84-43c6-9a00-67619d4d3466",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38df7918-f382-4aff-b952-b19324ebdf6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ae5e196-25ff-4c1c-ab18-8340802c3dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18f8fb6-e82f-4b5f-9bed-8d0aab9b47bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1ed0e8-723b-4068-b8d0-bd87b935b7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a8ddeb-0cd7-48c1-ad4d-8cde7c2d16ba",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62715f76-3919-4832-a6ae-7872d6cad90b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "564d4bce-2c1e-409c-9bc5-a10cd9f370dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edccfeb-1730-438f-83da-a477c7f9d9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacbb50a-a0a7-4654-b960-2bbb27fcd486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724f920b-2260-4c0e-b237-2ce1c992f0b3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30ad462-f465-457f-9a73-3f740002523d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3240263-9916-4381-be83-8660bdd2e036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dcc348-78cc-4f02-8482-ffc0fe841bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df87f5e5-67df-4930-857e-7cc5eb96c634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78159985-9c14-4c3a-8341-bcf147a483a5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d44533b-2144-418d-b319-fee369f1a6d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6ad740f-bc0c-4d05-9a2f-e375c9980926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "addf11df-d1f7-4ecb-bb39-1897510a6ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60abd7ac-ff6a-46ee-b607-27f543bcc2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deead2bf-b80c-4f20-b936-b2e475bfcb56",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586058ad-2621-444f-88a6-5cde304d8481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b40dae-aefc-4c1b-83c6-0f705f85b5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254c7379-4359-4432-842a-dc6c7f19cc88",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474938ea-8a64-4e7f-9b2b-575b00669382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120b3728-46d9-44e4-ac41-e1f632d52071",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a665841-4dfc-4c03-98e8-e64426e58f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d9130e-0401-457a-84f0-0446915e06f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596e2ba4-b8b4-42bf-880b-6f42abe5fb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f341af1-191e-4fcd-a398-682e091db9fe"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4b855aa-437a-414c-b844-fbf90e644db1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a060e1a4-d44c-4df8-a4e5-ab42c24b2604"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6520d26d-5bc1-4031-b6e2-99e302489690",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5db36435-52d4-49f8-ae96-4f1e26141adf"
                    }
                  }
                ]
              },
              {
                "id": "f21af077-c701-4989-8da5-e5388dd9cad5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41258349-f0f9-4cc1-adc4-c040294f8599",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f45990-c1c2-4ff0-b3df-7f99409dd4e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e413795c-a88e-44a5-ac11-8ff0def26527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84758e68-94e5-4320-a73e-b6b6b56be7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "223f9bfc-5365-4b84-8f25-9e4f23140624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312cb594-7de0-4473-8a2a-d3b14cd556d9",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7122580f-5372-4971-bf92-bff67057be40",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5b1ded5b-e870-43d9-a589-3c21afcb7795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30497983-893a-45a8-912a-4f59d28d6c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37e38b2f-7aaf-4626-9559-13ae411d8e01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "269e9b15-9c3f-4442-a573-81c74860b662",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05f4b238-c93a-4b13-b555-13dc904ec8da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f963b76f-1337-4caa-af54-f92caa81beec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4e3ca5e-3a04-4b90-a899-fc475734a809"
                    }
                  }
                ]
              },
              {
                "id": "6f483530-a82e-410e-8d4a-85964576bf74",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f37113db-791a-4713-9165-bf2f83c6a55e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ec46cd-9417-4d91-a140-b8904ec4f99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "512205bd-15aa-497e-9dfa-dc726cbdf787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d7f4de-c3a7-45e0-b4df-3deb1572db08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed550e77-67ec-4ddf-8714-3e38ad083733"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "43eaa0dc-c0f9-4c66-92f2-3a3b9d8cf064",
            "name": "Positive Testing",
            "item": [
              {
                "id": "47433c50-9dac-4638-a0ad-8cdb5c29b97b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aa75b8d-989e-4781-8a22-b7e201e3f01f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a50e0148-82f9-4403-8369-32801b0fd16c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f138c3b-2793-4eb9-a8ed-50e7364866e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd3d8508-54b5-46ae-91b8-581ce82cd186"
                    }
                  }
                ]
              },
              {
                "id": "2c6f0622-0f89-4586-a160-e18419ae3c93",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd716b2b-e570-4218-a180-859d4a0e1bc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ff285641-770b-4b6d-bcaf-d880af08a146"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8d18518-031d-46df-8284-6c7d28ff6df6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fdf6e98-02f5-4866-bb93-3836122a4531"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dfab9f0-2a02-45ad-8b2d-1ab02d8ea334",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5ac37760-e098-4601-a9a5-8b262d18f42e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d7cc4b1-77d5-4d45-92c8-5ccc327c9403",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "138e779d-8128-4d8b-b9be-2f240f30628b"
            }
          }
        ]
      },
      {
        "id": "d2923687-4a95-4240-bd59-0e314a3371d3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7d90836a-6d06-4bcd-9452-7be06253eed0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8216adc-3473-4ec1-89cf-a0ab1766aa85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca965472-2697-4b57-a2f7-b27ba49413a0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab6e04d-57e4-4e59-83af-48af5140fc59",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8bac2883-7672-4591-8c5f-06db9bf0d2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d4db4f-3188-4ce6-9cfb-b7921a671b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67c02f49-ed1f-4ac4-bc28-1bdcc4516f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd9861c-cc60-4e34-8753-1b4c7fc6fcd1",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6bec69-6ac8-444c-a327-30088d76bfbb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d3f7a20b-996d-49c1-906a-89a614e89b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdfd15c-1f96-4f6b-9527-d263fbe1a3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc7f4578-2b0a-4497-8dd2-5ade88e6a8f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "500eb58a-d31a-4c62-b0e8-7a2a5928ec2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d0a68c8-341d-4cc4-844c-9c0fec6655d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6a16280-fe29-4ad1-af11-be89e9ce1e14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ffea23b-db87-44ab-99c4-700c12ad5e85"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bd36ff4-689b-466b-8c2a-577204c23722",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "62cc40fb-5755-4577-bbd1-74f708b3bc63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa53996d-cd54-4118-9d2b-ce427a26e8d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4aafbf04-ce3e-486c-95cf-74ceeeb8d8a6"
            }
          }
        ]
      },
      {
        "id": "6d34521a-ab8b-45bf-bb51-9617340c0245",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "77536417-bbe4-4117-9aaf-0dd379482a06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71d76c3f-ef9d-4950-a2da-53be936d7454",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79d6acd3-ea90-4024-a6ee-b6d2c97eab76",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9b87ff-f3a8-4e67-9697-8c627d75dc12",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "61b05921-955d-4724-a338-6bbcd21dcebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06edbafc-43c8-41ae-a262-d034201b269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e476e3d8-2ab3-4c32-a6e4-cb4fa1de4baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9899f67b-c50c-422b-b2ef-f1da0224c2e6",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6966635-a32c-400e-b9a2-faa875ce3352",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "013b1346-8d41-4f44-aa91-df7a831867b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903b220b-97cb-4a0b-b288-a2c9e1a0d798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a84de05d-3fdb-4a3a-aa23-1f43a40eb35c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c633a18-2165-4682-8ffc-51b85ce1d09b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aef1dbea-afcc-44ea-9328-a271c98c7d16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c718e244-4c04-48e8-97e0-21a8ad24b870",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc4b2ed5-3483-4307-b286-25b5ec54a296"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c9e128a-218c-46b7-9314-67a57fc12267",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "937facb0-79bc-480a-ace4-497747f3120b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab30139d-f1c5-4267-867e-1189369362b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42898b3b-38b2-480d-8089-ce281b15e0c2"
            }
          }
        ]
      },
      {
        "id": "ca896ce7-0b7d-486e-aa36-7f29d68ede0e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7878bc46-5c01-461b-979f-a14f9ec65fcf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce45557f-7bf2-4c5d-90d1-f5f1c99e58cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7be5586a-c009-46ea-927a-5db8fdf31264",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cccf56-537b-4f5a-8752-02ac04d68cc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eb314248-14ca-47ef-90bb-7ec6aa310ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412fd6da-eb81-4d7b-9f31-9774ec85ae7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bfc3038-597a-45c5-8491-54fa1cffcb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a20edea-ca3e-4880-ab1d-e457fe54641e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efad444-b105-4a60-b18a-9c05ed8b28da",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "67fac522-76e2-4172-b202-6d5468650b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca95b27-a998-4ef8-a73b-26b49ed6bc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a436a2e5-3bc1-47a2-a32f-0a22ae1c5290"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82b80bec-67a0-47a0-ade3-deace7747f09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b672d0a4-5052-4d11-8222-21fe75e0bb82"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8818ef5f-172b-43a3-b0f4-3f99c7a0429d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a654500-d548-4132-9597-21376631fd52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef32b497-e3e8-41c5-9870-623e048982b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1cee2098-8f3c-4ef6-ba37-a750f71e1814"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e95d73bf-5e3b-43c3-9e40-16583fc38ad0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89724679-f4bd-45cb-b474-c0d07ba34204"
            }
          }
        ]
      },
      {
        "id": "e8f0252e-28b7-48ea-b98e-bb950c56c1c1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd8ed76e-6a14-400a-94df-7f5eea304b33",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0b6dae8-4a52-4e32-b729-b4011351db4d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0ac495d2-a592-43c5-bea8-387476f17d07",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40d45370-1ea0-4e8a-8e95-149f92fec137",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "996909f5-706c-497d-815f-39257d269f96",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 599.4770992366414,
      "responseMin": 18,
      "responseMax": 4577,
      "responseSd": 680.2988660768721,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1671496721501,
      "completed": 1671496889299
    },
    "executions": [
      {
        "id": "4d7c3330-d0dd-4b9c-b3bb-970f478b23be",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9fab1376-d0d0-46c0-a45f-cf668d5834a0",
          "httpRequestId": "de00819c-cb66-45da-8384-c6cc4a58e722"
        },
        "item": {
          "id": "4d7c3330-d0dd-4b9c-b3bb-970f478b23be",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6f99f498-fefe-4601-9e2b-c7a8147afaca",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "dfd2ad93-45ac-4d38-8f0c-97c7a489e01c",
        "cursor": {
          "ref": "b6134214-e148-427c-bd9d-d779f26aefae",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c98ffd6c-13c2-4c5e-a8b6-d5216d7b7497"
        },
        "item": {
          "id": "dfd2ad93-45ac-4d38-8f0c-97c7a489e01c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3e639ac9-ac68-4bb0-a099-2ce6290de58b",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "c568dc7c-0bd1-4cf5-8c59-bcf4cb5e0d95",
        "cursor": {
          "ref": "3c51599f-19f3-4806-822f-c51ef48758a7",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7aa8594b-3060-462b-b8f4-e09d67a5c7b0"
        },
        "item": {
          "id": "c568dc7c-0bd1-4cf5-8c59-bcf4cb5e0d95",
          "name": "did_json"
        },
        "response": {
          "id": "86cbb803-6f1f-4aca-b7d5-aa38e376bb25",
          "status": "OK",
          "code": 200,
          "responseTime": 726,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867aa783-af9c-4ced-adac-1d64a6fdd9c9",
        "cursor": {
          "ref": "c54aa190-39c3-46fb-8d72-4b765b042333",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d505fdc-a52a-4d64-9bc9-3799cb73ed02"
        },
        "item": {
          "id": "867aa783-af9c-4ced-adac-1d64a6fdd9c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "f3c0b0b2-d7fb-40f1-b27a-2177a917b141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867aa783-af9c-4ced-adac-1d64a6fdd9c9",
        "cursor": {
          "ref": "c54aa190-39c3-46fb-8d72-4b765b042333",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d505fdc-a52a-4d64-9bc9-3799cb73ed02"
        },
        "item": {
          "id": "867aa783-af9c-4ced-adac-1d64a6fdd9c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "f3c0b0b2-d7fb-40f1-b27a-2177a917b141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18168ea-08a6-49fa-9c6e-d1d86caafaf5",
        "cursor": {
          "ref": "a37257c5-f68e-4e16-94bf-6a52dc34b7ae",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6e843708-a782-42a5-9226-11b2f947a25d"
        },
        "item": {
          "id": "c18168ea-08a6-49fa-9c6e-d1d86caafaf5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4dc30de0-df85-4c84-b506-407791b708b1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 575,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f961d16-8056-4f1d-bc3c-2707858cd9bc",
        "cursor": {
          "ref": "2ebaf428-7bfe-404c-b16e-7671884ae023",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "43886257-614b-48fe-9c2d-7e2969e0e9d6"
        },
        "item": {
          "id": "9f961d16-8056-4f1d-bc3c-2707858cd9bc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5e967ac1-5522-426c-9007-bdef8a404904",
          "status": "Not Found",
          "code": 404,
          "responseTime": 510,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9e7fcc-ac8e-4c09-95a9-c4f071503831",
        "cursor": {
          "ref": "36bd9bf3-a17b-47df-b726-98abf8012ebb",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fb250829-f2e3-480b-9a6a-96b9ec75ac08"
        },
        "item": {
          "id": "1a9e7fcc-ac8e-4c09-95a9-c4f071503831",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8350d3c7-6346-482b-87d7-ee6d5e62ea69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0244564f-0864-41df-81ee-2464b6c5aa75",
        "cursor": {
          "ref": "a5535147-4fca-4392-a14f-821f5cc529e6",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e5e3fabc-aae5-48b3-86da-9e074f1d0028"
        },
        "item": {
          "id": "0244564f-0864-41df-81ee-2464b6c5aa75",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d4c4aac9-503c-49b0-98e7-5835e70a25d0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 520,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0244564f-0864-41df-81ee-2464b6c5aa75",
        "cursor": {
          "ref": "a5535147-4fca-4392-a14f-821f5cc529e6",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e5e3fabc-aae5-48b3-86da-9e074f1d0028"
        },
        "item": {
          "id": "0244564f-0864-41df-81ee-2464b6c5aa75",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d4c4aac9-503c-49b0-98e7-5835e70a25d0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 520,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f619e32-aeb0-4f3a-8c4b-8cf2abd84c6b",
        "cursor": {
          "ref": "176e479e-c901-4d98-bb38-6965483e8df5",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7c2a5811-76df-4ec0-bf51-6c55382b90d0"
        },
        "item": {
          "id": "2f619e32-aeb0-4f3a-8c4b-8cf2abd84c6b",
          "name": "identifiers"
        },
        "response": {
          "id": "871691bc-96c3-4193-a5ee-52b7f49dcb32",
          "status": "OK",
          "code": 200,
          "responseTime": 839,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acd8161-4314-46fd-b169-d4f31b14f3a1",
        "cursor": {
          "ref": "279def9e-aa86-4794-af49-8395c633010f",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a30429ae-3d59-447b-b3bd-2b3d4dc8046f"
        },
        "item": {
          "id": "0acd8161-4314-46fd-b169-d4f31b14f3a1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bbf2c83e-e9b6-4665-bb75-99f5fb890216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acd8161-4314-46fd-b169-d4f31b14f3a1",
        "cursor": {
          "ref": "279def9e-aa86-4794-af49-8395c633010f",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a30429ae-3d59-447b-b3bd-2b3d4dc8046f"
        },
        "item": {
          "id": "0acd8161-4314-46fd-b169-d4f31b14f3a1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bbf2c83e-e9b6-4665-bb75-99f5fb890216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ee2ade-a114-4f55-aca1-f3281ff077c9",
        "cursor": {
          "ref": "004eaf06-b5c9-42fd-8655-89a7703b5210",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a32f15b0-7823-417b-9d27-76bd31bb2b7d"
        },
        "item": {
          "id": "80ee2ade-a114-4f55-aca1-f3281ff077c9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2262843e-021f-4e5d-85a6-909e6079d30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536f0c42-18c6-41e0-8d0f-a02cfe8ce990",
        "cursor": {
          "ref": "27c2e292-0a5b-49b4-8b2f-f098df559961",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "baf62fbf-1e1b-41b5-b42c-b5063a1aa0d5"
        },
        "item": {
          "id": "536f0c42-18c6-41e0-8d0f-a02cfe8ce990",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "7ceb835e-e763-4bbf-a758-08fde8ad9401",
          "status": "Created",
          "code": 201,
          "responseTime": 2403,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "2efca27b-f846-4ce0-af26-edfb2f052665",
        "cursor": {
          "ref": "e95c7b6e-6118-4ae4-aee4-2edffa532dfd",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a6a4b023-7bba-4142-8491-57348f90b8f7"
        },
        "item": {
          "id": "2efca27b-f846-4ce0-af26-edfb2f052665",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "efa10a54-7d47-439c-992c-447dc675e9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ff5f3b-a783-42f7-96ec-f0f3e665fccc",
        "cursor": {
          "ref": "39e6e7c8-52ae-4d54-a410-9279e9295279",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "717322fd-f713-4bf0-815e-23a2b031a94f"
        },
        "item": {
          "id": "e6ff5f3b-a783-42f7-96ec-f0f3e665fccc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cd2454d8-6f1d-45d2-bc3e-f1ad243c193c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47eea3d-589c-4709-b6a6-24c2a911808e",
        "cursor": {
          "ref": "fa059776-ae16-4a0f-8f14-3350cff8762d",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "722f91ed-9362-4f59-b363-b650d418576f"
        },
        "item": {
          "id": "a47eea3d-589c-4709-b6a6-24c2a911808e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "42e55a11-d0d2-420c-9803-e2c0bf9d1c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd0c093-97cb-424b-9d2d-c77b7499b56d",
        "cursor": {
          "ref": "ea54d76e-7bfb-4f4a-85f2-8673f18d5ef0",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "007053dd-0bcf-466a-8470-cee00bc97615"
        },
        "item": {
          "id": "bdd0c093-97cb-424b-9d2d-c77b7499b56d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "edd6fb42-fb69-467c-b685-06607ba1718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20a06de-5751-4464-bcb1-71968fb85a62",
        "cursor": {
          "ref": "87ccc15e-a9d8-4116-b9d9-94e98516d3e7",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "61c13558-2bd5-45bb-8f57-e704f19c4d1b"
        },
        "item": {
          "id": "b20a06de-5751-4464-bcb1-71968fb85a62",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ef616439-8a17-425f-863a-774124ee6bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caec727a-800b-4aeb-a5b7-f4e9649e3682",
        "cursor": {
          "ref": "b46fbec4-71e9-487e-9f01-f1e6f86730cb",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "17789b43-d5cd-4641-959f-be5148d281f1"
        },
        "item": {
          "id": "caec727a-800b-4aeb-a5b7-f4e9649e3682",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0f9869c1-9fd9-4384-96dd-6aff3b5fd3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa31e22-acb2-47b0-9a3d-88d6b3a43f28",
        "cursor": {
          "ref": "2134e54f-0e5d-4492-ba03-4428c273a177",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c50d8a54-3c72-486a-9f07-3cf2949d151e"
        },
        "item": {
          "id": "8fa31e22-acb2-47b0-9a3d-88d6b3a43f28",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "df7d2921-67cd-482c-931d-dd40c19ebe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963a7d81-c0e6-4dcc-87a2-44b8e5727bc0",
        "cursor": {
          "ref": "cba33872-a18f-4b40-aa3c-69b623ee6438",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "80f4f58e-154a-46a0-a994-e00b6b4ce88f"
        },
        "item": {
          "id": "963a7d81-c0e6-4dcc-87a2-44b8e5727bc0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a22632d2-f1cf-41af-bc8e-ff5989501e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6827906-3e7e-443a-be42-a4ce4bd535b3",
        "cursor": {
          "ref": "a51f6745-d80d-4137-8c55-337d2dad8b7f",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c7a7201e-add9-475e-978a-b0701858b7eb"
        },
        "item": {
          "id": "f6827906-3e7e-443a-be42-a4ce4bd535b3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1aa4a312-c60f-4f96-a6fa-3aa8565d93e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b784dd-5476-4fbc-b93f-2857cd19be76",
        "cursor": {
          "ref": "d381dec7-f11a-4804-a8a1-1bb0b6aae6ef",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "94547672-3a77-47e2-8281-7374667ad473"
        },
        "item": {
          "id": "09b784dd-5476-4fbc-b93f-2857cd19be76",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "be96983f-8cf5-4777-9571-aec9b0c0dadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08262a84-750c-45c1-96a4-e62f4be8e3cb",
        "cursor": {
          "ref": "cc993475-30f9-4967-8501-93de3842569a",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "456dc5b6-c748-439b-89db-282607528f5d"
        },
        "item": {
          "id": "08262a84-750c-45c1-96a4-e62f4be8e3cb",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "c9cea1d0-6710-4a26-8e7b-83a7b94a9777",
          "status": "Created",
          "code": 201,
          "responseTime": 4299,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "5833d4f0-fa7a-4e6f-98b9-9224d3a2fd59",
        "cursor": {
          "ref": "5a3f4a0f-f543-4985-9202-bf83c39a4e50",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b508a204-c81c-4ee3-b77d-8a6eec5eece7"
        },
        "item": {
          "id": "5833d4f0-fa7a-4e6f-98b9-9224d3a2fd59",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7c3e2417-5eb9-4848-b08f-d73e2d04730d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f952d076-a723-44c7-98ca-6660be5802c4",
        "cursor": {
          "ref": "58127249-468a-4b14-b859-5a8c0af6ba4b",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "96a8aba3-991e-4a7a-b974-e842c7295e21"
        },
        "item": {
          "id": "f952d076-a723-44c7-98ca-6660be5802c4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "10e488be-4cb7-484e-b1b3-46674d47f141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe48c495-c64a-418b-840a-f9fc1d1cec29",
        "cursor": {
          "ref": "a60ee24f-5712-424a-bd95-f8857b47c645",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e3c39d9b-0d68-4210-8ff8-55509f93a470"
        },
        "item": {
          "id": "fe48c495-c64a-418b-840a-f9fc1d1cec29",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "aece4ae6-eeee-414f-aad6-8a0ef235ddce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668d07d1-5e1a-4b9d-ad98-1fa71e57cba2",
        "cursor": {
          "ref": "852ee17e-8931-4354-9ec2-6327ccb6e721",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2cf2cc69-e530-4774-905c-cfd9b254e319"
        },
        "item": {
          "id": "668d07d1-5e1a-4b9d-ad98-1fa71e57cba2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1defbf55-8a6b-44cb-8cf7-3ef357620619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e035875-0860-4c61-899e-4c5a938209b4",
        "cursor": {
          "ref": "b3731aef-fc51-4058-bbab-f769cadb7f64",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "62e43563-4cc1-4a77-b10a-dc0a97a4cf9d"
        },
        "item": {
          "id": "6e035875-0860-4c61-899e-4c5a938209b4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "02e2a3da-14ea-49e4-a553-003b8f6ca1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2fb8da-38b4-4018-8c97-d1fbc92ddde5",
        "cursor": {
          "ref": "9d6b9627-bf47-4d28-9607-d6a0d499c36a",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3055c2b8-5655-4ae1-b46d-cb37a60c5366"
        },
        "item": {
          "id": "3e2fb8da-38b4-4018-8c97-d1fbc92ddde5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bd08cfce-5a2f-4182-b239-d76b9cc72079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a79d511-abb5-4bc2-aac1-b622a2f590a3",
        "cursor": {
          "ref": "239b2db9-2170-4bee-a9b4-223f533ee09c",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bd420e9c-7746-4445-b755-8847b522329a"
        },
        "item": {
          "id": "0a79d511-abb5-4bc2-aac1-b622a2f590a3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ca2311ae-f6d2-41ce-a3a3-bc72e903820f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c9fc90-a635-4c6e-b694-ad996a12092f",
        "cursor": {
          "ref": "342314b3-7d94-4ebd-979c-697dbd958ed3",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1d6a7681-12e7-4c62-9908-84a3e92dacf8"
        },
        "item": {
          "id": "d1c9fc90-a635-4c6e-b694-ad996a12092f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5cc52e3a-afdd-42d1-9216-658cc62dfebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f36444-89d1-4aea-ae4a-72ae21348821",
        "cursor": {
          "ref": "52a0f94b-4b1a-46c6-bfea-1896ebf7f5a9",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bc4c82c7-5fe4-4d00-93fc-c50859a8a341"
        },
        "item": {
          "id": "f3f36444-89d1-4aea-ae4a-72ae21348821",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1baecc94-0037-4bc8-8aae-63b156551bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dc8277-e705-44d9-973b-88fb0fe44ac6",
        "cursor": {
          "ref": "f68e8c6e-fe9b-4f80-93a9-7f764f08e832",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "041d74fb-e45a-4d40-8010-1a9d2696c7d0"
        },
        "item": {
          "id": "19dc8277-e705-44d9-973b-88fb0fe44ac6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9b7de6dd-325f-4241-bf45-f20178ae751f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432f3682-a2fe-40f3-b027-d74c387ae558",
        "cursor": {
          "ref": "994f7b29-1c45-4e39-9193-f747f8b39a01",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cc764635-315e-4180-be8d-0bbf4927488d"
        },
        "item": {
          "id": "432f3682-a2fe-40f3-b027-d74c387ae558",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2f7f4fdc-98c3-465d-896d-bb744bd905c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ace1d01-4097-45d6-be44-bfa7dc662aa3",
        "cursor": {
          "ref": "bb193d3e-e67e-4f6b-b83a-b0821b40a893",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2eb544c9-4bd3-4e49-9d06-07d6d281b9e8"
        },
        "item": {
          "id": "5ace1d01-4097-45d6-be44-bfa7dc662aa3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "babf15b2-e574-4d04-82d7-8e446e0dc367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b969a99-f0bb-4ede-8414-700fe82d41dd",
        "cursor": {
          "ref": "f4ec1d51-e2cb-4b87-b4ff-f73c24119644",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "411228c1-1f65-464d-9d66-fbfd84452980"
        },
        "item": {
          "id": "7b969a99-f0bb-4ede-8414-700fe82d41dd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "697f3f26-9a6f-4af9-a18b-6764bcad7dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3739eb47-f580-48e6-ae76-a550f580168c",
        "cursor": {
          "ref": "ca79e314-4ef0-4f90-898a-753a9580b302",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a0eb631b-3de3-41fb-9732-150308e9adeb"
        },
        "item": {
          "id": "3739eb47-f580-48e6-ae76-a550f580168c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b86e25a3-55e1-45bb-b616-37d3d28bf02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d23df3f-0982-430b-9566-7e1648e32c8a",
        "cursor": {
          "ref": "920d401c-9e0d-4c9c-a7d7-c4b0a3f4179e",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2516b5da-46ba-4473-bf90-8a1218c4c63e"
        },
        "item": {
          "id": "3d23df3f-0982-430b-9566-7e1648e32c8a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "928cfc6d-036e-44e1-999d-a1fece03247a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5094f4-764d-44c5-a0cf-a689fb27a703",
        "cursor": {
          "ref": "7d8ab272-3c49-4815-99c4-a95d4a1e3136",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "efa182a8-6956-4f6e-b6ea-07d3e6be48d2"
        },
        "item": {
          "id": "7c5094f4-764d-44c5-a0cf-a689fb27a703",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "83a374da-df4d-4ee8-a9e4-621fe01e45f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd95b609-a0ca-4d9f-8572-869f44e20387",
        "cursor": {
          "ref": "47611d22-3d5d-4d8a-96ba-36bb629c3dcc",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fe026049-fc68-4b5a-bb16-3bb038570ca2"
        },
        "item": {
          "id": "fd95b609-a0ca-4d9f-8572-869f44e20387",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "219bd180-764f-4e60-9968-94e5586e47b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f87def0-93f1-4abc-bd8f-ece9a0bcccea",
        "cursor": {
          "ref": "1b2e44ec-fcb4-4e8b-aced-1a4986a73c3f",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b9a1cb3c-bc65-4c32-8e99-e18f0a314e7a"
        },
        "item": {
          "id": "0f87def0-93f1-4abc-bd8f-ece9a0bcccea",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "416172b7-1422-47cc-b82c-5de35dce6e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae4b1a5-0dff-4903-a482-d1c0d90df99d",
        "cursor": {
          "ref": "a4f5d5eb-6102-466b-8d17-937b8d37bfb1",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5e0da8fd-23f3-4ff0-b1b3-e1b5b9905399"
        },
        "item": {
          "id": "0ae4b1a5-0dff-4903-a482-d1c0d90df99d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6836c66e-0444-44ab-bb98-277357594263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00c8c66-8282-40ba-9ade-faca356a2a53",
        "cursor": {
          "ref": "a58e1f82-f25e-4143-b025-9c0c3c0cccf8",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2fa2187d-558c-49a9-9428-30849d6059ec"
        },
        "item": {
          "id": "c00c8c66-8282-40ba-9ade-faca356a2a53",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "89b610c5-dfbb-45ba-bea2-9776835e4e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b60c07-92b2-4f6f-bb80-a9340500bed3",
        "cursor": {
          "ref": "e33c468f-cf26-4668-a91a-f2c7a0ce2891",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0d8948f4-eac9-4d1a-b1cc-5776d774d412"
        },
        "item": {
          "id": "e7b60c07-92b2-4f6f-bb80-a9340500bed3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "20c999d4-aa06-4c3f-8ea6-3f887375a366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834d59ab-e568-4644-a428-b7afdae799f0",
        "cursor": {
          "ref": "e81d0749-aea5-467d-83bc-1563e5b2bdf2",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fbd23770-8ad2-473e-82dc-df6d071d4a7d"
        },
        "item": {
          "id": "834d59ab-e568-4644-a428-b7afdae799f0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b1556dc7-1252-4523-8978-8ced5147f187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2811574f-ed10-44d2-9075-46b60c285a74",
        "cursor": {
          "ref": "abd8ee1e-de7e-4d4d-9ef0-10fea6de8bdb",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4771ca57-68ab-4d88-8ddb-24cf8b7f6093"
        },
        "item": {
          "id": "2811574f-ed10-44d2-9075-46b60c285a74",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "34ee1564-89eb-4a83-9e0c-290ae0f88ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c5019a-c6b6-4507-bf7b-dd81b61477fe",
        "cursor": {
          "ref": "bda4b8c7-15b2-4d7b-bc42-44d5ec109a6b",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8b774f26-16fb-4e20-b7cd-345d28efbc9a"
        },
        "item": {
          "id": "21c5019a-c6b6-4507-bf7b-dd81b61477fe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4ea888de-c40e-4c9f-af8e-41b77fd84b67",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 656,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bbc42e-5219-44b9-baca-cc24397df638",
        "cursor": {
          "ref": "cfea81a4-3b00-4ca7-ba7c-c1bfcd57330c",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ce1ca155-d4f7-45e2-abc7-fb6c4f86806c"
        },
        "item": {
          "id": "62bbc42e-5219-44b9-baca-cc24397df638",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e94f2675-ec0d-438c-b1df-27117e7f3d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf3e1d1-54b9-4695-99eb-7b6589339609",
        "cursor": {
          "ref": "65946115-ffd9-440a-95a2-fc78aec1db1c",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f74e8b4e-1e9c-4785-883d-9ba1f6db68ae"
        },
        "item": {
          "id": "cdf3e1d1-54b9-4695-99eb-7b6589339609",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6f086a61-e7b5-4de9-9de6-b25c1008be9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47df9c84-fe05-4622-8099-71543e9e1899",
        "cursor": {
          "ref": "5c0fd469-53a8-4f1a-a232-2cf2d607194b",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6e58145f-c524-4843-a6f3-ffbec7578323"
        },
        "item": {
          "id": "47df9c84-fe05-4622-8099-71543e9e1899",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ba203444-0d8e-4306-87e6-0610c34e9119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01763659-2913-418d-ad3a-c5a055150634",
        "cursor": {
          "ref": "c2e25e16-c1a0-47c9-9901-c290fb08ca5b",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a492a8cc-2668-4ed8-a0a5-9d554cdaed91"
        },
        "item": {
          "id": "01763659-2913-418d-ad3a-c5a055150634",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b8c19747-7a82-4bf0-a38b-229b3aa08d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec9c662-c9c7-457d-9c31-6614f8ea157b",
        "cursor": {
          "ref": "ab638b49-28ef-4dd1-b10e-41295b3f6ebc",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0f2a1635-4c5c-4f88-a3df-3f9f3d4cd322"
        },
        "item": {
          "id": "fec9c662-c9c7-457d-9c31-6614f8ea157b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e922c048-9480-4eb4-a482-72c278215c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89289dee-930f-49b6-857f-760d8d3cf85d",
        "cursor": {
          "ref": "710282af-f89c-430a-9bf1-f5cae90683d4",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0c3af01d-5ae5-4c32-8f3e-bc38ec2c261c"
        },
        "item": {
          "id": "89289dee-930f-49b6-857f-760d8d3cf85d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0bb21402-976e-433a-a561-c27a0914db15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5887a558-e615-4a0b-932b-6697af556915",
        "cursor": {
          "ref": "7ca18d63-b419-473c-9c97-f8d989e9d36a",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d624ff1d-f270-4ba2-bf3f-afe798d3301d"
        },
        "item": {
          "id": "5887a558-e615-4a0b-932b-6697af556915",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d46118cc-d1ec-44b0-b009-5c73c0179240",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 579,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98744e76-f38a-4db6-b35d-c3accb694be9",
        "cursor": {
          "ref": "3ae39e13-7c96-4e0c-8c2e-0bd50bc84f61",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b9e3f78e-937e-4ce7-ae50-5c63ac83fb17"
        },
        "item": {
          "id": "98744e76-f38a-4db6-b35d-c3accb694be9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5b5bc61a-1a89-425d-acb6-f1d7bb3bd16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eed5f3e-d8ef-4c95-92d3-70d79d06252b",
        "cursor": {
          "ref": "feeaec23-e928-437c-80f8-6ee8530d4ea5",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7d5df540-7fc9-425a-940a-3c6e04d44b30"
        },
        "item": {
          "id": "0eed5f3e-d8ef-4c95-92d3-70d79d06252b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8c0226d3-6e7f-4ac7-838d-465260f6979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f4dabe-89f7-43d5-8d3a-7d65a75838de",
        "cursor": {
          "ref": "c49e137f-b61b-4261-93da-20547ad3d5a9",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4ea08939-9768-4ac5-a4cf-86b4c3bc61ac"
        },
        "item": {
          "id": "b3f4dabe-89f7-43d5-8d3a-7d65a75838de",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a9e1937c-82f2-4d59-845e-54da9586d397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df466c7a-d582-46cd-90c9-7c7dd88c5ac1",
        "cursor": {
          "ref": "8d3a023b-e2e8-4ae5-9e14-a00b56afe46e",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1a8bbf89-eea0-45a4-abf1-23d88819f463"
        },
        "item": {
          "id": "df466c7a-d582-46cd-90c9-7c7dd88c5ac1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "40a769a7-2355-42e1-87a5-1ed593627284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c9f56f-9f97-4e01-a53d-d1893f399765",
        "cursor": {
          "ref": "5a1efe66-d00c-457e-94eb-db7c1cbc94f7",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "daf83c4b-f392-4751-b5d4-691d2471a914"
        },
        "item": {
          "id": "e9c9f56f-9f97-4e01-a53d-d1893f399765",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "107f93ff-d250-44e9-81ae-d08a27eac7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f69ed90-b423-4c86-862c-63ccd90fce79",
        "cursor": {
          "ref": "5716fcb3-d0d9-4598-bf1d-54bd3c99f073",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b456f38a-f3fd-4199-95d1-8565f461b1d8"
        },
        "item": {
          "id": "6f69ed90-b423-4c86-862c-63ccd90fce79",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b745f163-914f-4f8e-a2d8-ab41075a2e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e74ae72-45fc-4015-a22c-f515a62bc713",
        "cursor": {
          "ref": "8c8ce6e1-71d5-4fa2-a39e-105f8bf29d9c",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "65c78531-0b6a-41dc-8981-b86828247bf2"
        },
        "item": {
          "id": "5e74ae72-45fc-4015-a22c-f515a62bc713",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "156664e9-c87f-49aa-a98f-fc2d7184eb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e00137-49b2-43f2-ac42-06b07b27ae6b",
        "cursor": {
          "ref": "b1cec51e-c1bc-4821-b568-752b57cfb514",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4a689f92-3793-4ab9-86de-ebe085f6c0ed"
        },
        "item": {
          "id": "87e00137-49b2-43f2-ac42-06b07b27ae6b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a7c86c63-3665-4bd7-8e67-8d21259fb002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be01ea7e-7d49-4a69-8354-aa07988baf94",
        "cursor": {
          "ref": "b9e6bf65-6137-4670-9662-56f524442b5d",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ecef0f8c-dcc4-4c8d-9670-e4c0425e63b7"
        },
        "item": {
          "id": "be01ea7e-7d49-4a69-8354-aa07988baf94",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "763a12a7-4763-46f2-8c52-ebad70fc87d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81081ef-d925-493d-87b8-afb836e4ce74",
        "cursor": {
          "ref": "4f90de1e-606d-453f-bb26-137d03fd3f12",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7deb9d87-0fac-4328-8672-486b208fa076"
        },
        "item": {
          "id": "d81081ef-d925-493d-87b8-afb836e4ce74",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "21c7bf59-cc61-4b1e-aaf9-01e407b4beb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e8facb-f0c6-40b0-8b75-f16b1ed40143",
        "cursor": {
          "ref": "1b89fd03-ad7b-4314-b637-04d5caa38815",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "409bdf1e-796a-42a3-b88e-7e7b99d20e3b"
        },
        "item": {
          "id": "00e8facb-f0c6-40b0-8b75-f16b1ed40143",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a91c0921-6ea3-41be-b3bc-5f1f565ee51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440b32a9-ec65-470d-851c-487f27f24ec0",
        "cursor": {
          "ref": "f5e43418-b40f-40e9-aecb-69d17af1d3dd",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dfcea901-733c-4109-a2a5-8be531cf5a90"
        },
        "item": {
          "id": "440b32a9-ec65-470d-851c-487f27f24ec0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "00f73d05-4835-438e-9bc7-b3d79af42977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598a9a35-2456-41bd-b6ac-54309408dd2e",
        "cursor": {
          "ref": "d34ea754-42da-4435-b99b-a7ad1aa5dd58",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d0fbd71f-5a73-4184-b907-66d4254ca5dc"
        },
        "item": {
          "id": "598a9a35-2456-41bd-b6ac-54309408dd2e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4d219d81-6926-44e0-a22d-dfaab43893b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf3fab2-d3d0-4db8-8bf9-3ecff5635856",
        "cursor": {
          "ref": "de89ecf9-030e-49d9-a0e6-9dfa27b2d17a",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e58fe8bd-886e-492d-93e7-b1e0b3f90738"
        },
        "item": {
          "id": "4cf3fab2-d3d0-4db8-8bf9-3ecff5635856",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f08f797e-e047-4ce8-9248-bf5ee3020e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3d4108-605b-4319-a346-32ee096c6aec",
        "cursor": {
          "ref": "1744791a-2694-46f0-ab33-ec135be92894",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c63495f4-0835-453d-8828-f935f1462d51"
        },
        "item": {
          "id": "ac3d4108-605b-4319-a346-32ee096c6aec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2f2b5c31-58b9-4290-a69f-f63d82849634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616ce671-e1e6-47b0-8a9b-f32e1156b0a3",
        "cursor": {
          "ref": "89852fd0-7f2f-40e0-86b5-97151ada57ad",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2fc6d0d9-fa7d-406e-9687-92ef3724b658"
        },
        "item": {
          "id": "616ce671-e1e6-47b0-8a9b-f32e1156b0a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "32d3f2c7-a94e-4ebf-9f21-236bf4a0c4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8504d7-0865-4053-b208-cc94ad8b8be6",
        "cursor": {
          "ref": "1e3f1e94-e383-4ddd-9eb4-16ad709f9684",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e9224d49-0f74-438c-9546-e09b64964a54"
        },
        "item": {
          "id": "4a8504d7-0865-4053-b208-cc94ad8b8be6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "77024d71-1d86-45dd-b2a2-2a36dde37ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e091a8f3-3f8d-41e6-95c9-be4e1ef471e2",
        "cursor": {
          "ref": "0444a2f6-21c5-4b00-bab2-b2451b6b4df6",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a85db261-494b-4ab5-88c7-ec87810ac026"
        },
        "item": {
          "id": "e091a8f3-3f8d-41e6-95c9-be4e1ef471e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4887b155-f9bd-46a4-8cc7-2ebb6e209481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0697cf2-3d86-4167-b94d-16bdf6ca03e3",
        "cursor": {
          "ref": "e14b1bfb-cd72-4cf5-b6ab-836626c0dbaa",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c71e20d2-e47d-4a94-9f0b-f76adaf4fb4a"
        },
        "item": {
          "id": "e0697cf2-3d86-4167-b94d-16bdf6ca03e3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "06687ea9-b834-47ed-9183-6e20179bf4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3c5fc2-8f49-4a12-b140-833df3cefe63",
        "cursor": {
          "ref": "bbc937a1-7b7f-4fef-a64f-9ea0a96febd0",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a8248f38-2dd6-4e4f-868a-a783111865e3"
        },
        "item": {
          "id": "0b3c5fc2-8f49-4a12-b140-833df3cefe63",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b6e08a20-dedd-477e-b96e-8e1af2024610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba9dde5-4443-43ef-8b3b-b7215847b8f4",
        "cursor": {
          "ref": "9fcd1d42-cf92-4ba1-bc9b-cf60c1807b40",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d92b94c1-9f05-425a-a952-179f77bebd89"
        },
        "item": {
          "id": "dba9dde5-4443-43ef-8b3b-b7215847b8f4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0acca6ef-0a91-4e1f-900e-080fd4763fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b9b1f8-c0a7-4446-ba37-484c4cf61b03",
        "cursor": {
          "ref": "92c01332-21e0-4712-ab99-1a8abc7e37a4",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6afd4a21-3bda-4191-8a45-bc04287fdf89"
        },
        "item": {
          "id": "24b9b1f8-c0a7-4446-ba37-484c4cf61b03",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9fad4813-654b-4cc3-8f7a-cfd27bf50a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176f37cd-6333-44c8-abca-6bb60256c834",
        "cursor": {
          "ref": "3e5fc167-4c7b-4314-9e45-c03b8eb1abe7",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d6385b15-8a6d-4b6e-b336-91c72d18c17e"
        },
        "item": {
          "id": "176f37cd-6333-44c8-abca-6bb60256c834",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d97558ce-5a87-458c-a85c-a5fca89aa7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79281cf-25f3-43bf-8651-b72504b07dd6",
        "cursor": {
          "ref": "2ac198b1-bad5-4fd2-acc5-e181d47eb0e3",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "519d2b35-b83a-436a-bfa2-ae6015b85060"
        },
        "item": {
          "id": "a79281cf-25f3-43bf-8651-b72504b07dd6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6b491ec2-7908-4487-87df-b8d2e638e08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bea6ae-3257-406d-8d81-5519b5609df0",
        "cursor": {
          "ref": "32d1b051-1a1d-4889-8119-cd04b1cbf2af",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "aea4bdae-97d4-40a4-85ff-e072544f461d"
        },
        "item": {
          "id": "f2bea6ae-3257-406d-8d81-5519b5609df0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "84f4e052-48ef-4ce5-8894-bc7994603170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5103536-b783-4f9e-94ea-47fdfde102b2",
        "cursor": {
          "ref": "e651c888-8fbe-4c22-aa53-6d69e6105b5b",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cbb9390b-fb75-4cd0-9ad9-46738216d646"
        },
        "item": {
          "id": "f5103536-b783-4f9e-94ea-47fdfde102b2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3c59dc00-a9ef-423a-bf8f-4c5cb917efce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1075866-32c4-4e01-a872-dfc02aac1e6f",
        "cursor": {
          "ref": "ec90bc3f-42c9-4efa-b218-f539a57258c6",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0cc27611-1444-4103-963f-e8fd15aa36ae"
        },
        "item": {
          "id": "f1075866-32c4-4e01-a872-dfc02aac1e6f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f32befd9-c9a6-4608-9835-1d95b0ddbfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d868f5be-5216-430f-a20a-5677e807ab8c",
        "cursor": {
          "ref": "7b4032a8-4ee4-4a05-b30e-6ebdbd8f1e62",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "74756796-8db0-4468-9eff-a4f1fc4c8224"
        },
        "item": {
          "id": "d868f5be-5216-430f-a20a-5677e807ab8c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8d12f5c0-62d1-4c9e-b24b-50c2e348a1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b2eb52-3b8b-43bf-95c4-20423c9abb12",
        "cursor": {
          "ref": "470b45f2-663e-4164-a8bc-a7ebdd54676d",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d2a4beef-bb42-4e4c-9332-ed65f81ea52d"
        },
        "item": {
          "id": "d0b2eb52-3b8b-43bf-95c4-20423c9abb12",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6967575c-c64c-42e3-bf5c-6730dcc3977e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de955c7-043c-4fd8-9d6d-bfe0ab125c76",
        "cursor": {
          "ref": "e65920a6-a65c-42ac-aa9b-c227e40d5bc6",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "576edc05-0c70-4838-89fd-41f821058325"
        },
        "item": {
          "id": "2de955c7-043c-4fd8-9d6d-bfe0ab125c76",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ade8dbf3-58a9-4b3e-ac08-f16102ccdc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2a6c8b-75c3-466a-a04d-8464efe2b411",
        "cursor": {
          "ref": "2b896e30-acd1-4a93-97b6-a7c7fd0b92b3",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3c0de1ee-5691-4f84-a9dd-9b278f201224"
        },
        "item": {
          "id": "9d2a6c8b-75c3-466a-a04d-8464efe2b411",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a831e928-6594-4023-9a10-a728ddd808b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7ddaea-9a95-4963-b321-7420278af119",
        "cursor": {
          "ref": "6c9f87a1-3019-4910-91e9-413b1879069e",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6e884600-2dfe-4b01-9b74-236838d910af"
        },
        "item": {
          "id": "1e7ddaea-9a95-4963-b321-7420278af119",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "63512832-102b-42b4-8483-46e625415f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbdabc7-489b-47e2-acc3-44edd1a6fec3",
        "cursor": {
          "ref": "66b51354-19cd-4e82-afdd-3aceadd1eded",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b5e68844-24b1-4e1a-a0f8-2b97a3a7d517"
        },
        "item": {
          "id": "2cbdabc7-489b-47e2-acc3-44edd1a6fec3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ea28b76a-51d7-4b2c-9ddd-eed956db413b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5538a8d7-8374-467f-b815-f6badc5e71c3",
        "cursor": {
          "ref": "7fe0e7af-6fc4-4b54-ac5e-3e639ac45ec7",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "19f81028-f834-46f0-803d-0dee4b730bf7"
        },
        "item": {
          "id": "5538a8d7-8374-467f-b815-f6badc5e71c3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6e4d5285-49ff-4d8d-8732-d642838fc9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94316be8-a5ac-4134-8741-5b85597cb317",
        "cursor": {
          "ref": "7cbc381c-38d8-43d2-8939-116f7779f82d",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "be1ed046-393b-4903-969a-7b203803dbd3"
        },
        "item": {
          "id": "94316be8-a5ac-4134-8741-5b85597cb317",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "45f2307a-8d18-4adf-bf0a-ae9655ca966b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b936459-9c6c-44f8-8f34-104f72507a02",
        "cursor": {
          "ref": "ffdc5dd1-5d87-4e17-82ff-2b3cbec8fde3",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "01a10a71-9715-400e-a3e1-0db6f664f6e2"
        },
        "item": {
          "id": "5b936459-9c6c-44f8-8f34-104f72507a02",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f5728ea9-a6ff-4afd-8d54-31098c888adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd752978-9073-4b75-b19f-b34803a77667",
        "cursor": {
          "ref": "7a12721f-8f9c-4e3a-ab92-ae762e438adb",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a39b5c98-e688-4ca0-b1e3-0315dca22a6a"
        },
        "item": {
          "id": "dd752978-9073-4b75-b19f-b34803a77667",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "968f9d15-a68d-41a6-8f2f-576e27c3049f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805b9129-c751-40c4-b7bd-389b0d83d1a8",
        "cursor": {
          "ref": "230fd881-f11e-465d-a9d2-6c1693ca3262",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "88f8367c-d415-47db-8fde-d927d19a2ebe"
        },
        "item": {
          "id": "805b9129-c751-40c4-b7bd-389b0d83d1a8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8e8ce415-b85c-4b29-b3f0-c876a008ae15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3fb692-48d7-4014-a655-d23435c2f487",
        "cursor": {
          "ref": "88e38d0f-316e-4757-a080-64cf9314bbce",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d51e03c5-0368-4ed8-b73e-edad4f6b481a"
        },
        "item": {
          "id": "4c3fb692-48d7-4014-a655-d23435c2f487",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8a9e1ca1-653d-4271-9d0c-5c64275239c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9289f607-9b4d-4e4d-b1f9-73a07e90be3f",
        "cursor": {
          "ref": "0ffbc1ed-22aa-4d00-9088-65077f1b9840",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0bd41df1-0903-4301-93c9-b1c4d248e7b3"
        },
        "item": {
          "id": "9289f607-9b4d-4e4d-b1f9-73a07e90be3f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8bf8f2a5-6c7b-4f74-aae3-51311b2bf639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4273a476-4a71-42c6-9777-a7d0f24bd978",
        "cursor": {
          "ref": "69c38161-04da-4c38-9b75-78b423af7178",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5c81b55c-de58-486e-b1f1-16e2fc04827d"
        },
        "item": {
          "id": "4273a476-4a71-42c6-9777-a7d0f24bd978",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7fae68fe-39a8-487d-82bb-2d9283386caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007ca623-9072-4878-a3a2-a6d2cfed20f7",
        "cursor": {
          "ref": "66367642-bd62-411f-a659-6738a39651c0",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "22ea29a1-7b51-4c95-8321-22b6aef58bfa"
        },
        "item": {
          "id": "007ca623-9072-4878-a3a2-a6d2cfed20f7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a3ccd393-8599-44dc-88cf-6f560e185714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd16876-1c3d-47a7-96c2-6e07a13bf7af",
        "cursor": {
          "ref": "4e075cca-341a-4671-9368-cce22fd51968",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ac70f53d-26af-4661-a665-6a84ab855d48"
        },
        "item": {
          "id": "ecd16876-1c3d-47a7-96c2-6e07a13bf7af",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7f01a2b3-b493-4b32-8398-479e97c894f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d99fae-8db6-43d6-9cfd-6249066ae301",
        "cursor": {
          "ref": "4fc123ec-f7d4-4a50-b1d7-5abdee31cf69",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ce27b7eb-41e1-4462-b7d5-05ce0f6076e1"
        },
        "item": {
          "id": "43d99fae-8db6-43d6-9cfd-6249066ae301",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "df4cf426-9ca1-48f6-99f1-989a45c8a583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35626d3d-0cdb-47dd-8ad9-5b7726ab2e63",
        "cursor": {
          "ref": "18c09efb-bfd7-42ec-8eea-8bef3a04e24a",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1972da9a-db8d-4f7c-8e59-9d73a04ffa4b"
        },
        "item": {
          "id": "35626d3d-0cdb-47dd-8ad9-5b7726ab2e63",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8bc0bc12-c3af-4df3-ae83-1e3e9d7b418b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d385dd-99ea-4488-9632-9da66c7de447",
        "cursor": {
          "ref": "91cf294b-59c6-4175-886a-3b3cfed3be31",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "98bec7d9-5ad6-469a-bc11-d41438261230"
        },
        "item": {
          "id": "b7d385dd-99ea-4488-9632-9da66c7de447",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d6083849-da62-4fec-8021-cb0576cd2a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee04ddbe-f642-46af-97f5-ba62849b9e9b",
        "cursor": {
          "ref": "822cb82e-cc0d-4346-8e87-75aedb1003c8",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9a54e732-6468-4732-968a-f469257e9358"
        },
        "item": {
          "id": "ee04ddbe-f642-46af-97f5-ba62849b9e9b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b07322a5-70e5-41fe-9f07-0cfb23be1299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756ae7e0-3235-47fa-bf6e-529cf2f9e027",
        "cursor": {
          "ref": "48fbda62-6645-440b-9e56-d8116ce6b503",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bba0b676-db3b-47d1-9190-bc6ec52c0817"
        },
        "item": {
          "id": "756ae7e0-3235-47fa-bf6e-529cf2f9e027",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "53cf0b41-8d0b-4951-8e43-3a99a5b320ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6fe975-4215-485c-a38f-9532c79dcb3a",
        "cursor": {
          "ref": "7fc6d13a-7cc0-4f94-88e0-7b2821ce6a78",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6dab8596-509d-4b5a-896d-97caf5fa9961"
        },
        "item": {
          "id": "be6fe975-4215-485c-a38f-9532c79dcb3a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "685b4d0c-1f98-4842-af49-ebfdc9de97f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0dd1e8-b760-4018-971b-959edad70131",
        "cursor": {
          "ref": "22f2ce62-02c8-4b45-b1f1-65a2fd6a6816",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d84e9471-9c7a-4903-aae3-9b73e975791a"
        },
        "item": {
          "id": "de0dd1e8-b760-4018-971b-959edad70131",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "08c18fc2-def2-4226-876f-609ca819e950",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd4bbe7-121b-41e4-b655-89e4daffcefd",
        "cursor": {
          "ref": "44752bc5-e699-47cc-b1c0-e243e1fbffda",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "396def21-887c-4b92-a2de-fbc61cbd0e6e"
        },
        "item": {
          "id": "0fd4bbe7-121b-41e4-b655-89e4daffcefd",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "17840685-16af-41c9-8918-2d13d2ccc6ef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d37753b-9bde-4023-89e0-2874ef2faaa3",
        "cursor": {
          "ref": "d47a1b3a-c651-41a6-8aeb-f9a722889b0a",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3a3b0383-58ec-4547-a77d-c47e5eccbbb2"
        },
        "item": {
          "id": "0d37753b-9bde-4023-89e0-2874ef2faaa3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "27795a16-2f39-40a5-9488-1290eadba91f",
          "status": "Created",
          "code": 201,
          "responseTime": 4018,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "70743446-e8c6-4965-9d33-4ed8876dc1d3",
        "cursor": {
          "ref": "c2255359-6176-4f37-a41e-f36158bce422",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d28e6c09-3224-4214-999a-16e8de9be9bc"
        },
        "item": {
          "id": "70743446-e8c6-4965-9d33-4ed8876dc1d3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "040de6ae-5104-4a48-a29e-a0834d034b4f",
          "status": "Created",
          "code": 201,
          "responseTime": 4077,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "320074e1-36ab-4b1f-9f1d-6801dc86400a",
        "cursor": {
          "ref": "9c3b5da7-03ed-41c4-b0b8-69cf8624eed4",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "04d53544-539b-49d1-9b3c-c5f3165e79ac"
        },
        "item": {
          "id": "320074e1-36ab-4b1f-9f1d-6801dc86400a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4ca2cc62-49cb-4187-b8bb-88d882f17e55",
          "status": "Created",
          "code": 201,
          "responseTime": 4529,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "2ccf6fef-ff1b-45de-84b6-f44c7e2430c0",
        "cursor": {
          "ref": "106d59f7-5ca7-403b-a9d0-62964e59b8f4",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "68a05aa9-3fa2-40ad-bbde-308af990ad24"
        },
        "item": {
          "id": "2ccf6fef-ff1b-45de-84b6-f44c7e2430c0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ba18a5b3-53cb-4bcf-8dea-6bf830cceef9",
          "status": "Created",
          "code": 201,
          "responseTime": 4551,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "ada15cf3-549d-4f41-b86e-f85ac782b8e8",
        "cursor": {
          "ref": "a1944109-bdd9-4424-a4cf-fae72c745d54",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "59497815-b246-4f9c-b927-01a50a780759"
        },
        "item": {
          "id": "ada15cf3-549d-4f41-b86e-f85ac782b8e8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d09dcd46-bc83-4433-893d-5b80b9f4468e",
          "status": "Created",
          "code": 201,
          "responseTime": 4577,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "6056243f-2ef6-4745-bdd2-102a5e1ffd38",
        "cursor": {
          "ref": "654fdf2b-9c2f-43f5-9d71-df7529f2e059",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a11c6878-624d-4017-8e3e-06ed7054f1e3"
        },
        "item": {
          "id": "6056243f-2ef6-4745-bdd2-102a5e1ffd38",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8a0ef513-1fcd-4654-bdb0-018e8ad6b1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6056243f-2ef6-4745-bdd2-102a5e1ffd38",
        "cursor": {
          "ref": "654fdf2b-9c2f-43f5-9d71-df7529f2e059",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a11c6878-624d-4017-8e3e-06ed7054f1e3"
        },
        "item": {
          "id": "6056243f-2ef6-4745-bdd2-102a5e1ffd38",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8a0ef513-1fcd-4654-bdb0-018e8ad6b1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1d7ff7-434e-4abb-96f1-784ecf0d7789",
        "cursor": {
          "ref": "bd470941-30a7-4e42-99ce-62de0b0bbe5b",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f7f2440e-5a50-4c32-a053-7d04cf2efc6e"
        },
        "item": {
          "id": "0f1d7ff7-434e-4abb-96f1-784ecf0d7789",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d7f92e98-9cd3-46c5-bee5-02fa75004151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c09adc9-d286-45d9-8647-11c81539e2d7",
        "cursor": {
          "ref": "ae1c900b-f3f2-4dd0-9d8f-6b238def6328",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "20d89c1b-faf7-49bc-abc3-8eef16a644d1"
        },
        "item": {
          "id": "1c09adc9-d286-45d9-8647-11c81539e2d7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1a11cb04-8e4e-4340-8628-2e860546958b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb214a9-acc2-4f4b-a5cd-1ac364544a09",
        "cursor": {
          "ref": "c62f0741-c3be-4a2f-95fa-fd3741746ff7",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ba0895c0-dc1d-4d62-8bed-3828b273d517"
        },
        "item": {
          "id": "fbb214a9-acc2-4f4b-a5cd-1ac364544a09",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "27ac73c7-db67-4c37-8ac7-3793a97338a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5223cfad-b726-4d1f-8fdf-173cb0e41ba2",
        "cursor": {
          "ref": "13126920-7cce-425e-afc0-5e02449f1884",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "334fb9b4-653a-49ad-b0de-322a7ff3b66f"
        },
        "item": {
          "id": "5223cfad-b726-4d1f-8fdf-173cb0e41ba2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0233f965-874b-481c-823e-193cd2684d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1938741f-7d3f-4442-afd2-7f74b68d7848",
        "cursor": {
          "ref": "af7c2c9c-5a0d-4e29-8127-5bc9cf944a63",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0b2b9933-659b-4716-b349-5c099e1adbb6"
        },
        "item": {
          "id": "1938741f-7d3f-4442-afd2-7f74b68d7848",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "de1a3b12-9d3d-4423-9e64-d4bffd5e20b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be855230-2f78-4428-ad55-052535524512",
        "cursor": {
          "ref": "3cedc77a-6951-4ebb-95c4-11797f88acbd",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8021c090-eeef-4d25-b8f2-fd40a757abac"
        },
        "item": {
          "id": "be855230-2f78-4428-ad55-052535524512",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "51512757-d781-4e9e-b223-30ec9eb9189d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f5128e-b252-4861-a155-90aa1c34c9af",
        "cursor": {
          "ref": "c43f9967-9d5a-49aa-8f4c-ea28c95d3238",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "94124fab-1238-437b-9127-455083015f53"
        },
        "item": {
          "id": "07f5128e-b252-4861-a155-90aa1c34c9af",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "25da7ffe-36b9-429a-afc9-0165ce36d11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc26a046-d2b8-4837-a7a8-1baafd52bab0",
        "cursor": {
          "ref": "219271f2-53e3-45a9-93a0-a263a99504dc",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "dfeee788-1860-47d1-b79b-9bf0b6c7a950"
        },
        "item": {
          "id": "dc26a046-d2b8-4837-a7a8-1baafd52bab0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "106f5b87-1fd1-4c13-92a1-42ddef92bee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1004a3-2ed0-4d63-9428-2ea2418aa8e3",
        "cursor": {
          "ref": "46451d69-4027-4e36-8ba8-31622cab93d2",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "38b2074f-2168-411f-8542-033e2cc69558"
        },
        "item": {
          "id": "1a1004a3-2ed0-4d63-9428-2ea2418aa8e3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "76c346ef-a6da-4c11-9822-cc41c98c36a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf2dd23-20c6-4a9e-babd-d6c2770aa9b7",
        "cursor": {
          "ref": "2f7236f5-ac20-4ed6-83e2-2b606afe766d",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d322896d-e75f-4997-91ea-413165f15134"
        },
        "item": {
          "id": "bbf2dd23-20c6-4a9e-babd-d6c2770aa9b7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8c1c9b0f-b869-4f85-9d6e-a1984e06f20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d0ee76-c92b-427b-8d1d-49f5f9e79b89",
        "cursor": {
          "ref": "a36d0143-9f27-4e61-bbb4-5b2f2c21f929",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "69516680-25bd-442c-a929-4628354fef60"
        },
        "item": {
          "id": "93d0ee76-c92b-427b-8d1d-49f5f9e79b89",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1baee0fa-2cdf-4de0-aa74-9d83ae9b532e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c909300e-4ca8-4ac3-aa7a-693c16ae2627",
        "cursor": {
          "ref": "1d60acfc-3cc5-47d5-85fc-03330a74530a",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f96c3886-beff-494c-b214-96ae56eff58f"
        },
        "item": {
          "id": "c909300e-4ca8-4ac3-aa7a-693c16ae2627",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bcc39d69-53b8-45b7-b893-b4f4c962b2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b89805d-013a-4f72-81aa-53933c3cb886",
        "cursor": {
          "ref": "f42c41ce-da3c-4fa7-9716-1faab49eb5f9",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8e37f5af-9f08-4531-9a74-abfc3fa7e324"
        },
        "item": {
          "id": "5b89805d-013a-4f72-81aa-53933c3cb886",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "064d5d07-da29-42ad-b65f-29188df82d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899bfb83-7154-4277-9f6d-61fa84b11f7d",
        "cursor": {
          "ref": "37084af3-9edf-4872-a8ca-3516cd53823c",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "942b03a2-b83e-4a15-a0db-c0b1ee65b141"
        },
        "item": {
          "id": "899bfb83-7154-4277-9f6d-61fa84b11f7d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "31ca6142-1c8b-4ce7-a3c3-426b7468ce95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f49826-9b56-47d2-a59e-db87ce34bb53",
        "cursor": {
          "ref": "374c2ba6-3948-47b5-a611-612c1b9613ea",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b3031f62-47ec-4898-bf34-eab977fca2b6"
        },
        "item": {
          "id": "35f49826-9b56-47d2-a59e-db87ce34bb53",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "94741c66-25ec-454b-815f-91e4f2627c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a316b72d-ded8-496b-8398-e24b8f3c91c1",
        "cursor": {
          "ref": "752308fd-dab2-4436-b8cd-c08a0d542992",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e898a3fe-5153-40fe-8135-42ec5d89cc8e"
        },
        "item": {
          "id": "a316b72d-ded8-496b-8398-e24b8f3c91c1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e1bb22fb-329d-40a1-a2cd-4213d48a91a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a552d462-55ab-40a3-b784-9ffac6ae8ea3",
        "cursor": {
          "ref": "bbdb4810-0720-434a-9cc9-90332d1492cc",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fc0b03a3-b844-4490-a4af-99e1b22e151d"
        },
        "item": {
          "id": "a552d462-55ab-40a3-b784-9ffac6ae8ea3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f6fd7986-e854-4a0e-acb0-4520786952f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c1129e-e60f-4a69-9f6d-233a79147c42",
        "cursor": {
          "ref": "0058dd5c-c714-45ff-8659-b642a83c08cb",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0c0ea581-735c-4145-8a30-e516548741ff"
        },
        "item": {
          "id": "e6c1129e-e60f-4a69-9f6d-233a79147c42",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6bbede5b-801d-478e-90a8-c3115cb273b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd92e83-064c-4ac0-b050-8672a0b83d68",
        "cursor": {
          "ref": "ff9cc6c3-3bc0-42db-ac09-995e03aea38f",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "55148a4d-7c67-40a3-8cd6-38bde46e9b9f"
        },
        "item": {
          "id": "acd92e83-064c-4ac0-b050-8672a0b83d68",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b25d17a9-dd82-48fe-b6ba-0b0fefa8d25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0370d1d-d2e8-4c3b-8480-4d2b8730abae",
        "cursor": {
          "ref": "f59a15a4-9f4d-49b7-a70d-b3d8bf8c19df",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "03fd3b43-7590-420a-9779-6310b5f28fa5"
        },
        "item": {
          "id": "d0370d1d-d2e8-4c3b-8480-4d2b8730abae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "54efa89c-95d5-4396-8258-bc6b9e49e22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec7b721-c947-4cae-9e5e-9e7a545bce70",
        "cursor": {
          "ref": "af9c3774-5347-4514-9f57-98e0c92ac6a0",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a9dc1cd8-2d46-4a25-b713-be17316f86b2"
        },
        "item": {
          "id": "aec7b721-c947-4cae-9e5e-9e7a545bce70",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "35d65259-5d75-43a6-94ef-7a7e1f3620a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580ac7e6-6763-4844-9f5d-c704c83ef38d",
        "cursor": {
          "ref": "ea361752-ba2d-4b96-a770-ab3e826861a4",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "816aff86-9f3d-4d17-94cb-ffa5af0ec890"
        },
        "item": {
          "id": "580ac7e6-6763-4844-9f5d-c704c83ef38d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "38ff1d5f-69b4-4aa2-b016-6dad6d2f8ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db421d5b-b839-4a1b-a332-626dcfda48b8",
        "cursor": {
          "ref": "b921de6f-7d0a-41fc-bbc6-60e8f7ceffa4",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b31db5e5-be02-43b4-be44-51d55d8ae507"
        },
        "item": {
          "id": "db421d5b-b839-4a1b-a332-626dcfda48b8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cf412f08-649d-41ea-8ce9-2ecc26580d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec231410-de6c-492c-9b59-287ab86c7f17",
        "cursor": {
          "ref": "200765af-e185-4f85-ae1f-87cdb4a9f467",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0124c289-42d6-420a-b673-6572326fe8a5"
        },
        "item": {
          "id": "ec231410-de6c-492c-9b59-287ab86c7f17",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d47702a9-f751-4a3b-8f1e-75055fd8b3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f346ce1f-203c-4f69-8d33-82d51d6c4bcd",
        "cursor": {
          "ref": "8858e715-149a-443e-a67f-782200919911",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2229540e-bc30-4197-8b45-20555106aa7f"
        },
        "item": {
          "id": "f346ce1f-203c-4f69-8d33-82d51d6c4bcd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4264cbbd-67aa-4c15-af61-1b6b843c7922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5511be9d-590f-4fcb-9e75-770893473d25",
        "cursor": {
          "ref": "f225223e-d875-4bb4-9376-e6afc2e70e2e",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a7af2be2-71e9-42cd-80e2-521d03b941c9"
        },
        "item": {
          "id": "5511be9d-590f-4fcb-9e75-770893473d25",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "debc2b96-0fb4-49a5-99f7-c57566c64f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce863d3-b7d9-4fe6-bd57-2c4ded76d188",
        "cursor": {
          "ref": "716d5670-f742-4e3c-b51e-056aedbf1090",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "04e8f124-2a90-451e-a5fc-5c4b3eb69431"
        },
        "item": {
          "id": "cce863d3-b7d9-4fe6-bd57-2c4ded76d188",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a0c5ebb3-6978-4d6f-9f25-7006044f469f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82ce8c5-edf5-4d6f-850f-5e82bbab6e42",
        "cursor": {
          "ref": "478e70e4-a549-42bd-9551-efade77314f2",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "219b70cc-e912-46ee-8607-25f2ed43d4ad"
        },
        "item": {
          "id": "f82ce8c5-edf5-4d6f-850f-5e82bbab6e42",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "73a5f8b2-c188-4e26-81ce-31784a8a52da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe2de05-18b9-446c-a4d0-6ca456aaca6e",
        "cursor": {
          "ref": "41617c79-942b-42fa-8701-738ecded4125",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "93c48c59-9e2a-4fcc-a2c3-c671ad4c4490"
        },
        "item": {
          "id": "8fe2de05-18b9-446c-a4d0-6ca456aaca6e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a28f12a0-7a2d-43eb-9134-738dbfa619b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d3ec5e-8edf-418d-8830-d81fb21ec929",
        "cursor": {
          "ref": "331b40aa-7b6a-4725-8914-80e87127303e",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "63e0cecb-a007-4ee2-95be-269ac2fc32b9"
        },
        "item": {
          "id": "87d3ec5e-8edf-418d-8830-d81fb21ec929",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "689ba7c8-749b-44f6-9a7c-9f68134d1f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d2edec-46a2-4267-80bb-043415172380",
        "cursor": {
          "ref": "4d607730-839c-44dc-93b6-d2f48d0403b1",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4f48ac66-e112-42a9-82b8-a83b67fb7cc6"
        },
        "item": {
          "id": "91d2edec-46a2-4267-80bb-043415172380",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3ffdf2e3-3b6f-40d3-800c-cd77dbf86ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c7ec92-cf5a-4529-8cdf-e66479ebda53",
        "cursor": {
          "ref": "0bef342c-1c9b-4b8f-a273-cc40b643d9e4",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "980328f5-31f4-469a-9352-2d1504944ca9"
        },
        "item": {
          "id": "e0c7ec92-cf5a-4529-8cdf-e66479ebda53",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0bcf6bf9-09c8-443c-9e44-bbef025d9709",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4148e8-7b6a-4241-a93e-3ca7b048916b",
        "cursor": {
          "ref": "589d2e15-ba3a-48c8-b9b6-2242ec9e2d29",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b2769165-2a02-49e1-b401-16fc3493537c"
        },
        "item": {
          "id": "dc4148e8-7b6a-4241-a93e-3ca7b048916b",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ee6ca7e2-83c7-4561-bc3f-c15bae43801d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 563,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7864fca5-3595-442d-b930-6663c000a426",
        "cursor": {
          "ref": "ae33a79c-176c-48bd-9f13-a10ac0988edf",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7c9ac729-05b0-41a8-bb49-fd8d978dda28"
        },
        "item": {
          "id": "7864fca5-3595-442d-b930-6663c000a426",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f7a1c183-040b-4793-9584-6e08b47f3297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7864fca5-3595-442d-b930-6663c000a426",
        "cursor": {
          "ref": "ae33a79c-176c-48bd-9f13-a10ac0988edf",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7c9ac729-05b0-41a8-bb49-fd8d978dda28"
        },
        "item": {
          "id": "7864fca5-3595-442d-b930-6663c000a426",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f7a1c183-040b-4793-9584-6e08b47f3297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc3c545-af9b-4905-8133-98c7e71fb0e8",
        "cursor": {
          "ref": "f2780139-91cb-44de-a955-13e09a6a85c0",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "600076bf-7bd7-4b03-b7bf-c94448d8f637"
        },
        "item": {
          "id": "fdc3c545-af9b-4905-8133-98c7e71fb0e8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5ab1cd43-32b9-4b1b-8af4-5469be0698b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e856e45-4bdb-4187-8747-0f88f4d00132",
        "cursor": {
          "ref": "604a18ad-3964-4804-8035-6dfe286d26cf",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "730d5614-a2b8-44f6-984c-cc3b1c0e2b7c"
        },
        "item": {
          "id": "9e856e45-4bdb-4187-8747-0f88f4d00132",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "abe2e521-d2c9-4475-8b22-7b101473b93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a590399-acbc-4f25-8e43-4fce33e83a48",
        "cursor": {
          "ref": "2df09ae8-8943-4b85-b4c3-2e2a651ebea7",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1fc1dd57-1440-4551-ad5a-56e9878c04c4"
        },
        "item": {
          "id": "3a590399-acbc-4f25-8e43-4fce33e83a48",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "eb8621a4-3086-4ff0-a041-1032d6c24547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58677b5f-a9b0-4ee2-a03e-151a00080613",
        "cursor": {
          "ref": "63859fad-c308-4bf8-9046-a9e9e2aa6144",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a27a9955-07df-496a-abf5-fae97dafac72"
        },
        "item": {
          "id": "58677b5f-a9b0-4ee2-a03e-151a00080613",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d55b1f0d-9d5c-4ff3-913a-675916a5eb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d99e71-326c-4d81-8325-456ab04cfdef",
        "cursor": {
          "ref": "68d9026c-b75d-4ea4-b716-19b3710e8482",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5f543f6c-a05f-4cf5-8746-aa844d44abb7"
        },
        "item": {
          "id": "c8d99e71-326c-4d81-8325-456ab04cfdef",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "97e2d9a1-2af2-4452-a1cb-5431b1a56fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2051dfee-a0ff-42a1-909f-2f1025b3cf79",
        "cursor": {
          "ref": "86df8c5c-e608-411d-8fca-d7bbdcd99c6d",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "10f8b893-a732-48d2-8508-133fdf0c474c"
        },
        "item": {
          "id": "2051dfee-a0ff-42a1-909f-2f1025b3cf79",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0d1805d5-b7d3-4c5f-99ef-4dc7427f9d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadf7136-ffec-41d4-afa5-4d5ea42e441e",
        "cursor": {
          "ref": "0331b4fa-fea9-40b4-bce5-e8ebaca9d414",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8c83b325-13ef-45b2-998d-1cfab495eeb0"
        },
        "item": {
          "id": "fadf7136-ffec-41d4-afa5-4d5ea42e441e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6239d8a4-f569-4c6f-9c29-22a2a69886a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d5a63a-9a84-4734-80eb-801ae6003f43",
        "cursor": {
          "ref": "ac0d522d-fe95-481e-8669-6160121b99fe",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d2e22db0-d31a-45a7-baf1-f95197ae13f1"
        },
        "item": {
          "id": "71d5a63a-9a84-4734-80eb-801ae6003f43",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "727fd4fe-f46e-41a3-9530-0dc02cf88d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b2f857-326e-4212-a0d3-ac70703330bb",
        "cursor": {
          "ref": "6f4a1d10-3dc1-40ee-8b8e-c89cdbe266f5",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2d42ccd8-f521-478d-a21c-c50c4f762c9a"
        },
        "item": {
          "id": "16b2f857-326e-4212-a0d3-ac70703330bb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "78486fd6-7844-4115-9917-0d5bcf3316b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f92091-6bb2-4996-9d6b-49c0decac902",
        "cursor": {
          "ref": "24435a94-6188-4fcc-bc75-ef4548b7cc73",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "10e27ef7-eae7-442f-942a-4eb632939fdc"
        },
        "item": {
          "id": "f4f92091-6bb2-4996-9d6b-49c0decac902",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d3172f5d-52e0-4a0b-b776-ad6af12a82e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb96bf0-9035-4e62-966a-2d9cdef92c96",
        "cursor": {
          "ref": "125a774a-5ebc-432f-8c2f-b88707bbad80",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ee5f7ee7-c283-4b15-982d-743c7b07b108"
        },
        "item": {
          "id": "2eb96bf0-9035-4e62-966a-2d9cdef92c96",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "132a39e9-3c01-4c34-909c-a1c6d65edfea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b73c6d-e891-40de-a5d4-57ed1a696269",
        "cursor": {
          "ref": "5785651b-0629-4520-81b5-e9352a67cf65",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8aa1b264-f290-43e5-b73a-7cd5e4a79356"
        },
        "item": {
          "id": "33b73c6d-e891-40de-a5d4-57ed1a696269",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "792bbd1a-767a-4c91-8404-7aa36b76c824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1289a42-589e-41b3-aa24-92e5848f16b4",
        "cursor": {
          "ref": "c556303e-36b7-4b6e-9aaa-79a0902fe8ef",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "497fdbb3-edd7-44d8-a944-77083ceccbb6"
        },
        "item": {
          "id": "b1289a42-589e-41b3-aa24-92e5848f16b4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9cf2a366-1274-46e0-bd68-71f542cc2c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7645d84d-3e8c-47c2-95ce-54ba7e7c5c9f",
        "cursor": {
          "ref": "a4e08510-d848-493b-b0ba-87476c5dc7c8",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b30b025a-a5d5-4417-8a9e-45b73cb9eacb"
        },
        "item": {
          "id": "7645d84d-3e8c-47c2-95ce-54ba7e7c5c9f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cabf5e27-70ab-482a-a68c-4a970f9e3536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c8af71-b460-4617-a0ed-53e2c9f2d99e",
        "cursor": {
          "ref": "efbddbee-6bda-498d-b2e6-e98ee2173bcd",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6e00a3cc-306b-4639-91b5-9e55c1bb9325"
        },
        "item": {
          "id": "b2c8af71-b460-4617-a0ed-53e2c9f2d99e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e602cce2-55a6-4657-83aa-4cf9dccfa59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3ae10a-ff3d-4399-a950-cb6369857a01",
        "cursor": {
          "ref": "5e43fe14-35cc-45c5-b82b-ac3f867358b0",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8a8755d2-6b22-49cd-8e40-1ceffa746ddd"
        },
        "item": {
          "id": "1e3ae10a-ff3d-4399-a950-cb6369857a01",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9db69568-fa9e-4371-bf07-062c9bb8ccf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2cfe74-93b9-431f-b7c5-f0268ce52945",
        "cursor": {
          "ref": "dddbad08-6629-4d58-905a-5f9eb0e89d7c",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7f6064fe-eca2-4231-bade-fb52b3097cf1"
        },
        "item": {
          "id": "2b2cfe74-93b9-431f-b7c5-f0268ce52945",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "eaf41f07-8956-4b24-87ca-bd739ef1719f",
          "status": "OK",
          "code": 200,
          "responseTime": 3207,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "cba43fda-2666-42f8-a9c4-6fa953332d22",
        "cursor": {
          "ref": "912e4f41-e38d-440a-95f1-2905361ad4da",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "610673e9-17af-4ec7-aacb-9173801ca9cb"
        },
        "item": {
          "id": "cba43fda-2666-42f8-a9c4-6fa953332d22",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "94cea2da-e682-4986-b59f-59e92f77be26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b3696d-29f5-4617-bdbb-3f4e5622a796",
        "cursor": {
          "ref": "aeef9157-22b9-4d12-aaa9-1b5665fca3ae",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8866e143-f0be-4606-a67f-36aebc5e0b98"
        },
        "item": {
          "id": "e9b3696d-29f5-4617-bdbb-3f4e5622a796",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c9d0d44b-92ba-43da-a3ed-145939a64a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea662e9f-ce8d-4b49-b280-57c20246988f",
        "cursor": {
          "ref": "7a561da0-8d7d-4535-acf2-8a179d0e5a47",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "32daa643-35b9-46cd-a7eb-ec18a21e26d0"
        },
        "item": {
          "id": "ea662e9f-ce8d-4b49-b280-57c20246988f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ee059d10-1c3c-442d-a112-a8ac4be05d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce92c3b-9d49-4b6e-b124-6d37aa8b93f2",
        "cursor": {
          "ref": "0f459347-de61-4c70-8477-ed1fb3203d38",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "291aa971-0aa4-4aa7-afb8-55b80b0b1596"
        },
        "item": {
          "id": "2ce92c3b-9d49-4b6e-b124-6d37aa8b93f2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "609028d8-459b-4d2d-9d6e-7b492575b8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17285859-a157-47db-820d-040ce3907c98",
        "cursor": {
          "ref": "b5d1a0f5-c300-4b22-a32a-83571d99c0db",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b30da4fd-5a89-4ca7-8901-93b634592029"
        },
        "item": {
          "id": "17285859-a157-47db-820d-040ce3907c98",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "924259c2-442b-4f10-ba1a-31a48671e310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a441bc78-caec-4ddd-9c3c-d24d48d470c3",
        "cursor": {
          "ref": "ca47fed9-bbfa-442a-a6e5-dc237d9a866c",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "90a8a648-70fd-44ce-be2d-344d1078963e"
        },
        "item": {
          "id": "a441bc78-caec-4ddd-9c3c-d24d48d470c3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0756a441-377e-4f4b-9152-6977f80eb59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c0c605-a916-42f2-8fee-1490fd8544d3",
        "cursor": {
          "ref": "18906153-3232-44a6-afcc-80a0c09e05d1",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7e78ca13-b397-4aa2-80e0-3b86d363f169"
        },
        "item": {
          "id": "74c0c605-a916-42f2-8fee-1490fd8544d3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "422b1bb5-131f-4fb5-9fd3-48597dc59690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2513fd5f-d4a3-4901-b537-98a25c94e65d",
        "cursor": {
          "ref": "67a12145-f0b4-41f3-95ad-441cef224335",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ace9e609-f0f4-48e1-8cab-613e8874d9e1"
        },
        "item": {
          "id": "2513fd5f-d4a3-4901-b537-98a25c94e65d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "65c37131-e78b-4102-95f8-5215317509e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ecd525-8657-479c-973c-eea7001711f2",
        "cursor": {
          "ref": "e3f4172a-4a97-40a1-be9b-0735e4146553",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "293ec3e0-4dd2-4384-94f5-c040f2e9d42c"
        },
        "item": {
          "id": "46ecd525-8657-479c-973c-eea7001711f2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "39cb036e-21cb-4852-8c20-e488767197e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b80f2fd-7bca-45f1-8a25-2617cd0f66f1",
        "cursor": {
          "ref": "99fc0190-1e26-4f77-8a0f-06de74e9fb27",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4176d2e9-fbeb-42d3-9d56-cbc51e74c9e6"
        },
        "item": {
          "id": "2b80f2fd-7bca-45f1-8a25-2617cd0f66f1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8798b9f5-7325-422f-8cba-ed6fb882dbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8b4629-2545-4629-b7e1-2ead36f638df",
        "cursor": {
          "ref": "592a6af9-80dc-4adf-ac98-af8d5b27aa52",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9e248c5a-d53b-4f6b-9fdf-d4892f43452f"
        },
        "item": {
          "id": "0f8b4629-2545-4629-b7e1-2ead36f638df",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6ed9b38f-2b8a-4a1f-b117-028bff9e8fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bdc7a6-cf74-4341-a31c-aaa6060a82a0",
        "cursor": {
          "ref": "95c0a794-e6fc-401d-84da-83e79d9f1255",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c28ec8b7-a7b5-47f9-b5ad-ff9e4b42656d"
        },
        "item": {
          "id": "e2bdc7a6-cf74-4341-a31c-aaa6060a82a0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d02748ba-756a-48c1-8cb7-8e446a9da4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4c0a71-160b-4094-9eb6-c2f7ea67b93d",
        "cursor": {
          "ref": "6ad0adbb-4207-495a-a6ae-2ee28c173187",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "799caa65-d1f2-49ec-99b6-f6f8f5f538b4"
        },
        "item": {
          "id": "9b4c0a71-160b-4094-9eb6-c2f7ea67b93d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3b848076-32ac-43dc-858c-f0de62290486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc39f57-15a2-40fe-ac38-48568848e83b",
        "cursor": {
          "ref": "2cd6fe08-ab37-49c2-ba50-1defced31ec5",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c49516b3-4aad-4006-8037-072a9095cbfd"
        },
        "item": {
          "id": "adc39f57-15a2-40fe-ac38-48568848e83b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e8db43c2-e2ce-4c40-aaae-81103def0ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091da211-aadf-4ede-bdfc-5c639288fdcf",
        "cursor": {
          "ref": "e5851785-dcb4-4fa6-878c-ec3702fe342d",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2732755a-db66-4b75-a986-64977845f090"
        },
        "item": {
          "id": "091da211-aadf-4ede-bdfc-5c639288fdcf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ad9e41f8-4cb3-4778-bfd9-c25660b7df2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfc6c32-4494-4c96-b4aa-9d8c77a61cbc",
        "cursor": {
          "ref": "47a73cee-1780-4973-95d9-66db9b6ca5f4",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0c4a0a76-9fa3-4cf9-b76d-54046c8e1fed"
        },
        "item": {
          "id": "dbfc6c32-4494-4c96-b4aa-9d8c77a61cbc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bfa4cb6c-7937-45b2-9716-7bae731e7b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d586c4f-4b89-4ef1-b5f4-a7054b76231d",
        "cursor": {
          "ref": "0abd4247-2d95-4c79-bf0c-b76789c4718d",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "549f8075-160b-4e97-9103-241aa2fccbaa"
        },
        "item": {
          "id": "8d586c4f-4b89-4ef1-b5f4-a7054b76231d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9be8cad1-21e6-44d4-bd76-011cdaaa51fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1996dc9-1881-4939-a6c9-c0a7e4fc839c",
        "cursor": {
          "ref": "3ef9499e-40d2-401e-b3d7-4eaab77bcaa7",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "402cbf1d-3d21-4408-af0c-a54e556a7290"
        },
        "item": {
          "id": "e1996dc9-1881-4939-a6c9-c0a7e4fc839c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "982db694-cbf4-4939-97da-03adf0371496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b724633-42a0-4889-af90-27f13fb8b8e8",
        "cursor": {
          "ref": "268b6e00-4b41-4d86-b10f-270e47de3125",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d718523f-e21f-4f7d-af35-22a5028adc86"
        },
        "item": {
          "id": "3b724633-42a0-4889-af90-27f13fb8b8e8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "07360f52-a8fb-4111-a45c-a853e27bd1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a632fe2-e368-4b38-9d1d-179a76fad123",
        "cursor": {
          "ref": "373b3c2d-0c92-4003-bc93-15b007612efd",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3ddf207b-804c-48bb-9fad-95ca1b0579f8"
        },
        "item": {
          "id": "6a632fe2-e368-4b38-9d1d-179a76fad123",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cabcd9e6-7310-49e8-b14d-f71978402616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652cf718-4a01-4091-b128-1a685ca1634b",
        "cursor": {
          "ref": "d167ed90-45c3-42e8-9d78-e128d00eb5f8",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ea2bd0f7-f0d2-4168-b70f-94db52170136"
        },
        "item": {
          "id": "652cf718-4a01-4091-b128-1a685ca1634b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "54010a99-f72d-4e79-9ccf-3375c18f22b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce49dcd8-39d6-4e52-be48-71c3fc891424",
        "cursor": {
          "ref": "cd9400dd-2ac2-45f6-9aff-506ef4420e4a",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "644ee985-9e42-4b85-940f-a2efe85dfd98"
        },
        "item": {
          "id": "ce49dcd8-39d6-4e52-be48-71c3fc891424",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3daf77b2-7f82-4d0a-ab98-d85976f38581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53eec02-d395-4f7f-898b-4943b2e4f954",
        "cursor": {
          "ref": "7edd4cf3-a192-489b-9c2e-513c75af7012",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "45fa43c0-5a28-4cb1-b6f8-d3eb4581435a"
        },
        "item": {
          "id": "f53eec02-d395-4f7f-898b-4943b2e4f954",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "89d28c28-2921-4e39-aabb-f9473623b48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0853b656-b592-4d3c-8008-85c708ebd641",
        "cursor": {
          "ref": "5fd89dba-7afb-4380-a396-4eefe47190ca",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "34a444de-9c48-45cd-bf31-4abec19f43e0"
        },
        "item": {
          "id": "0853b656-b592-4d3c-8008-85c708ebd641",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a7f51dc8-6e34-4eff-a562-2ae6f3810ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d95cc99-0644-4867-90f7-0552510e9659",
        "cursor": {
          "ref": "2aa083d5-449b-413c-a0c8-980e355495ed",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7fc1d75b-27d3-4965-af2a-48d594e211b7"
        },
        "item": {
          "id": "0d95cc99-0644-4867-90f7-0552510e9659",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e28d5347-6d98-4ba0-8db4-eb99f1836fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3b1307-3eba-4ed4-a335-dcb94412bf47",
        "cursor": {
          "ref": "83370c62-96df-42f5-b084-91000b188cd5",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d5419934-583d-4fab-871f-d09127db571a"
        },
        "item": {
          "id": "6a3b1307-3eba-4ed4-a335-dcb94412bf47",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9a24b0b4-e98c-41af-ac89-d04f73b601c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5688a348-5569-47fe-a503-aa3da60a6d9c",
        "cursor": {
          "ref": "cd8b873d-baf7-4c65-87f6-d0e46e35e36f",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3a93ee3a-fe28-4991-8320-aa9f235f4d66"
        },
        "item": {
          "id": "5688a348-5569-47fe-a503-aa3da60a6d9c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "20967031-9a8c-4247-8f32-866da1128b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63179b5b-1ae9-4e52-9ee9-659b95393a2e",
        "cursor": {
          "ref": "68b27a23-837a-4a61-bea3-29b56dbaa6df",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "03fdbc44-9446-4beb-99a5-94f4cbf44bf5"
        },
        "item": {
          "id": "63179b5b-1ae9-4e52-9ee9-659b95393a2e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "54b29f5a-df49-49a9-b3d6-0fbf8dca355d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9b63b1-85f9-4026-b4a4-8cc5b236af5d",
        "cursor": {
          "ref": "a61a73c2-8cd6-486a-ab2a-6c76492e82e1",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9a080a30-5765-4239-a098-e0050e1b2e27"
        },
        "item": {
          "id": "cf9b63b1-85f9-4026-b4a4-8cc5b236af5d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "40d93d8f-9b59-4061-b84b-19cc66bd4036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cf6ec2-63a3-4542-a0be-88d41a490fb1",
        "cursor": {
          "ref": "5afe4311-84c0-4492-b7a5-0c4d0b1f95f7",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6b2677f0-0fd3-437a-9625-a26d3b24959f"
        },
        "item": {
          "id": "24cf6ec2-63a3-4542-a0be-88d41a490fb1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "58c1c7c5-d1c2-4bec-b7fe-44a18dc7433c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc17c770-fc86-415e-9df3-757c6e992696",
        "cursor": {
          "ref": "cb56f13d-9d8a-40ca-87a9-6b7aefcd9665",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b966b12d-3692-4dad-9955-f917c1e2d5d2"
        },
        "item": {
          "id": "dc17c770-fc86-415e-9df3-757c6e992696",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "db3bf413-bde3-4bad-b360-5c8ebd5ceec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e469e088-3458-4415-b431-dfd711c20ba7",
        "cursor": {
          "ref": "163e329e-dc6b-4418-9375-d7939ff0fd48",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e6f549e9-904b-4428-a204-dc79636feeed"
        },
        "item": {
          "id": "e469e088-3458-4415-b431-dfd711c20ba7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "424cd999-2b60-486b-9f0d-88f6ae78798e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9b4b3d-b5ce-46aa-bcf5-2a6d0075d683",
        "cursor": {
          "ref": "10532141-f8d9-4fe0-8010-ec903846784d",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4eb3371d-b1c0-4aef-8580-e88bb13f269f"
        },
        "item": {
          "id": "eb9b4b3d-b5ce-46aa-bcf5-2a6d0075d683",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "64f7c47d-a1de-4c56-8965-aa2be243182a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5741d337-184f-4e60-aca7-c426763c9352",
        "cursor": {
          "ref": "fe88fc0b-44f1-4b0e-9dba-95cf8cb5be15",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cefd724d-222f-44e1-91f6-4059ccf22272"
        },
        "item": {
          "id": "5741d337-184f-4e60-aca7-c426763c9352",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "668df2ac-9d13-4bf9-bcf4-76c92e5a9d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77b42d1-bc07-4940-915a-a850fbd5e4e1",
        "cursor": {
          "ref": "d1653a48-3570-4ba5-9802-909a74bcf2e0",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8c5a3555-0a02-4903-93e3-e55840050760"
        },
        "item": {
          "id": "f77b42d1-bc07-4940-915a-a850fbd5e4e1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b365b3c8-cbc9-4de6-9acb-4a8163d12d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672d06e0-9821-45c8-9097-f838cdc331e1",
        "cursor": {
          "ref": "7d5ca24c-23e5-4b9e-80fa-a1950b556855",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f54ed0cc-c587-42bd-9b92-016cd96a30f0"
        },
        "item": {
          "id": "672d06e0-9821-45c8-9097-f838cdc331e1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ffbfe318-af1a-46a0-a2c0-c0267a3543fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9e967d-6c28-4958-8969-8657ee1e893b",
        "cursor": {
          "ref": "646b6c54-9af4-4f7f-959c-9e4b1a287517",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0c4c0385-df5f-45cc-b005-ea930aa54426"
        },
        "item": {
          "id": "ec9e967d-6c28-4958-8969-8657ee1e893b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "664e9c94-ae3f-45c1-8c8d-720476603029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30848d25-353f-492d-a858-cf683411f206",
        "cursor": {
          "ref": "f6b24c6d-51ef-4d90-bf3c-9879c6dd0c0c",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d476f259-dd3e-4226-a6fa-6c6748a43f8d"
        },
        "item": {
          "id": "30848d25-353f-492d-a858-cf683411f206",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "776fcb1e-b584-479d-9d4d-56e0ca631578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9447547c-0e18-4644-9547-6b6313c58fce",
        "cursor": {
          "ref": "4c1e0a87-99c8-4c3c-bcb9-0e8650dc81dd",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "04020fd4-8528-48f2-a137-d0c8e8907839"
        },
        "item": {
          "id": "9447547c-0e18-4644-9547-6b6313c58fce",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2a10883d-e86a-45fd-bb96-91dc0f0871bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a565441-22ba-45f5-aa86-d2062f9ee99d",
        "cursor": {
          "ref": "82119380-647e-4d4d-b19e-c819116e54ac",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e6b77e22-de55-48f0-bf79-221ff53e84e2"
        },
        "item": {
          "id": "3a565441-22ba-45f5-aa86-d2062f9ee99d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b40c0776-cabf-4ede-9414-3b77cc10c901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347c62b3-73b6-449b-b491-ed6c246087f2",
        "cursor": {
          "ref": "0e20b009-701f-424e-b2c5-e1ab1bc80d61",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3a76560d-18eb-45ff-aa19-3af5d0e88f7a"
        },
        "item": {
          "id": "347c62b3-73b6-449b-b491-ed6c246087f2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ce27b6f1-c7e4-4d51-8d80-b3cea2fd76e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d437e9-e650-41ce-b907-f9810a6e685d",
        "cursor": {
          "ref": "41d5ddab-82ca-4d00-9fb9-ad94e1262599",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "44af7f90-4659-404b-8a8e-383c2c0c4849"
        },
        "item": {
          "id": "55d437e9-e650-41ce-b907-f9810a6e685d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c6728c83-73d7-4f1b-952c-830179d39e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ee4b2f-2db0-46af-9f92-e98acfd6198a",
        "cursor": {
          "ref": "a359c526-4c04-4b8a-a4d3-8e74b08ad1a9",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e20cd9b5-e041-4909-95a1-10932e6abbdf"
        },
        "item": {
          "id": "45ee4b2f-2db0-46af-9f92-e98acfd6198a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "02b07696-1c77-4d93-bc64-96ea99cfba19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4aea53-4a43-4942-a9bb-db589b0bd647",
        "cursor": {
          "ref": "570f5065-e600-49bf-a61f-0a4ee3c99ed4",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "79dc1f89-44fb-4db5-8fa8-d7b29ba6653b"
        },
        "item": {
          "id": "5f4aea53-4a43-4942-a9bb-db589b0bd647",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "faa26923-c287-4a79-a286-99785660baf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f6ac50-4adf-4b43-9384-f481d978892d",
        "cursor": {
          "ref": "acf9061f-5006-46e3-a680-38ffd3563ae0",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f098dd4-27f8-4ef5-958c-1ccd6742bf9e"
        },
        "item": {
          "id": "73f6ac50-4adf-4b43-9384-f481d978892d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cd8e614f-7ea3-4fca-88da-27917aa03d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce5d6d8-88a1-4614-af00-c5ce21bdd0fd",
        "cursor": {
          "ref": "24ab502f-363e-4e1d-a9a7-8b201e0c5a48",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1d78dd2a-f509-49db-abfa-22e584c5eb6c"
        },
        "item": {
          "id": "cce5d6d8-88a1-4614-af00-c5ce21bdd0fd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1b70cd7e-0cf1-4a7d-a867-40616f54b008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7311295e-2cfb-4728-baee-d88c961120af",
        "cursor": {
          "ref": "fc5c1271-f45b-4dfb-851b-3358a5c10ae4",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "95d39af0-c9f8-46b8-931e-9f8e68932e06"
        },
        "item": {
          "id": "7311295e-2cfb-4728-baee-d88c961120af",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8def91d1-0d2b-40df-827a-7de9b3ee95db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c796abbc-b57a-42ae-b53d-4f137775951c",
        "cursor": {
          "ref": "85c152fd-bf86-498c-bb03-31e582fa3fba",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a3252b86-4afe-49a2-a8a7-581a28ab143d"
        },
        "item": {
          "id": "c796abbc-b57a-42ae-b53d-4f137775951c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "46f33316-dc8b-4757-a719-b83d3d8e2b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c2cc0c-b30d-464d-aca2-e5a8f34514ce",
        "cursor": {
          "ref": "d490c74c-dc5d-413b-9a24-9d5355bf79fd",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "15278c05-461c-4a87-aae4-9e001f74ba6e"
        },
        "item": {
          "id": "87c2cc0c-b30d-464d-aca2-e5a8f34514ce",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3a431212-29a1-418c-9ba1-46cca43272fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dd6f55-5003-40c4-814f-86e5b663dbd4",
        "cursor": {
          "ref": "bcd83602-b602-4309-a23d-b7e3f40b4fb9",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "276ae40e-2b2d-4729-aa34-6dc8ad1d27a0"
        },
        "item": {
          "id": "b8dd6f55-5003-40c4-814f-86e5b663dbd4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0691b2d4-516d-4533-a64f-75234da88bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f241a8b-ce6c-4ea6-8556-4624de45ebdd",
        "cursor": {
          "ref": "c1ad3253-b83b-45a6-a1bc-18c15a5a2916",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4a3f8c73-52f8-4b77-b8f2-322b47535607"
        },
        "item": {
          "id": "8f241a8b-ce6c-4ea6-8556-4624de45ebdd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0262afdc-53eb-4718-9709-cb85c922b37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b7a6de-70d3-4ffd-a25d-22eb8b25704d",
        "cursor": {
          "ref": "0398718a-fde5-4fb0-a786-647dbad8322a",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2cfd2fe6-a9bd-45f6-a6ed-440654c8a443"
        },
        "item": {
          "id": "12b7a6de-70d3-4ffd-a25d-22eb8b25704d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8d349d2f-249a-43a5-9490-77854fcbda18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9ea384-7d9a-4255-a23b-be0e7eafcfb7",
        "cursor": {
          "ref": "34664d82-1aea-4edf-9708-9634e9eab836",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0d84b344-cc1d-404c-89f5-20ed4e704d0c"
        },
        "item": {
          "id": "bd9ea384-7d9a-4255-a23b-be0e7eafcfb7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5ada6f95-c435-4086-b2e3-0efb7538f678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78b14a9-85fc-4321-bfce-41c93c45ca0d",
        "cursor": {
          "ref": "1e7a1912-0311-43bc-8a37-8256e51a43a0",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cabe4713-faaf-409e-ba79-0d3dfd587a4d"
        },
        "item": {
          "id": "b78b14a9-85fc-4321-bfce-41c93c45ca0d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fd0a25aa-e752-4467-87a6-231f4bdc7b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fc7174-e161-4dbc-b7a1-4bdaaa67718e",
        "cursor": {
          "ref": "b6bce1c5-e864-458c-b83e-8870676dfe25",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3b09bb1b-a315-4582-afdb-6e07824b11e2"
        },
        "item": {
          "id": "49fc7174-e161-4dbc-b7a1-4bdaaa67718e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8e88f3cb-d388-4aed-9c48-d8225dfc4780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1539cd-ac6f-4711-87d5-dc130eb551d3",
        "cursor": {
          "ref": "8c37304d-1bac-47fe-9e2d-8d646bbfc444",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8a959981-53cd-47bf-a811-e55390dce570"
        },
        "item": {
          "id": "de1539cd-ac6f-4711-87d5-dc130eb551d3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f82969a7-b202-425b-a4aa-069c98a1d29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c664f9bc-2c29-4ace-aad3-c3e324dae5a5",
        "cursor": {
          "ref": "96c27037-3869-47f2-9ca8-35df06ed9c85",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4266c4ed-bcb6-4d79-9e36-472c3c0aafdb"
        },
        "item": {
          "id": "c664f9bc-2c29-4ace-aad3-c3e324dae5a5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "16599964-8c4b-4e3c-b66c-90702bd454fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a0298f-940e-4e7b-9d57-440d19ea6000",
        "cursor": {
          "ref": "761de665-5bb8-4ea8-aeb3-a85b0ba2c1a1",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b071c69e-a8a0-40df-ad57-52fb10d406d7"
        },
        "item": {
          "id": "06a0298f-940e-4e7b-9d57-440d19ea6000",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "31714283-5e77-4246-b2e9-364e9b764317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b60b1a-248f-4b42-a3cf-d439b1145524",
        "cursor": {
          "ref": "b348479a-bf32-46f3-94c9-959b1050b10c",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4d43b7e2-d8a4-4c2b-a6e3-83ac462b0af3"
        },
        "item": {
          "id": "42b60b1a-248f-4b42-a3cf-d439b1145524",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b30b5a4e-520f-4bd4-9aa7-f3583c38c47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b53ee3f-48ff-4436-b47c-0c31092f6a04",
        "cursor": {
          "ref": "b07687e2-dd23-4cad-8200-b662d2b7f145",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e9f2cc00-cb2a-4f1d-9b16-2acffc167302"
        },
        "item": {
          "id": "5b53ee3f-48ff-4436-b47c-0c31092f6a04",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4a3ba2f5-aa15-4d47-b8fd-04d873e91355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3df086d-cde0-4b64-97a3-0d12d3fb84d3",
        "cursor": {
          "ref": "b3abef12-3261-44cb-8aab-54a64a3ec5ad",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dfa92b1b-33cd-46eb-8c8b-377cc10157f8"
        },
        "item": {
          "id": "b3df086d-cde0-4b64-97a3-0d12d3fb84d3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a62f9220-1386-47c0-9ebb-ec42c163ffbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5492287e-e296-4898-86e8-c6c845bb6fb7",
        "cursor": {
          "ref": "1f2167b7-945e-47d4-a596-926e88d40296",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "adaafb09-eade-42e1-a388-3cff5ffdaff9"
        },
        "item": {
          "id": "5492287e-e296-4898-86e8-c6c845bb6fb7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "968da31f-ade6-4a51-b620-9c1701e230db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f412f6f-1a54-47e4-8357-7503e2a897ad",
        "cursor": {
          "ref": "3fd82ac0-598c-48e6-98d8-b7fc554d0526",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "32a9a40a-d45e-4fc1-926d-a4350c2e81a8"
        },
        "item": {
          "id": "2f412f6f-1a54-47e4-8357-7503e2a897ad",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "61e18245-cf67-4d03-a82f-8d559ebea406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bbaff9-e4f7-44d6-989c-5276cf20c166",
        "cursor": {
          "ref": "5256c757-3a0c-4505-b166-64f814a74c85",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1c2d05e4-8e68-4848-afe6-18d200fc3c70"
        },
        "item": {
          "id": "a9bbaff9-e4f7-44d6-989c-5276cf20c166",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6553c1d6-f64d-4a8d-9e07-9255317d13ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa2b414-da82-4b32-9e22-7d522752ef6f",
        "cursor": {
          "ref": "d55eb655-9f90-4e97-a6c0-971d1424c0eb",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "402fb2b7-9d82-48f2-858f-66626c03997b"
        },
        "item": {
          "id": "0fa2b414-da82-4b32-9e22-7d522752ef6f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fe7c8188-c23e-45b7-9bba-74e2a9f58ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94c61ed-5dc1-4e2e-b708-33d6d5c5fee0",
        "cursor": {
          "ref": "05047d6c-9006-4abc-8bd6-c916ea5a86fc",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cd4e4f32-4109-4476-8dc3-b3f5f315313e"
        },
        "item": {
          "id": "a94c61ed-5dc1-4e2e-b708-33d6d5c5fee0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "30a66a19-1430-44ee-bf5c-2ac4eb6d6717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3349f231-8b0d-44f2-b332-be0dd2931590",
        "cursor": {
          "ref": "52b91f73-fd8e-4b9f-9dcc-280da93256d0",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "07e0a3c6-0c5e-4362-9636-e52c726e0a0e"
        },
        "item": {
          "id": "3349f231-8b0d-44f2-b332-be0dd2931590",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "eef16d54-777b-45b4-b7c8-54fb7d9466f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd499bd7-e928-48ac-a3f2-7b5b62d1df91",
        "cursor": {
          "ref": "53d43b21-06bd-4cb3-a41d-58bfb216d73a",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d00dc631-026d-4ce9-aa54-104490713ccf"
        },
        "item": {
          "id": "bd499bd7-e928-48ac-a3f2-7b5b62d1df91",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d6608c15-26a4-4555-b05f-0019aec31dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d351f138-0de2-421a-b5b0-2f6f85c2ea77",
        "cursor": {
          "ref": "e42d4dc7-8b1b-4966-8c8e-08e5e0beca9b",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8c71d49c-8d83-4d1c-b97a-79e467620fe7"
        },
        "item": {
          "id": "d351f138-0de2-421a-b5b0-2f6f85c2ea77",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d4b261b6-b654-43ee-ad9f-2a61256b24d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a585ca5-36bd-4029-a315-56514422a74b",
        "cursor": {
          "ref": "b7f9f31d-460e-4c81-ac6d-834322563d53",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c18bd1b9-df5b-4f3a-a81e-c5fe1a2bf6a1"
        },
        "item": {
          "id": "1a585ca5-36bd-4029-a315-56514422a74b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d8e3abe5-dcc5-471d-b848-a9ea68bd607d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602f61c3-503b-43a2-8223-5e2e94515c87",
        "cursor": {
          "ref": "877a2191-42eb-4520-8d9c-35e12be09e74",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "691b1091-49e4-44c1-a9a9-638c411d27c4"
        },
        "item": {
          "id": "602f61c3-503b-43a2-8223-5e2e94515c87",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d9d88d72-d01f-4f7b-9a4e-a947b65baf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6c4a48-d8b6-40e8-ac93-de142986c93b",
        "cursor": {
          "ref": "fddda282-19c2-443f-b113-3eaebb1c187b",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "599db6da-3c45-4254-a345-6ce1edf0f332"
        },
        "item": {
          "id": "8f6c4a48-d8b6-40e8-ac93-de142986c93b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ee94f49f-dcc2-4e62-a22f-c79c711517b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a09461-cb2f-4bac-b6d1-43fb90bff4e8",
        "cursor": {
          "ref": "ac390308-eb4c-437e-8ca5-a53932b30cd6",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fd8ebce2-3af7-4259-881b-574b6cdef6d0"
        },
        "item": {
          "id": "d9a09461-cb2f-4bac-b6d1-43fb90bff4e8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "137571c8-e563-4dc3-b644-8e7cf0edbe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa2ea4d-3f79-493e-b72c-4e502b1f927a",
        "cursor": {
          "ref": "feb67a1d-5e4e-4041-8e97-105f1319fe16",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "22aca7d3-fc5b-4f4b-966e-5c64c9dbb41b"
        },
        "item": {
          "id": "cfa2ea4d-3f79-493e-b72c-4e502b1f927a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6f1fcf5c-bba3-484c-bf3b-975d5eaf5887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaa1dcb-4e84-43c6-9a00-67619d4d3466",
        "cursor": {
          "ref": "38f41a0c-84a6-43ca-95b9-a8317a053124",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8a69fda9-8b28-419f-8550-5abf88470a76"
        },
        "item": {
          "id": "7aaa1dcb-4e84-43c6-9a00-67619d4d3466",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7acb9512-6cca-4016-9937-b54a1fbaaaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a8ddeb-0cd7-48c1-ad4d-8cde7c2d16ba",
        "cursor": {
          "ref": "eb15faa0-d597-40d4-b0fa-96de9352cbf7",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "77f77b56-c529-4cef-b530-e3f2abe43460"
        },
        "item": {
          "id": "b1a8ddeb-0cd7-48c1-ad4d-8cde7c2d16ba",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9908286b-118f-4437-9120-ec34defd4dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724f920b-2260-4c0e-b237-2ce1c992f0b3",
        "cursor": {
          "ref": "e79e0d93-de30-4ca6-a2ed-79eae0af42ff",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "edc05aeb-ef49-4ff5-8240-ecc7be7635bb"
        },
        "item": {
          "id": "724f920b-2260-4c0e-b237-2ce1c992f0b3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "be7c9134-cf5b-4e93-ba3a-be0a62f26139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78159985-9c14-4c3a-8341-bcf147a483a5",
        "cursor": {
          "ref": "99e6ca59-0da5-45d6-a10f-ff6c9719ab85",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c9346ebe-193a-47de-9cc6-48690ac7d93d"
        },
        "item": {
          "id": "78159985-9c14-4c3a-8341-bcf147a483a5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "48dafec6-d743-4d1d-b5c8-488511c240d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deead2bf-b80c-4f20-b936-b2e475bfcb56",
        "cursor": {
          "ref": "193170b1-bb2b-48ae-8f29-284a151acea2",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4c275423-e0fc-4e57-8689-efee70fc7753"
        },
        "item": {
          "id": "deead2bf-b80c-4f20-b936-b2e475bfcb56",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f39b17b4-6b8d-4b54-831a-2855e6155965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120b3728-46d9-44e4-ac41-e1f632d52071",
        "cursor": {
          "ref": "b37b1717-8e85-45a3-866f-42a8f46915c6",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "44d32590-5946-4349-b02b-dc006d826fe0"
        },
        "item": {
          "id": "120b3728-46d9-44e4-ac41-e1f632d52071",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1f084b25-8aab-45b4-9a89-68ffae0daf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41258349-f0f9-4cc1-adc4-c040294f8599",
        "cursor": {
          "ref": "38204268-22d5-44b8-8bc4-0e9cedcea56b",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2f9a7dff-ea3c-49b3-9e40-6dd7404de9fb"
        },
        "item": {
          "id": "41258349-f0f9-4cc1-adc4-c040294f8599",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b51a43be-9b69-4804-a984-aae3f1b39432",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312cb594-7de0-4473-8a2a-d3b14cd556d9",
        "cursor": {
          "ref": "bf3085b0-58b6-40e6-846b-2e2e302834c8",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c048a184-af75-43d6-9f15-57d892d8ef9a"
        },
        "item": {
          "id": "312cb594-7de0-4473-8a2a-d3b14cd556d9",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "da693922-c2ac-4263-b7bf-4b32fcaddd64",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 296,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37113db-791a-4713-9165-bf2f83c6a55e",
        "cursor": {
          "ref": "638db628-238f-4378-b37e-371a0e95f1c7",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eae37f10-9834-4263-940c-cbaddcc64d97"
        },
        "item": {
          "id": "f37113db-791a-4713-9165-bf2f83c6a55e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3a99bb9f-7072-457f-b61e-1321d875b97e",
          "status": "OK",
          "code": 200,
          "responseTime": 396,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "47433c50-9dac-4638-a0ad-8cdb5c29b97b",
        "cursor": {
          "ref": "54248319-16d3-4ed8-aabc-57bc153377af",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "177de3da-ddaf-4f19-a277-1a1e9dcc8d00"
        },
        "item": {
          "id": "47433c50-9dac-4638-a0ad-8cdb5c29b97b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c63a0793-3733-4780-a699-604bbbbbc2d5",
          "status": "OK",
          "code": 200,
          "responseTime": 3292,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6f0622-0f89-4586-a160-e18419ae3c93",
        "cursor": {
          "ref": "db8a7936-07f7-41c2-811e-8d3587faab2e",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e32e379a-f0bc-47e0-9f0f-1ea498050f44"
        },
        "item": {
          "id": "2c6f0622-0f89-4586-a160-e18419ae3c93",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d8185ff7-e3e6-4493-8fad-205dcf300d96",
          "status": "OK",
          "code": 200,
          "responseTime": 3485,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca965472-2697-4b57-a2f7-b27ba49413a0",
        "cursor": {
          "ref": "32b7f9b5-44ca-4499-9b85-7828cbfdf47b",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b02fd431-75e5-437b-b9dd-04af3fb22ade"
        },
        "item": {
          "id": "ca965472-2697-4b57-a2f7-b27ba49413a0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5d40d1d4-f65f-4033-a5bf-423ad2051123",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca965472-2697-4b57-a2f7-b27ba49413a0",
        "cursor": {
          "ref": "32b7f9b5-44ca-4499-9b85-7828cbfdf47b",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b02fd431-75e5-437b-b9dd-04af3fb22ade"
        },
        "item": {
          "id": "ca965472-2697-4b57-a2f7-b27ba49413a0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5d40d1d4-f65f-4033-a5bf-423ad2051123",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca965472-2697-4b57-a2f7-b27ba49413a0",
        "cursor": {
          "ref": "32b7f9b5-44ca-4499-9b85-7828cbfdf47b",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b02fd431-75e5-437b-b9dd-04af3fb22ade"
        },
        "item": {
          "id": "ca965472-2697-4b57-a2f7-b27ba49413a0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5d40d1d4-f65f-4033-a5bf-423ad2051123",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd9861c-cc60-4e34-8753-1b4c7fc6fcd1",
        "cursor": {
          "ref": "0850c945-c459-44b8-bf8c-ea598475c6bf",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "80c49fb0-3bbf-4823-b114-0ab2e7ae6e67"
        },
        "item": {
          "id": "6cd9861c-cc60-4e34-8753-1b4c7fc6fcd1",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "1ba18f9e-2bfc-474c-8fa8-49f6663406b3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 292,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d6acd3-ea90-4024-a6ee-b6d2c97eab76",
        "cursor": {
          "ref": "82f165e3-9c09-4422-bb98-a315d13821d4",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "993159dc-4cc8-4dc3-8618-08cc2279bd75"
        },
        "item": {
          "id": "79d6acd3-ea90-4024-a6ee-b6d2c97eab76",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c3a8626d-d9a3-4130-a14d-4c7b02c4e9b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d6acd3-ea90-4024-a6ee-b6d2c97eab76",
        "cursor": {
          "ref": "82f165e3-9c09-4422-bb98-a315d13821d4",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "993159dc-4cc8-4dc3-8618-08cc2279bd75"
        },
        "item": {
          "id": "79d6acd3-ea90-4024-a6ee-b6d2c97eab76",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c3a8626d-d9a3-4130-a14d-4c7b02c4e9b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9899f67b-c50c-422b-b2ef-f1da0224c2e6",
        "cursor": {
          "ref": "837d9598-6c7b-4bf4-92ff-85f45c5583fb",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1dd19a08-e797-46b6-9e3c-5ac9df33aabd"
        },
        "item": {
          "id": "9899f67b-c50c-422b-b2ef-f1da0224c2e6",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ea88005a-d2c6-49d9-9a19-4f8aae3fa217",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 482,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be5586a-c009-46ea-927a-5db8fdf31264",
        "cursor": {
          "ref": "4dedb859-8b9a-4ef5-b39f-36c8f7750a2a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "37f0050a-488d-4551-a425-bacde7fdeb02"
        },
        "item": {
          "id": "7be5586a-c009-46ea-927a-5db8fdf31264",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d2da4984-8cb4-4e10-9e43-00343c662953",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be5586a-c009-46ea-927a-5db8fdf31264",
        "cursor": {
          "ref": "4dedb859-8b9a-4ef5-b39f-36c8f7750a2a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "37f0050a-488d-4551-a425-bacde7fdeb02"
        },
        "item": {
          "id": "7be5586a-c009-46ea-927a-5db8fdf31264",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d2da4984-8cb4-4e10-9e43-00343c662953",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a20edea-ca3e-4880-ab1d-e457fe54641e",
        "cursor": {
          "ref": "3c120e95-1327-4077-97cd-de272dd83f4f",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6b254e6b-0996-4fa5-a903-ab14c10e19ea"
        },
        "item": {
          "id": "6a20edea-ca3e-4880-ab1d-e457fe54641e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "67650355-a21a-40ff-ac45-f0e0157e8a66",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 507,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}