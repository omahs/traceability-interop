{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "02977103-9332-44e2-9e91-9df86b5f3c34",
        "name": "Clear Cache",
        "item": [
          {
            "id": "615beed2-13aa-4c60-b38b-9d16db0814b1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c3fdaf3-c332-4d3b-bc3d-1145610129a8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "04fe791b-4bb4-4bc6-a180-bdbd03a12dc5"
                }
              }
            ]
          },
          {
            "id": "55bd6922-9765-4edd-813d-23ec782c215b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7b0450a-227a-46f8-b056-12bc04fae35d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "02d2a4cb-a9d0-447d-9766-2b5b8ff02b39"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "651cb981-c809-4500-b699-9dcb15d12f63",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0827a716-fe45-48dd-b03f-49a77191ab2d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "209617ed-0dfc-41e8-a5ec-eab3169bbea1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dfd75ef-ed56-4800-b378-9180ed451098",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4581439-248c-45fc-a6d9-5fbcc0c49128"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af861e6b-48a6-4262-9ccd-4210b65e9cd3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60f3674c-211b-410f-aead-a89eb9761042"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b044bb2c-c3eb-4d0e-965d-a3d1161de02a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cddcf127-0c97-44e5-be76-8820d769d039"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02e1fecd-4b11-49f5-86d2-961cbae1ee20",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3dbf5019-8fae-4f69-8634-2114f94ff8bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b588872-05b0-444b-93f5-25a48a114630",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca69077d-7b73-47c8-8d17-b0f03c51dc1c"
            }
          }
        ]
      },
      {
        "id": "137e5d82-b8c0-49a3-8fdd-c1134c60eac3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6ec6a50a-066c-435c-92c9-6ac5c62e07f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b69b1766-9319-4c7d-a916-d64a19e0b4c5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3bb2be13-e5fa-4257-86b3-2a1e56c2ea7f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a664d22-d3cc-48dd-8115-2bfc0fd1fab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fe6b385-c406-4f53-8a88-51c68d8b3b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dceb6fd-9577-4a3e-9c4c-46ba91bf0529",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6164ef33-92ac-4346-934f-96f2ab355ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0566501c-625c-4408-a691-ab42238bb612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea7c885-1ce2-42c6-94f6-d3d583da4dc7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c082d0d8-2577-471f-9fce-200097f43b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe758040-355f-4c51-8ab6-99f4dafc595b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0389c6b-54dc-4dde-8f14-eb48d01a5e6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ed77fba-e623-4750-a9ac-d476bebe2ed7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbdbbc4-af31-43ea-835f-7f98ff6557b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb8cb674-09bf-48c9-89cd-b8ed1692e128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d5d606-106f-4a8f-ae3b-423d48b0fb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3e13bd-55cf-4f3d-8f2f-74a3f7fbd28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9447998a-90ac-4575-8de7-8a75c0371634",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974f6b5f-80a6-4d22-a2fd-95fa93ef7675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb90c223-af5b-4c56-aacb-b0d3fc5ca3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0821ef2-c369-4df2-b231-5918100713d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "8b6b1dc1-31d7-4a8b-b88e-e462e50e8961"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0639dcd4-eebe-4c27-a0a4-f668a4d8f666",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29d287dc-405f-4dbf-bf76-a47ca77684e7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eec0dee1-2761-4494-98bb-174fd960ce58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d87fbdaa-4e5a-4874-a0f4-1702f32afd11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c62f6a8-552d-43d2-8152-127eacf80f72",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "63012a9b-efb5-4843-acd6-8e804db4c5cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3431d0e0-4023-46be-9e8c-de441dc2d87a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c17c051-4270-4cbb-97ea-cd93252dfb7b"
            }
          }
        ]
      },
      {
        "id": "c78ef5a0-3f8e-4821-8e15-ec7e6d183a3e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "195dc8a9-b77e-41aa-a08f-5a5a06ec7681",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c547a31b-b5c0-4cee-9b1f-906206d1d4e2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f1b07102-b601-40b6-9400-a0115b201c75",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0b3f0d-8221-4a76-aa92-ee4709fc8b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35d84d8-b506-49f2-bd50-e973e003dd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7632c4-c024-4d20-bc1f-fab13674984c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2b59510-3635-47eb-84a5-7c363106c318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dcc946-6d2f-44bc-a40c-dcce10f58530",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3489be-8ada-4863-980d-04fec3acab13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf37e4fe-b1a7-464e-99d2-6df5ee2a3a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901c8f0d-b835-4587-872b-083c878bac47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f162cfe-2d27-4292-a275-14bdb53d9c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5743ff-8c06-4729-bffc-8c17006ae342",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243b2674-6d82-4a54-8852-8d5b38114c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802e57b3-c0cc-4fe9-85bf-3c1ca43af34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1989df-486f-41c0-97c0-2aef674ebaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "072c98d0-1e32-491c-846f-5568cf87873c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d39ce0-262a-417c-b5ac-871ea396972f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9879a063-25b9-464e-89cb-c385f0fd107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b8a928-2c17-4256-a166-52b8a31915e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c216f6-47a2-4fd7-bbc6-ba40316edd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29b2f017-c5dd-48db-b2a4-f96262ba3fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fad9a3-8f84-4268-a000-02df1964325e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68348408-1b7a-4165-8126-40fe2ed972e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfa189c-5b8c-4211-b942-2af0e54252df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d7e300-15b2-4dc3-8640-b3989665e321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc12936c-d034-4c54-ba4c-b63ab22be8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e415e399-68e5-476f-bf1a-715cb892bce5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3baa591-c555-4ab7-890b-83e8ccaab7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d1fd42-050d-46ea-b6ef-565b2bae57ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa236d96-d0ca-4925-8c13-31fc0e85ffb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b98e494b-a669-4aa7-a41e-7be08dcbf295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62685244-41e7-463d-8249-c85ea7aaa460",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0e6cb0-3e84-485f-86c9-63aa02f58ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a60074e-dea7-455d-9e7d-f9e5b7e95762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127318a0-f5ae-4199-a320-758c8af5744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf4fd9e2-ed68-4244-a4ad-86fbdbaa1893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94a238c-ccda-44cd-a287-4099ef32f734",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824e82ce-677f-4109-8a06-397464e10587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df97fafd-903f-40ea-a9d2-064710c31879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430aa6c9-d903-4a05-b6db-198f739edb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60865a2a-48b0-49c7-9c32-03b1af05757f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51795ba0-dfed-4134-9a05-4e5f34569d55",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c13d727-34f6-4828-a8fe-b3b5e240f545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246ac59b-bd7d-4864-95ef-463c3d06d670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb7e482-c7bc-4d0c-80c6-f8522e7e76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af51212f-4b98-4767-bbaa-6b4d4c4af44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca63262-f759-4601-b088-e78024d8ad07",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9f13cc-ac42-42d7-94ed-0e837a71bf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3415a364-dbed-4b89-83fc-47a558dcb24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ae09d4-dda1-4cd2-8420-ad12ee7b3d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5fda8dd-a698-4185-a17f-ed4f8ba02a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8df3d4e-0f23-4281-9b53-a9149976c606",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f649fbcc-a58f-4f63-bce0-314110af284c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd8f645-596d-4a32-b399-21a31063a6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54321b9-c757-4c9d-92a5-b3165157f94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1672196-423e-4f57-9e56-7c721237790f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa4b818-ac60-498f-8820-0f5597262bef",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dc6e2a-75fd-4ec1-9c06-42825c711f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c847bab2-19c1-4f7b-a1f6-761cc518fe9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e5558e-cbd0-4e4c-984e-405a4ee3235d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb221996-0709-41a7-b0f6-62450d8753db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc1c60b-c8e8-4752-b299-5515baa623b6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5e4039-fcc5-46b2-bfe6-5fe8775da928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73a4d98-0fe5-43eb-85d0-7648dea1826d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003e147a-e76a-44db-9c10-24d5d347a165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4a066c1-6ff1-421d-ba3e-eb21fd56ba31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a97a9df-1074-4172-b9f3-cb8c2ee94385",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8791953-8307-4128-9300-ac0f2dadf269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ec683c-a3a9-4398-84c3-718f2574caa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b4af7e-41b1-4d68-beaa-5799e26ed56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "75398ded-0bfb-48f5-ac02-c5083fe067ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b058b41-958c-47b3-8afd-d315b76bf90c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50107955-b907-4445-bde8-1aabd103742f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cc1b1d-5607-4e82-ab79-95fedd0212a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8e8d6b-ada7-4db5-a1f0-64bed760972a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5faa8cb2-db79-4e26-8a15-fdb9032f585c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7764d69e-69ec-438c-aa64-203f50269b85",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f288ff-3484-40ee-a379-2a78e0465f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a94cc3-24cd-46d9-957a-de123c9c11a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4752e0-f2c8-48ed-813f-ff868a3dcb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "925ef07a-18cb-40d7-9cc6-69279f65a38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83eb3095-b198-41c0-8aa1-9671ae1226e5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838e6676-617c-4af5-81a5-6ad9444e24fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc9f6c7-f9cb-4a9c-a6cc-2b300c7cb264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e7bc5f-a34a-487d-b3c9-05cef091dda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9c578b7-73dc-46f0-a212-51d3e9cd7233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1638e168-d6da-4904-8245-b42bef6b2e3e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbacd07-5e7c-4c49-b43b-bafa04154a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bf5782-e81b-421e-8f26-efa8cf72d804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ff2d78-111f-4a9e-8a01-021d18d35dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ec14e28-3ff7-456a-88a6-bc061fa268a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88830f7a-dfcb-4f3a-8cc4-3ab38fa87430",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a0e397-ad59-44e6-ad8d-4447eb403a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa180b0-eabd-4c95-91b0-e684d0fe0015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806d6a70-c4b4-4a80-bc89-ddd030045db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24535fdb-6783-4240-980d-39d191fb796e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0cfeb1-fb9c-4121-98f4-e45bf971f61b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2f22c1-94ee-489d-9956-9f739f770f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402df98e-74d8-4c40-b60f-d650a7b5ae84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6fe6e5-02cc-44c0-bf56-7f334e5bddac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8abbc5d-a655-4969-8e3c-985b04e92016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd486d11-cf81-4956-b3de-f37abbf4001f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89eba8bb-e392-453f-9c6e-8a882aa18eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9d5839-dd46-4260-878a-1e934307cafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8985fc03-5464-4c65-b692-b3fd49717c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cd34c6-eaab-4b6d-9145-1eccf72750c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276e13fe-bcd5-4e99-a7df-bed2f27ea984",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ac8470-c4f3-4f94-a5b3-a9a5f678fa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0180c96b-44c2-40e5-ab95-bfd8e1adb4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b87bc1-149c-46c8-b9b7-37a375094c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ca0630-121a-4557-853e-ce056496f42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60884c98-5bbf-429e-bffb-b3aaa806af2f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333d49f1-291f-4878-87a9-849be27caf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2d856e-82f8-4773-a743-62a2a9b5bb06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea729a6-31c9-4940-8f83-a309b75b79cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a1fe1e-82a7-430f-b4c8-ccb5b8e17096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12b5c28-0508-4d55-867e-4504cb626748",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9292d811-89c6-4caa-8a37-bae0dc561599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0cd1cc-00f0-4c90-bf04-5d10e010e081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e162d551-75ba-4195-9764-b884c9e4565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "91a69bd9-1e0e-4625-8b99-9f865c494104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af77f14f-6e3f-4465-9a8e-6ea0b0e8347a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f749d7b-e241-4955-8a65-ec7a896c3f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e44236-8f7b-4ef1-bdcc-e818a3fec28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211e491a-8343-45e3-a6ef-d47bd010f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2919b3-a580-4dee-b848-2655bb542269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c484fa47-e28e-42a1-9d93-a82d253c7922",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baa42a9-aef2-4264-bb95-5914a40771eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2acf42-424a-47e2-8f16-a256c5f06605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ff0c0d-247d-468c-8e7b-0266f10ab567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b96b832-158b-4b37-a739-2b72cc0f1830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a84627-90e1-49dd-a265-c91193f7d290",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9eb8196-b35e-47fa-baa2-7eb757359369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba3288d-611e-43b3-a6c8-44bcaa67a5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b3e808-1934-442e-b7f0-125e409162e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6172f7-4dae-4eee-8007-ead33324cf9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08964444-1358-41f2-9536-48c83920619c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c34000-e8ca-4421-9de1-fcc26472ea12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d826da12-3a8c-4d58-a99c-40ff3cd7499b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd2254e-6c03-4a5c-9706-bd29fd0d2040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c4c0c0-b3ba-4065-abae-faee076aa5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53771bb-3f8e-45a3-811d-c733ab4f043c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9ce63d-9afd-4e71-aba1-cf394933e696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a598d3-5ec9-4616-a0b0-aacbbd6254be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa4ba0e-d37f-4167-9790-65abde8074f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33195d44-52bf-410f-bde5-beee1a830c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc9118b-dc4a-45a2-8a4a-43b33cecbf36",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0cd55c-10c3-4195-abc6-30e33efb5dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c35896e-0113-4d47-b737-2f253ad600c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b004c5-8e57-45af-97ca-30ba80d0de36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4ae1d7-9d85-4494-9126-287a023650b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac794380-98a0-44b9-9e8e-570508d1f42c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3b9f03-8ddd-4157-a6de-9c1b26204449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41535d8d-0858-43d6-8fad-bb063fb4e4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba07216-5b2a-4f62-9f72-15191ce48e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d95cd5-cd85-4e0f-9d2e-cc897add6476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dce2442-da59-40f1-8576-b7fc32b52ccd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2263ac04-fe03-4c81-8c03-34162fce2bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c9e26a-838e-49c7-8d49-f13e40c4c00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d85e309-7bdd-4f3c-8397-c5d994302d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b27103b0-b9d6-4d7e-822c-54356026c198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d351950d-9f74-4b72-b1f1-e413c74b2009",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfef821-0ecb-43ed-be5b-32e471ccf630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3757158d-5918-4286-99bb-37a98c014b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8432e1-1a6a-4177-85c5-8174fd281fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4329062-8b17-4489-ad81-f655b531d6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb90541-dab0-4bd5-8c4c-464dd21ec87a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fb5f56-a275-4455-be30-64fe601cd6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e08e8b7-cb70-4a65-b341-a8c09e6c8beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a127c7-15ae-4018-8bd3-01f793a0d25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "341ed4bd-41ba-4f7a-92e0-e2a018e0eb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1d8bca-bcfe-4daa-80b0-c12d10bd8f73",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404be022-44e1-49bb-8098-84bd3d3e5085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48059f17-8609-4d54-a14d-9bf78f1b08b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44ebf25-c8d5-471c-a36e-81ab30521f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fe43ae1-e842-4983-9884-1ee279415ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b061d0d8-6c83-458b-9e57-c363585f4a5f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbf023a-d60b-4105-8506-eec8e20224a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb0e743-f6cc-44c6-81ba-0b09f1b9a9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d165f04e-36c8-45fc-bd85-cdf51856ebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b29e86cb-1c2f-474b-a46a-6c4edd72ff63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2551c7e9-fc3d-4641-b3c5-a3ce60a36775",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4412e04-22d1-4f80-be01-ea25fdecebaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2ff918-49db-4c89-94f2-f99074b0a245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef756a7-49ca-49f2-a708-01796df90b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "12e63259-2449-4a81-a21e-c7fc20f9619d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e380571-9718-4087-b463-c6d0d105f12f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bee50ac-f689-42e8-a365-f47693ced618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4692584-f573-4ec5-a994-2ed9765eb950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddb0375-f08a-4ae1-b582-d8e819157e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85d89f4d-66de-46b8-a90d-3852b841b3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25286bf3-420f-49cd-915f-abd8bd52b8f0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c81c478-a14f-4654-bcf7-e38dcbad7a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4911239-dbd3-4e34-ba70-3414a9b80505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6379628d-eadd-4910-a224-5695975bdc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "074562f3-9b3f-419b-a168-f754318b8ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820d3e0b-0257-4988-a2e7-e2c581183359",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e01233-182f-4903-87c1-311a8787b909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c0cbb3-943a-4aee-970e-7a1481b2ee68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df86610-a5a1-4122-97dd-377a80ebb1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "23488b67-c6ed-473f-9a9c-802c0579154b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d085b5-ebea-4fc1-b697-27a25330e0bf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce60356-3c1c-418c-96d0-9b9c37ee3951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c7fde6-08ce-4de5-aa03-316463e0bb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558d03f4-e748-4653-8315-8d5606e7286a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e374ce9-7a12-4f4b-ad75-ca36211a6096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35408e3-8dbc-41d9-b8ae-e5f175851245",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b87fcc9-5938-42ef-a617-0ea57b7366fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51250ba0-bfe1-4a00-a5c9-102c89ae5db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31ebdaa-dfa4-45af-8b55-8fd7b34add9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f507d0e-813a-4fa1-a428-5d4b6e228aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0af8ef3-4568-40c1-903f-37dd0866a3cf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f990e8-9eb3-4284-bd5d-cbafc1692ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c941b8-2d5e-4e65-8d40-cc15b336d0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529b270a-43a2-494e-954d-bc11b62cb4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "74299931-0ee0-4798-9b7b-ab1f36b99c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b503f003-ecaa-4a30-807c-2ab1116d6b03",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039da7ec-1f32-43d2-ab77-ca1fe9b5ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2521f03e-7882-4a03-9fd0-99dc46a2f8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1dd868-c967-4b56-b4a3-931cde0c6dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d54564d2-acb5-4cd9-8025-342ad0d9dd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa4e0d6-0d65-4bad-97cf-19f81453e585",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9504f898-4819-4919-aa2c-60603deaa9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd71a297-6d2e-4a8c-a022-98260a2c62d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be682a2b-01e5-4875-9a55-e2b1551de8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "da1682c2-6b4e-4f5a-8033-a24a3e51ad03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b0db37-43d1-4c6e-bf2d-3e8ec0e8ec69",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8142f595-a8b6-4054-bbf8-45c163d66133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9def31fd-7126-4d5c-a885-03652ed12931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302dfb36-8ba1-4fdf-a09f-66e8f2aa9128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "25ef7ffc-690c-4f56-a729-7688b13afcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fcde8f-1ddc-4c4f-b61d-0c0bc34618b9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ab254f-0697-4eb1-8650-70379e14ab0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b583be-fa13-4ec2-8423-154efbed828b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa81e63d-2e67-4ec5-88d5-9ac772879881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a33289-d2ff-417f-a88f-bcebc597c896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2f7d4f-74e0-4da5-ad41-98d139456cc2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8790be99-7dfd-41e2-b76c-1d58d41acc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63df9f0c-b93f-4beb-94fa-b1518c202771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b53ff4f-6485-4850-b062-5fe58abeb36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "768742a4-eef6-44eb-9d72-aed315e086c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac4be1a-e543-4739-a9f1-539b23557042",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d312e45-7a7c-4532-acfd-d96a85d16aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de6df12-cbfb-4ed9-97d8-d96c7a06a8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facc7094-88dd-4ca6-abfc-368b9d1997ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4956c8-4dc5-4565-8c41-bad86f9267f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89010c13-ada7-4c0f-a8fb-6f400c2fdc50",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad8f545-444d-4a80-aa62-66415367656d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafd7374-1dc4-464f-9404-b29467eb6edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dc7ceb-e3f6-4a27-8823-7bfac1ae1454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0662d549-20b5-4194-8d77-e01f2383ee8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30b11f7-c6eb-471e-867e-f3a5320f0ffb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c12fe6-2130-43af-8ec1-fb69331368c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4a092b-5cac-484a-9a06-3b82f4e56e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cf8b0e-e1b8-4e04-8ae1-e2a294a6fc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "715b6b38-a328-40e2-876f-68b10e1c627c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e4eb58-80f9-45fc-b55d-faef023386f5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0098236f-fc3f-4c65-a550-a7cdbf404b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc70d47-7d05-429b-877d-e3b4fe3493c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1e52c7-6afe-4b8a-abe7-bbe5ec5810da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f83d9aae-5567-4a4d-a1c0-f10fd9f936cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65125065-165f-4586-bc3e-5be4bb915be3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2c1084-43da-4c25-8211-eca892491661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54987e6f-7da0-43dc-a9d0-3f9ad810f489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4443215-7f0a-487e-825f-a3b35ddb5bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9c2dd0-3268-43b7-881e-c69c97c8a667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a67f83-b171-4a5a-9d13-2cf340b535b8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b377c30-cca0-43f1-ba84-eecb2b015885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293c4e69-2366-4332-8e3e-1b66c7984c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9092d1b-7db8-45ab-bc35-6bc5a1599b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad64cfe-1789-4e50-80e1-bf21f3952292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1013a760-7748-4522-9f58-81bc317ed117",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9398275d-7064-40b0-9096-3381dc5ba015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cef0ff4-d94c-4811-b259-9aa95d973191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8029561-594b-4b71-8651-6c136c13a7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ade517-fc74-4da7-b78a-d6469c0c326f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cbaefd-616d-488c-ba6e-f42a834a4457",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa056f4-14bc-4927-a0e4-0677c2744186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236e5e93-c587-4e45-9b3a-025e6d0aac4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f2e4d5-802d-4fe1-accd-020eef0e0812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0bd518-f5fe-4b4b-9803-5e64f1eb728c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd499d58-eec1-4f16-a0e8-66bec9f43006",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0ab76d-39f9-4fc4-bcaf-0484557ef7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4368df14-2f79-448a-83c0-a33bbe7de948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5054cb9-a5a1-473a-a76f-7d229c18d167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0af6137-f9f0-45fc-b236-bc390b2edebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb846a46-e8ec-49dd-901a-0c8bda9cfad9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26daf725-23ab-4fb6-ac8f-ee7d33f263c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b245e1-092a-4d56-a7ef-4e40cf0f003d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d4949a-34c2-4259-bf37-1c038a3c4217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0a8b1d-6650-4752-9f7a-b5452719fe50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc004b8f-269d-4d0d-8397-0530dd515de5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aab5a47-b57f-42fd-846d-e3299687c196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b6c793-8e03-4f81-9d71-d6c8523c31fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e26f332-41b3-469a-ae94-71ada036ec49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "823d811d-73f6-4a98-b134-a92d2eb66843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004b8b1a-db6c-4519-b5e4-78a7813ccb44",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb84016a-72a2-4fb0-86a9-9aec77c2dd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3478dddf-702b-4d23-8f1a-c81252b696b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cbf204-af62-45c9-878f-9c5c40c9ebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "79d8c515-1e46-4eae-85f4-60004dc94fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec2d480-8490-45fd-8589-090383c9c5aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb00d23-04ba-4d96-b6a2-795f02cc3c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cf4d86-6c94-49d8-a014-d4a3664c7070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98621242-1904-4793-b44f-ee37aa67593e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91e56b5a-f214-4388-80ac-66e233236046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fec77b-85a1-40cc-8efd-916e318fa579",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e990a1ef-bdf9-4932-8efc-83ff40eaaff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced5357c-8c97-4e5f-82f9-e11b92847acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9c6c09-9b49-4e39-a314-04023af59bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff01fa47-11be-457a-a6bb-af2b50390313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6139f3-9b77-4224-a106-50a0f952af2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22341425-8f49-4944-87b8-9ec724c4857c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506de378-f164-45f3-a34a-43ee7f0fde08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52da386d-3d07-4b43-bde6-8f0493d8ff60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "56fc46a4-d53f-450b-9c25-ae633d44c07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0d2d01-0f73-41a4-b97d-0fd883f56c34",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcce4726-242d-42c1-bdf2-87ddac57d665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14643215-880f-4ff5-94d8-834088ac76af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a345ac-a58e-4343-9647-831b3d8e1fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6875a387-3b4b-47e9-bbd9-295df118b48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fb2d2f-0b65-41b0-a0d6-8bea78356853",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496f0d59-8102-4b7d-b06e-9a8490de818d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63052b9f-57a3-4b65-8bc9-4d96addc5257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9829ccd-7197-4f45-8198-1ac9f6994874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0f4bc5-e17c-41b1-8d4d-909ca18f5f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d206e55-5fdc-46eb-8723-f1b3cabaf2aa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3054fb-026a-4257-b830-27297af7d7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81794361-7481-4452-9988-6d04efde8ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc298ecc-8925-4eb0-b4b7-5342c7af3d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b71ce2b4-504f-4305-bfd2-931d3aa99281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8b6aeb-078b-4527-876a-42feed4b6d0e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0202434a-d753-47d1-af4e-062720d3ca2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1253cc9-ab48-4f18-95af-450ea91b7d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e879fb4-8c3f-42ed-a7f2-634444b19390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fee068e1-446d-4b15-a261-c9971264abf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebab2a0-b195-4bdd-84d6-43c227bb29b6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c061d4-2ea4-4cd8-934f-df5aace12b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae935ea-fc60-46a6-a39b-d3b81a1b0f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68824017-e171-48a7-bf71-babba4963069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a2ecf0-cb81-479e-9ef2-81e9d6669fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7ed8a4-88df-4a2d-80b5-b19865935b84",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937a003d-f379-44fa-a642-32709d73b915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4820eda5-85a9-49c6-8efe-9d772323fb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7649b6c-e293-4410-b252-79336a7b859f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f52ca429-ec3e-4d0a-bb6e-702e472f1c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8780ae60-8409-49a7-9a8b-333dae0cda42",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadc4964-cbe7-47e2-9ad8-446745bd4107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e742881e-fa2d-48ca-bd51-4a47d6bedd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab53f1e-f718-4a92-bc12-b77e73cfcd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc24f45-1901-4023-822f-c72f7cc00369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d92dc28-bd78-43ba-9cdc-4f042987db78",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d845665a-14b1-4cee-9b84-a340ac634b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3310daa-c273-4aa2-8ad6-03574bb8c698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c5b2cd-9e32-4292-b6d4-75cde3289f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c0af40-c6a8-45d4-bf78-57b1daeec587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34219bd3-850d-48d4-981f-8d418d0dc5e0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ad303c-b05a-4cfd-811a-fd876b3ab675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0049888f-4ddf-45a8-90e6-61cb4346d1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d180b5d4-bc77-4bc0-9398-8f8d4be1f92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "930b517a-c858-491d-bee2-c599147cba58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b132d24-cfeb-4782-96b1-941c772e8c58",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b6fae4-381e-4772-a89b-b5bb525c1002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15a1359-61e7-4faa-b43f-2bdee62acb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f335a83-5947-49b6-bd7f-77698e441fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2c592b-8ea9-48b7-b704-5f993789be53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2a0cfb-234a-4eac-a764-76902bb61315",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cefbe8-32bf-4504-80ef-f75817d882a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b9f44e-ac25-4159-9455-bdcfae09eb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b74f1c-7dd0-460c-8bbc-a889501c8841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5583460-0719-4eb6-829b-ccfa45146830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2afd01-29bf-447c-a6e7-93fc3382d53f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7175c1ce-7ca8-4fca-b173-74048114a23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d002c1de-a0db-4c13-8148-5f093109b06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbc2967-4e5a-40a6-9be4-f443ec5686b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2539ba2e-5786-4234-ad17-23877098a27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc507e1-20d2-47b4-8aaf-db1456aa2acd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa163a58-2bf5-4fdd-b977-bff1e56ec3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f07b7f0-268c-413b-93ea-37a31a89786b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfd6ffe-5cb4-413f-a007-3b2b8aeddc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9205b162-2b36-4821-ab95-4082f32de92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e38ff2c-1ef9-40e2-b8ef-1054bc868c43",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd05599d-31fd-464d-9963-9f1b21bf1623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5717f4d4-ebdb-4810-8767-553f550351c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28e10e1-cc8e-40cf-9274-cb349cb35642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "537e87a8-fd2c-48de-abee-1bc1cdfbf685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220978e7-cfbc-46b0-9eef-d2919a6089dc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3416f3ad-d66c-4b21-a617-ae8556401c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf8fb5e-ac88-45d6-9fae-a45ba501dd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070955a9-0d50-4daf-b70b-0322c04a6ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd2c97f-0304-4b0f-a436-6622dda8c26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c694ec-6686-4323-b3cf-78b256816fb3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e048a90-6faa-4edc-b865-ad7fe4ba9b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9465505-d8bb-43ef-baa0-c65f37afef4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa60d87-d9a3-48c6-b0ca-ced1e0825d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af14f2ef-c73f-41fb-8f5a-894da2b27b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6217fa-20b4-4ea6-90e8-9e5be17a6610",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66a6269-3ec1-4eed-a4e1-f2c15b23b005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79a9715-c532-4329-967a-c1bb49fbcb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d136e1-74b9-4182-adae-5deb2e621439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c340254c-7453-4cca-bc39-4c6651cb7600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fa85be-6870-4fc0-85ff-46ddd3d9364f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287a0956-502e-4bd7-b2dc-4dfe660508e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa37cd91-d3ea-498a-862e-5f14c0e52e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a83448-f9c2-4848-8742-83dc9b1e400d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0abc648e-2f68-4cc7-b283-5a1cd5823eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67638327-ec22-454f-9d73-197ed79d677e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f47787-e15c-4aa1-8608-8ea401fb6680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87de1e9-7887-4712-8d88-5da59e779d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9531889f-0773-4c9d-b1c2-a8d56a7fd38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1811561d-cad8-4c7c-8015-49e168a6c7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfd6df0-a17d-4da3-b392-8bc1594592dd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b355609a-c289-4ac8-9405-98e66d2f6d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3785e633-80d5-4d1c-84ee-9e17d1a048f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12211ce8-a6f7-4f1a-a223-aef80c185ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3447d534-1388-4782-a7a8-7a0d4d8b60c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71aa46ee-acc7-4c70-9e93-aa2e1f48798f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c97cfc2-1cc4-40f7-b12a-1ddfe3c9bf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ab4e76-7375-48bf-be9e-7d7c86b66886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed9cb00-8fc4-4db9-b444-8d4caaf1cf55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f597bb-9176-405f-8e1b-677459f31026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa5f769-ff46-4944-8ba0-8d3f41e2533d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a190d82a-9652-4157-8919-0a8035056cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015c9c1d-f1f3-4e6b-a1fe-aaea4204cd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3ec353-7bf5-4b19-9dde-25f7684ef01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4e9d81-2096-40e1-ab24-8843e6df62a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27382089-3747-4b5d-9013-700e60eb626c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0bd63c-60b9-49aa-8503-680c42790f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87732a0e-aa0d-467e-9cab-c64414b3ace1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee82f4a5-8f37-471d-9947-b2c2c7b53b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afdfabf1-d97f-4d6f-aca0-3d8eb4ffb975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1da04b-6e18-41f1-a7cc-1d34828241e5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2625cb-4c98-4d6d-9771-37e8e1bf7476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4af531-3045-451a-87f0-2a2f254b65c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e2d7e3-de66-4971-b69b-0269bfe50fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0105b3-935d-416d-9a85-13c85bffa009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd68cb44-9537-470d-a187-a839ae058fe6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600ec4e3-6152-4298-8886-b3d7f1d6ebe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60bc708-2aa3-4a61-bab6-41e3aebed0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be236056-76f2-4582-9f5d-403e479d6f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de95f945-cc12-4c51-97b6-8f3be7c6b1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5850d0cb-9a39-4ccf-9fd9-0025f5590dec",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ec1953-414d-4cea-a67a-c55bc23960a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9907f084-de68-4097-a34a-48aeb5ce1d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaaf8d0-e54e-4ab9-ae04-334fb475dedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3be28537-57c1-41c3-8559-36590d434893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd8a742-e39a-4b18-9b4b-12a867d69343",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c17524-3267-497e-b735-3a97db9b1c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4809605d-dd88-457d-a998-cebfc7a7f273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6937e778-a0ae-4f3d-920a-03f6075d6cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "753fdb2d-54c6-45c7-95c6-f981af5f505a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ab06f6-5f6f-4476-8b6b-8fda2249878a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e788c23-1407-460d-bfd8-674488759e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee798f0-62fa-451e-9093-d3d0071fc8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a9429a-ffd1-4cbf-bd8c-a57e2ace95c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8995f263-6726-4f6b-8d6e-f8183e57ef26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce001e0-ad66-41a4-8771-0c01f9c0483c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8268278d-5616-4747-b476-2755e3320230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007b5514-35d2-416e-a146-2141dcc8040c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f372872-1cc3-44b0-a9df-64a2a2e0f321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8833fab-c72a-4f58-8cd6-dff22ab87eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44a7bae-6bcf-48a8-87ca-78bc550e49d2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a3c28f-5688-4aba-9001-53129105b70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51c88a5-6db8-4e08-81f1-db8c5fb1a3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a442a7ff-7291-4791-857f-9c222308368f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9775f847-a53b-434c-8521-e7ca9ac956b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6bebdd-beb1-467e-928d-9b52e647505d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c662cb32-ed8a-458a-be91-c20cb6d2ae6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2800f663-e3ee-4cf9-9c7e-c45a39f8bce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8e4b0a-03ae-421f-a128-1310220334d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7967d06-0c76-4a9e-98a2-e4b30a91dc75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60b53e55-83b9-4a65-bb0b-135b0b28a31f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11b483b1-16ad-4a23-bf0a-7f2706aeb82a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4b294f-bcfe-4c32-8708-6ad6e793d04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89c329d7-c061-4723-92b1-c6d59e2f545c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d57b1b-8a5a-41dd-bb1c-2d7ad5a50678",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "ca147b66-2f33-4a4e-ad6c-b1a4dbafaf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba306ca-2178-478a-914b-270dc58ada42",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefa35b0-7fdc-48ab-a25f-dbf6e8730aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a58ec11-9895-4cdb-a7a5-d61d359d70a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cc70b3-5ed7-4283-beea-df5e022fa97b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "5d4fff72-fc2f-4a3e-a5dc-e800a8970c3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48b7eac7-6946-4925-a547-593bd2460ce6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "367ab14b-c11c-4b61-8f83-463aa0e0064f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0e75fb3-24d0-4e83-a0ed-c782c0ea1850",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2aebbeb5-cd62-40f1-8d5c-2e06fa13bcce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d19dcc2-9858-4b3d-a4cc-74277bf63d16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87b2f3e5-ddf1-41da-a1dc-17487ed391f0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed639b04-75e6-4b89-b16d-a8f29eca1b8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50d11acd-6e15-402b-b5de-41baf277232c"
                }
              }
            ]
          },
          {
            "id": "f6529ac8-5753-4e93-9dae-74a426798a21",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b4ec5941-309f-4492-ad45-fceb25dd8c6f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42c01246-4a48-4247-843a-e277cfc9d59a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ddff3745-b5a6-4312-abc8-0925c3ba3bc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f767390-cc9c-475b-b33d-3803f0acc85c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6635c9c5-79fb-435b-b72f-29409e0c1d05"
                    }
                  }
                ]
              },
              {
                "id": "db1aab28-aaac-47e0-be09-5b41d945201d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86b48312-2932-453a-a07c-027b8b31329c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf86f6d2-2563-42c9-884b-9b30e75b34db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d98db8c-77b2-4ac1-bf8a-8fe2f0894a5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb2923ac-c5cc-4af1-8d23-a382745da7f4"
                    }
                  }
                ]
              },
              {
                "id": "63ce9783-95dc-4fd0-9310-d814260595e2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bcd2151-0ef5-4d04-8571-9dc2a08b8012",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7285091d-8dd8-4cc1-9088-c5495d64cc43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a110612-fd7f-4232-a023-3d83231eb3a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dc190eb9-3495-4205-803b-35fcf3eb2c17"
                    }
                  }
                ]
              },
              {
                "id": "146ea25e-ebe8-4558-a947-78f48fe44738",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4c64488-a8bf-4f83-9980-0b8c1924eab8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fad7498-af53-41c9-96f9-2cb095101797"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce6c02c5-4f2b-45a8-970e-a43799d81738",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7d9a886f-7062-43dc-a4ec-3a87729f6b91"
                    }
                  }
                ]
              },
              {
                "id": "a53010b0-4ba7-4777-81c8-c18f51c87edf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a29135e5-425b-4505-81e4-40c37a609868",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba07efd1-e5b1-421e-86bc-f037e75525d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1635f8c2-00a3-420e-a61e-66d557de9860",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d952c97d-f9c8-4ce2-a156-9ea954a949fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9256b81-e473-46bc-ac93-5aada0bd568a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ab3d16d-e1d3-443d-a2b6-7e6cbbbd6edd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ec8d16c-4819-487a-bb55-ae361a338284",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35e2587f-100d-47b2-ac18-48918acc9114"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45f3707b-d506-4f48-aadf-348fc0afb22e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e8470621-9ff9-41d8-a4f3-46455df77f01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cef999af-99b0-4323-9fad-a97f46ade21d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94a7f93c-21a6-492a-81ee-d7838d68e80b"
            }
          }
        ]
      },
      {
        "id": "24c94e55-b302-4266-b23f-fe236a27b765",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4fbaa79e-b483-41da-8bd8-25de557c49eb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25cff71d-74af-430b-8f4d-b6e715515d33",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e6b3044-a649-4137-a2e4-691bd0601813",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6601d250-0951-4955-9d32-4ab0a1a5da14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9783bc-84e1-4f2f-9f15-6c17d5fef9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f8f889-10b6-4a3a-8381-0b0e28d73fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe35c0a-7e57-4b72-b0aa-adc1a82b4430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24af157c-ce7e-40c6-8ca8-22522483cfa6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac92f297-f838-48ac-8e87-5523a6018e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892eeea9-f06a-4408-93a0-efc2fd2e49d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004eeb03-941f-4c9e-987a-c2cd36f7ba32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad3304f-c22c-4064-9748-6cd44f1d4fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec60b6b-090e-42d9-bded-1cdc01404146",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7daffcb9-65aa-4ede-85fb-824033c2f955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbfad0f-eeee-4309-8a83-cf82d4351c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb1eb72-fa80-4120-9699-51fb346ddb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "419316b7-1209-4437-acd2-b7c935c91612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706cc523-faf4-4cc8-8b54-7889661b10e0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fee280c-0afe-44e5-81bd-96d85ead454a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ba4d3a-465c-43ca-ad13-a68e3c754c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab37785-646d-4937-8948-071c20856eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20688d7-3531-467a-9b8d-e9ca3e1cee1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd9dcea-c268-4dae-99b5-9a9662373313",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b52db5-2ab8-4a65-866a-905e63fa15bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a41d6f8-a0b7-446b-97fc-76da85d2f61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffcd278-90e2-4879-99e1-89ff54123e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8f78fd-07fc-4591-99b7-5492be42b0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd02690-8e4f-42bf-9024-384152e8d496",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6644da4e-835d-40df-bd61-2382284dc78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6234e20e-520f-43d3-87ea-04c1450a7c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d448de5d-8d88-4f16-a6f2-c51d6f574254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cf627c-1c30-499f-90e7-74f12b02ce5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b439a505-629f-4d5d-9eea-5af4e2393051",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3844bb4-6410-4368-9353-9b77a992d7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4e7f11-9685-4576-8acd-b9cd8e4fe6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c571ca4a-f6dc-498a-8cf2-a7d7d480b197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e3601e-7110-4ac7-b52c-76e26e5272cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1dc2c3-1346-4f5c-ae05-68bca25ebaa1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3a6984-02b3-42d1-8b4f-c4f3584e49b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229cd898-36d9-45e9-951e-5299286fb0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c1841f-4bc9-48ed-b835-5e1cc816899b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7adb443b-8c31-4261-852a-c091bf5fc0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e0d320-cc72-4dec-8d84-c0a7ed9a75f3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40527c56-513a-4ef0-8659-2edf3ddf3158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d3ccce-9e8c-469d-b506-c9cc037e1d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348bb112-7cb4-4915-835f-872495cc22c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74b65905-1e4a-4728-98b9-49e6f5ff549b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe6abc5-6e62-4a0b-b9f3-d530f2c5e1b3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c60bc94-7871-453b-bd0a-8462a67f8b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3715326-47c2-4d8c-be9c-2111be754fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6642c191-fc88-4346-8dc4-be8b96322252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43766ccd-2b08-4f9c-83d3-df6fdf90081e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dde74c-02e2-4a85-bc3f-03b74f4f982e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3279c805-5605-4ee8-a241-5f8d4cf99a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193c4292-7d98-4ac5-927f-a7c250668e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f602b8-18f1-4163-9afd-9edaeda237a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "40f74404-2c98-4dbc-a77e-294d07032655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f7e17f-086f-487b-9d60-bd104aed8060",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264dd06e-3b2c-46be-8d2f-3905a0003083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb67e12-5864-4914-878d-3aaf3c1bbc6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ecfafb-4052-47d0-a571-de621690a9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70fdddfe-3599-4604-a66f-3356a9af128d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1648847-c660-40e8-9444-d4a24baa673c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c5fd4b-a8c4-4cff-b5f0-b6b406137107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db6f8ce-ba77-4b4f-b539-c3194a48abb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3da3439-e940-4254-b698-aae9713cfadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7996c5a6-1939-4ea5-8956-6cec2a34b6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2b2296-0f10-49dc-836b-4d57b18f7932",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2670c9-6ef4-4156-b153-d6c77609f398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9cb224-b0a8-46ce-a877-66237db245b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32946555-0c82-4269-959a-5403d9590f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d035beb2-f38b-4205-bddf-401bb1ceb88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26aad2dd-5562-4573-b750-e1c4d0e977b9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4ab18d-975c-49df-be69-8a885eac6129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1076d7-2847-46ec-81df-0c40c93694e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d097c49d-76ac-4b53-aeac-5d5fc9f0e908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbd13ef-bf84-4540-ba9b-0e4cc492c141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4656e18a-cb2a-40a0-bb52-b279b49d44dd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff58c6b-27de-47d8-b2f7-63841cd17e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9bb2dd-58fb-4d9d-ac0f-d055a39a48b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfdd2b5-983e-4760-a1ce-7f59c292d9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "940977b7-ab63-49e9-bb99-7334eb516c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3de74c-20ad-4c64-9da0-03df90902172",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7e1a0f-b82d-4edd-9e5e-503bae20de62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe989f3-f3ee-46cd-81bd-f6b933055372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c7ecfc-73b4-49b6-99d8-32e6dcdb79e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf3e749-2723-449d-80bc-0fef34a51116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37f5861-66c9-44be-933a-e46e00533162",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cd2550-5ec2-4a6b-81d6-c447b5a18f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba70a95d-5ebc-42db-a890-ae0a6565d54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fd6aa1-150a-4859-8bd9-31fed756a828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bceaea1b-2896-4141-a089-c3401db38e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf000beb-5919-4a90-aad0-d4f05fd431e9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68664a2-a1c7-4081-befe-97ddc08b5107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2999bcaa-9311-4d7b-ac77-1e7e089ffc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8085ba0d-b382-4d88-9942-894b0b8c9250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48de7a9d-337c-489f-92f4-825f4e791af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7579fcf8-8b5c-4bb8-8715-b11c0b3359ea",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b96b33-02d1-430c-80ab-a8b25d1783dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acff0a4-118c-4c90-be40-7d6d14022b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dcc3d1-c369-4571-b01a-3f91332d3d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b52a073a-b296-4c3e-99da-03965d9fe84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cef3bee-3f89-41a2-b061-fb3f2cb13ec9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f825e5a8-6df9-4f7e-a357-894c4ddb2f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873ac444-ac95-4fad-aa1b-0dc97788a996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5aef938-037e-4963-a1f0-cceea8a571fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91cc583d-500b-4394-a22f-2aeb93a64490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f51274f-025b-4eca-a258-33108081b3ff",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff866a5-ebd4-44c4-ad6e-c97c97a805da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2df34e-0dac-4051-a193-39798f9145a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a003207a-7333-4991-b914-01eae3006cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14967e26-7dc5-48e0-abb3-01a688d6f488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31254136-2d41-490f-b356-35a9dc0f9f47",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7ac71b-3c7d-4a95-a3e6-8ed0fdcd4364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883b222d-0129-40a0-9533-4314035e7a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3950abc1-1527-496c-a455-77f1e48957da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "366890eb-c83a-4cca-83e3-9c49f7dd0884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05006b15-234a-4016-9e4d-30a9c614b2e6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e000c9-2f58-4522-8c19-56a3bb53ea0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbbadfb-f685-40b9-a2ee-626a0fdf8402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90605d1f-71d6-4dec-b339-edbae9f691d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93e8351d-79a5-4258-9cfa-633d104a7c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b6f530-ceac-4053-a13d-1b5616c4585a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6b72f9-c0ea-43de-94e3-c14fd337429b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e76e9b8-b886-4e07-80a1-22a985d79255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404bb21b-3949-40e6-b942-c43c7160e693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aca1615-3429-4f4b-89fc-10aaa0f81373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ed8f02-24b3-412e-806b-0f5925245276",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef29676-16e9-455f-9abd-29038ee306c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac0583b-bd03-4061-a58c-b702c258e7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a76fd9d-a10f-4506-8999-065038570a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccedb539-34bf-4571-ad99-2e576b8beec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678cd22f-518c-4ca5-a1c2-133ce7ae9f99",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d248da3-0914-4427-855e-c91f981bc689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9fd59f-0cc1-43b8-b3d7-9239807e2d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9749441d-b290-4a26-9d12-41ea043a284d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81daed4-4c34-48eb-bc5d-57577a025042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6dbe7e-22cb-4347-97dc-d420c1bbb9c3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655adc11-c933-402e-bc14-58af92186ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f346e58-d69a-40f5-9c94-09fd9a0c5eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1274977d-5762-4318-b05b-77fa60f7875d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "853a1ff6-571b-480a-961c-fe26f388f3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a746f9-60eb-4376-99ee-df7dee861db1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c5d9ff-085f-4fcb-9240-26986f6e8d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf602dc-46d8-4716-867a-ef7458463939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367d503b-fabf-4cf9-a290-edd4f0381ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c4500d-352b-491c-9057-50f406b56c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c838fd8-eca1-4ee9-bb0f-c523ef4e84d2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5efb809-3cb4-4b01-92d0-f32d5de97b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef0c8b5-f2cc-49f7-b832-3b000f53cc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c99b90-3357-4a02-a534-bc0bc920ac48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bb4da1-caf3-479b-ac80-4d4cfe9ad8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c949d4-9979-4092-92bb-dbe148d43780",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a60ce7e-07ba-482e-91a0-7a58a0415d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c927df12-716d-433d-8b64-4e7d1ca502cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ae9dc4-cfc1-47ad-b4a5-0f8e4ad29cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f935acf-0d55-4685-a572-0ba408d1097a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac863368-7e4f-49a1-9c7e-49919cc2fd8b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24356b5d-2557-473c-97d8-c64b9ee11e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d63d08-4824-4305-89ae-38eb0ccd2b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b87e12d-7236-49d6-a227-e608772ea2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7574c12-2c65-427b-9bdf-eba8fe073ec2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "be0002c6-8fda-4ade-b30e-dd60f0d90162",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77d6f834-1e5e-40c9-a541-87cd8013a66f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a029359-c8d4-4b6d-86ba-7edfd6b28a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a479944-b142-4a02-9da1-7a1f8f039b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35431be-bdc5-499e-b4fc-1c7b2caf0b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eac388de-ae0f-437e-afb3-5de527009c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb65aa5-8cbe-4677-8c49-89944e512171",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff86c70-1bae-42a1-af65-ff4a4000e980",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "fdfba479-5112-4d02-b5cd-2f388b425f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf14c0bc-bf8c-4b82-880a-74835ab28634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca07d842-d2e4-45ae-8d48-9b5ee308e8b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a860567e-b11a-47cc-8a08-2f0b0b707170",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca48c713-64b2-4e2e-939f-6873f34ecc3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec1b3529-b4f6-4dda-8b31-485db5d9de73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27c78f99-d91b-4eba-9758-79db9b2025f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f774e90-b11b-4bd8-958e-ef5a1a91d841",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "36070560-d2a9-48d1-954c-52bbd689e2a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c05701c-234d-4a6d-86cb-4dba79af5f08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79a01ad5-b4f8-4c43-8977-df3d8741c636"
            }
          }
        ]
      },
      {
        "id": "fa34f312-ff14-41bf-9c28-5881362ffa69",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5cbf066c-b7b6-452c-aafe-f69d8e662d81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c914d83-a8ff-4388-87a4-16b2e4dfdb52",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3dcbb84c-eca9-4dd9-8907-44bb39d7df59",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86b700b-c3dd-4190-9730-2255954f1f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfdca59-19ee-4bab-bbdc-5805522ed066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5e050b-1dca-4376-bb28-723bfe0e0e96",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06112bac-0cad-488e-8dad-1b0b55d6c838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e628ba76-0363-45db-becb-dde915dffc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c83f8f2-e4a8-404a-9df0-887db96ee5a1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d04e3c-a13b-4533-a73a-f87493534af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc296f82-1d7e-4dfe-818d-6a9aeb88ca6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448c54ea-4e46-413c-9176-0895e6e99a58",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb99e7de-f243-413f-b9e8-f045deef3e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541b8b3c-acfe-46fb-bcf1-612ae7baa940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e15b915-58f0-4a2d-9d9b-ee7dffc44f3d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9963596-6d58-418b-b6e6-f4965303b1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d12d7c-60bd-4a27-8e5a-b9b715e7b992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e7c5e0-0476-40dc-8c0f-170442867073",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ba7bbc-afcb-4bed-8833-8ade19271044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333c28c9-019c-4249-966c-f6082003b5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f3e714-b801-44f1-993a-b4d5be406384",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0698af5-bc1e-4579-81df-37e4eb61baea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be31e39b-a351-41d1-a980-11c2b73804e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02270db1-0c60-47e6-867c-68af33dc825d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b5f019-cafe-4e99-952e-5b6cd38a59cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abc6331-da72-4667-aa86-83d62d1cf06d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e072cf-de20-405c-83d5-53daaf24fa15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "852c0ec7-70e2-426c-bcb1-894e50583589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86a94fe-8911-413a-b996-a2d4f1875f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2655bc59-60cd-4623-b594-b6e188a1e016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe566c9-61fa-4850-b677-ab649e6774d0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7195ee1a-db65-47bc-986f-56162e15c6a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f89657-74ee-4395-8a2d-85bc46283429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc40830-b9dd-4cd1-9ec2-a2d5258e7bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79e8c5f-ddd9-47c7-bec5-7a5a73b134e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19aa1c42-dd91-423b-be52-8e8c549f15a0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac2d3c0-81f4-4119-8945-d335dd846e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb57287a-aa28-412b-ab87-b2c2a8f83c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1040dc23-7f35-4992-97f4-b612bfc6c31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda145bf-9342-4acc-a6d3-98885b4d621a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738e229c-9b41-4ddc-b9d7-8aa37e6afe28",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88419272-1b6b-4ed0-9052-014eb16613a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23958dc1-234e-46ce-9206-97fc8a1a9ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46612266-6b1f-4958-b5f8-861cde34cf19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19aa1a8-310f-4bed-9e52-6783166c7db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495984e1-d287-4e62-b59d-df234a82b6d3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e57444-e332-49d8-b0b4-3111decf5fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eedc6aa-a7b6-40b5-825d-698303d35326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790e8fdf-e6b0-4334-b8db-b9d59ad336cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74e4419-4a19-4f93-8b89-20d12839b21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6794110e-b57f-4d38-9104-c9d493c9035e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013cf97f-af6e-4395-adad-20d0b2128846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34006d4b-6047-4ddc-a4f4-b537b0472edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093be8ed-7ecf-4d3c-a2c3-1c5f7a2290fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7007bef0-88a1-44dd-b9d6-cfcf2a2297fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8955850-a2c9-40e6-bffa-f7205d6e0f04",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27143947-1601-4976-9b1f-84ac124ff364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "865ba32a-3487-483b-b38c-40d25bc5638b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1783214-8d3c-43f5-a407-8cd5e128f383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef80abd3-02da-43cb-a11b-9851ab320dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd4205f-4b58-4f47-9901-655744b49194",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f854cd46-72ba-44e4-af21-4974dbab8829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a3baea5-5414-4299-88fe-556f35172f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff13f54-00b6-4ca5-828e-9d95f1c5aa33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bab9fdc-30f6-44d1-9f6f-f2cfa58d850e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f6c326-7ae1-4654-9b54-472c5363cde1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bc9fc4-2de9-4c05-9e53-ffe5922e6705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a45455-9b91-445e-8c98-41d450c1f0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d4d438-5ab6-45a9-b62b-1ea63a47ad0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86111dee-d293-4f06-9234-6fa88edd4b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc50be9-bb06-4abe-9cc6-246fad024fa4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9128961a-7e3f-4dc9-985b-96d545df775a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7f0f8a-e636-4f3c-8480-acab78b5c5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7503b336-b215-4f68-90dd-49a2e6043c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96544ed-3455-4b9d-9d2e-6551df29acb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35a012d-8e31-4ec2-83db-ba3694cb33d7",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839c875d-dfce-4474-be77-934c45fd4789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4ba5b1-a2ee-4b62-abf2-990da03caf59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfd05a4-4615-403a-813a-062e8d6db443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dffff89-a011-4776-8652-ff96cb2f564e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0080d7d-0101-4968-9ef7-a6471b3c9ea5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50e944f-1668-423b-be9d-30452b2ebe2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e3bcc5-231e-46ca-845a-42e4a5a82a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a43933-9a26-4481-bdb1-3ca85aa46994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814b1fbe-ea8e-4978-a220-a0b7d7069d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d14daf-5148-43d5-ac9f-73e86a2b39ae",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222e7c27-74de-4bf3-9522-e7ee6662f522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb53410d-9da4-4e9d-84f8-74e3db91b92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf57cc5-73a7-4468-85bc-116d9345143e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0eb9c4-f257-4080-8d49-866ede034626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc63b2ec-bacf-4ae2-92aa-5bc9b491428f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56efee77-924b-4cec-b760-fbeff8d4f526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d53bab-406b-476f-977b-1807cf3fc7f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3adc92-8e59-4b0e-9f06-cce7a164f1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca70d05-9cde-42fe-bee2-337e95c8275f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f30ab3c-1a7c-4c10-a706-91782ce85032",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7f838c-1506-40e4-8abb-386ec720defb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68720ba4-3905-461b-976e-3f3980419ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5943cc73-cf10-47d0-92b3-821ab1d28e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ed06f2-4b89-4c61-8f2d-3974c39af83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4765f2cb-ebbf-4aa8-971e-43783ad13d40",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2856ec-9de6-4728-9c50-e5684e78c5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23452bd-ce18-40f8-9948-604a549b2c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba90908-556e-49b1-87de-e1d9d6600d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a10bd42-fcc7-4b33-b89d-fbcc6bfe52f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186e47ec-b054-463d-9f47-be8e74945ded",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92c8e94-8d39-4d64-bc98-823e3dde360b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284ab7af-8fe9-4829-914f-48a14d97620a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735ef40b-6048-4187-b32e-67b551959758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc0c2dc6-8a75-4948-9abd-b978ba5583dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d55abba-ba6c-49ba-afd6-cd474d6e8c27",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c94b1e-ed7c-4492-9af4-fcadd73537e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "078fa592-c07f-41d0-8cce-45b603493288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ea2b76-e8d5-45dd-a210-e951d775f737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e8f8d2-2d50-4a04-a841-4c74a9d0adce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6809b7d2-76e7-4d3e-9186-b58b5ccc19b4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa629972-f52c-44b1-9c2a-44516fcf8207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bad4be07-5d25-4775-8b1b-ec3536680346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc78b5d-65ff-40b1-8ed4-bad9e9bc4055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffbe074-7db5-4f73-af18-faac834d70c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b782fe-7819-4254-bd73-a946e3286f86",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20a42d6-4e66-4aed-a2ed-0fa9083f6cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b415ed80-0223-44aa-99cf-4a3d1ceb199d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909355e2-deff-4902-ba23-464324dcbe5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f802d3-7e22-41c4-858b-6752dc904d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d5c8dc-e4b4-42ba-a0da-d47a1df4b8cf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac4a440-eeb0-4026-b183-241a79795063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79508a62-278a-4a3a-8652-3d323520e85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a026f41e-41ac-4768-9ec6-f6bd037c6b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7277bd53-f78d-4cff-864e-204f86381eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e3ac42-19cb-49d9-b41a-83667769786f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e07112-3097-4b9f-aee7-c62b146c3d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624190af-b2b0-469d-9e4e-460f4784d54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db01a87-de66-4a43-b5b3-12c3a2c5168f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10cf8b80-08d2-4702-bc03-d57513025fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0745b781-5c02-489f-8cce-4ecf55974fae",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9567a6e-3c3c-4a80-9ac3-faa596b78d18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0afa6e8-44c5-4f00-9dd9-6fcffc457955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b9db45-759e-492b-86b3-c4fbc229fe75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6a7c0b-1fae-4f19-92b6-ec54c03fffdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c07505d-1c0b-453a-9427-3da557533a60",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e68d284-9959-4900-a2b5-44c29aafe3a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd01a9cf-d881-4b29-a9de-e2d3c59df780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2e6eb7-8668-4a79-aed7-04232177cc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9aead22-9ebd-4498-88a1-5b2371e757da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce561826-29f0-4153-9650-7147de849376",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec0c054-a38c-46c0-b2ba-bd23b25e4d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d00e61-b6f5-43bb-bf45-519e9c01cd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88d8b1a-ad32-4611-aa8a-028afb68c34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4878b7f7-8948-484e-808c-efa363723c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cd28e6-8481-46b7-acef-4b9e578b3cad",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee082c73-bd60-46b1-8dd6-3ad709a24bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "487b6216-399b-48ab-9ee8-04eac2645555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dae13f-761a-4346-a170-906f589e180a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec96de6a-0bce-41ce-9998-27867381c5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef16d676-fc1d-42b6-8816-5d56c3ad616f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2249ee-35ac-4316-80fc-208b7a3fb512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e93e1d4-b9c8-4c71-84a9-7562cc5c2682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f984499-4d37-4bed-8665-ef2cec1393ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2089f934-6d4b-40bd-ba49-4feb5f25403b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de4230f-2d83-4952-be32-c27333d00acb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b1ca90-899a-4a08-80e4-1b19349bdb70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c30aacc-9d04-42d1-a097-e0d29d8a0fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8241d6-7769-4e8c-a852-23bee69fb49c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8411cebe-c9aa-4f56-be48-c93594cc97cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504a4149-4288-4fe6-a681-71e70a1af0fc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93f3918-f44f-40cc-aab0-2f5d63880114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae7813e-bfb0-4397-b14a-88bb24f8a853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329ecbc8-18ac-4477-9bbd-2a19bc25059f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34d3b18-856e-4237-9f2f-bc3373663b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f2753e-88bf-428e-9ecd-469b92d084b3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c0f9c1-ed95-404d-bf5b-4c153246adf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f97608-8a73-400e-86c4-1ce50a039abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a78bb3b-c193-496e-9032-ed55484d9497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9103c072-4983-4b82-aa03-b41709b49d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeebb1d-7688-4f7b-ad63-934b40fcbcfb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a8ef6a-e045-4f53-a528-af0ab99443cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2167ce4-177c-43e9-ba15-8c5b8785eb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1a03a8-002d-47a3-96f4-35c40d69fbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f155a1a2-3bea-485f-8024-4c1aca5e1fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d42f19-282c-4e4e-ad7c-0bbeac8051eb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe1601b-311c-489b-a2b0-3817491159dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e62befe3-c4fb-4fa5-9236-22a9e876f64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4fb691-4353-4995-98fa-11fe2eb16359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cacde48b-aed3-47f3-a6ab-6ae440503437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e8ca75-3688-44ce-b208-11ffabd1d278",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8466291d-3351-4c1a-b5a9-027cc78a2417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036760fb-f756-43a4-b63b-6f5b3bd0ec92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c605982-61d4-4187-aadb-cf6f27d2c5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc6c9c8-1cc1-438b-b26c-77d3f2ebbd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc54761-ea14-4fc8-9063-881d60876b5e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87f65d2-d5d2-4944-89eb-a8138c8abe31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280990bf-c2b8-434d-842d-95edf53204ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ae8420-99f7-400d-80a7-cd5ea81fffee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9871444a-cdbd-434b-b893-3a2d44a0bd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a47d59b-2171-4412-9ad6-7a391e4a9314",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67101053-d492-4947-89e0-0f91796195ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e570334-420b-4a07-9891-2e9fa20beadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e525f5-7f7b-47f2-93ea-96a1a0944d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63af665d-8cad-44b5-bdb1-580d77f3f785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8176388-70da-402f-8484-7ebcb9355c9f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4716f77-4372-48ed-b419-7a0c733d4525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdebe44-dfd4-40d3-bc21-3a1e3ab0a14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05dfa1c-9609-444a-9590-c7ec9c9ab90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5203b8ff-69b8-4b7f-9111-d53fc86d4a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f48cc4-01f3-45db-a25e-01cc9642a445",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584d8aed-eda7-4469-8e8f-1740d57a4859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243b7a0f-5a4d-459a-b4f9-7b7e15776e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f03748-8ec1-40dc-9e3f-f0a3b06d91d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f72b95-021e-461d-bd28-aee81dbc33a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387a122c-7ff8-4dda-afad-d6b0637a326f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbb61d6-e85c-4556-bfd4-568f5c6934d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2578436-0f18-4b84-b407-bcc470383dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049d22e3-3344-49eb-a9bb-beb1a521f24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ee71fa-f3e4-40c7-88af-6f8f9ef6fb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec22b41b-93c5-41e4-9235-e66bd34ee677",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfa1347-281a-4b78-9205-8192cec6d6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78278952-e194-40f8-b6e2-84730352b0c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96433423-8b64-4ba8-afb1-328a1f8779c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee7a367-9a18-47f9-b9a7-f38c707b57b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c54b812-9e23-415a-99b1-a165818df722",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0a56c6-aaae-4b02-bfa1-9ea76a172f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bbdad0-c262-422b-a18b-c9892fe9cb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5830b09-520b-483d-af42-91749514c660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3963044-5b3c-452f-bba1-c9177155c106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdc5350-db9a-4e79-b393-ff046c67195c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c81240a-2462-425d-8e7c-d310414d287e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e7ae2f-08b9-447f-b35e-a3f932f08a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c67118-3e01-4027-99bd-a7473a0cd917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69b28f3-642d-4e23-97cb-70fcb80e2776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2eb948-c677-498d-a4e8-a97c435e9cda",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f83c22-f123-4e33-ad95-09980a98c695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da492d63-ac3b-4be6-ae4c-1878152684b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72882151-6d98-4d54-ac02-2bfa8927ff97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3656ff-873d-4432-b316-3a65d02098d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30324d65-65df-49b8-89ea-b38222927ed7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932d64dc-9eda-4caa-b4a2-67715963d80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68456cc-a27d-4d42-99e2-5d52aa2cb801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cea3a5-b6d3-4345-b00e-9f68f063148b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6c66fb-2b3b-42d0-9cae-fad96c3f96fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129f4ffb-b9fb-4dad-a424-3b70a32c7a94",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc375006-2da2-421e-a41a-cddfa0142840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed05909-c667-4de9-8619-8ced1fcb4192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8f11f0-7168-4ea8-bac1-717f59773223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5111b02f-4307-418e-826a-c7c4a5f7647a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a578f9c-5ef7-441e-97d4-acec7be5f0c3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e322591c-10af-4664-a7c2-85676ab5845b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ffbc14-ce0c-48e3-a0c5-6b9d12d618e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3719fe27-2b37-43f2-8327-857905b5a808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72bb3299-45ac-41ca-983b-a64a77c50b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aad8e48-f87f-48a5-ae7d-bea7a39119f7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d4d9fc-205e-40ac-900f-5ffd32575653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c33965-da12-40be-8885-2fb729f7ac55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff6bf3c-c0bb-46db-adfa-906ac72649e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932116a8-cc67-40dd-a6b7-8e4f0d386878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8600dc5f-253f-41fe-8b86-d79ee7dd2b01",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d819c67e-3ba1-480c-8033-e0719aaf2cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca90e496-4183-4137-bdec-651b7b8142b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0712380-a9b7-4934-b4aa-5af30853bfbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dc06ad-623a-49e9-993e-59e704845192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ade8f98-9daa-4776-8dd0-adb98793c238",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136109d9-2858-4a48-afac-706b8657a175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d390c09-815c-44ca-bbf9-6520e0eafa63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a209c8e2-ca3b-4b45-950b-f415fde65def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f9312f-8e6e-4e4a-8ea4-eafabf880f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b51e237-b03d-4798-aa6d-7e5754e9e7df",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab78d94-9a7c-49cf-a092-1eb158bd68d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1687cd8e-8ff3-4d48-8603-96b604615134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3908d07b-ee6a-44f7-b49b-4a3435ab98ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c8c6e6-9958-42b2-9631-5084dd3e501d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab27b89-8dbf-4f74-8feb-1a600dfbcea3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14fc18c-bc99-4270-a557-438727c1e782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1178dd94-f5d8-428f-9cad-e76832a2efc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b066c0-5dff-4e99-8848-c202f714a9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d7f5ad-bde7-45ab-8a74-342dd55a4381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabdde8e-f156-45a2-a670-acd277a24d2c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca92c10-c288-44d7-80b8-1dad785670a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b7317d-10f3-4fa6-bf0f-aa66f9869371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796e0882-ce44-45e6-8b95-5a9002e202b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fef8b5-9188-419c-9ce2-065940b48942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d919e9-0c0d-4f7f-b667-4551836eaa8c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc44563-5efa-4e20-a237-9d4427b92495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a17095-4bac-4aa4-93dd-c6a79c14683b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c419d9-897e-4d0d-b9ee-a721f5c5a4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da2e424-4eaf-414e-a616-2aa6458c4697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c823cf23-7f94-42b0-8cba-4d30b226f401",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11f9d58-63f9-48b0-8b50-055f1565a31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7734dfb-5bae-4ad6-a32c-24955bdcb38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a4d7d0-d1d7-449b-b66c-aea9b134b14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aaf9e87-74f6-4a65-b440-dde2139435b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65db7b9-6bb7-4b18-95be-2ee1c90ed216",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afece59-686a-4ff9-a383-6ddf06a10f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e78484-10da-47c5-9cf6-f96df9a812e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8c0992-0b50-455a-a3f8-4a370923bb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a98713e-2382-4497-bd9e-bf5062846780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f9e035-2965-4727-9fe2-1d4ae6608a93",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33304d62-f013-43a6-a58e-7173899d9038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0623e9-f7f2-43e4-98fb-c98dc0972d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82fb8cb-9117-4011-9a1e-31a3340be29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b573288-a946-4493-8f98-d906082359aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c578a79d-9a10-4931-a7b9-04ae69b8c7f8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050fdf84-ce70-4265-b934-5630ce44b1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77b6f68-0fd0-4427-bfe8-8fdd374683bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a15cdd0-73ab-471b-b77b-1152216a8935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec533fa-baf8-4eb0-9352-ff10a9abc9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33958ad5-bd6b-4340-ac83-7b65457560c0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fad16b2-08b9-4720-b9c6-26e376dacd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f58e170-abe6-4ab8-a827-f0b86c8f38e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c6d63b-4bd3-4108-b9ed-0929a525e1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bd4dee-888c-4da8-a457-7ab87744a90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62e9c3b-119f-4efe-b3e0-ccd1a52fddd7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa85f234-18e7-49b8-ab73-0af13fe3a7c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7618a02e-209d-48e1-b84f-a121e294b7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af736afd-1a95-410c-bb6b-5df908115d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bd33d3-c623-48ca-aae1-06c109495443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4229b9fd-0908-4f61-bc31-2b8f15ed269b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65c3d49-6c45-4310-bb08-178cf8b39ecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8ccf6a-dedd-4e5b-ae58-091766cda146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de83081-86a1-4cf5-9166-3dd6119d7fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4666d504-e1a6-4386-8f52-154a7d69c623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c32212-58ca-4541-964f-ba874917fbca",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa12ccd-f396-48ac-8a63-c43e0d21f446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0971c310-f98a-49ec-a4eb-0e1039c36c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa42193-cacf-4f32-a7ef-6179176ff858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d18536d-7f93-4b44-9446-285cfdeabf75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d713cb-90ee-4dfa-a659-7409d99135d8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6189780f-9240-47d4-96a1-4a8dde5f4c61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb79fde9-dfd5-443c-84b5-e4c0e35b6a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4113948-1446-4fbf-bdff-88a3d5a34b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48599385-1ca3-4721-ba88-a5c0ed121bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f2649c-aca1-460a-8d69-e30c6b656089",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a815376e-f038-4cec-a4d9-5abdac222296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ffadddd-915f-42d5-a6b1-6ab2a1695b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed4734d-22eb-4d72-90de-589164f6d80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dc9a0c-7f12-41d1-9943-d85bce1b7752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16b2cf1-8b1c-42b5-8fe0-b1ed0ac789c1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb99f1c-4b69-4817-8585-59adae8d01b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc2831aa-4e2a-4cab-8f7c-770b1bfc9162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a511ef2-0b0a-4d97-978f-11d0ccfe20f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3186b0b-91e0-4485-a5f6-7d3b72c1c486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4543fa-9333-47a6-a0ee-288064399c80",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a659bf4-4542-4bbd-964d-994799c15b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cbe0158-3ab4-44b6-8c03-2c2d924db7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "247517d8-1348-4ce4-bbd1-4d00b79dc2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4c70dd-1fa3-4153-82b4-52e3405d33c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f20301-5246-474c-b323-e76b10abf654",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d48605-ce79-429d-b9bd-12999d400a17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db117e84-b83f-4d1a-ba2b-d9b74f913a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955325dc-c55e-49c6-8cab-ce442caadee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49c02ea-2d77-4302-bf64-37d1870a5c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bdc86a-c42a-4cd4-9c4d-24920d2c2e57",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80e5b8f-4145-47b1-bd59-d13f9a072356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84115f84-1dab-419a-a804-615a48c307ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebdba3a-0c6c-4ab9-a3ba-d32e4bcfb1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ed1622-8fb4-473f-a106-85ce6a6e637e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2642a97-7f95-44d2-b5ab-149c5feb38a4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cc510d-fcd0-4794-b063-e9bf1d16dbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "280b5fc5-9bdb-4230-a1b3-dba5435727d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee7b9ae-e1a7-4c88-9826-16921a59353c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33cc71a-831e-44c9-bb70-6ce58d0c5cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d478c5d-3db0-4421-b9fb-29b3e773250e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824a6c49-fd14-4576-b901-a678d05f7be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7fb540c-5b5c-498e-a28e-8c500f894d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116588a4-3b12-498a-854c-9b53981cc9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d08187-8de3-40ef-bef2-c33778963728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ff3f9b-dc1c-4426-b62e-58f161193a8a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991c37d1-0704-4a85-bb49-fca7f26214a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5920149d-2f05-4974-934e-491bb3fcd84f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89f932b-1d64-4351-83ce-cfa47d300213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7aa4846-539e-4c09-8d47-ea6a6927ebfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e6c985-2158-4eed-8909-a77427943257",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c16db78-4c3c-4474-ad67-804359630377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8fe7ef2-a006-4fae-8b29-8ac3eb5b7303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae8cbe7-ec0e-4fe2-a461-22afb7c9618c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4eae32-e8dd-4821-b5e3-55d1c40623af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d1ab75-628c-45d4-83f4-db795bd82ea8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f46eb5-5766-4be1-a8cb-baef1799f635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f328f1b2-f2d2-4880-98a3-1ce15854ae8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27d2c83-38b1-4381-aae1-ebddd17d5b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c921036-f187-4c28-9d90-9fb0e90f7da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291ead28-5b59-4d6f-8c91-ba5cea7d9295",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bc0dc7-dd1d-4be9-b343-1336914df70b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506e382e-5967-4b3c-909b-ecd6d021d492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7008a82-02b0-4d7f-af3a-43a130f4b7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511456b1-934e-424d-87e2-4efebfd661f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f27c8b0-496a-4ac6-bce1-4a8f1656c242",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b54364e-e582-48b4-b7d5-351b55bb8b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ebb1c4-6168-421c-93ef-0c9a05dd1c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f80f66-065e-4121-9154-0a66fe62415a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3dbc191-289a-4ed5-b53e-54aa054b0f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a77b121-c372-47ef-9bfd-2f73a2d8d6be",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b5cc92-cf9c-4a4d-b825-e0ecd3095a19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8722d1f9-ce8e-420d-97ea-b7635582a8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620049ab-4a0c-4bd1-a033-acf4d13dc830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9205be9c-1b48-41f0-9171-c9770a2f8ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567cc02c-f25a-4d5b-87a3-80ab9e0a2605",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc23afe9-da62-468f-8c36-0fc3b2943583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1912214-520f-48fc-b588-0f46ed8c6a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1295cf19-9de3-4d85-b45d-cd520d20336c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a522d06c-efcf-4ea9-bcc5-ec140350b2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d740a2b-7ecc-4787-ada7-4c259b8b0919",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7987bf-c242-4b42-aceb-2db6c715dc4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "945953d9-f98b-4379-9e2c-312c08f653f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe0f9a5-f9d9-4a57-a91f-2739b8976348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ae9a8d-355a-43cd-881c-da947e3af8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703eab3a-8efa-403c-9686-64aac28112a5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e72d2a6-97af-479d-a362-0ba2f92c4a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e482a1c8-9f93-45a1-a0b8-129eac5616a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0490c0-34f2-4530-a519-6efef7b2ae96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab317dd-ceac-4740-8ec5-82425033e7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6c244a-fb09-4a2f-bef6-6d5603fd3bd3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6e8571-5414-4139-a8b2-0923310a0354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5161b0-29b8-4b2d-afff-436d58084b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b414912b-c88b-4b74-adea-c653165f420b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c5e301-7a57-4eae-8ce4-c406beb7ccd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24ad65b-c17b-45e7-9f02-bf007983ec90",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2810f9c4-fd99-4cde-8fbc-778c837be3ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "017a4957-5d9e-4ad6-a646-10fa41b5e8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7218caf-5b2e-4850-a8d3-195dd42d0ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681cac1e-6cde-4d30-8822-e348dae07859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f0f464-2bef-4d47-9a7a-85d8d3637785",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f61e876-c96f-4e52-9622-a6b42db9c33a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "291c0047-7f47-4c42-847c-de16e776618a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19f139f-bf58-43a4-8b15-9176183343da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ffdf38-bbb7-48d1-a9ea-dd62a62b727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000335c6-3368-47f8-8871-ed5dbc6f8e1f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc49b6a-c8c0-4c42-b24c-7dae340c1880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568ac4f7-c56b-442e-a040-d1efda25a5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b404a0b3-2f98-4022-b6c8-709dcb160096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de407b67-3ffa-4a00-9c04-83019f6929fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4705959-2d4c-4917-b4c0-6958a4a5bfb5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc654749-7bed-4b76-a043-9d1ca953d7d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae971f76-70e3-44f9-9527-fe3512db90df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586ae0e2-0110-4c17-a40a-7ba4e39441fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc416ca4-25a9-475d-ae87-e9c5852f427b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b91284-9a03-400d-9e50-51e16548fbac",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd07bc01-65fd-4263-ab89-431291c10a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b0319a-eeb0-498b-8ef1-010ea6f3f162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7bba07-a5b3-4e07-8b24-51ad44fcad46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71032c3-ad36-4598-8505-e5d2fc0e252c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf1e122-5a55-488a-a5da-583261c9e480",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4df27b-8d76-49c2-9ef0-12f36f68d4d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b48c1f2e-4f35-49ba-802d-fff207147d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cfbd0d-6134-4e60-818f-faa9c6588ba7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6c4ff7-70ec-40e5-a67c-eebb5349957a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee0bd23-e39d-4c7b-a1d6-8a71b3cd83cf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa4716f-50a7-40c6-a80e-a0adb067bd8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63fbc0e2-a66f-4327-bf05-8b2cddaab808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9d34ea-7847-4aa8-907a-f16e765cab47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ccc378-f4bb-4e7b-ace4-bc3496cdc8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e60646a-17ec-488b-97f4-31c7f4c4e6c1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48090ee-50b3-4124-8915-8bbfc3113a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e6963e-a092-46e5-8e78-d69daecbb04b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac6de3a-d337-4e5c-b7b6-60bed4110a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ed5b4f-fde4-485e-b5b7-ee92ea3c3b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83028668-bc8d-429e-9db8-81a443e4ac9c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aea416-9d00-4b82-8538-1b4b9d75136e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6aa8d9a-8851-426c-bd73-3e4381aece6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761e257d-85d4-4bca-bdcb-2a5d2e5f1b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c213f2-e5c6-4884-8cc6-b44ee6de5a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928639fa-5b0e-4699-941f-366bfaf5ed5a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5106e3c4-5e84-444e-ae80-bac117aa5369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8da124a-92b6-4b1d-9b36-9e407da62099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc2bfea-aa0e-4685-bc8b-a7c14abc6e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec22e0c-6d7c-43f6-a870-f355e432f413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b688dda7-a968-4992-99da-fd780b2077e2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7f2040-e018-458e-b28f-9e1bd7557052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d9d2c9-a287-4efa-8739-cd8801797e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787dc1a4-7be4-4022-9393-c34a3ba2d7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff921b20-8c1a-4904-9158-32d6c7e687b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c3a1c6-8793-4d8b-9b02-8769b02039a8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe44305a-a0cd-4089-a0e5-935fcecf82b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe0b4fb-71cf-4491-936e-c095d1285119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ba902b-d709-4e08-ac40-a97ee93ccd3b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0919a0cf-1ffa-47fe-b0d4-971ee9c4fd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0f0486-b79e-413e-befc-5bb003f7ea20",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3c6a48-aa28-4028-b6b4-e6f74ad7e76b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "128f8008-b672-475b-b8de-2999172a0b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd499265-e446-4122-ae61-533870da84b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d52249-aa98-47d8-b317-ab7e9677d1f5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5be4d31c-cfcd-4d6f-ab3a-962b611bdb32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4334eb59-cd39-4456-bd5c-f8449531372f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00e9b660-0c0c-4189-9c16-cd968beedb05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f1e6002-ba82-4bba-8c13-80fa521b2e87"
                    }
                  }
                ]
              },
              {
                "id": "a05d4367-247a-456d-bd9d-ee7708c1a317",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6492e18-e97b-4a6e-8a47-48b6cef2858b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0063f5-bb50-4fef-bd02-6ad82fd53953",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "77f82fa2-4277-409f-ada2-0927799f4189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dd86a6-15ef-44dd-95d8-09e82159ca09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "052fce94-ce5d-4495-a8a7-e7e63b8de09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5259fb8-aec4-44f3-ac6b-761348e916c1",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53802a99-2892-4535-a5b7-a182c850c652",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c235722c-14af-461f-a00f-c98ec5989c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48150e6-cef4-4142-b115-fe3f7c4918ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e3152ff-a981-46d5-b025-1dbc7f53d3a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40e53000-a8bf-411c-8953-f4079005bb1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2d20dd4-324d-4366-8de4-846f4430af97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36a0911f-019b-4399-bac8-3b90385373b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "babdb103-4866-42de-8dd9-ccb231428c70"
                    }
                  }
                ]
              },
              {
                "id": "14ca30ae-e419-424c-828a-c749f2ec086f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3b5d2203-391a-48e6-b630-8facdae2d152",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3d4749-329c-4f51-a83a-55948f17d0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ce2d36e1-8861-4596-b96a-a84e0b2ed1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0196cd-e3d8-4626-b0d4-0e17e2701640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3a741e-5de1-48e2-990b-4814ad9b2be7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "64de53d1-5e06-4097-8714-b3ddfe2c5b29",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3df1ad42-5342-4b67-8aa3-e9aaa5607753",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1311b407-73f1-414a-9580-e46ecbac7d9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2c81c087-8ab8-4abe-90dc-6607c8ce8a8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3747b5e8-2a7b-4245-b98b-a364b3ea8b69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2df9bb53-c420-43eb-9d53-14edc7b7913a"
                    }
                  }
                ]
              },
              {
                "id": "ea53a709-9a38-48db-a65e-e7e63c7c8b63",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0988464-7d44-4d93-a1c7-ddd87630e469",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "09ddc23d-16f9-481f-aeef-36ee062497fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0c9b8b8-3ced-4997-b411-7b24328e0f10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ea47cd3-d33b-4316-8562-7933625a9c17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "039c1105-cce5-45c7-96d4-2d178c4e9bb2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "175b30b0-d78a-415b-995a-13574398c7eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7592c0e-7fcc-4dc3-9f77-f0be3a669bd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1565790-4e8f-4049-bf3f-12fe2a76d3fd"
            }
          }
        ]
      },
      {
        "id": "9aa601d8-6400-49f2-8a42-281be3839317",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1a020068-aff2-4b7d-9b76-e1b512ed7b3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfea655c-76ee-42bd-88a6-7515c1cafb3c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8db8128e-a1f4-420e-8ad2-cff29d4d0e5c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d2379a-0c60-4bff-9599-a209445bf702",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "419ab507-213c-439f-b6ae-a2ee9af3d28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed402998-2e67-4f6b-95e1-76f02c28bce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84412ca3-85da-40f5-a57b-8633b216605d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a801af27-89ef-4734-bd2e-b97b261d6c65",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89fb314-be8d-43d9-9156-15af0ef04eef",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f6c494e4-79c3-4012-9429-21a62796b5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef82fe4-6ce6-42ec-ba53-b6baad12fd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc5e493c-fd7e-49d3-a462-078d3fc0f466"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8416b8ba-9708-4f2c-87eb-fcdceec6b093",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b83ee7ff-efb4-451b-88f5-72c8cd21f90e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54dce266-ab35-4797-bccc-96f4e4f84401",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28271493-bb66-40d3-9c44-18f4b9647261"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b972f09b-a6f5-458c-baa5-5ce631a7a137",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b9f06a52-37f6-432b-89a2-df6bc0858efd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "664ce851-e71e-4b31-b09b-83e381c197b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5c50930-cab5-4cb3-b4b8-3c13308f6c66"
            }
          }
        ]
      },
      {
        "id": "2b66b8bb-23c0-4a1d-a44a-3584ff1e87a6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d67f28c1-cbe7-471c-97a9-1da5f54b7f5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a75edd72-92f6-4637-9b27-dd294992f09c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24e38bc8-fe16-4b01-ac39-32b2f463056b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d97e91c-75b7-4150-9a3a-62e45be4647f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8cf59d7c-5b12-4986-91a9-7d28f5433c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9d1908-bead-4185-a0c2-74b0a3530af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffcc5c93-c687-4b08-95fe-7792dddf2e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdd1f57-c2c5-4988-bc29-51e3ff71e1cd",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17585ed-a6bb-4e15-876c-a705794ff093",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cea86b6e-3901-4715-9688-51363fc1fb22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b51160-ceb4-4a4a-a91d-bc550fd2ddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e820631-5a20-46fd-932a-264055112ef5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3773ce7-27bd-406e-80ad-6da6b5f85aed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a07e4070-12c7-49d5-aa44-e8fd3789aa74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dc95312-84c1-4a46-a3fd-eae187c7f3fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80515181-6c2f-4f4e-a407-6854775faaa1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ac799b7-52e5-47fb-8b2d-22e9ee6233e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "85292d1e-8a77-413e-9915-1e7713d2cb2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e502179-8917-46bc-b107-b9ce2dd2c70b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5fb578f6-3f9e-43ae-9ea7-9caec0f90aae"
            }
          }
        ]
      },
      {
        "id": "86bc962c-06c2-42d5-b102-64da8b21a4ac",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "70114d56-8c3d-4f2f-aa25-9b69f11373e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70e00b92-1ecd-4ca3-8ec9-3074b3eba378",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "944cddae-8cf1-458f-9580-b2e37ca73adf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e19cb57-86dd-4f41-80ba-12bdb9dbdf4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "54f62f1d-c626-4795-a03d-fa036168bf37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5691e9b-5cb5-43a3-a3d7-2265261414fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fac8e12-8970-4e35-9021-8836074f0396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0d895c-7a6e-48b9-b30a-9ed107f09ad2",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1491735d-e137-419b-9a00-3ee9a6c03393",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "35c6cf3e-ebaf-4fcc-976f-4108a766b51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ba951e-9855-4c15-8750-d9baf6a0ba79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dda79cd-e309-4bca-9390-d1a1b0e671bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abc83f14-90c3-452f-ab8a-ae5c054d0f00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19fc3fbd-9c34-4519-9f8d-712fa798b229"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f34d812e-2d4b-4389-b99a-7878729f8d9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "829ff9d2-8f9c-4d2a-a079-cab67f9151ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da495903-4f12-418c-909a-5cdffb71ca29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c7e1333a-3d66-4df2-b127-a17df8adb405"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8891e97e-a03c-46e4-aac2-7d8868f226c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3ebe2a4-de31-4905-a60b-4ccb7349321d"
            }
          }
        ]
      },
      {
        "id": "c30a0da5-3d17-4c08-96bc-0aa92c5223fd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f151820d-6eec-4d4a-951f-d5083861ba74",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b4cab72-7ddd-4caa-a18f-c51e143ebfb2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "71c49b59-3302-47d5-b0f2-44470554699d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b347b30-5ce9-461b-83f2-e6a71b403346",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "485bcaaf-1953-4cbd-b8ea-a69a9e7bf8c4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 647.4732824427484,
      "responseMin": 7,
      "responseMax": 6166,
      "responseSd": 831.563673097823,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672792689766,
      "completed": 1672792873114
    },
    "executions": [
      {
        "id": "615beed2-13aa-4c60-b38b-9d16db0814b1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1e75423c-396a-48ef-a788-d91d2bc8a65e",
          "httpRequestId": "526b75bb-5d94-42fd-b81b-9e89c1fdc06e"
        },
        "item": {
          "id": "615beed2-13aa-4c60-b38b-9d16db0814b1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2c3c5895-213c-4c7f-887c-f9afef11f05e",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "55bd6922-9765-4edd-813d-23ec782c215b",
        "cursor": {
          "ref": "cf85e3d5-7eab-475c-a244-237ccdafaae3",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4a0542cb-48b2-4d28-8715-edf3b547eb46"
        },
        "item": {
          "id": "55bd6922-9765-4edd-813d-23ec782c215b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4901dc8d-0160-4b54-b2b1-93b8b6f6f162",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "209617ed-0dfc-41e8-a5ec-eab3169bbea1",
        "cursor": {
          "ref": "bbb9a9ac-d760-4acc-85df-80ef4fd991d5",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "20d6ffa3-5998-4b9d-92b1-08b6277a1685"
        },
        "item": {
          "id": "209617ed-0dfc-41e8-a5ec-eab3169bbea1",
          "name": "did_json"
        },
        "response": {
          "id": "5f62a05e-3840-4953-8ec6-ef38fd3929b4",
          "status": "OK",
          "code": 200,
          "responseTime": 636,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb2be13-e5fa-4257-86b3-2a1e56c2ea7f",
        "cursor": {
          "ref": "a6ec8be5-7fe4-4c3c-a701-b0bdbd5a6557",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1561ee4e-579a-4c98-97c1-93d1bf80dab2"
        },
        "item": {
          "id": "3bb2be13-e5fa-4257-86b3-2a1e56c2ea7f",
          "name": "did:invalid"
        },
        "response": {
          "id": "44d2fd44-7773-4664-94b6-0702f881f69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb2be13-e5fa-4257-86b3-2a1e56c2ea7f",
        "cursor": {
          "ref": "a6ec8be5-7fe4-4c3c-a701-b0bdbd5a6557",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1561ee4e-579a-4c98-97c1-93d1bf80dab2"
        },
        "item": {
          "id": "3bb2be13-e5fa-4257-86b3-2a1e56c2ea7f",
          "name": "did:invalid"
        },
        "response": {
          "id": "44d2fd44-7773-4664-94b6-0702f881f69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dceb6fd-9577-4a3e-9c4c-46ba91bf0529",
        "cursor": {
          "ref": "dea1017b-aa43-4807-93af-f57f89b67047",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f8737b97-7448-4ebc-940d-d0d22e2abd4f"
        },
        "item": {
          "id": "3dceb6fd-9577-4a3e-9c4c-46ba91bf0529",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "30a34b75-527d-49c8-8e13-91614f28013a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 687,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea7c885-1ce2-42c6-94f6-d3d583da4dc7",
        "cursor": {
          "ref": "63017301-8f23-4f2c-bc3c-d69b0ebd750c",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0755c521-41d6-4403-8bda-adb46e83ef0a"
        },
        "item": {
          "id": "1ea7c885-1ce2-42c6-94f6-d3d583da4dc7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "dbb86f81-e954-48ed-9faf-9b6a39f11b96",
          "status": "Not Found",
          "code": 404,
          "responseTime": 591,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed77fba-e623-4750-a9ac-d476bebe2ed7",
        "cursor": {
          "ref": "50bed93a-3af4-451d-bc52-2f94d9585cd8",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7d4e5c16-9249-4c5f-99a5-87ce4d84e8e8"
        },
        "item": {
          "id": "7ed77fba-e623-4750-a9ac-d476bebe2ed7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "846333ab-6abe-4b59-a7dd-335c5728d66b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9447998a-90ac-4575-8de7-8a75c0371634",
        "cursor": {
          "ref": "967c62b4-0204-4962-b823-ed0db55f5ff0",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9a9de52d-400a-4f43-bd53-1bc71a72bdb9"
        },
        "item": {
          "id": "9447998a-90ac-4575-8de7-8a75c0371634",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "064c0818-d9ac-46f1-ab8f-1b40159db7f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 566,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9447998a-90ac-4575-8de7-8a75c0371634",
        "cursor": {
          "ref": "967c62b4-0204-4962-b823-ed0db55f5ff0",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9a9de52d-400a-4f43-bd53-1bc71a72bdb9"
        },
        "item": {
          "id": "9447998a-90ac-4575-8de7-8a75c0371634",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "064c0818-d9ac-46f1-ab8f-1b40159db7f2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 566,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d287dc-405f-4dbf-bf76-a47ca77684e7",
        "cursor": {
          "ref": "1154675e-302a-48f1-8ba6-aaf3a619115d",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "abd912a5-870e-4570-bbb0-b01c754fd2de"
        },
        "item": {
          "id": "29d287dc-405f-4dbf-bf76-a47ca77684e7",
          "name": "identifiers"
        },
        "response": {
          "id": "122a7b6c-849c-40b7-8024-e2fb8689b7ed",
          "status": "OK",
          "code": 200,
          "responseTime": 998,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b07102-b601-40b6-9400-a0115b201c75",
        "cursor": {
          "ref": "c63ddd2f-62b0-4f5d-a806-fd14e635d860",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4e671c92-b476-4c85-9f57-d417ca84719e"
        },
        "item": {
          "id": "f1b07102-b601-40b6-9400-a0115b201c75",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "45ac4e77-b0b7-49fd-b7e6-cf201b20611b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b07102-b601-40b6-9400-a0115b201c75",
        "cursor": {
          "ref": "c63ddd2f-62b0-4f5d-a806-fd14e635d860",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4e671c92-b476-4c85-9f57-d417ca84719e"
        },
        "item": {
          "id": "f1b07102-b601-40b6-9400-a0115b201c75",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "45ac4e77-b0b7-49fd-b7e6-cf201b20611b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dcc946-6d2f-44bc-a40c-dcce10f58530",
        "cursor": {
          "ref": "864f0493-bcf5-4a79-9f80-22ad7fed76d9",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7bd3f0a6-9f4f-4744-a810-3caf83183d08"
        },
        "item": {
          "id": "22dcc946-6d2f-44bc-a40c-dcce10f58530",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3d5bf643-cdc0-4312-aa59-d8cabbd0cef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5743ff-8c06-4729-bffc-8c17006ae342",
        "cursor": {
          "ref": "88188cac-4e0d-4e82-8df6-f639e81ffa65",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8adfcac9-2b5b-413f-b24f-e46d210be3c9"
        },
        "item": {
          "id": "3e5743ff-8c06-4729-bffc-8c17006ae342",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "3aff0aa6-4c84-4420-8834-c2a86f76f401",
          "status": "Created",
          "code": 201,
          "responseTime": 2734,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "43d39ce0-262a-417c-b5ac-871ea396972f",
        "cursor": {
          "ref": "f5cd4e07-611c-47f6-9541-67e5b50366b9",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9a363bfa-97e7-4584-bd22-0154128bd265"
        },
        "item": {
          "id": "43d39ce0-262a-417c-b5ac-871ea396972f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bab8ba6a-268f-4f98-bdb8-00b42b2d3f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fad9a3-8f84-4268-a000-02df1964325e",
        "cursor": {
          "ref": "a1ff3519-dd65-40e0-afe4-87b6622ac48a",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "15cf2169-cdc3-4a3f-82da-e3ac0d1d22ce"
        },
        "item": {
          "id": "67fad9a3-8f84-4268-a000-02df1964325e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "20be969d-3e15-4b94-8579-700b103d302d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e415e399-68e5-476f-bf1a-715cb892bce5",
        "cursor": {
          "ref": "d312c5d9-fdcf-4b2d-9331-2fca4584345e",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "76f7d22a-0fcb-41b5-8d7c-4b4ea82e94be"
        },
        "item": {
          "id": "e415e399-68e5-476f-bf1a-715cb892bce5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "91d4a802-3504-4b16-a2ed-5c529db22a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62685244-41e7-463d-8249-c85ea7aaa460",
        "cursor": {
          "ref": "63751dfd-fb0e-4f3a-9970-f732d45e6ed4",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "05a9ca8b-2060-4635-b5ff-428b608e7927"
        },
        "item": {
          "id": "62685244-41e7-463d-8249-c85ea7aaa460",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e79a9d1d-6cb7-4646-ac01-20ff5bfb7921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94a238c-ccda-44cd-a287-4099ef32f734",
        "cursor": {
          "ref": "db0fd7a7-e84c-48bd-8947-a48f2c410344",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "062ce03f-31b5-40b0-be7b-2c712a73e14f"
        },
        "item": {
          "id": "c94a238c-ccda-44cd-a287-4099ef32f734",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6d86e1da-19f6-44f2-89f5-c5e38401fdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51795ba0-dfed-4134-9a05-4e5f34569d55",
        "cursor": {
          "ref": "d76582a1-1f72-4c7a-bc9b-02c78f6449d4",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a5d4b4ef-ac17-4eb1-a27a-8b387466eb26"
        },
        "item": {
          "id": "51795ba0-dfed-4134-9a05-4e5f34569d55",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8692aac0-fafd-49af-9c6c-511788e5a0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca63262-f759-4601-b088-e78024d8ad07",
        "cursor": {
          "ref": "b3057571-edff-48ee-8c2b-89d2c0267b9a",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9ec7b17a-780b-492a-bb61-8f4a69fe0eae"
        },
        "item": {
          "id": "0ca63262-f759-4601-b088-e78024d8ad07",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "81251ad5-1b7d-42f3-ab5c-c1eea152fe56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8df3d4e-0f23-4281-9b53-a9149976c606",
        "cursor": {
          "ref": "98d7d0a7-2335-4414-b732-56b5ae0c402b",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6a3877b0-cb6f-44d8-952c-4c944d5ccc08"
        },
        "item": {
          "id": "e8df3d4e-0f23-4281-9b53-a9149976c606",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3354344f-e697-4e11-bfac-a9aee887cc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa4b818-ac60-498f-8820-0f5597262bef",
        "cursor": {
          "ref": "6380b8cd-782d-45d8-b3f6-21c77f68b749",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4d132cc0-2c02-4a74-b8a4-8a3d40bb9b51"
        },
        "item": {
          "id": "3fa4b818-ac60-498f-8820-0f5597262bef",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "30ecb72e-5602-4e44-9d82-a13d05b03e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc1c60b-c8e8-4752-b299-5515baa623b6",
        "cursor": {
          "ref": "c7facbbb-ad06-42bd-a179-ffd1b282c5cb",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "92a27e8e-b64d-4e76-a62e-929e5c0d86e3"
        },
        "item": {
          "id": "ddc1c60b-c8e8-4752-b299-5515baa623b6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cdca97b8-3ed0-46d5-8c30-946ef9d4ba70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a97a9df-1074-4172-b9f3-cb8c2ee94385",
        "cursor": {
          "ref": "d2c18d31-071a-4413-acdf-974fd20ddca2",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a78908f5-db44-41b8-839f-64227d6ee345"
        },
        "item": {
          "id": "5a97a9df-1074-4172-b9f3-cb8c2ee94385",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "01c4425f-7eb7-4264-8b43-bb2d10057f1d",
          "status": "Created",
          "code": 201,
          "responseTime": 4708,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "2b058b41-958c-47b3-8afd-d315b76bf90c",
        "cursor": {
          "ref": "bd91e85b-15d4-4a40-81da-206d3f0feea0",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "74e162f9-59b2-4572-88b6-6def7187acfa"
        },
        "item": {
          "id": "2b058b41-958c-47b3-8afd-d315b76bf90c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6eb9ef8b-1fe5-4cdd-9413-d5b64c84e53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7764d69e-69ec-438c-aa64-203f50269b85",
        "cursor": {
          "ref": "71f4c265-af64-4899-a490-f79d5bec9fc8",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b71e9e5e-4a8e-456f-86ff-73f0ebdd589a"
        },
        "item": {
          "id": "7764d69e-69ec-438c-aa64-203f50269b85",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "982f936d-ccac-4a6e-af7c-7aec3909611f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83eb3095-b198-41c0-8aa1-9671ae1226e5",
        "cursor": {
          "ref": "ec19e2ab-ed8b-4591-8b53-e2740de2dbe5",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5f15bb69-c335-43d7-85c0-314b38a01c35"
        },
        "item": {
          "id": "83eb3095-b198-41c0-8aa1-9671ae1226e5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2e16bc2f-8d10-45ba-82c6-6e68c65413e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1638e168-d6da-4904-8245-b42bef6b2e3e",
        "cursor": {
          "ref": "f300cd22-ce73-4fe3-a05e-39d37678b7ab",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ecf2258e-5fe2-4512-8cc6-4382d1f16ef3"
        },
        "item": {
          "id": "1638e168-d6da-4904-8245-b42bef6b2e3e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ccad9fac-eea2-46b7-99e3-48f197a43e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88830f7a-dfcb-4f3a-8cc4-3ab38fa87430",
        "cursor": {
          "ref": "f6785718-0f5a-4787-a5d8-3963f41b7825",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4fd1b18d-3b6e-4bc8-9882-04a4af9dd69c"
        },
        "item": {
          "id": "88830f7a-dfcb-4f3a-8cc4-3ab38fa87430",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a2e08481-bf04-47c0-82ea-97b1f65019a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0cfeb1-fb9c-4121-98f4-e45bf971f61b",
        "cursor": {
          "ref": "0feaf0c9-9542-4d68-92bf-b2d347f504b0",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ce73a6e6-d368-4d3e-8da4-0d0f2bf0c2d4"
        },
        "item": {
          "id": "eb0cfeb1-fb9c-4121-98f4-e45bf971f61b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7e105274-0170-42ee-b1e1-c10cdc2f1988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd486d11-cf81-4956-b3de-f37abbf4001f",
        "cursor": {
          "ref": "c6487f8d-9708-4161-9f03-13b9e5401142",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f6c37a37-2e61-4f58-850e-178339cd5489"
        },
        "item": {
          "id": "dd486d11-cf81-4956-b3de-f37abbf4001f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "69b46742-2a78-4420-a76f-ff7405088a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276e13fe-bcd5-4e99-a7df-bed2f27ea984",
        "cursor": {
          "ref": "c3686dbe-4b59-4d81-b227-48fb21445b8c",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fb00fd90-2732-4871-a487-f50b48c59ede"
        },
        "item": {
          "id": "276e13fe-bcd5-4e99-a7df-bed2f27ea984",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "180df7c4-79f5-4b29-93d7-8cda6bafeddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60884c98-5bbf-429e-bffb-b3aaa806af2f",
        "cursor": {
          "ref": "9b11fd02-d50d-4c28-90e5-efc6ec6529ad",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "106585f6-5e72-4676-8209-f580c32554d0"
        },
        "item": {
          "id": "60884c98-5bbf-429e-bffb-b3aaa806af2f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2bb56ee8-419c-4bcd-99af-dab0c5f69da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12b5c28-0508-4d55-867e-4504cb626748",
        "cursor": {
          "ref": "23e9a19c-f600-424f-8bca-034a4f6ec63f",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "97c6f4bf-3cbd-4682-b831-d5b113ab7460"
        },
        "item": {
          "id": "f12b5c28-0508-4d55-867e-4504cb626748",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bf4a1d6e-1525-47fe-a51c-1ac013f5a049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af77f14f-6e3f-4465-9a8e-6ea0b0e8347a",
        "cursor": {
          "ref": "7d91a4d8-f247-499c-b9ac-eb5e282a8e6f",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "502284d1-2d33-47b2-89b9-54eecf39dc0f"
        },
        "item": {
          "id": "af77f14f-6e3f-4465-9a8e-6ea0b0e8347a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "53946d49-6f49-4c57-ba8b-12fd1d4d7d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c484fa47-e28e-42a1-9d93-a82d253c7922",
        "cursor": {
          "ref": "d7e91662-e57b-4b13-bbf6-389f66ec8b88",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2ffa0032-39a2-4839-9bb3-a860459f5426"
        },
        "item": {
          "id": "c484fa47-e28e-42a1-9d93-a82d253c7922",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "041d66db-feba-4769-b670-b47d60891acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a84627-90e1-49dd-a265-c91193f7d290",
        "cursor": {
          "ref": "83092ad0-171d-4bdd-a11e-47e729a243c8",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "26f83b69-2421-4bf8-8889-d0aa4ac7954a"
        },
        "item": {
          "id": "11a84627-90e1-49dd-a265-c91193f7d290",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9e5848b2-0de1-4a60-8b1e-53d3942d80b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08964444-1358-41f2-9536-48c83920619c",
        "cursor": {
          "ref": "6a3be458-e044-4b9a-a483-21bb9d641002",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "32d899ef-45b4-479f-a2f9-557910f3f3a6"
        },
        "item": {
          "id": "08964444-1358-41f2-9536-48c83920619c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4f28cb50-0ff7-4088-9f78-813ee6afd3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53771bb-3f8e-45a3-811d-c733ab4f043c",
        "cursor": {
          "ref": "945017b9-8e16-4231-a0c7-bc71214cf698",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "76aef7de-e596-4e86-9a1b-87af3b97740a"
        },
        "item": {
          "id": "d53771bb-3f8e-45a3-811d-c733ab4f043c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8611550d-6b57-4c4b-81c1-2c84a704e1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc9118b-dc4a-45a2-8a4a-43b33cecbf36",
        "cursor": {
          "ref": "288b1bda-9983-42f2-b68d-429c546526f2",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4613549a-cbfd-454f-97f5-348280b81115"
        },
        "item": {
          "id": "6cc9118b-dc4a-45a2-8a4a-43b33cecbf36",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "34e4d344-fb26-4711-a991-efbc128b1bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac794380-98a0-44b9-9e8e-570508d1f42c",
        "cursor": {
          "ref": "f340936a-bb35-4068-a7f1-f13364848db2",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a8a3fbc1-388f-437c-aa21-fb1c8a48adc0"
        },
        "item": {
          "id": "ac794380-98a0-44b9-9e8e-570508d1f42c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f3fffbe6-a67f-4dae-8b29-5f2c2409fd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dce2442-da59-40f1-8576-b7fc32b52ccd",
        "cursor": {
          "ref": "b327aad1-14ca-422e-a9d9-60b4f8d72a4b",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fdb8c848-35b0-4099-a904-85812ef2aafd"
        },
        "item": {
          "id": "7dce2442-da59-40f1-8576-b7fc32b52ccd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "40051373-01ac-40d3-ba63-b597b8aa55cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d351950d-9f74-4b72-b1f1-e413c74b2009",
        "cursor": {
          "ref": "aea27d17-e158-4340-9b2d-127a2a230827",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a5d1e0b4-5074-4a04-a9d1-f9ac5ae81e3e"
        },
        "item": {
          "id": "d351950d-9f74-4b72-b1f1-e413c74b2009",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8ca3806f-a92f-4322-b238-d621ff5d08cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb90541-dab0-4bd5-8c4c-464dd21ec87a",
        "cursor": {
          "ref": "512c48dc-5759-4522-bf5d-7a44ba5ce3e2",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "28ba89d9-2273-41e5-8402-59e1e434468d"
        },
        "item": {
          "id": "9eb90541-dab0-4bd5-8c4c-464dd21ec87a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7de942b2-bf77-49cb-806e-088012870926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1d8bca-bcfe-4daa-80b0-c12d10bd8f73",
        "cursor": {
          "ref": "45c01a8b-e914-4db6-bf51-d3068039d128",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "415491de-4ff4-40eb-be68-629dc406797e"
        },
        "item": {
          "id": "3b1d8bca-bcfe-4daa-80b0-c12d10bd8f73",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7898e1ff-4e2c-42d1-bbdd-8b1cf5945ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b061d0d8-6c83-458b-9e57-c363585f4a5f",
        "cursor": {
          "ref": "b03a8697-2051-4047-8ca5-4872f93ea0d7",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c9b23439-8e54-4165-809e-10f8d5de5fc3"
        },
        "item": {
          "id": "b061d0d8-6c83-458b-9e57-c363585f4a5f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f2de260c-6b62-4933-813a-679127e360fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2551c7e9-fc3d-4641-b3c5-a3ce60a36775",
        "cursor": {
          "ref": "f49d9f3d-28cb-4b11-9d0f-a53501474600",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4e8850fe-33f4-4d80-945f-6975c7ee1081"
        },
        "item": {
          "id": "2551c7e9-fc3d-4641-b3c5-a3ce60a36775",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "792e13a4-06e9-4999-999d-489657d298d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e380571-9718-4087-b463-c6d0d105f12f",
        "cursor": {
          "ref": "e422e6b6-c55e-4d73-9b93-0e5c79315964",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "027a3190-7253-4a13-a5d2-f2ab1ab6cc43"
        },
        "item": {
          "id": "0e380571-9718-4087-b463-c6d0d105f12f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "eee5d852-000a-41c3-bae8-30b17e086b15",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 644,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25286bf3-420f-49cd-915f-abd8bd52b8f0",
        "cursor": {
          "ref": "e4743509-aea2-4cf2-ad47-07f5da5a1335",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6b5cfa01-4a67-4652-836e-afcb226dcfd2"
        },
        "item": {
          "id": "25286bf3-420f-49cd-915f-abd8bd52b8f0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0b302ab5-1588-40ef-bfbb-e30bd77ddaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820d3e0b-0257-4988-a2e7-e2c581183359",
        "cursor": {
          "ref": "1d912173-1084-483b-9cff-73a337287089",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "745bb200-d82d-4ebd-a2f0-c818eba0dd2e"
        },
        "item": {
          "id": "820d3e0b-0257-4988-a2e7-e2c581183359",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cd39c4eb-7d2a-4444-92f8-722b29becc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d085b5-ebea-4fc1-b697-27a25330e0bf",
        "cursor": {
          "ref": "48770ea1-dcfd-4ee2-9ee3-08d00ba23bb9",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5a9e79b1-8dbd-4e96-bb71-0816d72a0353"
        },
        "item": {
          "id": "e8d085b5-ebea-4fc1-b697-27a25330e0bf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "24a62545-9e18-4d44-9984-8d9feeaf8629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35408e3-8dbc-41d9-b8ae-e5f175851245",
        "cursor": {
          "ref": "13adde29-cb15-4f2d-b3b7-2dbfc7481f48",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b54df0fb-02fb-4458-909f-92e140dbf49e"
        },
        "item": {
          "id": "f35408e3-8dbc-41d9-b8ae-e5f175851245",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b3467ba5-7aca-4d00-be15-dae0b37ae731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0af8ef3-4568-40c1-903f-37dd0866a3cf",
        "cursor": {
          "ref": "753c2dbf-6e1a-4f36-91c8-d12e3fbf8fc0",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c757f1e8-5122-4847-b961-0a597832cbfd"
        },
        "item": {
          "id": "e0af8ef3-4568-40c1-903f-37dd0866a3cf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "db04def5-4586-40ca-b632-6dc9bd640260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b503f003-ecaa-4a30-807c-2ab1116d6b03",
        "cursor": {
          "ref": "5c5719ba-e1a2-4182-88f8-83d18fb9c122",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6aaa8ca0-8b19-4866-bcfa-9d262ce5828f"
        },
        "item": {
          "id": "b503f003-ecaa-4a30-807c-2ab1116d6b03",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "66f794fd-43ef-42f2-b5e4-ec0ee6903663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa4e0d6-0d65-4bad-97cf-19f81453e585",
        "cursor": {
          "ref": "b3c72c52-7498-48dd-bff6-282e4c5ee39c",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a333310a-8a87-4758-a52f-dd50bc80db85"
        },
        "item": {
          "id": "7aa4e0d6-0d65-4bad-97cf-19f81453e585",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b4e38ce1-861a-4748-8503-2f7a32ee4940",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 660,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b0db37-43d1-4c6e-bf2d-3e8ec0e8ec69",
        "cursor": {
          "ref": "671622f2-bb01-4f03-bb41-9acd0c697bf1",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f5d77774-bcc3-4ed0-8d27-723b0955bb8d"
        },
        "item": {
          "id": "b2b0db37-43d1-4c6e-bf2d-3e8ec0e8ec69",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "96e3ff31-190c-4e25-86a7-9bc02468e454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fcde8f-1ddc-4c4f-b61d-0c0bc34618b9",
        "cursor": {
          "ref": "725dfa53-7c34-4ad8-82f2-f8f822c2f9b9",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0d8a64f6-d45e-4577-97b7-20c74bd59c5a"
        },
        "item": {
          "id": "80fcde8f-1ddc-4c4f-b61d-0c0bc34618b9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "020c7e97-6522-4e17-9323-7d7eb0ab2e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2f7d4f-74e0-4da5-ad41-98d139456cc2",
        "cursor": {
          "ref": "0a617994-a2ea-4ce6-8855-d08247d3f717",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8958bb2d-351e-4faa-a859-e798264d7077"
        },
        "item": {
          "id": "2b2f7d4f-74e0-4da5-ad41-98d139456cc2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9a8f84b1-740e-417e-b925-7fe620ff2afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac4be1a-e543-4739-a9f1-539b23557042",
        "cursor": {
          "ref": "660e1fa8-b08f-427b-8862-69bece1f6153",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8a738eb8-c998-431e-8b89-1f58db777ceb"
        },
        "item": {
          "id": "3ac4be1a-e543-4739-a9f1-539b23557042",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c09df644-966f-462e-9bdc-79c7efd3526c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89010c13-ada7-4c0f-a8fb-6f400c2fdc50",
        "cursor": {
          "ref": "59d6f111-b765-49a2-bcdb-f4196dbe1022",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e0e170fd-5de1-462f-9ce2-40f34af0b3fe"
        },
        "item": {
          "id": "89010c13-ada7-4c0f-a8fb-6f400c2fdc50",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2a6d4c1e-82ec-45b2-984d-419d59cabcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30b11f7-c6eb-471e-867e-f3a5320f0ffb",
        "cursor": {
          "ref": "1f8ffde4-c8c1-41e5-afcd-4969947561a7",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c66368ac-bd40-4a38-8096-384c245b3ea7"
        },
        "item": {
          "id": "b30b11f7-c6eb-471e-867e-f3a5320f0ffb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eac6c77a-1f4e-4d93-b595-bd8db4a645c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e4eb58-80f9-45fc-b55d-faef023386f5",
        "cursor": {
          "ref": "d72d3c7f-7a2d-486e-9fe9-f8f76358b14f",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fd56f3b9-28b1-4542-9820-027f0bcb1c18"
        },
        "item": {
          "id": "b2e4eb58-80f9-45fc-b55d-faef023386f5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e7f9862b-f12a-4386-94d1-b8a7f6d84fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65125065-165f-4586-bc3e-5be4bb915be3",
        "cursor": {
          "ref": "f55dfa3c-57fb-4009-af55-f090946450c6",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d2b1d5f8-6f9c-4b64-9ee2-d630ee201894"
        },
        "item": {
          "id": "65125065-165f-4586-bc3e-5be4bb915be3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c1e1b70c-779b-46ab-bd99-6ea8385443f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a67f83-b171-4a5a-9d13-2cf340b535b8",
        "cursor": {
          "ref": "ce2557ad-a66f-4b44-9f56-b714c1ed57ec",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "60c786f7-56fd-47fe-8953-cee676539481"
        },
        "item": {
          "id": "d7a67f83-b171-4a5a-9d13-2cf340b535b8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "70cbec2b-8727-45aa-91e5-5336ec1f2b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1013a760-7748-4522-9f58-81bc317ed117",
        "cursor": {
          "ref": "0d288d92-a409-410a-84c8-db05c9aa1243",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "676dc578-ee80-4d19-8dae-5a9148b5402f"
        },
        "item": {
          "id": "1013a760-7748-4522-9f58-81bc317ed117",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "363ae5c2-9943-4766-a049-eb260a57d85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cbaefd-616d-488c-ba6e-f42a834a4457",
        "cursor": {
          "ref": "8dc2f518-1a9c-497f-b24a-f4f43993235e",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9d4d6336-6f18-47e0-8fb2-a319064a32e2"
        },
        "item": {
          "id": "92cbaefd-616d-488c-ba6e-f42a834a4457",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dff06bfc-e054-4db6-addc-fef574f01926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd499d58-eec1-4f16-a0e8-66bec9f43006",
        "cursor": {
          "ref": "0afc2aff-6b08-44d5-a5db-6f58361a33b2",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c56075eb-0321-4d49-aad5-08ee579beee0"
        },
        "item": {
          "id": "cd499d58-eec1-4f16-a0e8-66bec9f43006",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8d0d8174-43ec-446b-8d28-dcc5388bad51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb846a46-e8ec-49dd-901a-0c8bda9cfad9",
        "cursor": {
          "ref": "2e35630d-1366-4d8a-a7ce-4b796d3304f9",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5b0a2add-a7f8-4b0c-8c55-dce8743ba50d"
        },
        "item": {
          "id": "fb846a46-e8ec-49dd-901a-0c8bda9cfad9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0e8cbc57-025b-418e-a048-87080babfc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc004b8f-269d-4d0d-8397-0530dd515de5",
        "cursor": {
          "ref": "312ab9f9-50fb-4b93-859d-ae26840d5a59",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9b01423b-e34e-45fc-be75-0550f6f1c3f8"
        },
        "item": {
          "id": "dc004b8f-269d-4d0d-8397-0530dd515de5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "59948504-7d84-48b7-8509-6f663771bcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004b8b1a-db6c-4519-b5e4-78a7813ccb44",
        "cursor": {
          "ref": "6bc5aa19-3884-433a-88e7-753f1e86c944",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "74fa2bc3-7972-4fc9-822c-2ecf8d973210"
        },
        "item": {
          "id": "004b8b1a-db6c-4519-b5e4-78a7813ccb44",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bf5b28ec-1ad0-43c5-8b98-d82038077df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec2d480-8490-45fd-8589-090383c9c5aa",
        "cursor": {
          "ref": "62690a23-a6be-4ee6-8134-0c309e23df7d",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d99b6199-d8c7-4022-bbae-e5a4b7726f5a"
        },
        "item": {
          "id": "3ec2d480-8490-45fd-8589-090383c9c5aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d4711a7a-48a4-4ad4-9cb8-fbb8ad958319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fec77b-85a1-40cc-8efd-916e318fa579",
        "cursor": {
          "ref": "5da25a98-a31d-438f-afbe-a0f11272b7a5",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "96fe7b46-4814-4c90-83ca-7f6dfcaec9c2"
        },
        "item": {
          "id": "16fec77b-85a1-40cc-8efd-916e318fa579",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "000f7f0d-0f9b-4780-8bdc-d6956c497c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6139f3-9b77-4224-a106-50a0f952af2d",
        "cursor": {
          "ref": "4789fb49-0b83-40e7-8cc5-85c5a2f073e4",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "61b9732f-bbca-4f0c-a3d3-4b260b911319"
        },
        "item": {
          "id": "fc6139f3-9b77-4224-a106-50a0f952af2d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "13fd0402-cae5-42c8-a255-b93fd7e0d9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0d2d01-0f73-41a4-b97d-0fd883f56c34",
        "cursor": {
          "ref": "5365076c-8840-4c0f-850b-d13c40947bdd",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0f047737-1b7e-4858-aa3b-6110923a987a"
        },
        "item": {
          "id": "bf0d2d01-0f73-41a4-b97d-0fd883f56c34",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bd17b68d-f620-44fb-9896-f68ad4f10c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fb2d2f-0b65-41b0-a0d6-8bea78356853",
        "cursor": {
          "ref": "f3ccd084-eb10-4cdc-8dab-5d11cd4788d2",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "da500ddf-56bf-4f59-abc2-ed8dff901a87"
        },
        "item": {
          "id": "64fb2d2f-0b65-41b0-a0d6-8bea78356853",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dcfe8d03-9e0f-4ca1-99b0-758295229a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d206e55-5fdc-46eb-8723-f1b3cabaf2aa",
        "cursor": {
          "ref": "6afd9e01-d37b-43f3-b90e-a6d403417b87",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a913dbbb-3353-47d8-9d52-31e798c68179"
        },
        "item": {
          "id": "3d206e55-5fdc-46eb-8723-f1b3cabaf2aa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7b49f2b2-3f91-46ac-9fde-618117d181e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8b6aeb-078b-4527-876a-42feed4b6d0e",
        "cursor": {
          "ref": "188c7fbc-20c2-4ecd-a11a-8d2216b2b674",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fae10178-85b6-408a-b0bf-aba2274bac9a"
        },
        "item": {
          "id": "9d8b6aeb-078b-4527-876a-42feed4b6d0e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "07873dad-aa5f-4f22-9e24-9da7d1a19cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebab2a0-b195-4bdd-84d6-43c227bb29b6",
        "cursor": {
          "ref": "b12cb579-80ad-4f94-8770-dd5193935c0b",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cd7cf85a-045a-474d-b770-562db4033dc3"
        },
        "item": {
          "id": "4ebab2a0-b195-4bdd-84d6-43c227bb29b6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "33c3d94b-c1a0-4f37-bf90-73418a495f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7ed8a4-88df-4a2d-80b5-b19865935b84",
        "cursor": {
          "ref": "a2dc54f5-e45e-43ad-abb1-907f33ba598a",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "08582d5e-9682-4532-a1f3-5609d99f8067"
        },
        "item": {
          "id": "cd7ed8a4-88df-4a2d-80b5-b19865935b84",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "60b26e9a-ba3c-4f17-b67b-8011252427a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8780ae60-8409-49a7-9a8b-333dae0cda42",
        "cursor": {
          "ref": "fa1c167d-b0b4-4001-8abb-1661a2795f06",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8e510a71-c3ef-46e9-b41f-94af8203c6fa"
        },
        "item": {
          "id": "8780ae60-8409-49a7-9a8b-333dae0cda42",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c5a0f247-44e3-412a-b6a8-92d7a6211223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d92dc28-bd78-43ba-9cdc-4f042987db78",
        "cursor": {
          "ref": "df6742b3-d6c5-40ba-849d-d37d64142e5b",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5d11aacb-a33c-4698-afd2-c6b491ddf20e"
        },
        "item": {
          "id": "7d92dc28-bd78-43ba-9cdc-4f042987db78",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7fda7d96-7528-4a70-bb13-d91b335ca7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1018,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34219bd3-850d-48d4-981f-8d418d0dc5e0",
        "cursor": {
          "ref": "f9855ab3-424e-4427-a1dd-2758ed9678bb",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8c4ff101-36cd-4855-9b8a-50bf5593b6c8"
        },
        "item": {
          "id": "34219bd3-850d-48d4-981f-8d418d0dc5e0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c5170d99-0ce9-4468-ae0d-0723ca1102a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b132d24-cfeb-4782-96b1-941c772e8c58",
        "cursor": {
          "ref": "245dd444-bf99-4ea2-8ff8-0f1bcfcf6251",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "91e649a8-e343-4cc3-9751-e8daef595d83"
        },
        "item": {
          "id": "9b132d24-cfeb-4782-96b1-941c772e8c58",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ba5b6ea3-c059-472b-baf0-f4d8a523ae66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2a0cfb-234a-4eac-a764-76902bb61315",
        "cursor": {
          "ref": "2f22523e-254b-43e1-9d22-274f8658e859",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "35c9cc8e-a279-47a6-a353-fbeb98c22db8"
        },
        "item": {
          "id": "ee2a0cfb-234a-4eac-a764-76902bb61315",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d2e71ef3-db63-476e-bc05-ee02aeb2e614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2afd01-29bf-447c-a6e7-93fc3382d53f",
        "cursor": {
          "ref": "2bbd3cea-b502-4c8c-a88f-d1eb55ee579d",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3b713518-b46b-4d6f-8d62-714e361be892"
        },
        "item": {
          "id": "fe2afd01-29bf-447c-a6e7-93fc3382d53f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "006e6d7c-12de-4a3b-a14f-7fb9551c7509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc507e1-20d2-47b4-8aaf-db1456aa2acd",
        "cursor": {
          "ref": "ea44fa0d-2e39-4a04-8d52-d45ed1448d89",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9b57febb-694d-4f8b-b8ce-2b1f0333295e"
        },
        "item": {
          "id": "3fc507e1-20d2-47b4-8aaf-db1456aa2acd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e408b23d-5172-41df-ac7c-b303df2d6cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e38ff2c-1ef9-40e2-b8ef-1054bc868c43",
        "cursor": {
          "ref": "1ec9cf62-2b60-4d61-b9d5-63a96892f790",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "39a5c4de-485e-4cf1-aed4-8c1647aff147"
        },
        "item": {
          "id": "7e38ff2c-1ef9-40e2-b8ef-1054bc868c43",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e005c65b-6839-4ed3-93b5-80b9121ab7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220978e7-cfbc-46b0-9eef-d2919a6089dc",
        "cursor": {
          "ref": "b7f66d05-9a47-4d74-8835-e9b267845372",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2ab571be-3fa2-477c-a521-dd60fa855d1b"
        },
        "item": {
          "id": "220978e7-cfbc-46b0-9eef-d2919a6089dc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f2e1232f-f54f-4a50-b0a1-69e1028335db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c694ec-6686-4323-b3cf-78b256816fb3",
        "cursor": {
          "ref": "9f369fae-2129-4adf-b3b7-4d4d02e506f4",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cc1ab542-5d4e-43ca-ac53-237f10eac340"
        },
        "item": {
          "id": "35c694ec-6686-4323-b3cf-78b256816fb3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ad8b493d-534a-4e18-ba02-30fc8d76862d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6217fa-20b4-4ea6-90e8-9e5be17a6610",
        "cursor": {
          "ref": "1aa8e798-f204-4463-8b8e-8338d628d1ee",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1cf1d2ee-6ad8-4e6a-9ad8-de9fa88b8684"
        },
        "item": {
          "id": "6a6217fa-20b4-4ea6-90e8-9e5be17a6610",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cd4df016-24d1-4723-a24b-6a95eebbb08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fa85be-6870-4fc0-85ff-46ddd3d9364f",
        "cursor": {
          "ref": "9a2df1ac-17f4-4ebc-b983-e175e7d94153",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "630b4430-1b97-4988-b5e8-843381ff9cc4"
        },
        "item": {
          "id": "98fa85be-6870-4fc0-85ff-46ddd3d9364f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f686de62-9c02-498f-b74e-c7c5a6d2571b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67638327-ec22-454f-9d73-197ed79d677e",
        "cursor": {
          "ref": "0e576f79-3d8b-4d0f-a842-019c9b4c6b56",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "54f4e2b9-bfd9-41f1-a03d-2ee971595cbc"
        },
        "item": {
          "id": "67638327-ec22-454f-9d73-197ed79d677e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a3612d1e-ce54-45cc-ad8f-0b43bece6cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfd6df0-a17d-4da3-b392-8bc1594592dd",
        "cursor": {
          "ref": "4e1c52fa-208e-445d-a2e9-292832e01a3f",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c576c4ed-b58b-4971-8b5b-5675352efb72"
        },
        "item": {
          "id": "3bfd6df0-a17d-4da3-b392-8bc1594592dd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f711e79d-a9fa-4059-82a5-b1f0bbb3bebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71aa46ee-acc7-4c70-9e93-aa2e1f48798f",
        "cursor": {
          "ref": "b65f58ab-aaa6-4276-8b07-b1a6dd489abf",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d21d37db-157c-4b24-b0f5-11120ebe7af4"
        },
        "item": {
          "id": "71aa46ee-acc7-4c70-9e93-aa2e1f48798f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cb9bcb4a-ab29-40a5-b071-ad3528231dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa5f769-ff46-4944-8ba0-8d3f41e2533d",
        "cursor": {
          "ref": "238efc7a-2aa0-4c90-b9d4-c52e34438565",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0744a7c8-a354-433f-8e20-5302812cad31"
        },
        "item": {
          "id": "4aa5f769-ff46-4944-8ba0-8d3f41e2533d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ff8ee3cd-bab1-4bac-8a3a-7796502a5517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27382089-3747-4b5d-9013-700e60eb626c",
        "cursor": {
          "ref": "a0b96cee-28ff-44dd-b66d-04fe68283eb3",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5c7dad51-bded-4ae8-8a0e-69944c7fb5d4"
        },
        "item": {
          "id": "27382089-3747-4b5d-9013-700e60eb626c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "372dbca6-da36-463a-8678-54f970f664d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1da04b-6e18-41f1-a7cc-1d34828241e5",
        "cursor": {
          "ref": "f8d6f1d8-02c5-4994-a36b-c30544c73271",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1ea42eab-3ad6-40cb-b84c-84cfe56ce45f"
        },
        "item": {
          "id": "2c1da04b-6e18-41f1-a7cc-1d34828241e5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9a97cf10-e0f9-4224-a34e-8d8cf1295758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd68cb44-9537-470d-a187-a839ae058fe6",
        "cursor": {
          "ref": "a5aded40-dd90-41e7-b071-0426df0d7be8",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "aff997c6-0fe3-4ede-9062-3e5e10c9c05b"
        },
        "item": {
          "id": "bd68cb44-9537-470d-a187-a839ae058fe6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ec680a60-58df-430f-9a02-26251cfc9c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5850d0cb-9a39-4ccf-9fd9-0025f5590dec",
        "cursor": {
          "ref": "c65c3941-e6ef-4a7a-b5c2-11776a9398d8",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ddc76097-54b8-4735-b3f6-ab87febca006"
        },
        "item": {
          "id": "5850d0cb-9a39-4ccf-9fd9-0025f5590dec",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1614b71d-60bf-4ad7-aa7a-8597547016d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd8a742-e39a-4b18-9b4b-12a867d69343",
        "cursor": {
          "ref": "53492224-439b-4fd8-bd4d-b74df551edb4",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "867d1c15-36ea-4ab2-9ebc-38ea19b7d9fc"
        },
        "item": {
          "id": "5dd8a742-e39a-4b18-9b4b-12a867d69343",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c3a97d54-3151-4a4c-b6d6-e0f25b019691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ab06f6-5f6f-4476-8b6b-8fda2249878a",
        "cursor": {
          "ref": "26e19ee1-017a-428c-b51d-8b2ccef96509",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5c5e38d8-240a-4a38-b400-6ff4ee726977"
        },
        "item": {
          "id": "b8ab06f6-5f6f-4476-8b6b-8fda2249878a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a5317128-1d76-42a7-ac20-2d08fdded87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce001e0-ad66-41a4-8771-0c01f9c0483c",
        "cursor": {
          "ref": "a8c9ff91-cc50-4e85-b07a-33d0c407ec73",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5241981d-1ae3-4fc0-86ab-9c6193850545"
        },
        "item": {
          "id": "0ce001e0-ad66-41a4-8771-0c01f9c0483c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "03b39b74-c33c-4430-8cc2-35899c6a7f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44a7bae-6bcf-48a8-87ca-78bc550e49d2",
        "cursor": {
          "ref": "adf66670-60ad-472f-9827-c93d22af3ef0",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "91df6c74-deb9-44d4-8726-ef197830ef60"
        },
        "item": {
          "id": "d44a7bae-6bcf-48a8-87ca-78bc550e49d2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "54f7ff5c-2aa5-40f4-a2f1-53cccfefbe48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6bebdd-beb1-467e-928d-9b52e647505d",
        "cursor": {
          "ref": "8862ff4d-6da7-4705-9757-890aa02cb9bc",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f11ad9f8-4b8f-4a83-93cb-04d1c4539eb2"
        },
        "item": {
          "id": "4b6bebdd-beb1-467e-928d-9b52e647505d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "87df5442-b471-40ad-a8b3-3b98088e5748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b483b1-16ad-4a23-bf0a-7f2706aeb82a",
        "cursor": {
          "ref": "6c32eb0f-ac47-4ae6-96c7-15bd844132b4",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "218d5f1b-3a28-4535-9c90-12174d4c9b8a"
        },
        "item": {
          "id": "11b483b1-16ad-4a23-bf0a-7f2706aeb82a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4211fdba-47fd-4e8a-ae37-004094aa9a7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba306ca-2178-478a-914b-270dc58ada42",
        "cursor": {
          "ref": "ba00fb05-5507-41e6-b217-e4df40730eda",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9fb191d4-85ed-4919-8dec-9114de3d436e"
        },
        "item": {
          "id": "6ba306ca-2178-478a-914b-270dc58ada42",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "4c520a6b-7f96-4100-991a-3717e1385ecf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 560,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ec5941-309f-4492-ad45-fceb25dd8c6f",
        "cursor": {
          "ref": "26333b19-e359-4139-b32b-9b1f8df06340",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "30a0e5fd-b93d-42f1-af66-5e1835065ad9"
        },
        "item": {
          "id": "b4ec5941-309f-4492-ad45-fceb25dd8c6f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "448182f5-3b58-4f6c-a77d-e607f0bf0924",
          "status": "Created",
          "code": 201,
          "responseTime": 5158,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "db1aab28-aaac-47e0-be09-5b41d945201d",
        "cursor": {
          "ref": "db8507ff-344b-4d70-b268-3565895ea009",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "47376640-b62b-429d-bef1-9be0d05e5015"
        },
        "item": {
          "id": "db1aab28-aaac-47e0-be09-5b41d945201d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e857af30-8126-4e6b-8a91-9badea7cbf87",
          "status": "Created",
          "code": 201,
          "responseTime": 5463,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "63ce9783-95dc-4fd0-9310-d814260595e2",
        "cursor": {
          "ref": "1f2939cc-cbf2-4f6d-a751-307849148887",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a2b2960f-6315-46d5-9c0a-b2b44b6650bb"
        },
        "item": {
          "id": "63ce9783-95dc-4fd0-9310-d814260595e2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7b613f4c-2ba5-48b3-aa35-2cad73f82382",
          "status": "Created",
          "code": 201,
          "responseTime": 5331,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "146ea25e-ebe8-4558-a947-78f48fe44738",
        "cursor": {
          "ref": "cef77dc6-aa13-4d34-9dd8-6d729c4cd12d",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "76b9b743-104c-46ac-8000-6b59f1f623bc"
        },
        "item": {
          "id": "146ea25e-ebe8-4558-a947-78f48fe44738",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ee518cbc-961e-445d-ace3-a23ea09cf2ad",
          "status": "Created",
          "code": 201,
          "responseTime": 5479,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "a53010b0-4ba7-4777-81c8-c18f51c87edf",
        "cursor": {
          "ref": "d5f054a5-66a7-40e2-b3e4-f295e9987d41",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2ae978a4-5c9b-40de-8eb5-8ad2935da226"
        },
        "item": {
          "id": "a53010b0-4ba7-4777-81c8-c18f51c87edf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7d860b9c-a3c0-4774-a1ae-17bbd74e1192",
          "status": "Created",
          "code": 201,
          "responseTime": 6166,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "8e6b3044-a649-4137-a2e4-691bd0601813",
        "cursor": {
          "ref": "97d71376-2423-40bc-b37f-ef3513b4a180",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0caf824f-b6c3-4acf-ae71-d132626bc701"
        },
        "item": {
          "id": "8e6b3044-a649-4137-a2e4-691bd0601813",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e99c515f-2e36-4c65-92c0-014652dc10d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6b3044-a649-4137-a2e4-691bd0601813",
        "cursor": {
          "ref": "97d71376-2423-40bc-b37f-ef3513b4a180",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0caf824f-b6c3-4acf-ae71-d132626bc701"
        },
        "item": {
          "id": "8e6b3044-a649-4137-a2e4-691bd0601813",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e99c515f-2e36-4c65-92c0-014652dc10d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24af157c-ce7e-40c6-8ca8-22522483cfa6",
        "cursor": {
          "ref": "4ed2e28f-314a-4efe-89f3-38d993f8e048",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2181258c-ed0a-42f2-81e4-835261470f6f"
        },
        "item": {
          "id": "24af157c-ce7e-40c6-8ca8-22522483cfa6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8fea6b50-c277-4857-b125-d7de8d29d7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec60b6b-090e-42d9-bded-1cdc01404146",
        "cursor": {
          "ref": "0d2804a5-c72b-4da1-80d9-812a4326d062",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8013c1d7-9f9e-4918-b1ba-52f0bcf40972"
        },
        "item": {
          "id": "bec60b6b-090e-42d9-bded-1cdc01404146",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d5905dd3-2d5c-4ba7-b8df-0ab9c24cc74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706cc523-faf4-4cc8-8b54-7889661b10e0",
        "cursor": {
          "ref": "f8a52f4d-1375-4730-9793-d9756e6f2165",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1125195d-3c98-4754-a443-702aa0ed1aee"
        },
        "item": {
          "id": "706cc523-faf4-4cc8-8b54-7889661b10e0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4c555dca-96b5-4561-88c6-480e245e109a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd9dcea-c268-4dae-99b5-9a9662373313",
        "cursor": {
          "ref": "38d760cd-b30f-4532-81e6-04efd7d06575",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bf6b2187-4120-4ac0-b8fe-e959b7187f81"
        },
        "item": {
          "id": "afd9dcea-c268-4dae-99b5-9a9662373313",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "01416b3d-f569-42cb-b8e5-b7a4ffb23e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd02690-8e4f-42bf-9024-384152e8d496",
        "cursor": {
          "ref": "32cc4c16-15c4-47f6-b02c-7d84bcdd782c",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "968242e6-5241-4a31-9841-bae996682adb"
        },
        "item": {
          "id": "ddd02690-8e4f-42bf-9024-384152e8d496",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ba89056f-f1d4-4c36-a480-1f24c119f9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b439a505-629f-4d5d-9eea-5af4e2393051",
        "cursor": {
          "ref": "e2cb8442-2e4a-4b9c-9823-ed38560845db",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a83e8546-3eaf-4dde-a462-dab9d79d46c1"
        },
        "item": {
          "id": "b439a505-629f-4d5d-9eea-5af4e2393051",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e463642b-a241-4014-b596-fa33dd792453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1dc2c3-1346-4f5c-ae05-68bca25ebaa1",
        "cursor": {
          "ref": "4d678309-4dc0-442c-a8b4-720ca4e070ce",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d0c7e78f-2ffe-483d-9050-17a27f3b4319"
        },
        "item": {
          "id": "7d1dc2c3-1346-4f5c-ae05-68bca25ebaa1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f86a90f3-c078-463c-b472-ec9e18bc61ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e0d320-cc72-4dec-8d84-c0a7ed9a75f3",
        "cursor": {
          "ref": "a7d62e18-f375-4340-9c70-3657272df72d",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b4894bd4-2850-4f1a-9f4b-f3937b69a960"
        },
        "item": {
          "id": "97e0d320-cc72-4dec-8d84-c0a7ed9a75f3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "da5eaae7-3d65-4200-a564-0ebe9b37d543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe6abc5-6e62-4a0b-b9f3-d530f2c5e1b3",
        "cursor": {
          "ref": "d8b83aa6-65f8-49ee-adc4-7c9204bfa07f",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "20db2b7d-d6cc-4fba-8a72-0c1eff8b63d2"
        },
        "item": {
          "id": "4fe6abc5-6e62-4a0b-b9f3-d530f2c5e1b3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a5712832-d4f3-45b6-af24-bd44ecf857da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dde74c-02e2-4a85-bc3f-03b74f4f982e",
        "cursor": {
          "ref": "e06536cc-cc4c-4c71-9734-9d62185b1ab5",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "38951446-1679-4d14-be0f-cba095395adc"
        },
        "item": {
          "id": "28dde74c-02e2-4a85-bc3f-03b74f4f982e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "af8edb81-cf6d-4a3f-97bc-da2a3c436b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f7e17f-086f-487b-9d60-bd104aed8060",
        "cursor": {
          "ref": "cecfaab7-13c8-4d9f-b320-c4d30deb4bd3",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "96e0cbb2-2cce-4cd3-af3f-500006070b10"
        },
        "item": {
          "id": "64f7e17f-086f-487b-9d60-bd104aed8060",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ca2bf6e1-b5ff-4ad2-98a9-89d2ee8174f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1648847-c660-40e8-9444-d4a24baa673c",
        "cursor": {
          "ref": "df1352ca-c142-4c22-9586-2275cb498b2c",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6aa7eb03-bd78-45e8-b2c6-4c0348643372"
        },
        "item": {
          "id": "c1648847-c660-40e8-9444-d4a24baa673c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cb718f99-7316-414a-96fb-03f72781d799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2b2296-0f10-49dc-836b-4d57b18f7932",
        "cursor": {
          "ref": "82c06934-bcff-41c7-aec8-dc5d37877cb6",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "19c3e90f-5f8c-49cd-af45-a4235fe990b1"
        },
        "item": {
          "id": "db2b2296-0f10-49dc-836b-4d57b18f7932",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0516d176-c66d-4461-8494-55db93adbab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26aad2dd-5562-4573-b750-e1c4d0e977b9",
        "cursor": {
          "ref": "d1cda123-eaee-4b42-b975-7164fcc815bd",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "81dc6f3a-b1f3-42fc-8fb7-2cef8973e4dd"
        },
        "item": {
          "id": "26aad2dd-5562-4573-b750-e1c4d0e977b9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "27ba3593-f22c-40b0-a257-8a799efe6af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4656e18a-cb2a-40a0-bb52-b279b49d44dd",
        "cursor": {
          "ref": "07f979b8-5adb-4da0-bb97-3d5c66a4d680",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "30852ca0-6451-4e5a-80f3-6cd10a44f454"
        },
        "item": {
          "id": "4656e18a-cb2a-40a0-bb52-b279b49d44dd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "de270ca6-7dd2-4dd3-a763-36e0bb2a67dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3de74c-20ad-4c64-9da0-03df90902172",
        "cursor": {
          "ref": "75525ef5-8c4e-44ba-8c3a-c0a546c564de",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d5c28a4e-176f-4abe-bada-cc6ab8b6cb34"
        },
        "item": {
          "id": "3f3de74c-20ad-4c64-9da0-03df90902172",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7b42c02d-9a38-4dc3-a662-cdb239778bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37f5861-66c9-44be-933a-e46e00533162",
        "cursor": {
          "ref": "3a39d0e2-6069-499f-a00e-3402be145767",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5936d8d6-f85e-44c2-a26e-53838a676202"
        },
        "item": {
          "id": "a37f5861-66c9-44be-933a-e46e00533162",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6939f495-b90c-42e6-807a-bc452e1ec742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf000beb-5919-4a90-aad0-d4f05fd431e9",
        "cursor": {
          "ref": "99d6167f-5a4a-4e51-8c8d-2aec1f79a6b7",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6214da83-de45-4756-8bb7-72530ecdbc42"
        },
        "item": {
          "id": "bf000beb-5919-4a90-aad0-d4f05fd431e9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "43eb5d23-582c-4a77-b438-870bbf42f449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7579fcf8-8b5c-4bb8-8715-b11c0b3359ea",
        "cursor": {
          "ref": "f7e4cad8-bf76-4b99-a28f-96b6d552561d",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6d037dd3-46cb-45b2-83aa-49e815d7f63a"
        },
        "item": {
          "id": "7579fcf8-8b5c-4bb8-8715-b11c0b3359ea",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "48ec7071-c132-4896-8ce8-1b0ddaf40452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cef3bee-3f89-41a2-b061-fb3f2cb13ec9",
        "cursor": {
          "ref": "25ab1492-e3ca-4829-b8af-187ee8058c57",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d18f02e7-d438-4c73-8be3-559a81afd3a6"
        },
        "item": {
          "id": "4cef3bee-3f89-41a2-b061-fb3f2cb13ec9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2bae9f0f-d0ec-456b-a586-ab912bd16119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f51274f-025b-4eca-a258-33108081b3ff",
        "cursor": {
          "ref": "80e23ce8-34f3-4760-9299-cf93bc7324c5",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6c5d23ce-810e-4e25-866c-a1716b335ba9"
        },
        "item": {
          "id": "1f51274f-025b-4eca-a258-33108081b3ff",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "331678e3-a191-48ee-bcc4-cdb4a295e7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31254136-2d41-490f-b356-35a9dc0f9f47",
        "cursor": {
          "ref": "f054f6b1-fa26-42f1-9f92-d8709b879d05",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0a0d2bb0-2283-4f48-815d-c9af5f1cf76b"
        },
        "item": {
          "id": "31254136-2d41-490f-b356-35a9dc0f9f47",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "564566d6-f62e-4582-b761-e83874672868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05006b15-234a-4016-9e4d-30a9c614b2e6",
        "cursor": {
          "ref": "872149b6-c84b-45ae-82d6-bb6a8f0715b4",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2d9e963b-36a6-4725-8ced-f832feec81b2"
        },
        "item": {
          "id": "05006b15-234a-4016-9e4d-30a9c614b2e6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "827aa855-8c6f-48e0-9d1a-715e99b3a8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b6f530-ceac-4053-a13d-1b5616c4585a",
        "cursor": {
          "ref": "9edf6a37-78fc-491f-9ad1-8508119d84e4",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "63e3e2a4-6d21-49a0-97d2-5d27913b149d"
        },
        "item": {
          "id": "36b6f530-ceac-4053-a13d-1b5616c4585a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8beafec7-04ff-4b52-ae54-ec123af2f4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ed8f02-24b3-412e-806b-0f5925245276",
        "cursor": {
          "ref": "477ef25d-0c17-4542-b916-6dc8483a8618",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a387fb53-a7a8-48f1-8903-76834eaf00e2"
        },
        "item": {
          "id": "76ed8f02-24b3-412e-806b-0f5925245276",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2e232509-19b9-4d7f-b003-b4be9a7f3d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678cd22f-518c-4ca5-a1c2-133ce7ae9f99",
        "cursor": {
          "ref": "4312faf5-769e-42ca-b3b6-9de661fd792b",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d23ad47a-5dbe-474d-a9cb-99bc908446ff"
        },
        "item": {
          "id": "678cd22f-518c-4ca5-a1c2-133ce7ae9f99",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d607c038-13fd-43a8-9dfb-6cf6bf6b95df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6dbe7e-22cb-4347-97dc-d420c1bbb9c3",
        "cursor": {
          "ref": "d11d8372-c159-4c18-98b2-a48b179bd02c",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "be6580ce-1f4f-49a9-9989-1ee617ac49bb"
        },
        "item": {
          "id": "ae6dbe7e-22cb-4347-97dc-d420c1bbb9c3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "928004d1-262e-46c3-8f77-55a6cf44e8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a746f9-60eb-4376-99ee-df7dee861db1",
        "cursor": {
          "ref": "01c04268-339f-481c-b3f8-52de7364bcdb",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "369b4df9-436d-4764-893b-1e40debad59c"
        },
        "item": {
          "id": "86a746f9-60eb-4376-99ee-df7dee861db1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "efb3e322-ef52-4bc6-a555-64620ece7416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c838fd8-eca1-4ee9-bb0f-c523ef4e84d2",
        "cursor": {
          "ref": "ff57d73b-ac19-49e4-adfd-c18f0299d7c6",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b6ff5e96-cb93-4fea-a77c-fa7ef8ef08bb"
        },
        "item": {
          "id": "8c838fd8-eca1-4ee9-bb0f-c523ef4e84d2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9589327a-64ea-4fd4-af1f-a5b129a6537f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c949d4-9979-4092-92bb-dbe148d43780",
        "cursor": {
          "ref": "bfa3cd37-9887-4790-a2d5-4e39cb118ced",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5581e9f6-b1cc-4cb7-9818-e31d8897b24f"
        },
        "item": {
          "id": "e5c949d4-9979-4092-92bb-dbe148d43780",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cea4817c-f5ba-47a7-828d-2f7f02df7543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac863368-7e4f-49a1-9c7e-49919cc2fd8b",
        "cursor": {
          "ref": "ec2281e5-abe6-45ce-a02a-b3fcae390638",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b3fa6a2a-1936-46b4-bee3-0ad8ded84ab9"
        },
        "item": {
          "id": "ac863368-7e4f-49a1-9c7e-49919cc2fd8b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cc75a10f-9ec6-4f92-967c-cbf5574c9b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d6f834-1e5e-40c9-a541-87cd8013a66f",
        "cursor": {
          "ref": "bf794e66-10b4-4016-9525-c45b10decf10",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "11f603a8-5572-4397-b63a-7d732e658f0c"
        },
        "item": {
          "id": "77d6f834-1e5e-40c9-a541-87cd8013a66f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d4df7c1b-bcb2-4eaf-8222-00d9b4426c2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb65aa5-8cbe-4677-8c49-89944e512171",
        "cursor": {
          "ref": "9117e00b-fcdf-4d83-af2a-9a7ca47d0d03",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "24409ad2-8d7b-4fff-a45f-ec5fc04e8c10"
        },
        "item": {
          "id": "ebb65aa5-8cbe-4677-8c49-89944e512171",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ba3a0d86-4dfa-40d4-813c-49c886a77bb6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcbb84c-eca9-4dd9-8907-44bb39d7df59",
        "cursor": {
          "ref": "17051249-51bc-4823-af82-16f98dd31435",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8bdec4fe-9914-4476-aa2a-6bba6dc18f77"
        },
        "item": {
          "id": "3dcbb84c-eca9-4dd9-8907-44bb39d7df59",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2ab3de92-5d39-4780-8fb8-5a6aea3f611e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcbb84c-eca9-4dd9-8907-44bb39d7df59",
        "cursor": {
          "ref": "17051249-51bc-4823-af82-16f98dd31435",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8bdec4fe-9914-4476-aa2a-6bba6dc18f77"
        },
        "item": {
          "id": "3dcbb84c-eca9-4dd9-8907-44bb39d7df59",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2ab3de92-5d39-4780-8fb8-5a6aea3f611e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5e050b-1dca-4376-bb28-723bfe0e0e96",
        "cursor": {
          "ref": "b010af16-eed3-4929-acdd-c428c51073a0",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "380bd676-9790-42a4-9a56-57a37aece2c8"
        },
        "item": {
          "id": "ef5e050b-1dca-4376-bb28-723bfe0e0e96",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "18876f5b-b297-432d-891b-149c1b44c94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c83f8f2-e4a8-404a-9df0-887db96ee5a1",
        "cursor": {
          "ref": "364b124d-1871-43a6-91a4-a029002f8d99",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8eff68b0-c38f-4d03-aded-7966f9edf489"
        },
        "item": {
          "id": "2c83f8f2-e4a8-404a-9df0-887db96ee5a1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "36ce0671-18a0-4a99-92e9-5f499fdfdd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448c54ea-4e46-413c-9176-0895e6e99a58",
        "cursor": {
          "ref": "369cac47-aa96-44e1-b8e9-88d18303c869",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "50c215ca-30ea-4d19-b16d-04be3728a849"
        },
        "item": {
          "id": "448c54ea-4e46-413c-9176-0895e6e99a58",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "51d2689a-7b40-417f-a019-fe58451f1849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e15b915-58f0-4a2d-9d9b-ee7dffc44f3d",
        "cursor": {
          "ref": "36cb42a7-ad55-4bff-842c-c6df8961512b",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bb8a1c84-9a5d-4cc8-b89c-3c9b592ba604"
        },
        "item": {
          "id": "9e15b915-58f0-4a2d-9d9b-ee7dffc44f3d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6a96c5ec-9318-4224-ace5-f07ab767a127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e7c5e0-0476-40dc-8c0f-170442867073",
        "cursor": {
          "ref": "97a24d3c-6406-4bf7-9cb9-d04c178108ea",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fed5b41e-eb81-44a1-a6a0-bff679355ae4"
        },
        "item": {
          "id": "25e7c5e0-0476-40dc-8c0f-170442867073",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0f114eb8-fd40-44be-8b90-8db8920e1d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f3e714-b801-44f1-993a-b4d5be406384",
        "cursor": {
          "ref": "d8210e60-b839-496a-ba52-b08a86833596",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6cf3daae-9ddc-4224-99bc-fdcfb8b84d7f"
        },
        "item": {
          "id": "83f3e714-b801-44f1-993a-b4d5be406384",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "10301aa2-7545-414f-993d-548a8e45a05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abc6331-da72-4667-aa86-83d62d1cf06d",
        "cursor": {
          "ref": "52ba3c45-ffed-43c5-beee-42f646df2e7f",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b8836aba-9e55-4d81-bb0b-022204864e71"
        },
        "item": {
          "id": "7abc6331-da72-4667-aa86-83d62d1cf06d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2c5360e4-f3c3-4fff-be9a-ca3a9497f8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe566c9-61fa-4850-b677-ab649e6774d0",
        "cursor": {
          "ref": "4e64b2d2-15fc-49b2-a559-29eca3233239",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9adde9d6-e156-4943-86d7-1cbac49da151"
        },
        "item": {
          "id": "cfe566c9-61fa-4850-b677-ab649e6774d0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2fa8f38a-2f37-4eec-8699-a444174c64d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19aa1c42-dd91-423b-be52-8e8c549f15a0",
        "cursor": {
          "ref": "bec6a5d9-a37e-4662-b70f-6890af7db865",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ff7c0235-2cb9-42a8-abbb-085e70b2bf21"
        },
        "item": {
          "id": "19aa1c42-dd91-423b-be52-8e8c549f15a0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1213f38a-b9f9-49ce-bf92-36dbbceee4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738e229c-9b41-4ddc-b9d7-8aa37e6afe28",
        "cursor": {
          "ref": "ccaa6202-dc1e-456e-96d5-9ee3fc9d179c",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2044ef33-7e7a-4c4f-9a78-31f9d39658e4"
        },
        "item": {
          "id": "738e229c-9b41-4ddc-b9d7-8aa37e6afe28",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3e1dba43-b9b1-4d4e-9fd0-746ad48948c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495984e1-d287-4e62-b59d-df234a82b6d3",
        "cursor": {
          "ref": "e3d124e8-9827-4248-bf5d-35f26aae1b67",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5d4b846d-8f9e-4516-8830-ba9e151841f2"
        },
        "item": {
          "id": "495984e1-d287-4e62-b59d-df234a82b6d3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "48486eca-7eb1-43a7-bf8c-da6e1201388f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6794110e-b57f-4d38-9104-c9d493c9035e",
        "cursor": {
          "ref": "08197ac4-1ed4-4be0-a27d-3dd1ddc8291f",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ed55dc3c-91b2-4c65-a37d-0685c838d56c"
        },
        "item": {
          "id": "6794110e-b57f-4d38-9104-c9d493c9035e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0d5f354a-e983-4589-bdc0-bd4eb45bc07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8955850-a2c9-40e6-bffa-f7205d6e0f04",
        "cursor": {
          "ref": "95e004dc-4d5f-4a87-b3be-6958ace2ead2",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5d432108-3bee-4741-bd61-4b2bc722b7a6"
        },
        "item": {
          "id": "c8955850-a2c9-40e6-bffa-f7205d6e0f04",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "788c877b-786c-4b06-be7d-b22976ce65b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd4205f-4b58-4f47-9901-655744b49194",
        "cursor": {
          "ref": "5e56faa1-7a4e-4cca-9b78-6cdf2cb9b616",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5dc46839-0fd8-4d80-b31f-47f5a950c34d"
        },
        "item": {
          "id": "9cd4205f-4b58-4f47-9901-655744b49194",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0ccf0b97-817d-4a35-a23c-c141010cf14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f6c326-7ae1-4654-9b54-472c5363cde1",
        "cursor": {
          "ref": "dd593c55-f4e6-4662-b967-85ea961f280f",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e10f8115-3ab4-4c7b-b988-0a582ab6d15a"
        },
        "item": {
          "id": "58f6c326-7ae1-4654-9b54-472c5363cde1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ba8fc358-c6be-4482-b3d9-c1a8aceb9f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc50be9-bb06-4abe-9cc6-246fad024fa4",
        "cursor": {
          "ref": "99e9d24a-8903-4037-820b-8ab8e71852c3",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a6c570ef-00e8-4b13-8f42-c99315c44468"
        },
        "item": {
          "id": "dfc50be9-bb06-4abe-9cc6-246fad024fa4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e2c6f4a4-60c1-48bd-8559-2d5264a2673d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35a012d-8e31-4ec2-83db-ba3694cb33d7",
        "cursor": {
          "ref": "8ee4167e-82c0-4c02-9495-a852e133f662",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "21156b9b-8d19-4cde-839f-0ee593e5f2e2"
        },
        "item": {
          "id": "f35a012d-8e31-4ec2-83db-ba3694cb33d7",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "bf4a96e9-068d-4bc9-9255-9407df7661d9",
          "status": "OK",
          "code": 200,
          "responseTime": 3664,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "a0080d7d-0101-4968-9ef7-a6471b3c9ea5",
        "cursor": {
          "ref": "ad775e6e-fe9b-4ef0-ab9f-19415f61cfa9",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c3b83ac6-c507-4cb8-8218-79c30b2df661"
        },
        "item": {
          "id": "a0080d7d-0101-4968-9ef7-a6471b3c9ea5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1d763664-7f7b-46fe-b6b4-bd1734d3353c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d14daf-5148-43d5-ac9f-73e86a2b39ae",
        "cursor": {
          "ref": "89a7806c-43cb-4e09-8044-91e05b227b91",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6ffb27c2-2617-4631-98e1-06af10745ab7"
        },
        "item": {
          "id": "41d14daf-5148-43d5-ac9f-73e86a2b39ae",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dd81a924-04a9-40c6-8802-2f5be1d5c5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc63b2ec-bacf-4ae2-92aa-5bc9b491428f",
        "cursor": {
          "ref": "9b1c53b0-9bcb-4e76-85a1-0eefedfb8f39",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c9d78ca4-fa02-444e-87c3-392192e2e83f"
        },
        "item": {
          "id": "cc63b2ec-bacf-4ae2-92aa-5bc9b491428f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4caa6615-764a-4b94-a3f7-16da64d8eb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f30ab3c-1a7c-4c10-a706-91782ce85032",
        "cursor": {
          "ref": "e40b9e8c-609f-4031-99db-646a6fdfcbf3",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8d9b0c32-16b7-4788-b976-a63fe4279380"
        },
        "item": {
          "id": "7f30ab3c-1a7c-4c10-a706-91782ce85032",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "37a73316-c5bb-4205-81ae-83b73062f620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4765f2cb-ebbf-4aa8-971e-43783ad13d40",
        "cursor": {
          "ref": "a644f044-2d47-43ca-9147-fcce37197b9a",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0f090b7b-8345-4325-b724-e90f0ee16f4b"
        },
        "item": {
          "id": "4765f2cb-ebbf-4aa8-971e-43783ad13d40",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "12f81772-60ea-4c29-a504-fa3155f4263f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186e47ec-b054-463d-9f47-be8e74945ded",
        "cursor": {
          "ref": "62905b41-19b0-4bb4-9ac5-0a676f2badfc",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "043c3576-d9ca-44dd-bb96-1eae7bccb440"
        },
        "item": {
          "id": "186e47ec-b054-463d-9f47-be8e74945ded",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0e72697a-b60e-4816-8938-15d02e722a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d55abba-ba6c-49ba-afd6-cd474d6e8c27",
        "cursor": {
          "ref": "29d73b3e-4d80-41b5-85b5-b2946f23028f",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "90eb04d6-b9bf-4f5f-8f8e-4c13f9432859"
        },
        "item": {
          "id": "5d55abba-ba6c-49ba-afd6-cd474d6e8c27",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ff30cdcf-595f-42fd-b63f-e7616466247c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6809b7d2-76e7-4d3e-9186-b58b5ccc19b4",
        "cursor": {
          "ref": "c37a75fa-f067-4f21-9e95-65e9e58483c6",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "48933e41-b7e7-43fc-af24-4b93783dc870"
        },
        "item": {
          "id": "6809b7d2-76e7-4d3e-9186-b58b5ccc19b4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "79de5600-a317-4bd0-afc2-c12f24cb5d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b782fe-7819-4254-bd73-a946e3286f86",
        "cursor": {
          "ref": "e1e6af84-de33-4018-99af-5cb62923dae5",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4189c2fa-f908-4a22-ba34-56f36363799e"
        },
        "item": {
          "id": "b2b782fe-7819-4254-bd73-a946e3286f86",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9de47910-29c9-48d2-b950-1da6fecb30b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d5c8dc-e4b4-42ba-a0da-d47a1df4b8cf",
        "cursor": {
          "ref": "b4072c2e-ef4c-4f82-b0f6-c48c350c69b4",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "28d130d9-ac99-49fd-93b6-75ec02b0ef6e"
        },
        "item": {
          "id": "45d5c8dc-e4b4-42ba-a0da-d47a1df4b8cf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a3dc6c3c-8a55-4f8e-b850-65d6f6e16bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e3ac42-19cb-49d9-b41a-83667769786f",
        "cursor": {
          "ref": "cdcf9c9a-bf7c-400c-a8aa-8755b286b986",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "675b62e0-b1d5-47bf-8e4b-65b403742307"
        },
        "item": {
          "id": "72e3ac42-19cb-49d9-b41a-83667769786f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fae330b4-63ee-424e-bb61-02d0b6d019e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0745b781-5c02-489f-8cce-4ecf55974fae",
        "cursor": {
          "ref": "4ed18bf4-6007-41a7-8927-844f168acb85",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1e493186-7225-4bf6-afcc-de5e8b678a14"
        },
        "item": {
          "id": "0745b781-5c02-489f-8cce-4ecf55974fae",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "134b32f0-48ee-4299-b048-40275876ff04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c07505d-1c0b-453a-9427-3da557533a60",
        "cursor": {
          "ref": "d10fca75-ea16-4caf-a852-ecbbf766685d",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "798c6897-8e24-41b7-9178-f6f28663bab2"
        },
        "item": {
          "id": "0c07505d-1c0b-453a-9427-3da557533a60",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "36a6c68e-35de-4587-9b43-2b92d5ec2246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce561826-29f0-4153-9650-7147de849376",
        "cursor": {
          "ref": "3b0c2a3d-e062-4cd3-8660-e4c119892c2c",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "20b2b93b-da57-4c2a-b8b3-e0f42c48a86e"
        },
        "item": {
          "id": "ce561826-29f0-4153-9650-7147de849376",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b6e36b65-91e0-4a92-a065-b41e8020c471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cd28e6-8481-46b7-acef-4b9e578b3cad",
        "cursor": {
          "ref": "c49a6fba-87bf-419b-9320-fd18600762b3",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1e1f770d-2c9f-43ee-80b5-9b93ad8adefb"
        },
        "item": {
          "id": "a6cd28e6-8481-46b7-acef-4b9e578b3cad",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b24b4d47-ce36-4c70-a7df-73abdb19119f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef16d676-fc1d-42b6-8816-5d56c3ad616f",
        "cursor": {
          "ref": "4f3a31f6-84fa-4906-a2cb-5e22ee63787e",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dd2be5c2-8cfd-4821-b141-1479484cd6d7"
        },
        "item": {
          "id": "ef16d676-fc1d-42b6-8816-5d56c3ad616f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "26cbc718-0d5a-44b4-b609-ae94b3b6a2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de4230f-2d83-4952-be32-c27333d00acb",
        "cursor": {
          "ref": "5bc36b16-058a-4cd7-9450-05741dd5dc6d",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bb7b62bb-2703-4828-b094-88d84faf7b08"
        },
        "item": {
          "id": "5de4230f-2d83-4952-be32-c27333d00acb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7235a45c-e87d-421f-a815-8fff952dcf86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504a4149-4288-4fe6-a681-71e70a1af0fc",
        "cursor": {
          "ref": "29318175-3b95-42e3-8bac-481d0b9964fa",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a80cacd5-ee8e-4139-ae5d-28c64ac857e7"
        },
        "item": {
          "id": "504a4149-4288-4fe6-a681-71e70a1af0fc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ea8ab4b3-f8d5-4208-b874-66cae7b6fb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f2753e-88bf-428e-9ecd-469b92d084b3",
        "cursor": {
          "ref": "39f0fd4f-c425-4a71-a9e5-a393203d153b",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "aacd0dd2-9476-40a3-aafc-93bd0fea7e09"
        },
        "item": {
          "id": "81f2753e-88bf-428e-9ecd-469b92d084b3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "55551769-b8c5-4fd5-a48c-fde2e36a41d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeebb1d-7688-4f7b-ad63-934b40fcbcfb",
        "cursor": {
          "ref": "2394dacc-85cc-427c-bc82-11cbd5424cd1",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7ef7ef67-aef8-497d-bf1b-4dc2d3e382f1"
        },
        "item": {
          "id": "7eeebb1d-7688-4f7b-ad63-934b40fcbcfb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1258b373-1f11-43f8-9088-c08a903256fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d42f19-282c-4e4e-ad7c-0bbeac8051eb",
        "cursor": {
          "ref": "c01fbc7a-188c-438a-b32c-81c294658602",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0033a538-b914-4b03-a34c-707dce2d2d32"
        },
        "item": {
          "id": "08d42f19-282c-4e4e-ad7c-0bbeac8051eb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6a8abc42-4573-4d56-b816-821a4e2bb1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e8ca75-3688-44ce-b208-11ffabd1d278",
        "cursor": {
          "ref": "ad6aecc4-044d-4267-a864-b4c34adc3f6f",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7876d6cf-0034-4181-b1c1-6134532d6e26"
        },
        "item": {
          "id": "48e8ca75-3688-44ce-b208-11ffabd1d278",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2a615937-8887-47a8-8030-a89e3aa8d44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc54761-ea14-4fc8-9063-881d60876b5e",
        "cursor": {
          "ref": "98e3d62b-8df3-41fa-93df-9e23481032e0",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c834873e-7de3-4b95-b65c-a6b43ed8880a"
        },
        "item": {
          "id": "7cc54761-ea14-4fc8-9063-881d60876b5e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f0955ff9-7157-48aa-973e-654ff1f3a453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a47d59b-2171-4412-9ad6-7a391e4a9314",
        "cursor": {
          "ref": "4d589d0c-6b96-49f4-9510-d1b626cf5568",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "399e34c8-3a3a-44b9-8aed-804be2cb4c07"
        },
        "item": {
          "id": "1a47d59b-2171-4412-9ad6-7a391e4a9314",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "34848a04-173b-4d33-8f24-6d6cb1066c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8176388-70da-402f-8484-7ebcb9355c9f",
        "cursor": {
          "ref": "2cfb16a8-0055-4f82-9f9c-67c225dbfbd3",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "22d48c20-60cc-463b-a246-05fec04ab063"
        },
        "item": {
          "id": "d8176388-70da-402f-8484-7ebcb9355c9f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "096df943-500c-48e6-a343-10592bb2eb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f48cc4-01f3-45db-a25e-01cc9642a445",
        "cursor": {
          "ref": "a675f3f9-625c-4e11-9a23-ce9f6399fb8b",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ccc861cc-b29a-44af-b997-6282dadb2edc"
        },
        "item": {
          "id": "84f48cc4-01f3-45db-a25e-01cc9642a445",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c2cbddb3-df56-44fe-b06c-6d89832586f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387a122c-7ff8-4dda-afad-d6b0637a326f",
        "cursor": {
          "ref": "c0d0aca5-0d27-401b-87ad-046e47fd4b5f",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d7358b9c-8491-4669-a08c-9883135d0e60"
        },
        "item": {
          "id": "387a122c-7ff8-4dda-afad-d6b0637a326f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b2dc103a-558e-4219-b1ab-a4a6a9d7742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec22b41b-93c5-41e4-9235-e66bd34ee677",
        "cursor": {
          "ref": "afb59868-ce23-4ba9-ad00-db8c16d49273",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a6ffe049-1dac-4b7b-a832-8b18e3429bc2"
        },
        "item": {
          "id": "ec22b41b-93c5-41e4-9235-e66bd34ee677",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4faecaf6-6477-4bd7-94d8-2a685587615c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c54b812-9e23-415a-99b1-a165818df722",
        "cursor": {
          "ref": "c35d0faf-97bf-4d3f-9cbf-d9e81130d875",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a6e16b7b-419b-4a5c-966b-188bd29b54de"
        },
        "item": {
          "id": "6c54b812-9e23-415a-99b1-a165818df722",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4364aa91-b38e-4cc5-bc29-18d504cbe013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdc5350-db9a-4e79-b393-ff046c67195c",
        "cursor": {
          "ref": "8c034d16-5db9-49ec-9549-e7f04366adff",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eafbe123-ecce-4cf8-a163-812c30952e2f"
        },
        "item": {
          "id": "acdc5350-db9a-4e79-b393-ff046c67195c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a7a3a902-ccac-439a-8147-01398f24127d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2eb948-c677-498d-a4e8-a97c435e9cda",
        "cursor": {
          "ref": "c2d48306-b6bb-44d8-93ff-b08aaab56759",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eef05b8d-0567-4eef-8413-e3e6167e3a81"
        },
        "item": {
          "id": "9f2eb948-c677-498d-a4e8-a97c435e9cda",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "418f6926-5310-4f87-b360-19de4545bdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30324d65-65df-49b8-89ea-b38222927ed7",
        "cursor": {
          "ref": "ec341c99-c8d7-4783-9c18-db7e1f5d5d14",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "451391bf-331d-44dd-9a16-bb7c48800c39"
        },
        "item": {
          "id": "30324d65-65df-49b8-89ea-b38222927ed7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3cfbdbbb-ddb8-4f3a-a2d0-23c5ed7b969d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129f4ffb-b9fb-4dad-a424-3b70a32c7a94",
        "cursor": {
          "ref": "72ba5f3b-33e6-4d57-b4e4-449527bd79e6",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "87136682-dcca-43d3-8d44-c269e2e65401"
        },
        "item": {
          "id": "129f4ffb-b9fb-4dad-a424-3b70a32c7a94",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d35e1bfb-25de-44a1-adae-c46643dd34fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a578f9c-5ef7-441e-97d4-acec7be5f0c3",
        "cursor": {
          "ref": "155db7af-ab0c-4fed-98ea-6aab9d774e76",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d032c301-e7ef-4a42-9512-88ab8ed5878a"
        },
        "item": {
          "id": "7a578f9c-5ef7-441e-97d4-acec7be5f0c3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "acf64cb2-b43b-44b5-90bd-bbb840df6814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aad8e48-f87f-48a5-ae7d-bea7a39119f7",
        "cursor": {
          "ref": "441b4b5c-f219-418d-a1d9-2c4dcddbf10e",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b47d14fd-b1a8-4055-8a1e-cadedad658a0"
        },
        "item": {
          "id": "6aad8e48-f87f-48a5-ae7d-bea7a39119f7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9dacaa36-b9fc-417f-bdf2-dc7d99f524ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8600dc5f-253f-41fe-8b86-d79ee7dd2b01",
        "cursor": {
          "ref": "022988e4-fa4b-4769-a8a6-fdba274cf44d",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "378d263c-6072-437a-bfb9-920a13a12d04"
        },
        "item": {
          "id": "8600dc5f-253f-41fe-8b86-d79ee7dd2b01",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "855205f7-9249-4c84-b066-d4eeea875f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ade8f98-9daa-4776-8dd0-adb98793c238",
        "cursor": {
          "ref": "3c871fdf-05da-4d8d-a108-46ddac1ede73",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6e8fe81d-c086-4e07-8282-4f6081e22ba0"
        },
        "item": {
          "id": "6ade8f98-9daa-4776-8dd0-adb98793c238",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1557c393-0646-4e16-b24d-ef5ac0b3ecde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b51e237-b03d-4798-aa6d-7e5754e9e7df",
        "cursor": {
          "ref": "2fd01b1a-ed3b-467f-988c-418dc1376b6a",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "322e819c-a691-40dd-8bbc-d34cbeda5694"
        },
        "item": {
          "id": "3b51e237-b03d-4798-aa6d-7e5754e9e7df",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6bb929e2-d7c7-4fec-8b17-42bac719c765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab27b89-8dbf-4f74-8feb-1a600dfbcea3",
        "cursor": {
          "ref": "83982552-6be6-4e31-a770-822e43b6f6fb",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f1f95efe-af8f-47f6-8a54-4cd86200dbd7"
        },
        "item": {
          "id": "9ab27b89-8dbf-4f74-8feb-1a600dfbcea3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4cf33c3c-08fe-44cd-8a25-4078eb9450a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabdde8e-f156-45a2-a670-acd277a24d2c",
        "cursor": {
          "ref": "48265d49-6b11-4c58-a485-9c029786b877",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1ebdf048-c5b5-4a85-93fa-3c2ccbc60e08"
        },
        "item": {
          "id": "eabdde8e-f156-45a2-a670-acd277a24d2c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5eaaca94-a47b-45c8-b22f-84629811be55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d919e9-0c0d-4f7f-b667-4551836eaa8c",
        "cursor": {
          "ref": "1928d475-09f0-4879-bba5-0cd5d7737786",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3aa29f4a-c5c5-4f50-9583-f8a638d79d94"
        },
        "item": {
          "id": "36d919e9-0c0d-4f7f-b667-4551836eaa8c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3693e9e1-a0e7-46ec-a08a-8fd547e6e7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c823cf23-7f94-42b0-8cba-4d30b226f401",
        "cursor": {
          "ref": "f1fefbcc-662f-4b39-9778-d013546fcf75",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7c3938ba-d4e7-462d-9c97-1e85438f64d0"
        },
        "item": {
          "id": "c823cf23-7f94-42b0-8cba-4d30b226f401",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e116d753-b7fc-44b2-b8ea-6e66de1ffada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65db7b9-6bb7-4b18-95be-2ee1c90ed216",
        "cursor": {
          "ref": "03359129-4fc9-4578-a207-ff4708da8db0",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6816fff9-8b38-4d5c-a74c-8a3705e31854"
        },
        "item": {
          "id": "b65db7b9-6bb7-4b18-95be-2ee1c90ed216",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "153488ab-2c06-49cc-b7c5-cab0ec108c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f9e035-2965-4727-9fe2-1d4ae6608a93",
        "cursor": {
          "ref": "3d6eedff-bf29-4e8e-b9c0-52cdaf95ddcf",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "34ca0cd0-c5ca-4d56-b438-e1962b4027e3"
        },
        "item": {
          "id": "f5f9e035-2965-4727-9fe2-1d4ae6608a93",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a9f970be-01c3-4d9e-b432-ed86c64840fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c578a79d-9a10-4931-a7b9-04ae69b8c7f8",
        "cursor": {
          "ref": "1f7040e9-ea73-49ab-9cf8-9546d5b7996a",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c8bd7464-d369-4df8-8cee-9a2f700a8728"
        },
        "item": {
          "id": "c578a79d-9a10-4931-a7b9-04ae69b8c7f8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e0efa216-4030-428b-b6f2-221110a90883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33958ad5-bd6b-4340-ac83-7b65457560c0",
        "cursor": {
          "ref": "f9c19038-09ee-421f-b0eb-00139e3542e5",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "18387e76-fe61-4e73-8cdd-c9157ccf2246"
        },
        "item": {
          "id": "33958ad5-bd6b-4340-ac83-7b65457560c0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "77166cc2-1875-4005-b01d-eaa20828f6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62e9c3b-119f-4efe-b3e0-ccd1a52fddd7",
        "cursor": {
          "ref": "0f484cf3-dd7a-4b7e-aace-c290a5615c12",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b46bcf9b-28b3-4085-a46d-d723f2008102"
        },
        "item": {
          "id": "c62e9c3b-119f-4efe-b3e0-ccd1a52fddd7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4d1aac40-e1e1-4b89-b7b9-deb7ed1ffc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4229b9fd-0908-4f61-bc31-2b8f15ed269b",
        "cursor": {
          "ref": "01b07920-ceb6-4219-b5ec-86edc159914e",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "984e40d7-a7d5-4490-be9d-180937eb8d7b"
        },
        "item": {
          "id": "4229b9fd-0908-4f61-bc31-2b8f15ed269b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9d0c1072-3e4f-4657-95a2-a02187f57fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c32212-58ca-4541-964f-ba874917fbca",
        "cursor": {
          "ref": "a5bdb8c5-ba73-45a8-a8f1-8fe171249a8d",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fba938fa-289e-4664-a8d3-b3a340668c31"
        },
        "item": {
          "id": "d2c32212-58ca-4541-964f-ba874917fbca",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5a4f7425-1706-44ef-8dc6-c33e469db8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d713cb-90ee-4dfa-a659-7409d99135d8",
        "cursor": {
          "ref": "71a043e7-7ca9-4692-a5ae-9d39352f25fd",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3ef40b18-ded9-4a95-a8a2-9e08e9d2080c"
        },
        "item": {
          "id": "19d713cb-90ee-4dfa-a659-7409d99135d8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "17494347-a123-4880-ab0c-a3544b1dfd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f2649c-aca1-460a-8d69-e30c6b656089",
        "cursor": {
          "ref": "f68e12d4-af4e-43bb-8be4-5aba2fd7c94f",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8089c12f-428b-4198-954f-f03b1a63fa31"
        },
        "item": {
          "id": "06f2649c-aca1-460a-8d69-e30c6b656089",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f302fbbe-8b61-46a2-8ddb-d4df376c78ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16b2cf1-8b1c-42b5-8fe0-b1ed0ac789c1",
        "cursor": {
          "ref": "b2804ec7-c399-42d3-9d14-ac3bc31aad90",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "545af5ee-f11f-42bb-b049-79ee81470ce8"
        },
        "item": {
          "id": "d16b2cf1-8b1c-42b5-8fe0-b1ed0ac789c1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "334aba40-6807-4567-bfce-58f1f75148eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4543fa-9333-47a6-a0ee-288064399c80",
        "cursor": {
          "ref": "fd7794be-39fb-4e52-8b33-0fd5322c87af",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "03249c0a-02e4-4c29-8726-404238be9aed"
        },
        "item": {
          "id": "9d4543fa-9333-47a6-a0ee-288064399c80",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8b8ccecd-9adc-4ee0-98d3-8b5638b78b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f20301-5246-474c-b323-e76b10abf654",
        "cursor": {
          "ref": "9cfeba71-9221-4638-ba79-a48a77780517",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f4bb0db1-5898-450f-99bc-3c133c23cd61"
        },
        "item": {
          "id": "c7f20301-5246-474c-b323-e76b10abf654",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b59e2379-5fcf-43ec-86d9-9ab0d31f1733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bdc86a-c42a-4cd4-9c4d-24920d2c2e57",
        "cursor": {
          "ref": "8eca5542-f48b-41cf-afef-3dcc49d48ce5",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "25736951-9bb2-4a38-a781-3e334db06ac1"
        },
        "item": {
          "id": "51bdc86a-c42a-4cd4-9c4d-24920d2c2e57",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b8d9a342-730c-4551-b208-65b51c2ecb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2642a97-7f95-44d2-b5ab-149c5feb38a4",
        "cursor": {
          "ref": "c5190086-51d7-43d8-9c90-eacc428be08a",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "408f092b-3ebc-4990-b015-b3aef9f9fe65"
        },
        "item": {
          "id": "d2642a97-7f95-44d2-b5ab-149c5feb38a4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "84499cce-648e-4f50-9a4a-314b53926339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d478c5d-3db0-4421-b9fb-29b3e773250e",
        "cursor": {
          "ref": "4170efbe-67c9-42dc-9900-7c1aafdfe2bf",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "361345e0-901a-4a24-9b58-abd4c0476468"
        },
        "item": {
          "id": "3d478c5d-3db0-4421-b9fb-29b3e773250e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d269ddd4-f167-49e1-b231-b7eff4df2fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ff3f9b-dc1c-4426-b62e-58f161193a8a",
        "cursor": {
          "ref": "8a57d027-5718-4fa5-99d8-daf913f8994c",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b2d9c69d-3e36-43e5-aedf-5bac5ce180c6"
        },
        "item": {
          "id": "f1ff3f9b-dc1c-4426-b62e-58f161193a8a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "570a41b3-4cf4-4b08-a5f6-f7c98249e5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e6c985-2158-4eed-8909-a77427943257",
        "cursor": {
          "ref": "3abbf2e7-8ca0-46a7-ba13-2dfb9a8df241",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "16456178-2b1f-47d9-8195-27399b7b26bb"
        },
        "item": {
          "id": "f2e6c985-2158-4eed-8909-a77427943257",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "58fec2be-3985-4c63-9522-04f748d5a8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d1ab75-628c-45d4-83f4-db795bd82ea8",
        "cursor": {
          "ref": "b26f7cf9-e23d-4c7f-a2dd-8d07802781bd",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4e089975-7bc8-4504-a44b-8451c0120371"
        },
        "item": {
          "id": "c1d1ab75-628c-45d4-83f4-db795bd82ea8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "19dcf0ca-74e6-48e4-80ee-cdd0938ccdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291ead28-5b59-4d6f-8c91-ba5cea7d9295",
        "cursor": {
          "ref": "5aa732eb-b9a9-4aeb-a650-f4a61156984b",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0969079a-e89f-41dc-89da-8fd68341c21f"
        },
        "item": {
          "id": "291ead28-5b59-4d6f-8c91-ba5cea7d9295",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ff5705c9-bf13-4405-902c-32d39907e3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f27c8b0-496a-4ac6-bce1-4a8f1656c242",
        "cursor": {
          "ref": "6df244db-2342-48f8-809d-46ae435259f3",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "90d7607b-a61f-4037-a76f-595e00c75253"
        },
        "item": {
          "id": "2f27c8b0-496a-4ac6-bce1-4a8f1656c242",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d04448ee-c246-44ee-b27b-a682258db254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a77b121-c372-47ef-9bfd-2f73a2d8d6be",
        "cursor": {
          "ref": "21615712-cc70-44be-86a9-6a130f9b85c3",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "794bf594-7afa-48de-92b0-12d9e7da84d8"
        },
        "item": {
          "id": "9a77b121-c372-47ef-9bfd-2f73a2d8d6be",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6bf4b416-ed99-4720-8313-4fa17d635d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567cc02c-f25a-4d5b-87a3-80ab9e0a2605",
        "cursor": {
          "ref": "e253c9a6-e549-4e12-ae1c-2f5df31d9f41",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b5aa939d-335a-410b-9322-a4f1dab547c1"
        },
        "item": {
          "id": "567cc02c-f25a-4d5b-87a3-80ab9e0a2605",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a13aada8-e873-423c-abb2-168963895267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d740a2b-7ecc-4787-ada7-4c259b8b0919",
        "cursor": {
          "ref": "a9f8f3be-68e3-4a4c-89fd-b077e66681ca",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7ac9ddf6-6cd5-4a6a-b6ae-ff0ed09c2936"
        },
        "item": {
          "id": "8d740a2b-7ecc-4787-ada7-4c259b8b0919",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cf54a360-3708-4877-bab5-c30ee836e276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703eab3a-8efa-403c-9686-64aac28112a5",
        "cursor": {
          "ref": "e68a1eae-027d-4584-8df8-a3d4ac3ed30b",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "68e0534a-0408-4872-be59-7cffd5f52893"
        },
        "item": {
          "id": "703eab3a-8efa-403c-9686-64aac28112a5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d15e2191-66c3-4b6a-8b76-8c53dc0ff2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6c244a-fb09-4a2f-bef6-6d5603fd3bd3",
        "cursor": {
          "ref": "7af663b2-570a-4b5b-a47d-1837ed195001",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "86a17423-cca1-4d8d-b5da-fb00244e279b"
        },
        "item": {
          "id": "ed6c244a-fb09-4a2f-bef6-6d5603fd3bd3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9954ac2d-c327-430d-a83f-99d05257b09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24ad65b-c17b-45e7-9f02-bf007983ec90",
        "cursor": {
          "ref": "4b755e72-a481-4eac-8cd3-14ec8094ecd3",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ef4fb380-4d16-4730-a193-5945dc4f4ebb"
        },
        "item": {
          "id": "f24ad65b-c17b-45e7-9f02-bf007983ec90",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3a1cb936-d5ba-4df0-90c5-f6123e0c1ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f0f464-2bef-4d47-9a7a-85d8d3637785",
        "cursor": {
          "ref": "453f3feb-77a8-4248-8c23-03f6bf6f91ac",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "89576a82-3cff-4215-b895-c0c763aa9126"
        },
        "item": {
          "id": "18f0f464-2bef-4d47-9a7a-85d8d3637785",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "99bd53fd-96a9-4537-a021-6f36612deaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000335c6-3368-47f8-8871-ed5dbc6f8e1f",
        "cursor": {
          "ref": "6e9cd6c9-ef2a-40ac-8476-63a3a888ae0c",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "644069ef-7316-4502-b281-d04ecf8a91f0"
        },
        "item": {
          "id": "000335c6-3368-47f8-8871-ed5dbc6f8e1f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7464e1af-60c9-4818-9e69-a954d6501cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4705959-2d4c-4917-b4c0-6958a4a5bfb5",
        "cursor": {
          "ref": "aaaa6322-72ab-4c32-b5fd-4cbeef90033d",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5604e240-8cbd-43e5-947b-d6f7ba4da0f1"
        },
        "item": {
          "id": "c4705959-2d4c-4917-b4c0-6958a4a5bfb5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "87cd5fe2-3030-455e-9c67-4443c2e045c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b91284-9a03-400d-9e50-51e16548fbac",
        "cursor": {
          "ref": "75014d5f-35b4-4ffa-83a6-c48136fe2f16",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3a490840-c061-462e-888f-222954507a80"
        },
        "item": {
          "id": "80b91284-9a03-400d-9e50-51e16548fbac",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2ca75c38-b0f3-4ee0-9dbe-a9c91818af11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf1e122-5a55-488a-a5da-583261c9e480",
        "cursor": {
          "ref": "95379e0d-540d-44c5-910e-53756aea8ed6",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7f69c8af-1426-46be-bc71-7d86f0e85b3c"
        },
        "item": {
          "id": "cdf1e122-5a55-488a-a5da-583261c9e480",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "034d071c-d0ca-4fa7-afb0-06c8ab57100f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee0bd23-e39d-4c7b-a1d6-8a71b3cd83cf",
        "cursor": {
          "ref": "f2608806-1516-403c-bb7b-3abcc25797d6",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "33d13ab8-e2b2-4166-9b39-f921f841c643"
        },
        "item": {
          "id": "8ee0bd23-e39d-4c7b-a1d6-8a71b3cd83cf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fa4308a8-5e20-4d2f-8e83-14d584c072a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e60646a-17ec-488b-97f4-31c7f4c4e6c1",
        "cursor": {
          "ref": "e9714a78-9377-4ee7-b496-af46dbf911a8",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1518617f-8ad5-48d5-950a-e515f33131c9"
        },
        "item": {
          "id": "9e60646a-17ec-488b-97f4-31c7f4c4e6c1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3686aa46-9b71-41e7-8b7c-7f719e2f6231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83028668-bc8d-429e-9db8-81a443e4ac9c",
        "cursor": {
          "ref": "01213a4f-6308-447a-afe4-f26f6b8d6685",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "def2415c-7d4c-46c5-8814-52574c017d9b"
        },
        "item": {
          "id": "83028668-bc8d-429e-9db8-81a443e4ac9c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8118b06d-0632-4c67-ab4e-e791d59aca16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928639fa-5b0e-4699-941f-366bfaf5ed5a",
        "cursor": {
          "ref": "a8f2e49e-1573-4257-9556-1145931a7202",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6334371b-3b7b-4566-b31f-5439cc15c231"
        },
        "item": {
          "id": "928639fa-5b0e-4699-941f-366bfaf5ed5a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9fd32537-fba3-4d5f-9a85-0c2688819028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b688dda7-a968-4992-99da-fd780b2077e2",
        "cursor": {
          "ref": "fac718b1-3dcb-40c0-b08e-e306cbe447d7",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5cbb0d28-227c-463c-9f38-593d954e7615"
        },
        "item": {
          "id": "b688dda7-a968-4992-99da-fd780b2077e2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8b1deee7-fb4a-42b2-b884-5e16906da75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c3a1c6-8793-4d8b-9b02-8769b02039a8",
        "cursor": {
          "ref": "0795fade-48c6-4788-8ded-06fbc66b902d",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0012b6c6-19cb-4604-98b9-5b38e312dcd6"
        },
        "item": {
          "id": "69c3a1c6-8793-4d8b-9b02-8769b02039a8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c1c6bb40-c0da-471b-9ee1-f242674823f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0f0486-b79e-413e-befc-5bb003f7ea20",
        "cursor": {
          "ref": "a0bbf062-7663-4f78-aac4-75dcaac29051",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c9289b2d-80c4-4c03-bb38-fc697f194a45"
        },
        "item": {
          "id": "4e0f0486-b79e-413e-befc-5bb003f7ea20",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "58a5f6f7-eacf-4a68-a971-ba2b796f586c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6492e18-e97b-4a6e-8a47-48b6cef2858b",
        "cursor": {
          "ref": "276b3f30-93b6-4cf8-8e04-0176ca861e77",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3032bf7d-0233-4225-8fd4-3ddb7e2b83a1"
        },
        "item": {
          "id": "e6492e18-e97b-4a6e-8a47-48b6cef2858b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a04e9a73-ad3f-486c-b41d-ab5b5c08e7fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5259fb8-aec4-44f3-ac6b-761348e916c1",
        "cursor": {
          "ref": "38a8f331-181b-493f-81d8-1f87c716961c",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43dcfff7-ea7e-4d25-b75c-63ab148d4446"
        },
        "item": {
          "id": "a5259fb8-aec4-44f3-ac6b-761348e916c1",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d21b190a-2c39-404b-9fde-970f6b348fc9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 365,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5d2203-391a-48e6-b630-8facdae2d152",
        "cursor": {
          "ref": "0d562134-f9a1-4013-931e-8f5c75b96143",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ffcc1039-c4d8-4bbc-85df-d77d9fdebc4a"
        },
        "item": {
          "id": "3b5d2203-391a-48e6-b630-8facdae2d152",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "747a29c7-3b9c-444b-991f-2f83ca7c5cbf",
          "status": "OK",
          "code": 200,
          "responseTime": 424,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df1ad42-5342-4b67-8aa3-e9aaa5607753",
        "cursor": {
          "ref": "9d746f94-7970-43ce-bb1b-4ee699ed187f",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "395e09cd-3ed2-4fa1-bf83-70043f0309a3"
        },
        "item": {
          "id": "3df1ad42-5342-4b67-8aa3-e9aaa5607753",
          "name": "credentials_verify"
        },
        "response": {
          "id": "021f718d-65cc-4fd8-a53b-a210e6a37819",
          "status": "OK",
          "code": 200,
          "responseTime": 3761,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea53a709-9a38-48db-a65e-e7e63c7c8b63",
        "cursor": {
          "ref": "e7f521d9-b0f7-4992-b4c8-6daed7759b0b",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9b0410e4-e893-4062-81d5-81acff01ca99"
        },
        "item": {
          "id": "ea53a709-9a38-48db-a65e-e7e63c7c8b63",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "785e6339-fae2-4e09-8edb-045295486a4a",
          "status": "OK",
          "code": 200,
          "responseTime": 3657,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db8128e-a1f4-420e-8ad2-cff29d4d0e5c",
        "cursor": {
          "ref": "73a67120-2195-4a30-a7f9-1429f6a86a36",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bc58fa97-cf36-4390-829e-05235b414684"
        },
        "item": {
          "id": "8db8128e-a1f4-420e-8ad2-cff29d4d0e5c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3349367e-4e01-473a-a750-572a0d0f67c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db8128e-a1f4-420e-8ad2-cff29d4d0e5c",
        "cursor": {
          "ref": "73a67120-2195-4a30-a7f9-1429f6a86a36",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bc58fa97-cf36-4390-829e-05235b414684"
        },
        "item": {
          "id": "8db8128e-a1f4-420e-8ad2-cff29d4d0e5c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3349367e-4e01-473a-a750-572a0d0f67c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db8128e-a1f4-420e-8ad2-cff29d4d0e5c",
        "cursor": {
          "ref": "73a67120-2195-4a30-a7f9-1429f6a86a36",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bc58fa97-cf36-4390-829e-05235b414684"
        },
        "item": {
          "id": "8db8128e-a1f4-420e-8ad2-cff29d4d0e5c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3349367e-4e01-473a-a750-572a0d0f67c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a801af27-89ef-4734-bd2e-b97b261d6c65",
        "cursor": {
          "ref": "42f41aa5-491d-4f8b-a4bc-c68f8080dc86",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dc807ba1-492b-44da-ab5b-d30cb8acef8a"
        },
        "item": {
          "id": "a801af27-89ef-4734-bd2e-b97b261d6c65",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4ab1809d-19e3-487e-ab4c-0aabf98a2ba6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 374,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e38bc8-fe16-4b01-ac39-32b2f463056b",
        "cursor": {
          "ref": "2976de78-e697-40fb-9efc-0b8567d86f8d",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "be091250-83a8-43fa-b4be-ced14e97ccb3"
        },
        "item": {
          "id": "24e38bc8-fe16-4b01-ac39-32b2f463056b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "06332c18-1918-4f15-a268-2a651940c790",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e38bc8-fe16-4b01-ac39-32b2f463056b",
        "cursor": {
          "ref": "2976de78-e697-40fb-9efc-0b8567d86f8d",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "be091250-83a8-43fa-b4be-ced14e97ccb3"
        },
        "item": {
          "id": "24e38bc8-fe16-4b01-ac39-32b2f463056b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "06332c18-1918-4f15-a268-2a651940c790",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdd1f57-c2c5-4988-bc29-51e3ff71e1cd",
        "cursor": {
          "ref": "41594186-8138-47d9-9b8b-48368d622cca",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0f97a7fb-4197-4ce8-8c82-1d75cf56989c"
        },
        "item": {
          "id": "bbdd1f57-c2c5-4988-bc29-51e3ff71e1cd",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0c130812-e7f7-4a01-9345-d94d8b07a157",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 636,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944cddae-8cf1-458f-9580-b2e37ca73adf",
        "cursor": {
          "ref": "b6bbf8a7-5208-4666-963d-dfa4864dc38a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8b351ac8-4e2f-4a19-8ea8-5a01a607fec1"
        },
        "item": {
          "id": "944cddae-8cf1-458f-9580-b2e37ca73adf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d683ec91-1148-4816-a1ef-7654e32ed58e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944cddae-8cf1-458f-9580-b2e37ca73adf",
        "cursor": {
          "ref": "b6bbf8a7-5208-4666-963d-dfa4864dc38a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8b351ac8-4e2f-4a19-8ea8-5a01a607fec1"
        },
        "item": {
          "id": "944cddae-8cf1-458f-9580-b2e37ca73adf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d683ec91-1148-4816-a1ef-7654e32ed58e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0d895c-7a6e-48b9-b30a-9ed107f09ad2",
        "cursor": {
          "ref": "f4310784-4c22-4da4-8fc3-0f6629dbe337",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fce8d0a7-7743-4297-8d8b-c52b45cc4adf"
        },
        "item": {
          "id": "cb0d895c-7a6e-48b9-b30a-9ed107f09ad2",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "93ffe05c-8b9b-4091-a32a-80e69e102113",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 619,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}