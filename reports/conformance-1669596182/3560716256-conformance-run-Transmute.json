{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bce15ce7-1667-472a-973a-38739269c773",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ae5e7adf-94a5-4d1a-9927-eb23e3fa3c52",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be8490fe-c9ad-4b5c-a253-f0f2b786a5d3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2c6f2990-4c5e-4b14-b7b0-94248792bb3b"
                }
              }
            ]
          },
          {
            "id": "aab5aec9-750c-4b63-b23b-c4f79005539f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b1bf950-0914-4a58-9e42-5fd1c3d80522",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7e92c53f-3c23-4244-a53d-21ffc5e76722"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dd4e6eef-8c8b-40e4-aac2-a9cd66c88e24",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7f3564d5-5e76-421b-ad68-0323ea6ad05e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ff85f8c8-93e1-4858-a844-4b4cefc6e3ef",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3f09a81-a1ae-4ed9-bf59-267d7395dd25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3971ebe5-dbdd-4a63-b481-9d762ad1687f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "950ad1f2-6052-43e0-9838-22aa06ad97a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "165d1151-d23d-4d30-a798-ff9bd46c5a69"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "106216a9-b6c9-43f1-a53c-da50f3c62a32",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "93d22ed2-8043-49e5-b3be-0a94cec2e991"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8846402-1158-4598-8abd-b118c805d682",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ea2f521e-6d6e-4ac9-8364-5dff7f52838b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21b7f8fd-025f-49e1-b4e8-a9acd2ff1676",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "715687f4-fd61-4649-b86d-5e065da31c4a"
            }
          }
        ]
      },
      {
        "id": "467af261-9d41-4a5b-9c49-793f9b9f69ee",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "926eba9e-8290-4d0c-86ce-145a5e255b18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "866c79fa-1226-44ff-8ee1-5286ccef71b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43c9c90f-76fd-4c35-8fa5-8b0c25f28a73",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1e58c3-f361-43b1-aabe-7798aee27d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c41c1fd-2958-47c1-a36e-c00bf9656d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff13f9b-b2ae-4969-859f-75d3a1380c4c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aa882d-a5f9-4c46-8b6b-e097137e1a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb86700c-df69-4f04-85fc-3283e632e22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caae04ae-ead1-4ffc-ada8-5fcc5ff11a72",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87aa178c-48de-458e-b1ef-a50cd3822e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21901cd4-0660-4a5d-9f03-54ac5d196466"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c1cf989-f844-45ef-b59a-42e432dc4ed6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36585e1b-4aaa-460d-a09d-49cec278faeb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1687a94-348e-4cd2-947c-979e85531491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf47f01c-9981-4e3b-9eb1-47804a9c8605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32839ec4-1b4e-4731-95f3-3524b9c9bcb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1745430a-f12a-4ed2-aeae-79f2b3233bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e87ff16-e7ac-4ea1-84b3-f13d67fdfa45",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf61e523-d34c-4695-9e88-705a4410a77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d8a7ca0-6e9d-4420-8ab1-5fa6a7fbf2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bc9c80-c273-41d4-b387-c45a6b5ea838",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "5b55d967-59ef-4a43-87f9-933806f601c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0b732fa0-cd1b-474f-897b-0588d9586ba2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "97fad69a-2fa6-40d2-bdb4-f084fdf41548",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0ea0d27-f2fd-4c7d-a760-09691ae6fe59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "376a91fd-5d8b-4dfc-a473-f18764c0694f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb482a25-a0de-411e-a4c8-b3aee02e3f65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "322ce1f5-9b0c-4648-bbc8-963a04fdc9c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6116e5d6-b029-4a58-81fc-5d4ad7c78f3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7e56ece-9d87-45c6-a4f3-0b8e7e41bb30"
            }
          }
        ]
      },
      {
        "id": "2f1c912d-c1b1-4622-aaec-627f3e28b34d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e117c98b-de2c-4739-b9d5-ab7623bf210f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d932d7d8-8acc-4043-a6a7-b96ebe05129d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "896a034b-9fd1-4582-9645-fd4017dc7561",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b691f3a-d7ef-4325-9af4-a2bb6e37ce34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdff6440-479a-481f-9f0e-a2f09ad7c3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7593e245-24da-4726-99e7-b619e319f251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68a5fe26-ddd9-4442-a712-6f26010f65d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2421371-73bc-4cb3-95b4-778a971bda5c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046416ed-d8cf-4a4c-afb3-fc430080767e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7d7713-6279-4f07-91e0-e960591e76e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad0b63b-9e1a-42ae-a0bc-9946421cf79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5caf83b-794d-49e0-bfa1-d7992abf1aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2f0e28-73f2-4556-93fd-a9286a512e39",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac3ae1d-5f5e-4c4f-8bf0-52eb0b57f70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec609ec3-5302-4b56-8b94-3c6bd658cda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afac1d8-6ec6-4ac0-b718-75499c57d7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00fb4047-4421-4a25-8f82-e27a0409933a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db27e2a4-c176-4429-aec0-745b0e9e1851",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b267357-bd09-4abb-8e99-93d45a1397a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94e1e4c-5d10-4c56-b9c8-c2b81dbfd3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9d0741-9d52-4dbe-9d0a-7b8f498cda02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f1a26e3-571e-4a8a-9596-4f98d07ac40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82f45a8-71cb-4ab9-a059-eebb2ac38f39",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf17f1f-8a6c-4e42-b35c-72cb10f52ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16c79f4-4fdb-4766-aa5d-7aaee196e1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a37880-2ff9-451c-bf76-7455cfbd53b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b64915f-187a-48f3-91d0-8732a9eb7d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a187e6-cfa3-46cf-9b5e-2fec7e024ed1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce540d8-2d8b-4c51-9efe-2637c14a96b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc04f4fb-a1e7-4aa5-b2be-d91817c5362e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc06061-f6a0-465f-a93b-7b585201ea57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea29feb9-4901-4239-a17b-e243f2bc01aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f58c7a-000e-4fad-bbe7-4f392160914f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1c7d6b-2f21-4fcb-b034-3fd34fdfa931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1105309-fdea-41e7-9b8a-d0a26336c458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b649fe35-0c96-4919-a5c3-66d8bb5e9521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ff8b1bb-14f1-4f76-85be-ffbbd363a617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b18e48-a319-4984-b304-e88062e80bf9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b06a61f-e4d7-4c01-a3d2-b1f9aec39cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981e005c-9f16-4328-a666-e61a67d20926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2530ed7e-b49a-4700-aa2f-333ec2d1b130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54ce0f86-12a8-4654-8823-0101d160c62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b0c842-1086-4b1a-aedd-7b40b9ef2816",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7fd4ce-5f94-4194-a0f5-2e8f95e73382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d4d1b2-7b04-4eab-b6f8-b8ace631c885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3b0b18-fd68-41e6-8628-5650091d1a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4c5aa7b-23c8-4d92-a605-aaa97c4bd05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15d2cb1-95a7-434d-a7f2-ee3aff9c0d0e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d419d34a-1b71-4203-83c1-34413486d1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816a338a-37d6-4918-9a5d-a4c23f5d711a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4788a412-e07a-41fa-a51f-71ff17adeae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36c689fd-c8c9-4b72-9e87-ebe9953df5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f1c31e-1cb1-4da5-9c6e-ea514807f810",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04aa7927-4e68-4209-8711-58ef20ed9347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cc9d96-ff3c-4a23-93b6-80b22c472a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299306c0-be22-4c11-8e31-fd91938c6175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4449bb56-2f74-4685-ae31-ca62ebc38d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc034b2-8bd1-4b19-9dba-eb01655eb41f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae6d148-53f6-4ea5-83be-ff5e7824cb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632da4e3-4c45-443d-b92f-f7e0d85d8525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdaa6b64-37f2-449b-b713-e13223dc7f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37fca597-5ed8-48f5-8907-10cded5f450b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63922d27-b327-4501-a238-b3ec4bb7b241",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3672fafb-1551-448b-a27f-2fcc1f5a1646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c25eb96-09ce-4323-96c7-7a9b3d50823b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d13cae0-3696-4362-9823-ddc18f97b027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b17db088-cd32-4abb-9e8a-fa3748dfb812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcbf065-089f-4f49-bacb-0fc20ee6524f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7491f468-88b1-4036-b408-2ecae79ec9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95977c27-df1d-4348-8de8-411feb9f86ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae2b3e9-3e34-45b5-9f85-acda64f81357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "553752eb-4c67-4559-a456-ed2c9271897e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0fa865-b515-4319-9757-64d2ee9a777e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7de991-317c-47e3-afe5-75937ab98f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0637c6d6-107a-4c0f-bf0e-bd17887aa753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb77635c-2afa-49ac-a00b-4e30d16d42ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91837f5f-a184-4b39-b217-b377c59e2acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda03161-7188-4fe3-b3ac-a2d7e687fc2b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed61a5f9-b094-4be6-81cd-8c70ac02e48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0086e44c-911e-4c66-809e-5febc93a170b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beee052a-fc87-471e-af68-7f52d8b191ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eac75e62-b197-434c-a200-b24741ea0e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bee9c5-85f1-4895-b7f8-364d682fc9dd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f894be-0181-42ac-a800-a6130ca71ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829b0785-a922-43d1-804f-cf2ddfb4bbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19825eef-440a-473d-8da6-fdd391a5f6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8272e4ec-58f5-4edb-b375-c70bbc30860c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04990e4e-6a05-4a76-b5d3-636145b51da1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1e1202-e0f8-4a4a-a9d6-4ebc55a43475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78011f19-2ff7-4975-822d-228c75326789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488bbf14-7694-454c-a691-d758c42e3ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2a6262-8949-4412-849c-bba02ec6d34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8663721a-5e57-4c0e-af68-6e8cb0926390",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7052e6-7d66-4759-9d6d-fc1cecad92dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3706942f-ecd3-4faf-a58c-123c856e4108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8435a6-ecbf-47cc-9e8a-c210d7297d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f7ca6e-7fc7-46b6-96eb-04562e9ea38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffae39c-c227-47bb-90f4-08242755b652",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4a1860-d7a9-4dcc-9c00-7109259f13c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c52eaab-c2f8-4ff1-aec4-8a745fcc7577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8ee651-3c64-4621-a40b-c8faf4592756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e88d416d-1777-434e-b67b-7bea93d01c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d64f16-d774-4c42-9abc-176c1dcfe609",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b16c506-4ed3-41cc-9034-64ba92e624a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f070ab7c-419a-417d-a3e0-9e04c9b09283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61bd3d7-4bf4-4007-8ca6-98c23b096e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b944d2d0-27f1-4bad-8737-dab28b0a8698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de64c7fc-c3de-4d40-8769-7515ba8d04be",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64df6d5f-746c-4af9-a3bb-2563fbf1c571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17aa4e51-5307-4879-9740-219c97bd2cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467511b3-b5fb-4b8e-8e5d-6b1d85126526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e670f3a-48bd-48a0-965b-8f6dec6df31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e36688-8677-4d36-9cff-fca41f307e14",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623c7c25-b971-4ca9-abf3-ce37a4aefb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b4f458-f8c9-4516-afa1-f6ebde649ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d2e517-8544-48a9-8a55-37493b778db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3535879c-1f5d-40fe-a1d6-8a888adb17ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ed6a71-ef3a-4e97-99d4-566f5ba3fb3e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d53be61-61fa-4305-b312-fff2c9b413e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6263a69-5782-46c1-a175-7b462b2edb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8fbfbd-fdd3-4ae5-81c7-e93ed871bcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e55bff8b-f778-4b89-b980-4b7890846d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81351049-dd4f-4150-8dfb-786fa8e0b880",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4216ac-fcb5-4bb8-b871-77c26ccb2f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc062ca-31e9-431a-b462-cae45284705b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068781b9-dec3-4336-9626-11bb274fc7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "387abc65-bdc0-49a3-bec0-d6e0a1f72a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c4f216-c68d-4484-9779-75441c9295c3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc25895d-dcc7-4e7c-ac74-4cdc8543615a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ebf545-2132-4d3a-81f2-f5542f0768c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0fa943-a7f2-4580-94b6-8977f56759f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f36d8ff-d8f6-4d20-967b-a1cfcbc06a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc204ac-ae14-451c-8313-81631763cb5f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5167e60-c3f0-4b38-91b8-073f8e2ddf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86b7666-db59-4cbd-8cb3-5ac4cc36a6f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a6f409-c348-4a16-b88e-88ce131c54c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a75bfbf-32b9-47b5-9df3-8babf275e890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344e3fdf-613e-43be-9b74-4a72607c46bc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7684760d-1333-41a8-bafa-6eb79f0a3ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7bfd52-01b0-4089-9753-f8da402fa463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97474c71-d848-4852-ab12-01ac918ac04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83dccc26-8dfc-4a55-8496-558cd9909f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ec99af-0ae4-45a8-a2c4-8e5bba54d375",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f7de95-1e82-4d36-bb80-a862757046cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe4b875-8448-4995-bee0-540fe40616f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45aebbb1-4651-42c5-9721-dead922103b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4c39b8-ce4e-4d58-80ef-f237ae6835ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75acfdd-d1e5-4b90-b394-74001b12f18a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c213a97-1237-49a6-ac94-5ba75ba44768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c02174-2152-4968-91b2-6d0a093b5c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838f0f7e-9660-4f06-8a29-1f0f5272215e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3785f731-e4d3-4e0d-956d-6bed2fa12a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2a48db-747b-4e1a-93e2-9c886ea80575",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ed15c5-d7d7-4d99-b255-962bb822fa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41e73a7-f1b6-4df4-906e-21e3f43ed3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105185da-4a24-4cfd-ac3f-4cc6e766981f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "837ae8b8-8598-4be1-9408-ff68323e80ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e751ee2-ded5-4d9b-9471-bb3b3e89f1ad",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082f9ddf-62ac-45fc-97c1-d4f8d0d2b4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4ad202-abdd-4e39-bde8-2ed4965e4e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d318633-325e-447d-bb9d-5121d3c0d89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97e16843-1307-418c-adec-9681b7810a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d921165-c293-444e-bd5b-50b959b0cbe4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37614750-bd3f-450e-954c-436a970feb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7ca98a-cf60-45ff-9382-1bca240c8182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77046088-e045-4c15-9589-b1e091a478b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ac3c71-7c15-4e1d-87f5-0a4cbf3b19f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45779a55-c3fa-4397-9108-3707d0e8a6ca",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854f4912-7c68-4f5f-a4cf-a5f8caa53589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdb66e9-e44e-4142-b2f3-c7f295bf15d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d812a5-f18c-46e3-abb7-d239610c1a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba4833c-9860-482a-a7c8-85b6334a47c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3d6dc8-ffa5-4251-b111-f81db9a36e9d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c5739d-cccc-4322-afd1-9768039065ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ade819-db9a-4166-9ddc-df8e862b4bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0817cc5c-e975-4558-a834-5c42d6e61144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "85597fa1-ebb1-4008-ac47-c986cd4c2ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e00e0d8-9b2e-4f3c-8547-d040b91a65e3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf3f6a3-67f7-4873-8f69-2ac287fc12b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a1b27b5-7978-4d5d-ab3a-00e147fa1ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13239a1-cbf0-4bdf-8ac8-bbf0e2ae7655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3a2c86-dc10-4e78-9602-584b5e657ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2557ec15-ceac-4a5b-b262-cce67532bf2f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19adb5ad-3f2b-423f-8be9-694c46429c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49f53f8-d81a-4faf-84af-21633ae766c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e099e5-8568-44ad-833c-626c3d3eabe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a379c54-2b76-46de-95f6-7ffb427a1bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bc3346-19e8-4f4f-8e36-fbb7832fd2e5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f8cbf5-de2d-46dc-975e-bec07a41a42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c01c43e-db65-4937-b9f8-4695474a7e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499fab8f-0808-4cb3-b8ea-6ee6889e55c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "92f935a8-8893-4a98-939b-6dfe0a74372f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a8b600-80c8-4376-b37e-0c0397dcefdb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1d487c-fb10-4d14-96bc-d616ea5d617d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded9bbd3-454c-4e3f-9057-482f4b5adfe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec646cff-7d6b-43d6-a3fd-06b823f5701e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2990d28-2abd-47c6-8b07-f428811056aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c187180d-7adf-43a7-ba12-bdd7b88b75ca",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5981de2c-aa46-401f-983d-2c60732035f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7813e5e-7b7e-406f-9d66-1963417756e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0489214d-ff76-4f72-be10-772cdb966614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5e9895-1a13-4662-83a9-88eace9c5a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c7335c-30f6-4167-9732-8f3601b16ba6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0877b4c7-21eb-4609-8dbe-e69d82cdd03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172cea88-ae4c-4add-a38e-274f887947cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2089ec-cf16-46b2-b98c-09384a0873f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1df8073-0c43-47fa-8fa3-831808bf7053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078707de-4ec0-4633-ba52-d13d0773957b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb0ceb8-b4c2-4e69-af0d-3a9bf648aa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bd2f5a-78e9-4813-8f02-8a70c1109271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09217c33-3bff-4b2b-bb37-72985c0531d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0aafcea8-e627-423b-bd42-9a12eabb392b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace71d01-c268-46e5-9c3c-7e24571c66f2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d509237b-91e6-4f15-b415-a8675211fb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55de8ce6-1cba-4840-ac7d-6d20efaa5579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7a7457-c8a2-4907-8748-2e319f007d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3faf317f-444e-450b-8b48-08af258ae66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73995f2-c849-42d5-8fec-2d83483ffb29",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b10a655-c65b-4649-83e1-f93b4bf1f726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3504d5-9e15-44d9-8528-5937b13f7dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be5045d-346e-42eb-9e44-5227f3cf9b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "46250b05-d33f-46e3-bf7e-deb7c10269d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5979a5a-b35d-4e7c-b490-401a43cfc7fe",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c16fc15-cd44-4699-b8f7-d8f801f8ba67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0e0daa-93c0-4daf-af13-2e85bbd54ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95828626-e542-46de-a4a3-d640a6dd29ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b2a58e-21f5-4fbb-b4a6-49872f9a774c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4b9571-cbe4-488f-8fff-ae30c30dace5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48243183-6862-4277-a6e5-85c510956b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6213495c-c792-412b-95f0-407c55745346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accca6fd-308b-4467-8eed-86aed1c731fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "181a7e0e-a743-4ecb-adc2-e48d748c439c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446dfc01-5194-48d3-8dc1-fa0a2d39b0f1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a55cbf-a506-4677-9a54-59db3545c0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e92388e-d98d-4692-a2a0-32a569ebb390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5f6b89-2830-41c8-ba94-adefd7263256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8279888c-aff9-4192-91cd-4e152a502393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8fa8ab-4b7a-43c9-ae9e-8debc55452bf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac763ace-0e8b-42f2-b703-7d230d2a8c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c249fc6-20ff-435e-9f19-f9dd4f89631d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3409e53c-9011-4c84-8346-2f9ecba5d387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbe7396-5dd9-4701-9804-e3d54129de21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd31f0a-f2b9-47c9-b0b9-d059f728e857",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1fc86b-12ae-432a-b617-8d68acc5314a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e32854-bd42-4cd8-8cb9-1b933b6698f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54b7d75-8477-4b8f-8d27-284478c0d45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66a98549-08fc-4e59-8569-f15442f160a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eda4096-4d7d-4bab-b6f5-77877418056a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b70234-ab33-438a-90e9-38d1f735842d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61b4777-10ce-47db-aa34-ed01d9554ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567c8a72-05b2-4ddc-a482-ab69b11612c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "194b9e52-0a7e-4f81-8852-011f0008ce40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8d73a7-d153-4d5d-8972-cf758ca6fb2a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd9753a-a1e2-4c41-8d29-2e8a9d49bde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bd367ce-ebd1-4ab9-8006-681ae1d98777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82d433e-6dce-4786-9c8a-725c79574bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1c6c8b-3564-4d46-8c98-201f69afa42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc44d4ef-d3c1-4c97-a457-60423bc8a88e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5755aa22-f755-40dc-8282-c70032f8e8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6fea9c-99f4-4dda-b819-e260ea40213c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4adf359-b71b-4e6d-863d-16ac3798b60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f77bde04-e222-4474-9b48-3b7183e4873a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f96d09-08da-426f-99f9-56d2fa517a81",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e9573c-6232-4f3e-add4-4750067df50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179e90ce-8bde-4139-9965-6633e147af79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ee4433-659e-481d-8bf5-c570fe4adf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d287be7b-c890-4ae5-9fa0-e8aa038e8e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c728fe0e-9d79-4cd6-afcc-191497f323ac",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1ffbc7-45d7-49b0-9cbd-297a44d015e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c36cd51-1df8-4dfd-83e7-4f2ca09db923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08c59a7-678a-4dc1-ae3d-8499008306a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f1c7e3-4c96-47ad-acb8-c8c4448c6e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400f4185-0518-47c5-bf14-6db6ca135515",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e70dc88-b0bb-45d7-aad9-6794c8b919e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dd8c55-93a4-47eb-b7cf-d5361b285d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7bc8e6-0221-40fe-9684-6a52ee4211be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "488d0bf3-98f6-4598-8e4c-133e3902c145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be69378-f566-4d64-aa7c-f79020a9394f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced9d9b8-cc91-4f98-a11f-22f93f3f80fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79745e7f-4c80-4582-9186-bbc8b49d6578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a025adf7-bc17-4201-a8f4-99d55dcc6c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb7ab4a-a33c-4d7b-bdec-012804a0930d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9befdaa-6ea0-4386-958d-867c6471313d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc1293d-8444-4d1b-9723-d89d8801e490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1065f283-56e4-4747-b17f-3048e488d8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1251924-eea0-4f46-a667-a1487073ce1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cb1d11-69e0-4cb5-a252-753244aa88ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7f3bbb-19e9-4c2e-999b-d5ad8918dc2e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d60bc7-2bea-4963-853a-e34afee072f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4beab72d-f740-4aac-bb30-ceb30d351e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5ffb7a-e1d6-4c86-a727-4535f186597b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2982316-6590-4f74-98c3-c6b9ace0db53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4b4b16-8707-4c1f-b5fb-ebc24eaaeb34",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0711f8e5-0f8a-4dd3-9d2a-e4820b212a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba582de-c25a-4437-b8d8-4b581d34f736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4d3d13-61bc-4c65-97fe-8856410e4dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "628ba7eb-925c-4f7e-b11f-fd485196ad86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff81e867-0718-46cd-b03d-fa2d28147d8e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10533b4b-212a-4584-8024-3e7cda39aa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210a9bdb-7b3f-4994-9153-12219d31add0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d114ded6-2eee-47a5-9838-db589007e9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef5e302-9a67-455f-bac6-9ee63fa4c9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104059e2-8265-4e6b-a2d2-24a3f8be625e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8071d1d-b364-4fa2-907a-229bb241a8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f6ce6b-f8cb-41d2-87e0-c82c96363c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82deacf5-2787-44e2-bb9f-9236be7ce4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1453efcc-9e0f-4d53-843a-d86f57fb5075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec64e01b-8eb8-4b7f-8b45-6e8e5d9cb3f1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462e4a35-ed92-4405-a423-27fe69401684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b1977e-fb9f-4bb3-bbae-24836ed3cbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f23c0d-4fdb-4a40-81e6-f7536fa6843e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "702db92d-9fb2-485f-a623-2f3b181ef349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb1ca7a-5a43-4bb2-a1a1-590a0b9cef0c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1178a1a-fba3-4771-9291-889ac1fcdc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28550d0a-d8b9-4ddb-8bba-5dabe7aaad72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbde7c5-47ea-4110-bc14-85cf92fc19b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7403e1-2c57-4cdd-ab5d-ddb0529da054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0a471f-60f9-4101-884b-aa2bdede00b7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddab0e2c-b70f-40ba-a70e-3930075ff2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ac6945-558e-4149-baba-36e592e3b009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553e3b9c-03f0-4051-80f8-721773b46b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e94bfe9-a177-446c-bd11-b089c584b1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ecf308-5cfd-4e4f-8c64-938b69137fee",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6b10d0-7773-4adf-b0e9-6016801e793f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0121cc0-2b4c-4fec-9ed4-05331139c225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9602de68-7f7a-4698-9aee-6b083aaa837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "727bd08f-d533-4800-8949-220974f64b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829bac3a-49bb-42f2-8398-9dff1bc05fbb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929fa354-51bd-40b7-9eae-30c607c17480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0bf514-a2bf-4ea1-b344-acea6539b999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db4d20a-c668-47af-a4c5-a50a45877c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee07efd-a7f5-4477-86d2-380f783b74e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676cbe1c-7f0b-495e-8e48-4f147d44a989",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59059f9-a07d-4fe6-866a-80c9a2112422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868823e6-1167-436a-9764-2fca05f47a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323d9655-de3b-4086-b918-fab7bf331b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7be655-1d5d-4d59-a2de-935347ec9c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945181b6-44dd-4fbf-aa95-44b06545566c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a97e5b-b151-449a-92f8-d36f8cce178d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dd2604-a3f5-4aa7-a6d9-272fb8076581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e33d8e6-6b4e-4d0e-8039-890289272ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e876a201-03d0-4ac2-9b29-37649a166db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e75c54-8e84-4cfe-8de6-bdbdbe3eafc0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7883850-b6bd-41db-8ebb-30a2d5a599e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d9d10d-0216-4df3-b15e-6a9693b5b483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3172e6c7-9804-4323-a3b7-4e269dee17e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de668746-89c0-4f93-998c-cb3dd49e3e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd022d39-c028-4d1c-a687-02045bca6bd5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7f823a-ba20-4b28-bb45-8de1a8d64d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebf4753-4dc1-4220-8362-f1500a8949a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26b054a-a366-4c27-bba8-0fe2d3ae836a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02e0293-1fcf-499c-89ba-284bb30de6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70e6edb-f78d-4eae-aaf5-e1687227f634",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63809349-361d-4798-bbb4-ca8b5185f7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f5a21f-af80-445b-9e29-63b7b313e061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9a73b6-7d95-4ccc-9f68-ef29e1e50fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a900132-08f4-43fe-b022-6c3c08724922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99069700-200f-47ed-9128-84e1d029bccc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0526d698-93d7-4b5b-93f0-1048110abfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204a93c1-a9bb-49c6-8e4b-9239a30f5c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edc392c-e198-4568-a8b5-9a00ee8ff0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b340ef6-d17c-4920-a4fa-ab3e44d4fac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e391c0a9-7560-40aa-9a06-dc8f50daf94d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e2ef03-a118-4324-8490-55a97885a09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cfbd85-c294-40d1-a76b-d6d814349601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adbd026-9b4c-448b-acfe-2cccca0e7e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24da4ad4-330b-4208-83ed-7cf5bd23a39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2729ca-dda3-46f1-a045-2addfa211190",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7bee19-e2de-41fa-9d32-acc1e93a6814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618461dc-b34a-4f8b-826d-018c048ea0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a586df22-7c97-45fc-8cde-d08d0b3d9a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae717d5d-045d-4d97-a3ba-429c87edc116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452c30d4-cdfe-414d-a82a-a11ae354045a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b305e277-fd6f-44ec-b94f-36c44eac600c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95b532b-9e4b-4a99-91af-ad9b0ea121ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb0b7b0-55a0-4974-aa0b-5fd1080fd288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd6671f-f490-4bfe-9ce5-3afad9aa1652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83edec50-3a07-4567-8248-296f38b3809e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9404fb03-ce08-4a7a-b5de-295ec54c18f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad302d7-93b6-4ce6-8cfa-f4baf3c33190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751eff7c-a062-438d-8228-c70c89bc20b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f93adc2-132b-4a26-b685-22db4e1186f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d456b3b-c1b2-470e-a0f2-18985c2d9d5f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8336af-aa31-4d4b-8e86-b9f8497a65fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59f5e72-658e-403b-a63e-81fc033ae068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5182b56-1604-4cff-9e9a-f7fd02ef973e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "132dfe7e-8237-45f8-b1b4-df80a29df8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9886b6-95cd-4273-86ef-240d16bef3e6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87013a3c-59a8-42a8-bba0-34df9f79d118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8569be47-6895-4452-bb64-6eb024ad73f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a57aa31-1656-47ee-9d6d-b480f530091b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a0e042-091a-4d5b-becd-323b01e587f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a20cbe-ea84-457c-a800-e1920ff29659",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffc86c0-1e7c-498d-8391-445dc054b4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce484b4-914f-45c3-84b9-b2ef2dbb4d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fb8406-eeb5-4588-90ad-36bac5305e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20386be1-a0ce-4c65-bc04-dc0af2a14611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d11161-e24d-4b9d-8660-c8b62310a837",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aba1737-9719-443f-b9ae-91408e5edee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e12868-2832-4ff8-bc12-4116f8cd6a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a35ad04-45ab-48c5-9926-b5d261573856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e45c7591-1d23-4989-ba0d-8a70efec192e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cb5a38-d0e2-4002-bbb2-d070e68ef181",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b8a996-5409-4e04-8e0d-5134656335f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c73af0b-7395-4a38-8875-630b6800e178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af09815-7753-431a-a725-ea949d426b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f645ab-abfc-44a2-b1ff-71140b950c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7354fa-e2f5-405f-ade5-28d43a61f886",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb442a2-39ce-44bd-a013-271ef533bc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232c746b-fae6-4a92-af2c-4b272687ac54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd0a086-cdef-4542-bfd7-c48b3f237356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f353c275-a938-498c-bca2-4ccf5bae7362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a036ff-cd67-487d-96ea-3d1158a82306",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d3708e-addc-41da-95d9-95bbbd61e4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13ec70f-55d1-40ea-8cf9-192ddd8b9344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00b19aa-4589-4f4d-99cf-9fce2f065b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "faecdea3-3c51-41c6-81f2-2febb75058f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9de068-b70a-4468-8654-479a9393b4bc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92036530-8d1f-42fc-8ed3-5c605e05f5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604029e9-24f9-4ea4-8b4c-1a8f36f665db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4ef8b5-8087-463d-8bbe-ca97824f86d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcbca58-3c2b-4b51-bbb6-10c289af0cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4051ef7d-44fe-4d1d-9590-e01fc37132be",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0222ceef-0b7c-4f94-a536-bb989fe1908d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723e25ec-33ae-481a-a45e-cbd112760a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3c65fa-694a-475f-86ad-d617c42a3b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a53f868f-7c15-48b3-95de-2dcab1b8d27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0d3258-86a2-41a7-886e-2ed27e73f229",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56853cf7-8e2e-448a-99a2-91735d0aaf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6119e4ae-fdb5-4cf9-b9b4-9ed6cd28e064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb43ed3f-cc0d-43e2-8930-0c5db5cf9d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "690bbcfc-ead5-48f5-a71a-78b9655533b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e4f6ef-87a3-4462-a342-54a6ce73172a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5632375d-50cb-4605-a81a-87926e989482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1a037f-5559-4bac-8fa6-3cd73608198b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427f9245-bd1c-40ea-8739-b7be2e351ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba8462b-7bba-4e90-bc53-0a0b7853c976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0af1a30-0fa3-4d16-9041-038134e893c0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6067f2-5de9-4acf-bee2-6291f15e907e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9341b963-5857-4463-a8d4-5388dfd97468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11efe7d7-ce45-4204-abd1-112ec5f340e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "503b1d69-2695-4a14-8b4f-23e3e0727e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302f0899-c47c-4c35-a5c9-b1d6fd1ccbfc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbf6105-c541-473d-927c-7a85dda3b790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d3b5a8-1951-4991-a692-9cb526c1f10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a23ba4-8535-43b2-b97e-b018143799f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6100e5b-c0f2-4e57-bc6a-b64be1b110be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2724b4f3-7761-4489-8a4c-597ec1df03aa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e629fb-a3cd-4eff-81f0-b9fd697399da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e25139-8698-4840-b432-33380d5fad93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae158c38-916b-4fd2-8e26-3d137591fd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2e3c2f-5039-4dee-89f3-0dd00ba34338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bf7a50-9e82-4fee-b0f5-42a6ecbe132c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07341c64-0ed1-44b0-b5eb-378983170bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2400fc0c-9948-49d5-90a1-c817afc4c862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354633d8-eee6-4bb8-a02f-6580dbd7487f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8dc8caf-b39d-4ffc-9bc5-c11a300f11f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb142a3-7198-4e73-b330-226cfba3f46a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052223b6-3c67-4551-80d5-7e02577eda9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "addc41b0-d391-4917-8dea-e6c2d0879c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc0d703-cc25-4040-acb4-6a9ed9a1015d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee7baa4-c743-4441-8eff-59feaa2a8968"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73675f66-d494-4a58-ab64-8cd3988b46ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e03ed22-4cdd-41fb-9bfb-07abe4666109",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da86a2a-da0a-4367-8efa-d83027988cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0b5b785-7db2-4a19-943f-8d2610cba436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10343632-8770-42b7-90be-d797bc1f9822",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "f1484413-e089-4908-b1ae-9edc3b06909d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de0c28c-eaad-496a-a87c-b5a07a626f2c",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e915d29-3269-4b07-b4ff-b4ae9e91ece6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c659ddf-ea0c-4f37-9924-081cb8615910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dda551-dd24-45f2-bb5a-5d1598bd47dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e7acab54-7f48-4d8d-8a96-c31fa050ca6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5660d7ed-f4b6-48c7-900b-2fe6598aa1d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e54feb68-aad7-4b3a-8c17-acc0e5add38e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a831c658-541f-48b1-b690-fa4a3a9ba05c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87fc870b-c2bb-4c93-b498-bee127b6a794"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b164abb2-ac4f-4324-8d5e-90c03af66367",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "131f92a5-3bc9-44fa-b2bf-8bc54306e8d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ebc1281-ad1a-4afc-bf03-bce54beb36e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3413ca64-9d65-4ca0-be9d-6d1bc00a9476"
                }
              }
            ]
          },
          {
            "id": "3f542272-e76c-41a5-9bdb-a45e1ddc5c12",
            "name": "Positive Testing",
            "item": [
              {
                "id": "56ad66c1-38e1-40b5-8876-27b564f7f40f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "612fe106-97c8-457a-b907-f03052a305ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8df89d6f-7086-486a-bcea-363408ba5c3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5180b25e-97d8-491a-9171-477f1a9a86b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "85f70f1d-0cc6-4052-a711-ced9f91bbc9a"
                    }
                  }
                ]
              },
              {
                "id": "9ea83357-aa2c-4df4-aa79-c30b6642dd15",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e471162-1ad1-4ab2-9671-cbfdbd891831",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "317fbe5b-9e7a-4c70-8b41-38afcbf8da9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcc197e4-93b2-4300-b483-1ac1f2f06be1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03380251-d353-4256-b94d-9898a31b21c1"
                    }
                  }
                ]
              },
              {
                "id": "bfbb61c1-6a4d-4eac-a6d7-14087d381ce0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5296e64c-8ffc-43d5-9fb1-6100b8b68659",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07f49635-91d9-40f2-99e7-88e2e71301f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a33813f-97e6-4084-82e6-6d3efe59f769",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9409fe55-612c-4dc1-b081-71d9bf811f33"
                    }
                  }
                ]
              },
              {
                "id": "b3e09b98-90c6-4a78-a282-4a2d11359717",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f9381d6-a575-4eba-b24d-442f635b0b99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e08268c-a46d-4fe7-9ace-40e6f2dfc39e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc16ba06-6477-4f7a-9dc2-fba307f1ce1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f788fb74-120b-4926-b018-046dc074c92a"
                    }
                  }
                ]
              },
              {
                "id": "769a3775-8f0e-4de6-a625-7cd5e5ccc1f6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "622e0caf-25c6-4a0e-88be-edda1a8d298a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbee1bdc-d5df-4737-9329-c9c95dd4b423"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9f5214e-1ade-46f5-a4c2-91c03586c4f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "83eec0fc-22ca-42a8-934c-bd73c1bdb443"
                    }
                  }
                ]
              },
              {
                "id": "423c567d-a2a4-4b5f-a175-7753d12636ac",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a3ae912-7047-4963-ac40-feed277bcc77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acbbcced-f18a-44d6-9c70-1e102aad6829"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e919421-cbaf-45be-9b84-e09d66968a3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "39da88d3-1992-40aa-80d9-4affa72bfc7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7fb83e0-e3ab-4497-bb41-f1d4a33e6c17",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e55b9e8-f5af-40f4-baa3-1e0261b4d5c4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0cd0b76-cae8-43e3-aa39-7f6d8ece4bf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f66ab697-c282-4b12-82e5-db4140617867"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad3459e2-9a90-4ccc-9d87-83041b17a914",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6dc61731-018d-40de-bc31-32c9510b4bfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7996d5f7-ec31-4cc5-b80b-81689106887b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1c893f4-5024-4415-ac51-0ca3a83fd4a5"
            }
          }
        ]
      },
      {
        "id": "fea30a26-c3b7-456a-9cb3-04ede57de3ae",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ad6f673d-a385-49bb-819e-cbea23d5bd17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7076b94-7420-43b5-8560-948b1b7ebe94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0647d85c-1417-48ef-892f-45583284f81b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710d9d71-cf6b-4e43-8522-c85e30f4eb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c5d9d7-a987-4d5e-9ad7-f88ebb7436c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0536b0-9bae-409a-9140-db4ba672e433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5bebe7-9762-413c-93a7-5cef7f4f80f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25a6a20-5618-4560-a017-8ddf3fc4dff9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8ac299-38aa-4a6b-a079-347e429f9aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37eeb0f9-3bf2-490a-ab2d-a1ca0225d06e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfc337f-b649-4416-9a86-6f8f2683a744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06faeb86-5881-470a-afd2-c57555973e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0942a6c9-1087-442d-91d8-b5f78e9b2bcf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41efdc9-542b-4995-a4e1-38e90d304c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa3103b-b537-4bd2-a4e8-006c394abf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a57c4b-72ec-4a7e-94c7-eb3aefa08284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d48ad831-8ad7-4f31-9218-7c9e8c8086c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4f46c6-c4e8-4573-a4b5-f6f74975c809",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3ea1e8-7085-4d66-8921-dfc12a00f4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c210932-268e-45fb-893c-82504d131497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef3214a-d4af-4c6a-b258-68ec15789cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a682f1f-21d9-4cae-98a8-bf98df2ff607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8b297f-1751-47d8-8f99-80ac30d1e3f8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19efb628-924f-42e9-94e9-760c90ea6bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073d8d3d-c31e-4208-a592-0655812d06c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25a53b5-d52f-4526-bb41-d87627e2d4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d29f60f2-1e14-4569-92e0-a0a1278984c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b1aa04-9a12-4311-9b2e-98953f99d184",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c1248e-ac07-4b6d-9511-201bf87f53f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87457a43-9362-4135-999b-089c4b54a0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4413c0e7-3de1-4bc9-814c-d42cb3c688ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6326d8-9d5c-43a7-80ce-26f9b33b50f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac65df2-ae34-4876-8b03-bd9a8d98bf6a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801adfd9-3872-4b3c-98d6-f586bdc8670a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650cbdaa-4101-4f23-a03e-b3022ee4272d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6c9bf5-bf42-4b83-8442-7581b2a2be0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8caea43-d3c6-40fc-a702-b8550f025d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f770640-39f2-4f23-b816-cd2a1a38d039",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e35d5d-daf7-4407-97e3-c90c60d031fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fb358f-7706-47e4-a1bb-31cbd43845f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3ee57f-a14d-40ea-bbee-bff272a669aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c18d3443-d6a7-4885-8bea-aa8779b73210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd2500f-d721-4e49-87ac-96a3165109ef",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d980e83-55cc-4db0-95ec-2ca84d512ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b182bdd1-1b0c-471a-b7c0-d5d31cf4a01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7b7c24-53ae-4b97-b0b3-d181eeabd1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b97febfa-d015-40c4-ab6a-50d7105e6f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd28f20-f918-43a9-9727-212c7c202b51",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b61cc9-3b2d-41c9-8d52-fddb11faef9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b363a5a-5fed-43c1-89ad-b9897496976a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b31e179-4570-4b7b-a9d7-268f94901bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc2fd8de-930c-4955-a7fa-4190069f063e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7acdfe-e479-46fc-8c2a-0f25bc577dab",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f77a79-bf8c-46ff-b3c9-e20a919b7d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55a1054-c10a-4f8a-8615-3e013bba40a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f7ed28-6527-438b-bc6f-f708435ad935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3d13477f-d3bd-481c-8ee1-d4be9461d454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4869b1c6-9a31-47b3-a348-644ac58b443e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed77f8b7-27b4-47f1-97a6-3076a2dd7499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe28402e-86b1-4628-ba7b-99d380925fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4bde1a-dd34-4a9e-80d9-3a579eb71c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fc9813-c805-4e91-bcee-56d679c52e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fab9285-623e-4bbd-8f4a-c75572f066e0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989dd068-3250-46b9-bcc2-303e67e95c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeaa4631-4451-4d2c-8f67-945df2000e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9206a40-a109-4815-b2a2-0ae98831e85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f3c314-3f9a-4a1b-9459-8774a347d100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb69daeb-6dae-469b-848e-58321c10f7c9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dd8e39-0ac0-4509-b8bb-f82e2a2e7efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725d2301-ab76-42a8-9fe4-0a0f32df467f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a65416-df3e-411b-8dda-f2e3281af4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d936e0-3a95-4e93-97ab-452243cf53e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa54a40-b3e7-4516-ae0c-9592efbcdd0d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163652ee-c866-483b-a71a-dd9fdb384836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e414f9b-fccf-423b-9d51-a68a5a4a5bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8184f96-89bb-42b3-82ed-edde4888dc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "894b3fc7-ed81-440f-b2a9-0b464eb6e5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8344a49-b365-4fb7-8edc-ee32473abd1a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3660330-9669-4ae0-a461-563e05031852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af4efee-4fa1-4b35-83ea-67e2ba74726e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068d4c94-15d1-4417-9748-fa3d2d150b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f75e9b7c-7c2e-46e9-986b-9a17e171ceac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0e9fc6-cdba-4ff1-9ef5-6f86582c8fa7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b26614a-1da8-48a6-a716-0927a9c1b401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87349a8b-0b61-43fc-8de7-352e63c2657d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acea87db-f842-479b-919e-e4758140d935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbf98d3-583a-42f6-a5ae-bc257d324b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1160ded4-bbf2-4d2a-8944-618fde34296f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b11d8fe-edd1-46da-a666-79ea4dfb0973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4042add3-1d21-4983-8c4a-13f8a691a9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840ace2a-91dc-4b84-99a6-db333d9ca3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f66fa23c-2113-4a99-a982-e3f65b9a4510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0156469c-6a57-433f-940d-17c17f31fa2b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5420dc-b20a-499d-a9b1-7df012418df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43cd878-803f-4e22-ab4d-a2906bd54ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35499154-b25a-49f5-8e11-34b7bcadb6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66dfce2b-dbd2-4a36-9ade-21983a62be6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b27cb6b-132d-436f-b464-018a7f949417",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947a15db-7a1e-4aa7-91d8-6add772e306c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9588199e-775f-428b-929a-32a46f444cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a259ad-35ee-4910-bc31-93ed3081d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e10368-cf7b-49b9-b850-50a2222bfcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28d9f85-7627-4a6b-b87d-84196ac6503f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9848ba60-c361-459f-8dc7-f8310adb352b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62526a2f-afa9-49cb-84f7-1e01b09e208f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947e99fe-b9a6-41a4-81e2-0841bdb3e975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "245402e3-10bb-4bca-84f1-84954cca7f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23c5a8a-c108-4d4e-83d5-e6671dd1ce54",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7b3049-dc60-4663-8d6f-572edfacb18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdbd101-9a93-4e0a-bcfe-706f9c92a814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f78f3d2-f786-4232-9d27-c8893efdf3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d6e087-d51c-4c8d-a49f-3c928de90eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767156f7-a6d0-4dc0-9c86-6ade4efe66e6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c623304b-08ea-43b4-941c-482f75a5efc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0d4fcc-635c-4d1b-8287-1a9713dc8895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcccd50-7ed5-4211-87eb-729cf2d9bf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba276853-3c9f-4d94-9567-c85aa69cef96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841a9430-f9ec-4ec8-ad37-85c4d773e265",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad3b8f3-048c-4e63-b4b7-95f33587c718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0acb04-c2ad-4580-9a2e-bd7ce5a3e008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dcf748-6bf8-4f6b-af1c-027b18b59194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e629b967-56e5-46c6-bc4d-0bebbe8ee1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5b1303-0e1b-4067-ac39-78731d70de2a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da130914-6b7a-4dd1-98c1-45c68d78d451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321d75fa-7e1c-4561-ba06-269d2324b7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9924b979-260b-468c-b0ad-138bcf17088c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0891aec2-166a-45cf-9861-e626dec3869e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d91b68-27e1-4e5c-92ad-ab641e15d5ff",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17377bb-ef50-4b51-b3e4-2a7eb22a024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdee2d6-b04e-414e-abfa-df2cfea87ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694122eb-7727-43e2-95eb-985f7e4c8592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "199cfd2f-1666-4fe0-90e5-a0a11b25a4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a159c76-ccc0-4a3e-ad9f-1d678d7d2fad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf8a478-7335-45b0-9d82-a40db5f913e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2855cac5-a7ad-4095-af81-2595fb1fea6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e80c9a-1c88-48b2-90bc-fd9ea6e32e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c60bdb33-61d9-4672-9cd6-8264b84183fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25b8348-a4e5-4f56-be8b-86d07f71a67b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69c5790-fa03-4c0d-afb8-f8db7787fc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fe83e0-fa65-4850-b279-b7024c6bd0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5470218f-f325-4898-a687-f7136145079c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d503b9d1-6ba3-4171-889a-e5c3b9483ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a523b1a-eb28-45b0-8c2c-2c3e78075772",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d5565a-e3b3-4418-ae2a-de15ae6b3344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48098cff-0fca-488b-b11c-1a8a00c21405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00a029b-466d-4bfb-8b00-f9f119c2fc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9ad49e-4f14-4adc-bd0d-60d46215a2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176111c6-ade4-45aa-91f7-ca6b196701f4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89792aa2-c360-4303-9ce0-1e3e05dda4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bbe29c-8b31-4407-aeb6-8ea66e67ab1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a060410-71a9-45bc-9dd3-bdbc6408947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbbb3e2-008c-4635-a94c-5f619ee4b38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92aaab9e-e5ab-41b3-aefa-e51eae156ce0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c007fd-ca49-443f-8ffc-d1abfbbaf702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e91a0ef-57f0-4a53-8004-97f86bd8fbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33aa71fc-fa84-4b33-89cd-12372b01d99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "451765b1-43b2-49d2-9578-adee340adef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74a2bb7-354e-4fdf-bd1d-54f9c59c11b2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8b8953-3ebc-4d9f-9f27-971d144f27e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c97180-c799-4f42-843e-e2673ca2fbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0146ac-3a80-4a3c-8a3a-2139d0486c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe187dc-ef33-499f-b59c-d2c824abf6a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c13b2f89-bf02-4118-b9f0-1a5b59d47425",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ade3aea-65ae-4b01-97d5-a890853f89d3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fad1a0-bb7d-4c1e-97d1-7480185bd22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73169454-2686-41b9-af1f-e71b641d8326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fed78c-12d6-4861-a548-f278e61526f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bba20c25-0f22-4775-bfcc-25b7916710b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1275d478-600d-4295-94c5-6ad9e3982b69",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97025b6c-5837-46d9-8faf-2d5e69a8b756",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "04788df6-9115-4b76-839c-bf2c1f65beda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dffaede-cba7-4372-b0a5-aa46df8bf00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b42695f-3e8e-4516-9f95-c6d205f28f52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8325bc0e-2a2d-457b-ba10-2655796d77aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37a4a33e-a910-41c0-a0a0-8c08af339525"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a6804db-0755-45b9-9993-c105aa38d5a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c35ff911-8e32-4e23-a261-48fc624e617a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70cfe082-8544-4dac-b498-066f095a19de",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a300297-9ece-4053-bc06-a6444af81751"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0a474e3-fddf-411c-ba9c-a47985bc6623",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e9a8fea-8700-475c-a0c9-6988b598f1bb"
            }
          }
        ]
      },
      {
        "id": "6b35efc9-bc0c-4fdd-bb18-af07cfecd750",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "188722c0-aff9-4e5a-9df7-22e28ab1cb32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d73739ea-d2fa-482c-a97b-20cbddcb90fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa6533b0-2106-4dd7-8b72-8bbd5d772bd8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5096028d-fc29-4cc9-bc82-b0840ffa96cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e637776-6374-4344-bf5b-bc195e827056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f30e2b4-779f-4970-bc4b-4771f511f703",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ce2c14-3e07-4fee-934d-54dc14957884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90a4a39-2e68-4164-83a7-56b14ddc0bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4f32a1-a1eb-4c17-8628-ef5b2b087720",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e4f241-de7f-4167-9957-8fda134c3dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5c9da0-7466-461e-ae87-ee0cd6ba93bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1dade2-1cbf-4d04-8964-48c16b627ecc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ec3cec-6ff9-4d27-b44f-e3e7b5406c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5116f8-ab5b-4fa6-a190-3a8b58f484b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7035114f-5262-4b29-8b68-52b5984050c2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362760e5-431d-459b-9b34-f221cec795dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cb2f2d-93f6-4f04-90fc-041f4af8c64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb732b4-0896-485c-92c7-ddbbb3a2b50a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5df8b13-450e-45a7-aa5f-b547f490489a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7090aa04-23ba-46aa-b01e-4a7a812caf1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20c6cf6-5914-47b1-be1c-0ac7697a84f2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c05e4e-b8bb-4a76-bfec-412e037874bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7d6f03-501e-4f63-9166-76473bcc20b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68d13cb-5de0-43c9-8bb3-b2c6949dabbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a876cbe2-f1fa-4c21-97a9-16e6bb01ba10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bae389-5a54-4e16-af3b-77e7afb12012",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7849f3da-b929-44f4-b161-324e24600547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "789d5ded-cd76-4bbb-8e3f-75d358d39e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd349f28-a927-4ef7-9b1f-30c7bc1f0e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57a7df8-e5b6-49d5-8ba1-723df8b99254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e144fae-93d9-4612-9e75-8e8cf8239a7c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e491c99d-5a3d-4a94-94d3-97ecc910781c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac1e86da-370b-48ae-a226-2defd4eaf2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9b27b8-0ca2-4f54-93c0-be6f0daeb361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb8fd0c-25bd-425d-abc1-27b436415f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7cd8cf-0865-44e6-8b9f-7fd9bb3f8eee",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633b7297-e080-4eda-9efc-5bacad087ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80ede42d-2143-4c48-9449-45070b16c8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a27ddb-6e35-4054-a83d-ce2afcf6747c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b788c2-98a0-4545-88d1-2c2d659dc13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c048ceef-28ea-40c0-8e83-c26c1959c938",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc96748-daab-44c1-9f1c-3289612dc597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed41256-52d4-49ea-a750-6329dbeb79b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e3d3ab-04f8-484c-8541-7ef5f28f86c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d33b9f-dcfc-4f30-980f-ab5454fed61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178cee29-3a4c-4aa2-adae-95490b1fab12",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2f50d8-0104-43f6-9d67-9f33264862c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73efa6ea-50a0-4db4-8f78-b666a3f09c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49faed7b-8840-446e-adce-ff640bcf6a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffdaf37-54a1-4a63-9e21-8499d355ab4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83434fca-6616-459c-a448-bb2de5421238",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4710d0-f89e-4727-9cc4-919520474201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eaf48d9-669e-4977-9d8c-3997e088940f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b92e2da-4804-46b7-bf85-283139f82f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e57ecc-f3f5-4304-9ace-dc4dc4abfe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d513007-109f-4a06-a65a-df173a61352c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b723ab02-95ea-41b4-9e90-cd4d040feaab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a990f13b-8cdd-48fb-bd3c-a375dc2e2af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69302bd-3b20-4bf7-8bbf-0942bf250845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862fa509-b9e1-4e1b-a1b4-af747491a41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdc1adc-93ac-45ff-b136-ab72a408ed9b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c367f4-c2f1-4e93-b866-4ab6cf239c02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5408f9-34ee-49e9-a129-ca6455760da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3052ce-9013-4faa-86d4-74b65997e3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20606387-cede-407e-8751-cd1bac74b8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fb24c9-0acf-4cb8-bdc7-07ffdc4751a6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3564525-2753-4ba6-898c-d3195b67e1de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf7ba9b8-15e3-4a39-acc1-d5f3682d9831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecf50d4-63c8-459f-ad62-02849d4bee93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eec7ff4-bee2-4831-a7f9-03ff920c2195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dceff012-90b9-436d-8eeb-6e835965905c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3665cd9-3c3a-467a-9a49-db4d8e381bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878e9e9c-1937-43d2-bd2d-3ac833ea547d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ca616a-9d1d-4577-8f82-e051d6dc4881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f1ccf8-95af-4b35-a304-56b2683a4f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a1aa8d-e82f-4026-a074-a7b661172b2f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb9977e-2956-438b-900b-7d03b19e0506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4ed60c-a6e7-4223-9675-e2813162bcc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faab90b-6e11-4762-aadb-8729d4dd9f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c18e66-6a6f-4b05-9566-9aadeea164bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65168b3a-ddb2-42e0-833b-73236b377e46",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c157f2-b0bc-4df7-99d1-cfc2b94982c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd56ce5-d0d2-435c-a2fa-bf0907ee4310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec291e4-64c3-4849-88c7-0b902be16436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85db7b38-e56c-40bf-8eaf-c80fb08b2343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0539c9-c285-4b6a-bfd8-3ca665f94156",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7841318-8ad3-45b0-8cbc-e855825a55be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59287a02-8946-4335-8fa2-fb147fc816fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebbccea-bbd5-4908-b265-f813f57a8b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d797a3-3ed4-4ad2-b11c-11e067573cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069a14a7-fd9f-4d8a-b4c5-9000f83daeee",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8821d4f2-b965-43a4-ac9c-d42ed5aa12a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b28569-c611-430e-879d-2b862e17e59e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06de74a4-a4ae-4a52-96d0-42792271a08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca1508d-9705-4e25-b247-26193c8f54e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aaafe92-9751-4f46-b598-beb2e7628340",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086455d8-fc80-47c9-9ac0-8edff8924c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2472db-6b45-423b-986a-4459c3ab9303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35c12fe-314b-4ab0-a2c0-ae6fb683d7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16b0518-9221-4c7b-ab57-202a13679565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873e3986-9b8f-4a72-b82f-08aaaaf41ab8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6ffe1a-06ee-4b7c-8e4d-c1a63f71bb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e319e5-1316-4a2f-8560-aeba2827c367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57d4aeb-546a-4137-8a54-bd17844a577e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90304bd-2d2a-4ac2-83fb-cb8f17f3de63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54023e3c-7ff6-4fb2-acb7-87d44f9c474f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e734d96-2974-45d7-b3eb-af5ea76971b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edccb3b0-cbc7-488f-8d95-38015e6f00d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25eb2879-1cc5-4a86-919d-146f7799174d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7a92f4-4b0a-42fd-a1c2-5d3e078404e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb3dd1a-3fd2-4971-affc-86731a62e25a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652c0c54-860c-4f87-ae24-3a7c82bc73cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b70dbe8e-8c16-462b-85f6-94ce70112578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830c9c98-aa56-485d-aec5-8e00cd1b9635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377dc8cd-36d0-433f-98bd-79a2f96b645f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862f90be-e8c7-427c-b41f-1663f2c61102",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99f396b-1de3-4419-b2ac-3c48fe11c118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "748394ce-f8f5-40fb-bf0f-584a8fce5c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60fa76d-3ff3-420b-912b-dc4560a44d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e92663-372e-408e-b0c3-9d9da0e73e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80995912-e20e-49ea-bf8f-edb73ae8cf94",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353409c7-2689-4449-8826-8d50ce82c384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a85f8d7-e759-4775-aa9e-0f1dc2fcd287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0e93a2-0904-4f9b-bf64-9b8220b787cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e643b3d0-cb42-4d2c-860a-3dbf9941f8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049109eb-c4b1-4f4f-8661-de86c80e9c71",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564d9cd2-5ccf-490f-b787-d5e0a564fe09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae186a77-2f90-4e1e-89be-da13cb059e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394b8612-9362-4153-8e45-54c1e2ecb5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820179a4-2a2d-436c-b144-a76e493a2d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fd5cff-ab55-4b04-aca0-4ea2f4b6b218",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f887c699-69d3-42b9-acba-b50dc2f2916c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08ff3cd2-7593-4ef7-b8d8-782cd94734e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256a6c12-6fd6-48b1-bef6-06a97284cc9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eaa0d9c-fcd7-4a0c-b728-12d0716f3902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde9db66-a97f-4f75-b5ae-2b071ae367d9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa196f1-1a2e-456d-a150-cdb49e4b3847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65d2aa12-2004-4fef-b7d0-97106e5d7962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8de5b5-bca5-4c39-b5da-deb7029d1b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11894fe3-25f8-4a8e-94f0-7fe02022383d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4848d08-dfdc-4bdc-809e-61691c0dc862",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09148193-9b0c-4732-91a1-e05fd65c3ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "966b032c-f0bb-4d57-8acb-913b1e05dae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de0fba8-fb95-4302-9bf2-00fe0804e196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf953e14-5190-4697-8552-57323cd590d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2655809a-53df-4e0a-809c-9ba07b291ea3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3741a8-94cb-4121-92eb-442fe651711e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012fb3ad-c68e-49b5-a61b-c98980486663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31adbf32-d17a-46e5-8455-aa90166d3b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8252eace-574e-4964-a633-87aa8449536c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d426b7f7-7af3-4c7d-84da-1edd14d550e0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb603354-b32d-4d51-87de-412aaa146117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677fc5f1-8971-4ea3-964a-688652e5e453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd13ba9d-de4d-4bf4-9e5e-49276393d0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66616731-32af-47ef-8b5c-5e4b363c58b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d18b3d-4c79-4670-a119-47472a29e87d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f8ed30-0409-40c6-a30e-013c86c23f0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26fce0a0-eeda-438e-bb83-28d7d1d1b135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39a2226-4d2d-4afa-ae0f-0e384d944631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861dc5d5-5842-4fc5-b8d0-7a42cf90f100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffa68ea-c688-4086-9ec5-c9094346f175",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5bcd73-9996-452d-a4e6-43f179917aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e111c34-8706-49d9-806b-a01b0a1a37ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6afa782-508b-46a3-9954-216458333c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98c2c6d-3fd3-45f0-bf54-3f08f612ccf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edff2e99-b93d-4a2a-bdd9-1676f33c120d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25621a9f-ee63-494e-b2cd-60012e95c5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914f5c01-4e37-4947-8345-d617dbcc8fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc92018-1e9a-4dbe-8efd-3633af2ee9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49e6461-f57d-472a-9a4a-c573174fba38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce03431c-eb7d-4311-bc30-b1e1320c4849",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a111d4f-b766-41d6-9b36-caaeb4e4f3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d83653-e118-4c7b-b5ad-8c17c08d59cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b6a2ac-62c1-477b-992f-cf83ed79580d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214300c0-9478-42cf-acbd-2a1d961e65fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed12e436-f03e-4558-adf2-804a14f91178",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30952afe-9bf8-446a-8b66-b5e5d9851b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79e4b17-78d6-4b3f-ba5b-8d09b01e9762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42145f3d-a551-44f0-8d4d-8b0b220580c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fe46e4-dcb2-45db-82db-787b4c9cfc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b92a9f-f551-47f0-97a7-b801ed4577b7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c3cd52-203e-4345-81fc-273796208591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10571fb6-ffbd-48ac-98dc-2d2bd60a5809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db8a60e-be2c-472d-a97c-ec82ce32f481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85fceb1-b1a0-4624-a62a-0beb5a479af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbec67e-12a8-411f-aee5-8e3029be0d3d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adbcd47-153e-45d0-88e8-23389d034870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f420ebad-da5b-4765-a983-8293d5c51150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a945c2d9-71a5-4908-b89b-bf3eee3da5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a09eea-88ae-4138-859e-bf453ffb8c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f695a408-826c-4d84-912c-f5bb8f0e462c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f65e72-e36e-4ee4-8f2b-726bd80a2f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4baac5ca-01f7-427a-872c-d842beee0b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fab53a-f820-43cc-935d-41980a2a26ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04eb14d-481e-4cf4-92bf-c10fd4da72c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1306f5-ba2d-4427-be8e-e6c8ed4ebcab",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3066f4-5e6f-4639-9bb6-ffb30793184a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d25d2b-6217-411e-b518-da8f425d1b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9085b1-e702-4cb1-9528-3250c9c3dfe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb67885-5d72-4eac-ab82-b5ef147b18cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f537ec-54d9-488f-b3bc-28186707efdf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d80017-d86a-4616-8adb-0e0f04759d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a067df79-1edc-4868-8953-11e32d90e877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be21da22-23fe-4658-8e75-1416422674c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca3fe58-e539-4d60-9e73-ecaef32b371e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99eb318-0a5f-4230-842c-0d4bbb85883e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6352b473-e1f0-4311-904e-ad71207bbe38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3cd83a-9d67-4131-8e5d-26bad1d5ef92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53ec37f-2714-4062-b90e-cef61d0b23d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00572949-b93d-4894-bc54-090fc944486f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c6497f-d9ec-43ba-9904-7630e7bc3248",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bbd0a4-2c4a-4cd7-b92a-408fa47c97fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4a18ef-f676-4d47-93b1-6c49365d9f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713534a2-ed35-4449-b287-bd6249100f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115f5869-12fc-48b1-b7c0-79672c9532dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cde4c3-da8e-4b28-bfed-a48a617bb8f6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b63b16-82a3-4d28-bc26-b0b5a39f3aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285fd0dd-a9fa-4ed4-b928-83e5231a458c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1eb600-f031-44c2-ae4f-427a4844bb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d554467-2946-4b8f-bec7-0cf86fc5fd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6232ab6f-84f1-4401-b0cd-85a42f76a9b0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d456fd48-b604-4bb0-91fb-975c2d374c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141487ef-ad6e-4f26-9fc4-ac36b714ac04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ece3dbb-0eb5-417f-b166-d87d276d1cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff983e46-20f7-4988-9d46-ae6c50791eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfac289e-d004-4bb5-b151-c227f7914d5c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdf400f-c914-4ba0-a5f9-66952f53484c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7979cf9a-3669-4d9c-9049-5c946d1830ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a23b3e-03ee-4f5c-93c7-4bc021acfefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22012dac-9eaa-4422-9e25-93f2fcb220ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eaa9575-b14c-476b-a9dc-2fe87f2f4a2d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2772a09f-1c70-4048-b06d-87d4b4428c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2234b1-a1e5-4182-bbc5-5ac761cb2201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5e1cd9-5444-4fc6-9119-14798cc90951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73adfc49-0d90-4f3f-922c-3bf77aee17ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ad3604-a080-451d-ac10-7e558c9a04c0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a53d469-315b-4557-897d-5bf0ab1e623b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693503b6-8ef5-4e42-bf69-ad6d6a07f232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ec062a-db6b-4b70-8707-8b24eaba735a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410e55af-2642-4732-a95a-119b72bf1030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae653d1-6914-4d28-aa2d-ec2032f2b77b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f51179c-7afe-4ed8-bdeb-863135ecdcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90630c22-47a6-4af4-9c64-a2bd3ad30b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f57f1e-78dd-48da-b816-1b97a6217ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce071d6-47e8-4883-993d-240c51f76b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd19132-c1fe-4b07-9691-84faa1f257c3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c1f172-e3be-4072-a733-caf8415f439d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39f5f58-2955-43f2-b9c0-f479f43b6d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b02d670-4372-4ccf-bde1-de5f16d89978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0de284-8770-404c-82e5-a6c9b409f10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e927f603-93e9-4a0b-b559-9bc22f0cc69c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331f191f-aa12-47cb-94e7-da205807c884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363740b1-2f99-455d-bf9b-49860bea17f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a75123b-143b-46e9-a782-eccd41bb50c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ecda3e1-4495-49e4-a863-9d565ca12fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d060909c-ea7d-49da-a62a-e090f6be427f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7092d13-e578-4939-8485-126ce71042d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528f0cc2-d47c-4288-ad52-8285606e5c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf3cbd3-2995-420f-969e-58bfa7c56f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb1dc7e-5cf5-4595-b6d4-33404d35acae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01d9b13-82bb-4703-b516-5cae06183d8a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1b4c02-36eb-4509-808e-c3f63e937d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c77a26b-f182-47e0-9bda-3f5a031ac93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e223938-6bb3-47a0-aa38-4f648a3ab0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4f7372-f709-4b44-8268-1015894d619f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b51776d-98db-47e8-a3bb-2cba829e9488",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd94fb75-ae1f-4312-9ecb-078402f6ac5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d774c1fe-9e1e-445d-9183-2d6e5525cada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e465270-dcad-414e-85b5-248e7f564360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66331a6-bf58-4e1a-8a6f-a1f0d770b6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7f86c9-d231-4338-9687-d1857ade715a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c3724d-1068-4ae6-b974-0e4a88b47df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ea482f-76dd-451c-b0d0-64768f6988e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777f347d-738f-4570-aa7e-5308bf4c820f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976ebf06-0136-421a-8aa7-65f479420ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbabe151-58b9-4a53-8811-d3662a27b871",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca42ea85-87dc-4ed8-acf8-91c2ce14909f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d071b83-4fd5-4a73-aba1-13ae0eef708c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84239796-6193-442a-a04b-8b539fb2762f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81f8f74-58f6-438d-a905-88576b37c6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3e94bd-4fc0-4ab7-8099-eccd1175d839",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c11daa0-1654-4e38-bc4a-f397534b119d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299767ac-6118-446f-91a6-7c8befd77fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954d5579-0be0-4f00-8197-e13847bccc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9626c8a6-de20-4159-8600-84dedcafeed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd58055-8294-4f78-946b-043f0461fe8b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44eb0063-e315-4fcd-b901-135a0ea63cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0f01a5-96c1-40fe-abf3-b2fa09edfae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788e7ac6-b9f8-4db0-99b0-84554c866ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549778cb-59fb-4266-adb8-933ca6221fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bace2e83-aa42-4495-a547-cdc3ba8601bc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a6d097-c943-4570-b260-5d0ea05f21d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccac1922-b23f-4534-a986-f00c1e2fea2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06a7168-75c8-43dd-9f68-9f1067035b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e051ea28-72af-46f2-bf79-852395ed1284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a565b2-b8b4-4af1-a159-ac218d689a47",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507eff5c-0848-4532-8b65-5f3b7abbc557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1ddc08-e1d9-4bab-8e8a-7f0294e9e088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd81d46-d848-49f8-9646-de903945046f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d13a4b-509f-41a4-bbda-f51fc51c43d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33652f2-67ee-4f3f-862d-3c3871827cd4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78aeed6d-f70d-49ea-b68a-0c836ac0676d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1460cb23-e5d5-45a2-a98b-faad4c1f1142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bba3471-3cf7-4fc1-b01a-260419335e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ead5b6d-88f9-478b-a2bc-e9410add5ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f052bd08-ce28-48db-97a9-73e6bc3a40d3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398069e0-3d1e-4031-8fb8-29a83806b4dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03f29d42-0923-4918-a78b-69b1da217fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9a2f71-56c3-4cb6-9fe5-53f5069362ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b8661f-3596-4594-8ec3-7a5d7e628d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b6f218-2361-4661-83f7-f46fc44d7aa1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3d7f95-9bb2-4775-9c20-05db2dad55eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b27bd527-674a-42cd-b606-fad421a4e7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a83a766-8775-4d18-9497-00ad5569b1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f51f00-4cfb-49e7-816f-450d7d07c86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc1f5f1-d3f5-4128-82c5-cbc2549e7955",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d46c3e2-ba22-48c0-a98c-f0597c37cfe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84248d1-be69-4a9f-a605-3b03f8f08615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d72c4b-5a8a-47b6-bd96-b9cc89d47794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e812d614-9938-4de0-aabd-1dbd2c4e89cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81048a0c-c3b6-4998-a8cc-bc44d73a1b2d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0654cd86-f460-45df-b242-2fb448e11c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd5dd2d-47ea-4828-9121-3edfc4510d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28276b47-f25a-40c5-9a82-d3874590cc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8be7efc-26d3-484e-a90e-5996d3511658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7929cd11-09a2-4afe-869b-e592f2ebb862",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e6502a-cdd0-4873-85ee-19eeb3850454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "152a2efa-c817-47ac-8530-f402b231981d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514dc19d-1a42-4db8-b2ee-8562370d78f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0358b5d5-0d17-4add-92b9-47d976a41da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17c2f6c-fc68-4624-8d02-210885fb5e8b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ec7fa6-470d-47e0-837c-4b67a1741f02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8203bc06-03eb-4197-8d80-cd9ce0c3a911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4572a1f9-cc52-4db9-8c9f-8f45f8df5439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f5b877-4418-4e10-a5c5-f424f3647079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34703c5a-d520-475a-bb91-70c1619ea6a4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc0a714-c890-428f-a1c4-84c8e1edbbc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6188244-6457-40f8-a1a4-b268d02f94de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832d450c-5f8d-4755-806a-4474c48718bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cd14d8-d9b4-4195-851a-5d3661fb6f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26512d28-7363-423c-a806-849a719309f9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ffa7ab-d01a-42d1-be48-d7db16831492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55b0f6d8-f13d-49ef-9da3-5f959d873460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956c5ccf-845d-49c8-b06f-a0eb5fa92d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addd5959-afc7-4d0e-90b4-07275235bf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f4b40b-be43-4e6d-adff-7f22bab60fbb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a903968c-f278-4f35-be23-5e9c32c04ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa5fb7a-a0b3-41fe-b5c5-0343210ee068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ee1cf0-4aca-49f9-9929-9501e715fd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468063e1-3873-4082-89d7-3527c9636c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf88ebd-cc86-43cc-a205-c72a476fc8d7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e8f613-3999-4fe8-b3ed-02f645c38247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "256737d7-85be-493c-9d38-efe435d9f315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f363479-8cb6-48aa-9f54-9867811edacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c3647d-154a-42ef-bdd5-65d44c409648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec75faef-074d-4e83-93a1-52865b309a80",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c1edf7-c8dd-4bae-9eff-e50b31786142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb3749ba-3ea5-41b1-b436-66c383786fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee6d2b3-5169-4ab1-8398-5b4639ec5e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e958365-3067-4e61-944c-223988874b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c298fc0b-b394-495c-8e67-16ecdb5f445e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd159ee2-598f-4421-89da-b843202ebfea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08bcf2a1-f72f-4453-9b51-3b5ded859cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebd2628-fce4-4678-9279-0764849049e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0db2b6c-3202-4dc1-b52d-ec742bd1e630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a6bb39-75c0-493a-a092-e7b9acf980c2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2dec0c-2aec-4ff3-8ecf-c68e41c9f39d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "429701ff-6201-4432-af5f-784d3ac18b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb11561-740c-4b4e-8180-6d0e4e5b9bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b533b0-b778-442c-9391-dc976d1398ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e168bd9-c2aa-4e7c-b686-1166f933e417",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b53d6b5-171e-4d6a-a0a5-20f795d4d34b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b38eb78-21f6-4670-a4cb-b6965a5495f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1686ad1-2a1c-4fd3-815e-dc7cc49fc85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37749478-d37c-4037-ac36-0794a2b27ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940f5083-4c6f-420a-92e4-ea0215dc07c8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6be5eb4-fdc7-4641-82d1-2858efb97baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9f430a1-e64b-4dda-9572-11940f763505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2154dd52-13d0-439e-a170-eafd11ec9691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57874e80-bd14-4526-a41e-4801305ffd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f765da69-5945-4c20-89bb-f24ec42482ab",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d002f2-605f-487b-a8aa-bbfa1fab4ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d257b1-e9bb-4f1f-af51-14c425fc5de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f84445-617f-4710-8f7a-134ab68e9b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b8743d-5668-439b-a624-2abb726b1b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de5d45f-1a8c-4cbd-ae2d-dbe8a759cee1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e9e1a7-5d5a-40ae-8c9b-1d16b2377a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1cd0c57-b436-4410-99af-7949221a9156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b207a8-4740-48fb-a662-2f38ff899372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ea4854-3811-4601-8dc3-31235d37f9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8e6a61-1dc5-4e8a-9459-cf05b79ae508",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5db2b9-3075-40b9-a290-8ea66277f040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5482db9-c146-4782-939b-c2bfd7e0596b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cfc4ad-9689-492d-98ea-0e1039a79cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc9d07f-d179-464d-922c-caf74bfbe275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8369db-5ace-4cab-b2ac-9a37f99f9e53",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d8d19e-4104-4405-b7f9-a2acd56ecefb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f0a8af9-c2f8-415b-a564-4f60edd066b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464daa9b-b997-44bf-b2b0-65039cf90bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27d9ba1-e168-45c5-a39a-4f6c4e544cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7a5252-cf5e-4262-b018-a5bd9e3910a8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadea0fb-38c7-48d7-8b41-8366e679464d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a61a86b9-673f-4a3e-9209-22b9e7ce1a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a7e4a0-8a96-4173-868e-3505b80f8e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e070e4-ea78-4aa6-973a-3e83d0f85b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e385dba-0fbe-4e01-9618-692889d3e79e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01306c10-0c75-456f-8698-909bc19fa02e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6201d06-1576-4c39-a591-53e8589ebb78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1d13e0-d7eb-495d-8961-257ceede133a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85177f4d-e76e-43a1-bc42-1220913ffad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f31679c-f32b-4f51-ae47-6efc4c038c63",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54091e26-d52a-4eb9-be37-ac9b2393a51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5049ba-923b-4d9a-a4c5-0e0dd546d332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53e7451-a677-4442-9019-4791f05c4dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20a9ad1-a7f7-40aa-8159-9d60b21b9312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e380dfee-3721-4b65-b825-0a8c748a9ead",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b38798-dda4-45ac-88c5-06016e7bece2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26168262-e6ef-43b5-9db2-751d704c99fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e65d99-bbd4-42f1-be10-38874506de9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c383ce-a5f9-4522-b462-5ee54511bd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17202daa-4697-4967-bdf3-bed513a56186",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f897183-aeef-4181-bb2e-78111ba604f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a8ad318-a40a-4133-be7a-978e31d6a494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeea4b30-bb01-4b03-9211-7a903dda7f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55513863-cb08-4108-a116-999f3e66decd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55343e6-7a65-4239-a868-4b63148ab715",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27d744c-86cd-4527-9ce6-941b29575dbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d81b32b0-d492-48f2-a60f-00154ac52608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ded35a-9608-45c1-a726-fe379410e5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a118ca7d-9f05-415e-abce-2d2bfae0ce09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c96edeb-d22d-49c4-906a-238d7665c6c9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17aa8853-4102-4344-9639-3b8a3f02e13d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28033cc7-5028-43af-ba51-aa122936ede2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "005bfe26-507b-4ae1-ad99-33c7152b3d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4307a55a-f3ac-44e9-855c-e2ef72494fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df02fac-7f12-4861-a58d-06877f04896d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de81567b-ec48-473c-b87a-c38533c3a7cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be98400-4c61-4669-bcd5-cbc48d4d74c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607a0679-4abf-4e11-bdaa-60b48c2c30af",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af5a4ce-2c22-42d4-ac36-60924cb0b3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877e53e1-2cae-49e1-9afb-81e61998ce20",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3515ff-419e-4c23-b678-21b8911a654f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "707d3760-1751-49ee-9307-e957a54f16a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090149b0-73fa-4451-acd8-065ba962dff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531e6f9f-0580-4719-900a-34cc48f5fd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e4eb81-10b1-4065-b24c-e673e10fabce",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b730ff-0dfc-445d-a8b6-7efe169c6fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae6b85df-0716-488e-b2e8-3e2a615b3c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f8ebda-2511-4e74-b8c6-e7d20179b283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575a5f2b-b04e-4513-8de4-97c366d2a5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db6d774-d1ef-42b2-835f-5664d7d24ccb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2055048e-fc0c-44c6-82f6-d38f184d8472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42f962e0-dae3-4923-8554-2003ccf746df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd33726-8a31-448d-8856-7512c20c0f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3527913-44e3-4a53-bd34-12d144e035a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77575a10-8748-408c-9056-bd182826eadd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6a3fcf-2ec6-4598-a46c-366a679d5aff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb2729ca-fc1a-4336-ac5d-65f649f10178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8cca4d-5b30-4a9d-8a04-5cc3bf3060b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89893227-973e-4cfc-b360-31902f39290d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c08d2bf-32be-4294-a8f9-2c6724235c4c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb00ec3-2dc0-4784-8c71-462d5b096c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b188c6fe-23c0-41ce-9f82-3478bc87f401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15d39a1-d5f9-4e0b-ba3c-5bb3462e225d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5029975e-0188-41b0-a4d3-4400caf94dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394a8509-4ede-4285-84ed-727bbd5ff3d2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0427ff0-6a25-405e-8db4-cb4088bd135a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf7bcb5-6949-4a09-98a0-f77ab03507c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1fd452-dbdf-4298-b00d-70f956614e6d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4018c48b-2894-4833-9651-7133f1fa2b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9c8b1b-5834-4944-a487-dd2c1061e2b4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9693d54-3dcb-4351-a59c-a73980a6a5d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f1ccdaf-a463-4d59-b96d-bb1f4363518f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a981c2c-c710-45f2-af96-d475e222aed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15babcd2-40a6-4ff3-b909-685ffb6b0a56"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c0182f9-2063-4347-9583-714a9a15288c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7536c664-8a41-46e0-b264-c6f88611a5c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faa4d80a-71e3-485b-bec8-6d33b9750440",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7969cb57-345f-4f95-9a27-381bc004c451"
                    }
                  }
                ]
              },
              {
                "id": "df45ee59-9885-4d53-be27-5b2df1d46426",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe4a26e5-95b5-408d-8d3c-910e701b5226",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86df7c2-471b-4260-8016-a28767b5fbdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a5020fba-2a01-4e63-ab32-937695384052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3f0664-507c-4e6e-90a3-a1d8ad462d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8bb6331-6ef0-4761-99f5-01c2a3509c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0a2a20-cf90-44c3-bc73-2e8d22819dec",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c33e28-30a0-43ce-84ab-e0c737a77d65",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b9abf5e7-8878-4b6b-ab16-0706a0722a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51239bf-3a99-49c9-9458-79de378865f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c45aa53-2afc-4027-bd76-ff93aaee0a5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4be9b3e-b52e-447e-b4ad-f597f773baf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c12fbc45-c2da-4817-9d1b-13bdcd285f20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a14b2b3-d4d8-4410-9e07-646a643f4e4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29ce8be2-e8ed-45c5-a32e-6e5501cfb90a"
                    }
                  }
                ]
              },
              {
                "id": "f88bcb1b-dcb3-41b3-9691-db5503b3584b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "797e2afd-1d0a-48b7-90ab-2836fecff608",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c5cb2d-c2b1-4bca-8cae-c2a565b9d291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0f3fe9df-e943-4578-a297-78bbbab7b359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7e0594-ed36-4293-8358-c873e80b1ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8701ec84-c2a0-49e7-8565-04ef1efe380b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "62aaddb4-5565-45db-93c3-ea8924c7f4f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "98cc1350-f8a2-426d-a470-2ccefd33004b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "757b6188-ce14-4c21-9629-6e0883e602f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e08e8380-ec97-4df0-a0c1-e191ee87f7ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dc4abbc-f845-4f47-98be-42e4d0e5e265",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2812a39a-faa0-4e4e-8955-d989f5249120"
                    }
                  }
                ]
              },
              {
                "id": "9600e631-a571-45a1-876e-88c5ed5f1482",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e66ef474-40cd-44fb-a0f9-dfc800c68084",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0027d079-7bc8-45fc-8b9e-7cf3934b963e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "804e5dde-61c4-4958-91f8-98a9fa5caf7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fff84e5e-3d54-4310-930f-fa755329fb5d"
                    }
                  }
                ]
              },
              {
                "id": "ba428a79-1feb-4fa8-b4bb-a5eb6113d403",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49ee597f-fa15-4ed3-99d8-11c1ee9af528",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "131d3e56-e60b-4ed1-9237-eafc638886fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32255a7f-3c17-47f8-be92-e9c8f9b8222c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "013a382d-c9f8-4931-b5e8-1e7d805f1407"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "187ae1c2-7d8d-4623-82ed-101827b946d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6db87cb5-193b-49b2-9cf3-e18c2f4f3a1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f936333f-cbf7-4e6e-9a33-43705d3951e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4d97fa7-f0ab-4a74-8480-a85d4b8da3f8"
            }
          }
        ]
      },
      {
        "id": "ff1d9aa8-794f-4817-9069-59f58f99efa7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e4307d5c-6a75-486b-bf45-8165840a0b37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1a9fd41-3e55-4e6a-8ec2-40ba7a5c1071",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e16079b1-4168-4789-ae2f-3a0fbce77be4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0053888-8139-4276-b5a6-74cc59955b8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9e58335a-77e8-4b24-9944-1fa3ccdf7852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d91447-cf75-452e-bf7b-0c8fe85d26bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c9e70f9-31b8-4f9a-9a06-9e593ff05cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5fb4e5-70ea-4cea-88a8-1f587d3e56a4",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92703e1f-7427-46b4-8313-20ad5fb5ac5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1acc1d7d-88d4-48b1-bcad-44c45116317e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2685e853-3082-49d5-8edb-19ccbd534a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfd92560-c187-402f-be28-b4de0b8563d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3d7461a-1a58-42e0-83bf-fa84bdc66710",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0691e4a8-24f7-4a6d-8d26-91a78b3f9c6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f71e1f4-8042-4109-939c-a00c836c4b5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6f9d4a2-e234-46d4-9d38-dbc53ce9a029"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6abdebf-bdac-4e3c-985d-23ec652eb749",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5ff0779f-dfb8-41ae-a99a-e622cec1c681"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52921d9b-62ec-423d-af75-aa13618df31c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "769bac10-4d82-4bc3-a770-17bff4da2645"
            }
          }
        ]
      },
      {
        "id": "63cea7ae-6a8b-4b3c-89bd-f9d8ff7cecf8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9251b8ca-b1e9-4d5b-b23d-c673fedc75a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19dc2844-fe97-40c9-b90e-4d5c2cc0dc4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43352100-9398-41ca-8eeb-17bbea8df9af",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9930c84-f264-41f3-9940-c29c0c6072c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ba0434b9-9f7a-43f5-84fa-c73ccaf1c1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d269fc9f-d09f-4fab-8ab4-f80bd0d13b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14563b19-ab71-4628-bf1f-a0e4df624a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c580b22d-758f-4093-9291-7cf5472c37fb",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ccf3e6-59e5-4c5b-89a9-08b48c7326b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "15269e05-8028-4447-b7d8-392ea58e00ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904960f2-cbd6-493f-b5e7-847d89c848d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c55af37e-9c27-4001-abd5-716ff408b357"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e99dff2-1863-4d89-9fa6-73765a4b3215",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e33c116c-f8e3-44b2-9032-e001c5d4a921"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2753db80-db46-435d-9e69-132850546c06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c603359-0990-4ac8-9439-f2381623b267"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7690154a-2f60-4530-bd5f-3c6527d1f1cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c49f3ad2-9d50-484f-b1b9-330aa825333b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00f16e4d-4fb0-4977-beae-1efc26de4133",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d419f88-6c42-417c-ae24-f78b56f870df"
            }
          }
        ]
      },
      {
        "id": "826bedcd-521a-4831-9576-acd02732c9b0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1fb66748-7a42-4d2d-9aa0-7e89f8b8c7d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1726b269-f912-4c99-a92d-947ac9d765f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "380ddbba-d118-4145-b893-88112a4e7dad",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dbf870-b8ae-45ee-84db-a15278976bfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4a925f67-5b37-4cb8-b9c7-f780469494df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd0cb8a-bb18-4833-ac9a-6d12e846882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f74a9389-3097-4862-8d9c-b685fc008e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a97fdc-6495-4100-90b8-a7871d73a150",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dedc1fb-bd40-47ba-b466-e53e49425c4e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a1d66f3d-b9af-415e-841d-bbd7c7909f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b285c67-a319-4c39-b17c-9a6ef4e1aa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a7a25d0-f094-4bbd-9bb1-f0def0a34c22"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bfe88e4-7180-4c9f-984e-fa23d17ddb90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84208eee-c29a-4a38-9f05-464a5946cdb5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "022b5e0c-65c0-446d-b7f5-705312aec240",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aaa0ef4-087d-4be3-833d-b98407569dcf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d861dcb1-ca60-488b-a9a1-2a8119497185",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "324249c3-21e5-4b63-b3bf-f7694964377a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07f3016e-3007-4e49-b338-d35b3051627a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "303e30d8-3a65-40cd-8e7b-1b6993aab2d4"
            }
          }
        ]
      },
      {
        "id": "efa716ba-1e9c-4acd-939d-7e0d79615ca0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a68ba64e-509c-4f09-a38d-16c89c5ea68f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dea3b13-6f2a-4fa3-9613-523f1d1983ab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "55c4a94e-a4bb-4343-8f63-885fdfae58bf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0eeda1e7-17ed-4aec-8e22-58c8ab99e171",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aff0efe2-da1a-4b42-a3b9-8e0dc7403d8e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 491.72030651341004,
      "responseMin": 16,
      "responseMax": 3506,
      "responseSd": 414.86371571211805,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669595911702,
      "completed": 1669596050938
    },
    "executions": [
      {
        "id": "ae5e7adf-94a5-4d1a-9927-eb23e3fa3c52",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "35bff53f-fbca-4344-95c9-1c28fd5156fa",
          "httpRequestId": "edc07a5c-8b17-40be-8491-7e1318d2d9de"
        },
        "item": {
          "id": "ae5e7adf-94a5-4d1a-9927-eb23e3fa3c52",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ec5db392-48b0-4b77-9f21-f16ada89e69c",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 0
        }
      },
      {
        "id": "aab5aec9-750c-4b63-b23b-c4f79005539f",
        "cursor": {
          "ref": "b7fb3e77-6b15-497f-ad8c-64c31ad7e1f8",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6dae890b-9b11-42a2-8729-3d05b252a073"
        },
        "item": {
          "id": "aab5aec9-750c-4b63-b23b-c4f79005539f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a636a445-b432-401e-91b2-5906491ef06f",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "ff85f8c8-93e1-4858-a844-4b4cefc6e3ef",
        "cursor": {
          "ref": "6c776222-1ac1-4601-be52-a6b8ed9689d1",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "55606f8e-d5da-4e04-9642-8ca8444dea88"
        },
        "item": {
          "id": "ff85f8c8-93e1-4858-a844-4b4cefc6e3ef",
          "name": "did_json"
        },
        "response": {
          "id": "78fd5bac-6a88-4c26-b0bb-f17e734505a1",
          "status": "OK",
          "code": 200,
          "responseTime": 774,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c9c90f-76fd-4c35-8fa5-8b0c25f28a73",
        "cursor": {
          "ref": "388b7424-77a3-4d23-ae5c-42933a556438",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cecd327f-0257-4769-ada6-4fa74b36df30"
        },
        "item": {
          "id": "43c9c90f-76fd-4c35-8fa5-8b0c25f28a73",
          "name": "did:invalid"
        },
        "response": {
          "id": "abbe85b0-08ff-458b-bd56-27cac954a020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c9c90f-76fd-4c35-8fa5-8b0c25f28a73",
        "cursor": {
          "ref": "388b7424-77a3-4d23-ae5c-42933a556438",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cecd327f-0257-4769-ada6-4fa74b36df30"
        },
        "item": {
          "id": "43c9c90f-76fd-4c35-8fa5-8b0c25f28a73",
          "name": "did:invalid"
        },
        "response": {
          "id": "abbe85b0-08ff-458b-bd56-27cac954a020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff13f9b-b2ae-4969-859f-75d3a1380c4c",
        "cursor": {
          "ref": "cabb3193-53eb-4b28-9eaa-c1f4eb312484",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "88daaf4f-4d04-4b8b-8d92-b303a484c857"
        },
        "item": {
          "id": "bff13f9b-b2ae-4969-859f-75d3a1380c4c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8c93e27d-93f1-4901-b311-099c0447deac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 614,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caae04ae-ead1-4ffc-ada8-5fcc5ff11a72",
        "cursor": {
          "ref": "153f9b27-6252-4220-9b8f-8072af9685b9",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7a0bcdfc-6741-49fa-986d-1a266defdbda"
        },
        "item": {
          "id": "caae04ae-ead1-4ffc-ada8-5fcc5ff11a72",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fe978cc8-1a1a-4490-a2d3-703e3fa7283b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 553,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36585e1b-4aaa-460d-a09d-49cec278faeb",
        "cursor": {
          "ref": "11261223-3455-4707-a333-ce7791b201b8",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3c4cb902-ee03-4f0d-aa34-aeb698a87aff"
        },
        "item": {
          "id": "36585e1b-4aaa-460d-a09d-49cec278faeb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5b211ad5-758d-4146-8ead-db14d5212179",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e87ff16-e7ac-4ea1-84b3-f13d67fdfa45",
        "cursor": {
          "ref": "c6a7b02b-ac92-4d12-aa4c-93ffbc3343f7",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f59e605e-a8aa-4a92-aa69-ee567ca5e660"
        },
        "item": {
          "id": "7e87ff16-e7ac-4ea1-84b3-f13d67fdfa45",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "35ac1df8-0a0d-442e-ac10-0ad2c4cbab95",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e87ff16-e7ac-4ea1-84b3-f13d67fdfa45",
        "cursor": {
          "ref": "c6a7b02b-ac92-4d12-aa4c-93ffbc3343f7",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f59e605e-a8aa-4a92-aa69-ee567ca5e660"
        },
        "item": {
          "id": "7e87ff16-e7ac-4ea1-84b3-f13d67fdfa45",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "35ac1df8-0a0d-442e-ac10-0ad2c4cbab95",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fad69a-2fa6-40d2-bdb4-f084fdf41548",
        "cursor": {
          "ref": "80eaf3ba-bc86-4368-89dc-669400b6da4d",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "79d05e39-e2e8-4ac3-9d54-1cf8fd3c2a33"
        },
        "item": {
          "id": "97fad69a-2fa6-40d2-bdb4-f084fdf41548",
          "name": "identifiers"
        },
        "response": {
          "id": "33c99cad-b68c-441b-9a22-b3973ae6b13d",
          "status": "OK",
          "code": 200,
          "responseTime": 763,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896a034b-9fd1-4582-9645-fd4017dc7561",
        "cursor": {
          "ref": "5822630f-d32e-4d59-9fb5-00932d5ed269",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0af0f2ae-be34-448d-848f-9b1201bd2158"
        },
        "item": {
          "id": "896a034b-9fd1-4582-9645-fd4017dc7561",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b0484da7-ad94-496c-92e0-c78c449da82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896a034b-9fd1-4582-9645-fd4017dc7561",
        "cursor": {
          "ref": "5822630f-d32e-4d59-9fb5-00932d5ed269",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0af0f2ae-be34-448d-848f-9b1201bd2158"
        },
        "item": {
          "id": "896a034b-9fd1-4582-9645-fd4017dc7561",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b0484da7-ad94-496c-92e0-c78c449da82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2421371-73bc-4cb3-95b4-778a971bda5c",
        "cursor": {
          "ref": "31ee7b9d-fa9e-435c-85a6-992cda02c340",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "45ea2b4c-4182-4174-a55c-d0638f2f6dd4"
        },
        "item": {
          "id": "a2421371-73bc-4cb3-95b4-778a971bda5c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8b2c15be-c1b7-4417-969f-4fd5c587890b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2f0e28-73f2-4556-93fd-a9286a512e39",
        "cursor": {
          "ref": "ba9d9c61-defb-4017-8bf9-fa63f1b8b831",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "61a911a1-2031-47ea-b081-1ae0d6bed559"
        },
        "item": {
          "id": "cb2f0e28-73f2-4556-93fd-a9286a512e39",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cf1a8ae9-2de7-4fc2-b2d6-04830a0b30b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db27e2a4-c176-4429-aec0-745b0e9e1851",
        "cursor": {
          "ref": "dbf6e060-8f56-4311-944c-1dc312e43a40",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "21b70fa4-adc7-44de-84f4-2525a6508746"
        },
        "item": {
          "id": "db27e2a4-c176-4429-aec0-745b0e9e1851",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e4576318-30ee-4ff3-b7f6-0e88957f4c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82f45a8-71cb-4ab9-a059-eebb2ac38f39",
        "cursor": {
          "ref": "751bd507-613e-4166-8253-f792ff75f6a8",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "86c8e881-74c3-4fdb-80e7-e5345abdb2c9"
        },
        "item": {
          "id": "f82f45a8-71cb-4ab9-a059-eebb2ac38f39",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d1cd187b-b933-4d5c-840d-23cebde5fc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a187e6-cfa3-46cf-9b5e-2fec7e024ed1",
        "cursor": {
          "ref": "60b0cb98-bce7-4ffa-b07b-11b8ceff4972",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "055d297b-dd46-4593-80b4-d203013b3443"
        },
        "item": {
          "id": "f9a187e6-cfa3-46cf-9b5e-2fec7e024ed1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c12e74ac-0993-49c3-aaf5-34db0b7b8ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f58c7a-000e-4fad-bbe7-4f392160914f",
        "cursor": {
          "ref": "0db89289-2d86-4c36-8749-82ed6f26486b",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2d8e07fc-0e15-44f3-8594-668e4c771bd3"
        },
        "item": {
          "id": "50f58c7a-000e-4fad-bbe7-4f392160914f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fa5bbde2-1cbc-4b56-a1ee-7e46a856f7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b18e48-a319-4984-b304-e88062e80bf9",
        "cursor": {
          "ref": "d712cd71-9cf3-4799-a944-f9b7c03b97e4",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "859f196a-518d-47d2-ac76-a49982fa055a"
        },
        "item": {
          "id": "09b18e48-a319-4984-b304-e88062e80bf9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "317e1548-92f7-4de4-abd1-2e24cb930cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b0c842-1086-4b1a-aedd-7b40b9ef2816",
        "cursor": {
          "ref": "32918578-c854-479f-bc56-1dc881a72992",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "882095a8-33b5-40aa-937c-b1357888adba"
        },
        "item": {
          "id": "56b0c842-1086-4b1a-aedd-7b40b9ef2816",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d25f028d-5670-4ed4-b1a8-3fdade78e493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15d2cb1-95a7-434d-a7f2-ee3aff9c0d0e",
        "cursor": {
          "ref": "23a0f681-c483-439e-afb6-543d0a9286b4",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b83f13b1-bd2c-4015-84a2-dcd158e2e9e0"
        },
        "item": {
          "id": "c15d2cb1-95a7-434d-a7f2-ee3aff9c0d0e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "766e2a63-2fd9-48f7-a476-1333e51eeb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f1c31e-1cb1-4da5-9c6e-ea514807f810",
        "cursor": {
          "ref": "a60db143-f98e-426d-b82b-099623eff004",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ef6178e3-a1dd-4a01-8c3a-52cd6102d235"
        },
        "item": {
          "id": "45f1c31e-1cb1-4da5-9c6e-ea514807f810",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c6e54bcd-4236-46a4-9252-3dc2576cab6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc034b2-8bd1-4b19-9dba-eb01655eb41f",
        "cursor": {
          "ref": "82dc3e36-4ebc-499e-a71f-1cf6b8ffa173",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4e097bf4-1e80-4058-bce5-34e7f557bbdd"
        },
        "item": {
          "id": "2dc034b2-8bd1-4b19-9dba-eb01655eb41f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "76e8112b-2048-44bf-87f9-d5931266ca02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63922d27-b327-4501-a238-b3ec4bb7b241",
        "cursor": {
          "ref": "aab6a65d-1fc3-48d3-a7df-acb1735dcccf",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "90282e4d-c64f-4baf-a56a-e6cdc861ba76"
        },
        "item": {
          "id": "63922d27-b327-4501-a238-b3ec4bb7b241",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "247a81bc-1bf2-4e89-ac1d-7dc4f362e0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcbf065-089f-4f49-bacb-0fc20ee6524f",
        "cursor": {
          "ref": "0c406ae4-9dd1-45e6-a187-431fb5d4769b",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dea6ec19-4fb7-443d-8936-1795f8417504"
        },
        "item": {
          "id": "cbcbf065-089f-4f49-bacb-0fc20ee6524f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4e168b4b-640d-463c-9e86-2af85163cc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0fa865-b515-4319-9757-64d2ee9a777e",
        "cursor": {
          "ref": "d5ba2059-f0f3-4fe2-ab52-8778413def12",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7ea9f199-ea2b-4bd1-8b6e-b37acece62b7"
        },
        "item": {
          "id": "ad0fa865-b515-4319-9757-64d2ee9a777e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7aeef95a-1ef3-42c0-8843-adfbe2fbf31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda03161-7188-4fe3-b3ac-a2d7e687fc2b",
        "cursor": {
          "ref": "c7653ee5-3e97-47b6-b73b-b039cfc1ad03",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c5ca1228-e981-42a4-95a4-5b3d906fe81c"
        },
        "item": {
          "id": "dda03161-7188-4fe3-b3ac-a2d7e687fc2b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "aac6b0ff-aebf-4607-8f4f-305fde0950e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bee9c5-85f1-4895-b7f8-364d682fc9dd",
        "cursor": {
          "ref": "5954005f-c166-4412-bc96-622edc8eb5c7",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "af11dec0-7ff9-485e-bc2c-316f16c16c64"
        },
        "item": {
          "id": "83bee9c5-85f1-4895-b7f8-364d682fc9dd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a1430740-012d-4138-9518-69b8476b4441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04990e4e-6a05-4a76-b5d3-636145b51da1",
        "cursor": {
          "ref": "04b0cf9a-fe28-49d6-8d7d-9701fa0363d0",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "36e5da0f-7b89-46d2-ac6e-54c60e2361de"
        },
        "item": {
          "id": "04990e4e-6a05-4a76-b5d3-636145b51da1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "93447f78-7dfe-4f86-85d9-6858d02f3b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8663721a-5e57-4c0e-af68-6e8cb0926390",
        "cursor": {
          "ref": "0b757d04-d61a-43e0-a958-d9f883360582",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2ab67e67-fb92-4e93-9843-c78084eb435a"
        },
        "item": {
          "id": "8663721a-5e57-4c0e-af68-6e8cb0926390",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a7c8b9f5-61bd-4654-882f-c78927ae5db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffae39c-c227-47bb-90f4-08242755b652",
        "cursor": {
          "ref": "2268b762-7783-4294-8c30-e71310158ac7",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b790869c-538a-466f-9325-6792c6818303"
        },
        "item": {
          "id": "2ffae39c-c227-47bb-90f4-08242755b652",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "00dbab5f-9eda-41ad-ade1-7e763c6c02ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d64f16-d774-4c42-9abc-176c1dcfe609",
        "cursor": {
          "ref": "825f9726-50dd-48fb-91f4-8383a0e68a9c",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "028e3e89-4ef7-49eb-85d8-7a714cf22344"
        },
        "item": {
          "id": "88d64f16-d774-4c42-9abc-176c1dcfe609",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c448e853-8420-448a-949a-4c7162076f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de64c7fc-c3de-4d40-8769-7515ba8d04be",
        "cursor": {
          "ref": "45f915bc-7689-4a10-8851-1a406f90b12f",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b27ab00d-9b00-4817-8972-01a344e4ba85"
        },
        "item": {
          "id": "de64c7fc-c3de-4d40-8769-7515ba8d04be",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9ac2e107-ddba-447d-9ff5-b29b1fc5b661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e36688-8677-4d36-9cff-fca41f307e14",
        "cursor": {
          "ref": "4758daca-f0ce-4c89-8c00-e8ba42a68079",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "198f1998-0414-4479-a8e3-064a35f05b6c"
        },
        "item": {
          "id": "93e36688-8677-4d36-9cff-fca41f307e14",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ad21239e-715a-41fa-8b0d-19bd8e64ee03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ed6a71-ef3a-4e97-99d4-566f5ba3fb3e",
        "cursor": {
          "ref": "8cdc8c20-bf8a-4fad-9866-5f3033b94cf9",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d585ded0-fcca-479b-a890-541d2d8f6021"
        },
        "item": {
          "id": "27ed6a71-ef3a-4e97-99d4-566f5ba3fb3e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0357aa77-fc2d-43ed-89ed-ec6d2be798ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81351049-dd4f-4150-8dfb-786fa8e0b880",
        "cursor": {
          "ref": "042153b1-fe2d-4616-85fe-e32816b6336d",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a43aaa2e-aeed-4d1b-93de-ee7843de7802"
        },
        "item": {
          "id": "81351049-dd4f-4150-8dfb-786fa8e0b880",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0834d6c1-4c55-4f51-b358-3a617ca0d84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c4f216-c68d-4484-9779-75441c9295c3",
        "cursor": {
          "ref": "f7d2f0a8-6e82-4745-a0ce-fd6387b9e055",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "58c807a6-2f85-4746-98fb-6db9c74a6e22"
        },
        "item": {
          "id": "f7c4f216-c68d-4484-9779-75441c9295c3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2e60b558-3647-401d-a3e5-3d49f2f75a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc204ac-ae14-451c-8313-81631763cb5f",
        "cursor": {
          "ref": "64b4169b-44ae-4526-903d-f4204e8d1c7e",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b22712d5-1a4d-4d29-a2f7-715a41d55450"
        },
        "item": {
          "id": "0dc204ac-ae14-451c-8313-81631763cb5f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "240e2d4c-5414-43d7-981f-50e795399fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344e3fdf-613e-43be-9b74-4a72607c46bc",
        "cursor": {
          "ref": "76a7bfcb-d3fa-48fd-9287-3327c331ae8b",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "62dd80e4-65b3-40cf-bf5a-9d9986deebd2"
        },
        "item": {
          "id": "344e3fdf-613e-43be-9b74-4a72607c46bc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6860848b-5638-4c01-8bf9-d9b8998588b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ec99af-0ae4-45a8-a2c4-8e5bba54d375",
        "cursor": {
          "ref": "75875a27-ccd5-4ec6-a1f2-a8178cbe3cbe",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "37e830ee-a03b-4a61-bbc9-b89ac0d605b7"
        },
        "item": {
          "id": "38ec99af-0ae4-45a8-a2c4-8e5bba54d375",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0331077a-bc94-4090-a597-f614d366de76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75acfdd-d1e5-4b90-b394-74001b12f18a",
        "cursor": {
          "ref": "3e3c4feb-593f-4e08-8195-2641413872a9",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "df7e0459-6f4f-4240-84fb-e271ba458cdb"
        },
        "item": {
          "id": "b75acfdd-d1e5-4b90-b394-74001b12f18a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fc6ce258-a54a-4808-9bf1-6d65ac102293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2a48db-747b-4e1a-93e2-9c886ea80575",
        "cursor": {
          "ref": "9166bafe-cb58-46b6-9cf5-c71279009fee",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "989b0a86-88e0-4fc2-9836-4aae3ce84350"
        },
        "item": {
          "id": "ad2a48db-747b-4e1a-93e2-9c886ea80575",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "54ecb139-398c-45ab-a0cf-78853a9a4408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e751ee2-ded5-4d9b-9471-bb3b3e89f1ad",
        "cursor": {
          "ref": "e8e04761-70d9-40b2-9568-bcb3410f4bf1",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e2c91a94-17a5-4b68-9a8b-34cc3c2a70f4"
        },
        "item": {
          "id": "1e751ee2-ded5-4d9b-9471-bb3b3e89f1ad",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bb8c0450-2599-467d-89b3-1eae8d9f9714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d921165-c293-444e-bd5b-50b959b0cbe4",
        "cursor": {
          "ref": "fd82a26e-6845-4b6e-af73-84ffb5a49e8e",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "140dd81b-0a0c-410c-b2d5-cda4e753561b"
        },
        "item": {
          "id": "8d921165-c293-444e-bd5b-50b959b0cbe4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6d3176ed-9f64-43a0-aa13-afc17868951e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45779a55-c3fa-4397-9108-3707d0e8a6ca",
        "cursor": {
          "ref": "9d1209b9-7162-440c-a4db-a2892570c3d6",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f7e35457-dd03-4ffc-8cc8-172b94ae119c"
        },
        "item": {
          "id": "45779a55-c3fa-4397-9108-3707d0e8a6ca",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6dda7135-5af6-47a5-a2a1-be6a1c83607a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3d6dc8-ffa5-4251-b111-f81db9a36e9d",
        "cursor": {
          "ref": "ca47cfda-d0b2-426d-af66-7c7574a6e587",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e3b16a93-5d91-43f7-91c1-a5fdc58d54ea"
        },
        "item": {
          "id": "7e3d6dc8-ffa5-4251-b111-f81db9a36e9d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "26e82ea7-d232-4ffe-bc0b-27d2531b36fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e00e0d8-9b2e-4f3c-8547-d040b91a65e3",
        "cursor": {
          "ref": "a07d7b6c-0ed9-4e81-bb89-3e7e23d496bd",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c8e21452-0840-49a8-b884-9215f820b0e9"
        },
        "item": {
          "id": "5e00e0d8-9b2e-4f3c-8547-d040b91a65e3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9f97fac2-a03d-4bfb-80d4-6467325e7f3a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 571,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2557ec15-ceac-4a5b-b262-cce67532bf2f",
        "cursor": {
          "ref": "2582a2bb-0da7-4045-922a-1c4f68e991bd",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "032baede-38d1-47f3-a614-68572a1e54da"
        },
        "item": {
          "id": "2557ec15-ceac-4a5b-b262-cce67532bf2f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "faca5e0f-5a42-44ca-8784-5c4a7a269e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bc3346-19e8-4f4f-8e36-fbb7832fd2e5",
        "cursor": {
          "ref": "9937210c-32b8-48c5-be15-1db1e5a5d438",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dc9e610a-1bd7-4f63-89ea-fcd451903be5"
        },
        "item": {
          "id": "04bc3346-19e8-4f4f-8e36-fbb7832fd2e5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e269bd66-b5fb-4f88-b39f-4f5969586b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a8b600-80c8-4376-b37e-0c0397dcefdb",
        "cursor": {
          "ref": "3daeb219-a0e3-42c3-8de3-36be23e47700",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ab92dcb0-13d7-4b0d-b6e4-c84890785710"
        },
        "item": {
          "id": "65a8b600-80c8-4376-b37e-0c0397dcefdb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "51663060-c8bd-4fb6-8737-f254534d1839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c187180d-7adf-43a7-ba12-bdd7b88b75ca",
        "cursor": {
          "ref": "e237ebb2-2f9c-4e01-b6d4-0c2c14590ab1",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "879c852e-b0b0-446e-828f-80eded64b250"
        },
        "item": {
          "id": "c187180d-7adf-43a7-ba12-bdd7b88b75ca",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5403b1d0-ebf0-4646-a098-aa47826106bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c7335c-30f6-4167-9732-8f3601b16ba6",
        "cursor": {
          "ref": "3470a27b-7820-41de-a6c7-f7d96c8565ee",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1d59e231-4bca-4f9f-aded-3d6e4166f46d"
        },
        "item": {
          "id": "b1c7335c-30f6-4167-9732-8f3601b16ba6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6709a53c-56b0-449e-870d-fbaa0c4138b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078707de-4ec0-4633-ba52-d13d0773957b",
        "cursor": {
          "ref": "6372b210-30e7-4fdf-b8e8-194ba9c3ab75",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0b04e433-aa99-454a-8b0a-bc805a66c29a"
        },
        "item": {
          "id": "078707de-4ec0-4633-ba52-d13d0773957b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "032dce07-565b-4ba0-a73d-cd0b75375671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace71d01-c268-46e5-9c3c-7e24571c66f2",
        "cursor": {
          "ref": "e49f400c-1dc2-47c5-9918-d197cb17c6f4",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "76a76b66-c2c6-49f3-8d39-a11e081d3a97"
        },
        "item": {
          "id": "ace71d01-c268-46e5-9c3c-7e24571c66f2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "faac6e45-a0ed-4ade-a0be-dc381d1c9205",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 558,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73995f2-c849-42d5-8fec-2d83483ffb29",
        "cursor": {
          "ref": "136f643b-c42f-4cba-afa3-1577aa1a0ba3",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "de5d2c47-0a86-43e9-b1aa-56eea600b583"
        },
        "item": {
          "id": "a73995f2-c849-42d5-8fec-2d83483ffb29",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "aeb0868f-1e80-46bd-b9e3-f7937804975a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5979a5a-b35d-4e7c-b490-401a43cfc7fe",
        "cursor": {
          "ref": "d8658bda-0fc9-47d9-88e4-dbf00c418f3b",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6333c170-9b16-4ff4-bea7-94b9a6b326e4"
        },
        "item": {
          "id": "e5979a5a-b35d-4e7c-b490-401a43cfc7fe",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "031c30e9-da1f-48a8-8d3b-13847b38088b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4b9571-cbe4-488f-8fff-ae30c30dace5",
        "cursor": {
          "ref": "1a565573-fdc4-41e2-8dfa-380bd2dc4c76",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5be56545-b047-407d-8ac8-408a3c15a825"
        },
        "item": {
          "id": "ac4b9571-cbe4-488f-8fff-ae30c30dace5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d1e7f521-f9c3-474a-969f-f249a9184777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446dfc01-5194-48d3-8dc1-fa0a2d39b0f1",
        "cursor": {
          "ref": "fd1e675f-a8e8-4e62-99b0-3dd1620ccd6d",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "65c5a5f0-2d72-42c8-a277-ea457adf0c48"
        },
        "item": {
          "id": "446dfc01-5194-48d3-8dc1-fa0a2d39b0f1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "156205a4-355c-4b53-bdb1-c88923f83c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8fa8ab-4b7a-43c9-ae9e-8debc55452bf",
        "cursor": {
          "ref": "37562b74-bcc8-47e5-80b0-f885aea57afc",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5b7e8582-db1a-4979-a8e1-dc12404ad81d"
        },
        "item": {
          "id": "fe8fa8ab-4b7a-43c9-ae9e-8debc55452bf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "25b96a08-d974-4b62-bf28-4d985e95610d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd31f0a-f2b9-47c9-b0b9-d059f728e857",
        "cursor": {
          "ref": "fc0c63d5-7fec-4f8d-b071-2d5eb241658e",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ed9b12d1-f4a4-4aa5-9b79-3312b5092071"
        },
        "item": {
          "id": "cfd31f0a-f2b9-47c9-b0b9-d059f728e857",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2fde9067-b0bb-4c77-8118-60cb3ee5d88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eda4096-4d7d-4bab-b6f5-77877418056a",
        "cursor": {
          "ref": "383327d1-2061-4994-9711-899378bf7006",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "caad41e7-8f4d-41f4-903b-e20718c88793"
        },
        "item": {
          "id": "6eda4096-4d7d-4bab-b6f5-77877418056a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "79b727b2-e86c-41f9-ac2d-83703348c6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8d73a7-d153-4d5d-8972-cf758ca6fb2a",
        "cursor": {
          "ref": "88bbe289-cd2c-4dbb-8d93-f0d0b3b7c33b",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e69b48c5-add8-4297-abdb-55832d1098e8"
        },
        "item": {
          "id": "5e8d73a7-d153-4d5d-8972-cf758ca6fb2a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bf4ac070-0f53-4e19-ba2b-b81a370a7ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc44d4ef-d3c1-4c97-a457-60423bc8a88e",
        "cursor": {
          "ref": "f8f82063-513f-4b5f-9e6a-5ca336961f2f",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e6cf4f15-3d2a-40c6-81c8-1d4f803ee319"
        },
        "item": {
          "id": "bc44d4ef-d3c1-4c97-a457-60423bc8a88e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e91d0f54-c99e-44eb-bb6b-1cee5de827dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f96d09-08da-426f-99f9-56d2fa517a81",
        "cursor": {
          "ref": "e76d63b7-6d71-4d04-88e0-1c4a954a1fb5",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "497fb4f7-61d3-4ab5-8f50-6a6fea62736e"
        },
        "item": {
          "id": "32f96d09-08da-426f-99f9-56d2fa517a81",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e21487c6-ea5c-4e3a-bf48-3a01f6d2a022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c728fe0e-9d79-4cd6-afcc-191497f323ac",
        "cursor": {
          "ref": "39e132b0-d9fc-4414-b988-4379ad0c400d",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "88e20677-79e4-4e3c-99d9-7cf665d58311"
        },
        "item": {
          "id": "c728fe0e-9d79-4cd6-afcc-191497f323ac",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ef8d49fb-26c7-44da-b1b3-92158ed08dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400f4185-0518-47c5-bf14-6db6ca135515",
        "cursor": {
          "ref": "dc13b82f-e4b2-401a-858b-dbcbc9b90d5e",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "83fa001a-caa1-4985-a28d-79a95203efae"
        },
        "item": {
          "id": "400f4185-0518-47c5-bf14-6db6ca135515",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ee21ab28-fe54-495c-8334-6d1c17a04a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be69378-f566-4d64-aa7c-f79020a9394f",
        "cursor": {
          "ref": "478b7b06-fbb1-4f2b-bd2a-2b1a00d77cdf",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7cf2180d-c1d9-40b8-b627-94848d781c7a"
        },
        "item": {
          "id": "5be69378-f566-4d64-aa7c-f79020a9394f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4b0f9950-1233-4b69-8dc0-3c84b7e72b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9befdaa-6ea0-4386-958d-867c6471313d",
        "cursor": {
          "ref": "529f0a71-4fb0-47ce-85ca-54670d941189",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "773af2c7-f8f3-494a-9e2f-52206a3776ad"
        },
        "item": {
          "id": "f9befdaa-6ea0-4386-958d-867c6471313d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "94ef4c61-e396-41d9-a9aa-975d6e3d17a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7f3bbb-19e9-4c2e-999b-d5ad8918dc2e",
        "cursor": {
          "ref": "5d50ee7c-4533-4b97-a9b4-6fdf0ee1b07b",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6739a8ec-ed20-46a6-92d3-5ba4bdabc00e"
        },
        "item": {
          "id": "cf7f3bbb-19e9-4c2e-999b-d5ad8918dc2e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b353ea9a-0d23-4501-98b0-52489ba43f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4b4b16-8707-4c1f-b5fb-ebc24eaaeb34",
        "cursor": {
          "ref": "bddf9ffc-a785-4f0d-804e-875920082278",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d4309a10-0b0c-4277-80f7-7b2f5ed34053"
        },
        "item": {
          "id": "6f4b4b16-8707-4c1f-b5fb-ebc24eaaeb34",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8622e5ae-9549-4fb7-9353-a78e8020b7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff81e867-0718-46cd-b03d-fa2d28147d8e",
        "cursor": {
          "ref": "66fe08ae-a32b-4d17-b979-615b049d2dc0",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0874cf9f-d96b-4391-a928-74c0f10cf344"
        },
        "item": {
          "id": "ff81e867-0718-46cd-b03d-fa2d28147d8e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b73ab77c-d889-4052-b670-aca897a3bfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104059e2-8265-4e6b-a2d2-24a3f8be625e",
        "cursor": {
          "ref": "f1666a5c-2b8c-45ef-b490-ebf5063c224c",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b55d1e80-4d64-4740-86c3-5f95e74fa348"
        },
        "item": {
          "id": "104059e2-8265-4e6b-a2d2-24a3f8be625e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1acea48b-0e93-4b97-be26-614386c852b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec64e01b-8eb8-4b7f-8b45-6e8e5d9cb3f1",
        "cursor": {
          "ref": "53d619b4-0d19-4f53-87bc-e53420303137",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bd6f4836-f05e-426f-bdcc-08590fa17d39"
        },
        "item": {
          "id": "ec64e01b-8eb8-4b7f-8b45-6e8e5d9cb3f1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "edc3fe57-4192-452c-9e46-bf5bcc403fdc",
          "status": "Created",
          "code": 201,
          "responseTime": 2423,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "2eb1ca7a-5a43-4bb2-a1a1-590a0b9cef0c",
        "cursor": {
          "ref": "83f415ba-7db3-48df-9a77-d72ef52ade18",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1991f0bd-41bb-455a-8f7a-8b6e230b25fe"
        },
        "item": {
          "id": "2eb1ca7a-5a43-4bb2-a1a1-590a0b9cef0c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8a62d7d2-414f-41f2-8b99-2494c4db2999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0a471f-60f9-4101-884b-aa2bdede00b7",
        "cursor": {
          "ref": "2efa0361-9b6b-4eca-b9f1-f1ef39204855",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c7f4a7ad-836b-4eab-8150-463b30a527dc"
        },
        "item": {
          "id": "8b0a471f-60f9-4101-884b-aa2bdede00b7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a72f0e65-49a9-4e4e-a920-bafc84a997ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ecf308-5cfd-4e4f-8c64-938b69137fee",
        "cursor": {
          "ref": "1f45848b-e468-49db-ad80-ff4a0dd72de5",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a1227fcd-85a8-43fa-a503-898cf46dce96"
        },
        "item": {
          "id": "c6ecf308-5cfd-4e4f-8c64-938b69137fee",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e7430ad6-5a11-449b-b9cb-0c11b145a2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829bac3a-49bb-42f2-8398-9dff1bc05fbb",
        "cursor": {
          "ref": "01e01afa-5b3a-4fdc-85f8-71e5eec48d12",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f234b61f-9ec2-436f-8211-00631da6b1c2"
        },
        "item": {
          "id": "829bac3a-49bb-42f2-8398-9dff1bc05fbb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "419a033a-7bde-45df-af8b-18c213fd4c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676cbe1c-7f0b-495e-8e48-4f147d44a989",
        "cursor": {
          "ref": "30553f99-8414-43ce-899e-68bf33061d15",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "566aac84-6402-46bb-84d8-6a812f56c605"
        },
        "item": {
          "id": "676cbe1c-7f0b-495e-8e48-4f147d44a989",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c9e2ac79-4d91-40b2-be05-f39c14613f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945181b6-44dd-4fbf-aa95-44b06545566c",
        "cursor": {
          "ref": "06ddd8e6-dd05-48aa-93be-3b7a7fa4590d",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5c78d48f-ac3c-471f-b3bc-a867cd048628"
        },
        "item": {
          "id": "945181b6-44dd-4fbf-aa95-44b06545566c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7ee16cd4-87cd-45e4-a251-0f75c268348b",
          "status": "Created",
          "code": 201,
          "responseTime": 2195,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "b1e75c54-8e84-4cfe-8de6-bdbdbe3eafc0",
        "cursor": {
          "ref": "d6546a66-8c92-4461-80e2-41ed9893c2b2",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3e007c66-5d4b-4e9d-b47b-d5a06b586584"
        },
        "item": {
          "id": "b1e75c54-8e84-4cfe-8de6-bdbdbe3eafc0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "01431215-18b8-4885-9a83-3c0de22844a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd022d39-c028-4d1c-a687-02045bca6bd5",
        "cursor": {
          "ref": "e531b27f-b4a1-4eb9-8f02-7e1100c8e04c",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5163add4-b118-494d-a1a1-b1c28aaf27bb"
        },
        "item": {
          "id": "fd022d39-c028-4d1c-a687-02045bca6bd5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d2e3631a-430e-417a-a903-8d1b34aa459b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70e6edb-f78d-4eae-aaf5-e1687227f634",
        "cursor": {
          "ref": "d9868aa5-45d6-4d02-b777-11e0cac02f23",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cdb473be-89c9-40d2-a472-32e4c80d7410"
        },
        "item": {
          "id": "c70e6edb-f78d-4eae-aaf5-e1687227f634",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "998d8458-0cc9-4309-8053-297b3b529b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99069700-200f-47ed-9128-84e1d029bccc",
        "cursor": {
          "ref": "f020c9e2-cb35-4f71-825c-8fc6f906bc44",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0125fe97-8233-4d11-b788-921ba059e0a0"
        },
        "item": {
          "id": "99069700-200f-47ed-9128-84e1d029bccc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ffccc320-1bee-4ee1-b064-248bfd40045b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e391c0a9-7560-40aa-9a06-dc8f50daf94d",
        "cursor": {
          "ref": "b61cb263-bdf5-49b4-9f01-2c6abadd5ab4",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f4ae892d-ed60-4ed5-a260-8cbcaab115ea"
        },
        "item": {
          "id": "e391c0a9-7560-40aa-9a06-dc8f50daf94d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a7622ee1-730e-474e-9834-0de101e1577e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2729ca-dda3-46f1-a045-2addfa211190",
        "cursor": {
          "ref": "9a8bc3e5-ca53-4794-a517-bc5800ac140f",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "596abd66-a38f-4e82-8606-9c5b7383c786"
        },
        "item": {
          "id": "4c2729ca-dda3-46f1-a045-2addfa211190",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3a08dd8d-d79b-472d-b588-cfce8c7c2937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452c30d4-cdfe-414d-a82a-a11ae354045a",
        "cursor": {
          "ref": "9e31348f-f719-4ce5-81f1-af95bee5e54c",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "17f7ad07-148b-4afd-b970-0289ade102e1"
        },
        "item": {
          "id": "452c30d4-cdfe-414d-a82a-a11ae354045a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1e0408e6-358f-429d-b358-94ad26a1d7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83edec50-3a07-4567-8248-296f38b3809e",
        "cursor": {
          "ref": "f74817be-baa0-4ba4-82f0-aeb623bb535c",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2c209aaf-2566-492c-a1d8-9bcd8bf0a574"
        },
        "item": {
          "id": "83edec50-3a07-4567-8248-296f38b3809e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "eab87b98-45cc-45f8-a818-a881adf80822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d456b3b-c1b2-470e-a0f2-18985c2d9d5f",
        "cursor": {
          "ref": "15b225a9-ef9b-4367-b856-5428fba4c3ef",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "47b1fe92-6330-4c04-a367-62762433a2c9"
        },
        "item": {
          "id": "8d456b3b-c1b2-470e-a0f2-18985c2d9d5f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c3d95076-b1be-4761-80ca-aa9a873f4105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9886b6-95cd-4273-86ef-240d16bef3e6",
        "cursor": {
          "ref": "3a2aed76-731c-4dc7-b190-3528aa1fcb13",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fabe63e8-a075-4cf5-ae85-817a66566d6e"
        },
        "item": {
          "id": "9c9886b6-95cd-4273-86ef-240d16bef3e6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "82d0512d-e7cb-476a-9b32-6c1470afdfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a20cbe-ea84-457c-a800-e1920ff29659",
        "cursor": {
          "ref": "4a72add0-e4af-44af-adf3-9b1cc8e43fc9",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "afa8c930-01ff-4cac-aa15-3893a89be71f"
        },
        "item": {
          "id": "43a20cbe-ea84-457c-a800-e1920ff29659",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8312fba8-095b-459d-a849-5cae0e45ff7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d11161-e24d-4b9d-8660-c8b62310a837",
        "cursor": {
          "ref": "16c9e67d-67b9-4e05-bf4e-783e1e4a62a1",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a34aadca-e950-46e6-bf51-ce6a1d195d3e"
        },
        "item": {
          "id": "85d11161-e24d-4b9d-8660-c8b62310a837",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3fa76690-473f-418f-b556-b3e118614ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cb5a38-d0e2-4002-bbb2-d070e68ef181",
        "cursor": {
          "ref": "222b634e-6e90-4005-ad05-52f739fc636b",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f1613944-c4ac-435c-83d0-a209beeaa4b0"
        },
        "item": {
          "id": "e4cb5a38-d0e2-4002-bbb2-d070e68ef181",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3439fd37-8bf4-46ff-92dc-def507b15f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7354fa-e2f5-405f-ade5-28d43a61f886",
        "cursor": {
          "ref": "fdd24402-dc44-422c-9b18-57db9cad187c",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d526a142-3c2f-4e35-bed5-5e3d7023a53b"
        },
        "item": {
          "id": "eb7354fa-e2f5-405f-ade5-28d43a61f886",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e2ebde64-8136-49d3-a435-dc1521e36024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a036ff-cd67-487d-96ea-3d1158a82306",
        "cursor": {
          "ref": "61a46862-a1bf-4e3a-8bae-a6baa18339c7",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3d9ff3d8-0fbd-4b81-963a-6d9af051c8be"
        },
        "item": {
          "id": "26a036ff-cd67-487d-96ea-3d1158a82306",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fa2fc61c-df6b-42e6-9f16-62bb18a72588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9de068-b70a-4468-8654-479a9393b4bc",
        "cursor": {
          "ref": "e6c67cf4-1359-4651-99d4-b9807f094e72",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "82ebd903-1c43-4a23-b727-903b32dbc05b"
        },
        "item": {
          "id": "ac9de068-b70a-4468-8654-479a9393b4bc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "46935b42-26fd-45c0-80f0-a76a1fa4db86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4051ef7d-44fe-4d1d-9590-e01fc37132be",
        "cursor": {
          "ref": "863a3551-2dbc-459c-9b5f-af6f2873890c",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "59aec63a-dd6f-4d51-92fd-864d629dd68f"
        },
        "item": {
          "id": "4051ef7d-44fe-4d1d-9590-e01fc37132be",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7c3a7d53-12c5-4fa2-98e9-5761b91f42db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0d3258-86a2-41a7-886e-2ed27e73f229",
        "cursor": {
          "ref": "784eb650-8608-4723-ab75-3af3b1963438",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "865d8394-ee5d-4c1d-829d-0c3f885d2ec1"
        },
        "item": {
          "id": "8f0d3258-86a2-41a7-886e-2ed27e73f229",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f16f34d0-3b41-462f-9eb2-9018ae345e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e4f6ef-87a3-4462-a342-54a6ce73172a",
        "cursor": {
          "ref": "cfa5fa3c-bbc1-47b9-99e9-a7bc428fb0d5",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7838892a-f377-43ea-8928-eba76fafb68c"
        },
        "item": {
          "id": "64e4f6ef-87a3-4462-a342-54a6ce73172a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "997da93d-a18a-4748-ae3d-ecbd11139f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0af1a30-0fa3-4d16-9041-038134e893c0",
        "cursor": {
          "ref": "e797b12f-b7a9-4b5a-ba3d-207793272217",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "751a83b5-9e3c-4934-a165-b993f7a251b0"
        },
        "item": {
          "id": "c0af1a30-0fa3-4d16-9041-038134e893c0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "37c8cc8a-96ff-4208-befe-f3e23baacc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302f0899-c47c-4c35-a5c9-b1d6fd1ccbfc",
        "cursor": {
          "ref": "7ccb8113-43a0-413e-b328-afe4d3734e48",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5131e2fd-77b7-4910-8f73-9b0ef13e0301"
        },
        "item": {
          "id": "302f0899-c47c-4c35-a5c9-b1d6fd1ccbfc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "89d7feee-45ce-40ed-86bc-edd1776099d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2724b4f3-7761-4489-8a4c-597ec1df03aa",
        "cursor": {
          "ref": "0d9b39cb-793f-4fd3-9bc9-0fc4a90dfff0",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dc2beae3-534b-4e8a-83f5-566eaeed5931"
        },
        "item": {
          "id": "2724b4f3-7761-4489-8a4c-597ec1df03aa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2a9a08df-e675-41ea-8cbd-a2b53083fd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bf7a50-9e82-4fee-b0f5-42a6ecbe132c",
        "cursor": {
          "ref": "d1573737-ab78-47a4-9651-fb851c579b49",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4ea8fc90-d18e-4d37-89d1-35e1f3000008"
        },
        "item": {
          "id": "98bf7a50-9e82-4fee-b0f5-42a6ecbe132c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "29926e3a-9448-4a52-a2ec-65b8a5b7a24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb142a3-7198-4e73-b330-226cfba3f46a",
        "cursor": {
          "ref": "fa0ca149-81a8-45e8-ab06-11149ad0adfa",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d4562210-38f2-4c1f-b599-b4bcce47be06"
        },
        "item": {
          "id": "8bb142a3-7198-4e73-b330-226cfba3f46a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1a366d39-5939-4392-b2b7-b336adf8093b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e03ed22-4cdd-41fb-9bfb-07abe4666109",
        "cursor": {
          "ref": "8427efff-628b-4054-9082-051951bf7f5d",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5ce415dc-0617-4305-a8dd-94544706df7a"
        },
        "item": {
          "id": "5e03ed22-4cdd-41fb-9bfb-07abe4666109",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e3365f94-0fd9-4c30-bd9f-99c345e966d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de0c28c-eaad-496a-a87c-b5a07a626f2c",
        "cursor": {
          "ref": "85db2599-dd58-4cb1-903e-20d319a86aad",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bfafafdf-6f3f-4889-b6b9-82c7a60f5cb8"
        },
        "item": {
          "id": "1de0c28c-eaad-496a-a87c-b5a07a626f2c",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8a0400ce-36e0-426b-90f8-04bc1d245021",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 561,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ad66c1-38e1-40b5-8876-27b564f7f40f",
        "cursor": {
          "ref": "26d3feeb-866c-4b34-8c5d-99a6d27d7ea7",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5baf2226-c3d3-4fdf-8ff4-bbff58ecd55a"
        },
        "item": {
          "id": "56ad66c1-38e1-40b5-8876-27b564f7f40f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "26a852a3-bfd0-4ed3-9d34-0486e52ef525",
          "status": "Created",
          "code": 201,
          "responseTime": 3506,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "9ea83357-aa2c-4df4-aa79-c30b6642dd15",
        "cursor": {
          "ref": "27f39ec5-cab2-497c-8462-2c0f8079396c",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7c8d6b0d-c842-46cf-b424-a78470a4fe94"
        },
        "item": {
          "id": "9ea83357-aa2c-4df4-aa79-c30b6642dd15",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "0206701d-3f48-496a-9d73-768d0ec043e8",
          "status": "Created",
          "code": 201,
          "responseTime": 3032,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "bfbb61c1-6a4d-4eac-a6d7-14087d381ce0",
        "cursor": {
          "ref": "fe7f23a0-cc07-4428-87cc-abf9752a6791",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e81b307d-c965-441e-813b-4106fbf477bd"
        },
        "item": {
          "id": "bfbb61c1-6a4d-4eac-a6d7-14087d381ce0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e7e548b3-b56b-4c7f-be9c-0f46bc504c51",
          "status": "Created",
          "code": 201,
          "responseTime": 2257,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b3e09b98-90c6-4a78-a282-4a2d11359717",
        "cursor": {
          "ref": "50f7b558-fe44-4369-ab70-ebab69bedc8e",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "375db6ce-667b-4ddd-a379-1c3ed44a3124"
        },
        "item": {
          "id": "b3e09b98-90c6-4a78-a282-4a2d11359717",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "74c193c1-d619-47b8-af99-85d600af748d",
          "status": "Created",
          "code": 201,
          "responseTime": 2189,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "769a3775-8f0e-4de6-a625-7cd5e5ccc1f6",
        "cursor": {
          "ref": "ba31e996-b2c3-4308-b2ce-c5b72f02cf33",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "120992bd-992c-4a4f-b3d8-fc4566cace2d"
        },
        "item": {
          "id": "769a3775-8f0e-4de6-a625-7cd5e5ccc1f6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "10ef3f32-eaef-4765-b1f8-ea5450b97d82",
          "status": "Created",
          "code": 201,
          "responseTime": 2236,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "423c567d-a2a4-4b5f-a175-7753d12636ac",
        "cursor": {
          "ref": "05e1eaa9-2558-426d-b3d0-61be1c227adb",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f74b8409-603a-4d83-831f-76c9f994ed0b"
        },
        "item": {
          "id": "423c567d-a2a4-4b5f-a175-7753d12636ac",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2fc660df-b55f-4d8e-a785-bec55f99e8f0",
          "status": "Created",
          "code": 201,
          "responseTime": 3004,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "0647d85c-1417-48ef-892f-45583284f81b",
        "cursor": {
          "ref": "5bbe9b13-5006-4ec0-b5a4-e6fa0be8bc72",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b99d511b-a12e-43e5-8c19-0806d07d4b25"
        },
        "item": {
          "id": "0647d85c-1417-48ef-892f-45583284f81b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "46e4aa2f-ce73-4331-b3ad-d939abdbb535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0647d85c-1417-48ef-892f-45583284f81b",
        "cursor": {
          "ref": "5bbe9b13-5006-4ec0-b5a4-e6fa0be8bc72",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b99d511b-a12e-43e5-8c19-0806d07d4b25"
        },
        "item": {
          "id": "0647d85c-1417-48ef-892f-45583284f81b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "46e4aa2f-ce73-4331-b3ad-d939abdbb535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25a6a20-5618-4560-a017-8ddf3fc4dff9",
        "cursor": {
          "ref": "77e80b21-aa31-4ef0-ad81-bc47aef41737",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d404fce2-af04-40fa-91f3-6e8ebf67597d"
        },
        "item": {
          "id": "b25a6a20-5618-4560-a017-8ddf3fc4dff9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "269d716e-7ff6-45ec-ad49-fbd200e30677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0942a6c9-1087-442d-91d8-b5f78e9b2bcf",
        "cursor": {
          "ref": "2e8a889e-8230-477c-addb-1d45a3f39d2e",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a4032ae9-cb95-4958-b0da-8874e28a676a"
        },
        "item": {
          "id": "0942a6c9-1087-442d-91d8-b5f78e9b2bcf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e95e5ea0-92c8-4c06-ad8e-4a3acd89eaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4f46c6-c4e8-4573-a4b5-f6f74975c809",
        "cursor": {
          "ref": "77e60200-2641-4ce0-aac8-f961ff4ba2af",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "45e9760a-c369-40f0-93ed-732aaddfbb4c"
        },
        "item": {
          "id": "de4f46c6-c4e8-4573-a4b5-f6f74975c809",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "299da9bb-05ba-482c-8d2a-d99a73d363d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8b297f-1751-47d8-8f99-80ac30d1e3f8",
        "cursor": {
          "ref": "47ce7506-651f-403a-855f-dd5f42334dbf",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "bf933ceb-30c4-423b-bcfa-14989a11802d"
        },
        "item": {
          "id": "be8b297f-1751-47d8-8f99-80ac30d1e3f8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c46b906c-9712-4b2d-b10f-5e4b49270228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b1aa04-9a12-4311-9b2e-98953f99d184",
        "cursor": {
          "ref": "8eaab3cc-ce3a-4c8e-9813-ed2d2308c8a9",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ab17c36b-e769-429d-add9-1eae1e6fa2b3"
        },
        "item": {
          "id": "26b1aa04-9a12-4311-9b2e-98953f99d184",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "28ce5fb3-4cfb-4a99-aa09-21fd4a42917f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac65df2-ae34-4876-8b03-bd9a8d98bf6a",
        "cursor": {
          "ref": "834f6c20-fc44-454d-a7eb-59c9d910f3da",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6f771906-96a0-4632-a4c7-178647dcab1c"
        },
        "item": {
          "id": "2ac65df2-ae34-4876-8b03-bd9a8d98bf6a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "548639a3-10fa-4a37-8fb3-6c6b450588b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f770640-39f2-4f23-b816-cd2a1a38d039",
        "cursor": {
          "ref": "0d9ee2a4-d38a-433a-bc91-8f796f22fe8f",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "82b20365-76e8-46a6-b559-fdc25771dcda"
        },
        "item": {
          "id": "0f770640-39f2-4f23-b816-cd2a1a38d039",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7954a6ba-77be-4bda-8628-8298ffde58e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd2500f-d721-4e49-87ac-96a3165109ef",
        "cursor": {
          "ref": "c4059639-9ddf-4327-9469-c044e34ab83b",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3ba1f21e-877f-49b2-86c4-c2c7d5a1b5ba"
        },
        "item": {
          "id": "5bd2500f-d721-4e49-87ac-96a3165109ef",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "59d9cce5-b518-470e-8e10-33f672937f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd28f20-f918-43a9-9727-212c7c202b51",
        "cursor": {
          "ref": "ca071863-a386-478a-b59d-2fa6c9dc6f02",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1a242c58-cf09-4d7b-a36c-eca98a544675"
        },
        "item": {
          "id": "0cd28f20-f918-43a9-9727-212c7c202b51",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2bb93abe-0426-456b-9469-9510362512e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7acdfe-e479-46fc-8c2a-0f25bc577dab",
        "cursor": {
          "ref": "0bfa800e-d1a5-4202-96f9-cf3a62b52366",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "eacf84b7-ca07-4b5c-bbae-859bb1444ce1"
        },
        "item": {
          "id": "2e7acdfe-e479-46fc-8c2a-0f25bc577dab",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "649998e5-312c-4aa8-ac0f-4d73a687396c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4869b1c6-9a31-47b3-a348-644ac58b443e",
        "cursor": {
          "ref": "c802d16d-4a77-4bc3-b982-d8a2a7b32e4d",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5fb72883-864f-41f2-9637-b61cd8e63fee"
        },
        "item": {
          "id": "4869b1c6-9a31-47b3-a348-644ac58b443e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "65058b78-8f6f-4be8-8a5a-5a8898089df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fab9285-623e-4bbd-8f4a-c75572f066e0",
        "cursor": {
          "ref": "cfc660da-2ac7-4523-9b88-eeb18d873c59",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d98cd31e-25a3-4148-a062-43d823041417"
        },
        "item": {
          "id": "8fab9285-623e-4bbd-8f4a-c75572f066e0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "11d74d8b-3c6c-45a0-8735-07623b9db6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb69daeb-6dae-469b-848e-58321c10f7c9",
        "cursor": {
          "ref": "59a78d8f-93a1-4805-863d-f3162dd830ea",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "15b1f1bf-e103-4953-a86a-f18edd1efc31"
        },
        "item": {
          "id": "bb69daeb-6dae-469b-848e-58321c10f7c9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5a15629a-2d34-4d15-9060-73c3c2439f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa54a40-b3e7-4516-ae0c-9592efbcdd0d",
        "cursor": {
          "ref": "164991d7-3c68-440f-ac26-20ca63240d44",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "718b2ca0-f481-47d7-a52b-e377b4f73c80"
        },
        "item": {
          "id": "8aa54a40-b3e7-4516-ae0c-9592efbcdd0d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "70c402f8-3f32-4998-af8e-0c082239a48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8344a49-b365-4fb7-8edc-ee32473abd1a",
        "cursor": {
          "ref": "e8ebe909-f166-4030-b507-6c3e606d82eb",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ad2147e2-b6e1-410a-833b-09c694026da1"
        },
        "item": {
          "id": "b8344a49-b365-4fb7-8edc-ee32473abd1a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "79294ae8-6537-4acb-8b41-948dac8c9489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0e9fc6-cdba-4ff1-9ef5-6f86582c8fa7",
        "cursor": {
          "ref": "bdd43bf6-07d2-47a6-8c49-77820b072b9d",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7a53a0a1-f092-4f64-9855-52c5daece612"
        },
        "item": {
          "id": "6d0e9fc6-cdba-4ff1-9ef5-6f86582c8fa7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ef94cbb1-bbd4-4311-abeb-3273f701bf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1160ded4-bbf2-4d2a-8944-618fde34296f",
        "cursor": {
          "ref": "f3fbf216-1f7f-4105-b2b7-8218c150c0c0",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "70fef981-c70a-4068-b14d-1d8abc4bd623"
        },
        "item": {
          "id": "1160ded4-bbf2-4d2a-8944-618fde34296f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "61770962-5191-4fe3-b1f5-f487d95fe230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0156469c-6a57-433f-940d-17c17f31fa2b",
        "cursor": {
          "ref": "cbc1c4b3-3ac5-446e-9c8b-13d65dc1c4d0",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5a46c2d2-5885-41a3-8eb5-cccf83397574"
        },
        "item": {
          "id": "0156469c-6a57-433f-940d-17c17f31fa2b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "954b9036-5ccb-4cbc-bdec-38774d098dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b27cb6b-132d-436f-b464-018a7f949417",
        "cursor": {
          "ref": "874b7069-f713-4cbe-8c3f-6dc92c090ffe",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4ff744f6-7b67-4617-825b-d93ed5053a5b"
        },
        "item": {
          "id": "8b27cb6b-132d-436f-b464-018a7f949417",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fffa82f4-a3d4-43c6-a0e0-2800f8a9417d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28d9f85-7627-4a6b-b87d-84196ac6503f",
        "cursor": {
          "ref": "6f0e647a-50b9-4002-a357-8ee6a7f12705",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f97dcca9-9ba0-4980-ab37-85be13b58ca5"
        },
        "item": {
          "id": "e28d9f85-7627-4a6b-b87d-84196ac6503f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a062d4ca-d580-413b-8d9c-a2043b774327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23c5a8a-c108-4d4e-83d5-e6671dd1ce54",
        "cursor": {
          "ref": "2e87ba26-c445-43f1-ab03-d234fd7a3a0b",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "23d61cad-f912-46f3-8efc-8baae8a86e3e"
        },
        "item": {
          "id": "a23c5a8a-c108-4d4e-83d5-e6671dd1ce54",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "22c19de3-98d4-4b1b-b511-832401df4870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767156f7-a6d0-4dc0-9c86-6ade4efe66e6",
        "cursor": {
          "ref": "4f1cffd8-85c1-4aa5-b676-28b2f0313088",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d91b93c9-a4e7-42f0-95dd-1924382a23eb"
        },
        "item": {
          "id": "767156f7-a6d0-4dc0-9c86-6ade4efe66e6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ff5960fa-0c4b-4120-ae73-a458d05ff268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841a9430-f9ec-4ec8-ad37-85c4d773e265",
        "cursor": {
          "ref": "ae2a413f-a933-4e56-b09b-ff3df51d05d6",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "80dc4ce9-ebec-4fe6-9961-257eb95c72c3"
        },
        "item": {
          "id": "841a9430-f9ec-4ec8-ad37-85c4d773e265",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f2138e49-0a27-4c17-8724-f95c623a3985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5b1303-0e1b-4067-ac39-78731d70de2a",
        "cursor": {
          "ref": "7536d230-d775-4bea-92d3-e3801dbf0ac0",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "72b27916-d64f-4fae-bdf7-a0ef3551d686"
        },
        "item": {
          "id": "ba5b1303-0e1b-4067-ac39-78731d70de2a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0fb1ec2d-5932-40de-a648-be1993ad59b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d91b68-27e1-4e5c-92ad-ab641e15d5ff",
        "cursor": {
          "ref": "fb938b50-c7ff-4494-a210-3ade49174058",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "75d5554e-476c-4359-b506-fbcf853881ca"
        },
        "item": {
          "id": "c0d91b68-27e1-4e5c-92ad-ab641e15d5ff",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eec6d6a2-f8ca-4751-b9b6-12b94136b248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a159c76-ccc0-4a3e-ad9f-1d678d7d2fad",
        "cursor": {
          "ref": "2da87447-3758-4e9b-b6ba-15831f063903",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "404776f4-2338-4f6c-a2a9-8641c7cff5d4"
        },
        "item": {
          "id": "7a159c76-ccc0-4a3e-ad9f-1d678d7d2fad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b4659b92-b8e8-47e8-a513-f1de43210b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1025,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25b8348-a4e5-4f56-be8b-86d07f71a67b",
        "cursor": {
          "ref": "b45f31d0-3f53-4979-b16b-c67c56083c3c",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1bca25ae-7eac-4ee6-aeac-3dd1cf593f0c"
        },
        "item": {
          "id": "d25b8348-a4e5-4f56-be8b-86d07f71a67b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1e4197a0-7b3f-41c4-9e6b-988f306887ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a523b1a-eb28-45b0-8c2c-2c3e78075772",
        "cursor": {
          "ref": "49ee739f-7ab0-443b-831a-cb930779ce09",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8966f5cc-4e1b-426e-bd2b-1eaede567d53"
        },
        "item": {
          "id": "2a523b1a-eb28-45b0-8c2c-2c3e78075772",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1f06174f-289c-4026-842a-5532274fc37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176111c6-ade4-45aa-91f7-ca6b196701f4",
        "cursor": {
          "ref": "b26f373b-0291-4e2c-8869-7b14141d47b7",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3df7a528-a63b-4074-8e60-ceabf3f1c853"
        },
        "item": {
          "id": "176111c6-ade4-45aa-91f7-ca6b196701f4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d7be083c-152e-47c9-bb90-fe6398c48166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92aaab9e-e5ab-41b3-aefa-e51eae156ce0",
        "cursor": {
          "ref": "d39ec650-2092-42ea-97c9-6ff8e315f494",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d590b759-1759-4507-9968-77ad4ea1c16c"
        },
        "item": {
          "id": "92aaab9e-e5ab-41b3-aefa-e51eae156ce0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "755efa95-e245-458d-a2b1-a6f2c4b61f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74a2bb7-354e-4fdf-bd1d-54f9c59c11b2",
        "cursor": {
          "ref": "a709cdf2-4506-4497-afda-f221c0982436",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f11bf9a8-4f85-4f47-94a7-8fa0c8f34bda"
        },
        "item": {
          "id": "c74a2bb7-354e-4fdf-bd1d-54f9c59c11b2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fd9ae2c5-c1c6-42fc-b894-35ce5202377d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ade3aea-65ae-4b01-97d5-a890853f89d3",
        "cursor": {
          "ref": "1a749004-8748-4f85-a65c-f7217c23a7f0",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1f70b63e-d768-4112-b85e-56a7224a05db"
        },
        "item": {
          "id": "5ade3aea-65ae-4b01-97d5-a890853f89d3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "82d1ff0c-ce22-43de-ba49-60e971bbb372",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1275d478-600d-4295-94c5-6ad9e3982b69",
        "cursor": {
          "ref": "be089dc9-53ac-4ef7-ab3d-7aad48ea5b27",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "292f201c-df79-4a04-876a-4e8c806a0b5a"
        },
        "item": {
          "id": "1275d478-600d-4295-94c5-6ad9e3982b69",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3a4e50b9-1363-4296-8a6a-17427e69d695",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 546,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6533b0-2106-4dd7-8b72-8bbd5d772bd8",
        "cursor": {
          "ref": "b800ad48-dc10-4fd1-8373-ac3660357afb",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "303e62b0-5451-4c75-b69d-f3c97d0ba693"
        },
        "item": {
          "id": "fa6533b0-2106-4dd7-8b72-8bbd5d772bd8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "86a9ca4f-7a8a-4809-94d0-40ee43a8c083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6533b0-2106-4dd7-8b72-8bbd5d772bd8",
        "cursor": {
          "ref": "b800ad48-dc10-4fd1-8373-ac3660357afb",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "303e62b0-5451-4c75-b69d-f3c97d0ba693"
        },
        "item": {
          "id": "fa6533b0-2106-4dd7-8b72-8bbd5d772bd8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "86a9ca4f-7a8a-4809-94d0-40ee43a8c083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f30e2b4-779f-4970-bc4b-4771f511f703",
        "cursor": {
          "ref": "ef9ef49c-2dd8-450d-9d87-624d81e9d334",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d2d2db53-8445-4ffa-9a4e-4afd8380093c"
        },
        "item": {
          "id": "4f30e2b4-779f-4970-bc4b-4771f511f703",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5873c042-bf5b-406e-9c91-112636fdbc3a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 299,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "4c4f32a1-a1eb-4c17-8628-ef5b2b087720",
        "cursor": {
          "ref": "7e58fbf0-bd82-49de-a567-de6b294c86b5",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2b141c21-16af-4f4b-8eeb-2d662fc2bbf5"
        },
        "item": {
          "id": "4c4f32a1-a1eb-4c17-8628-ef5b2b087720",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a3ba4aa6-4e32-499d-8f78-b268649c1f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1dade2-1cbf-4d04-8964-48c16b627ecc",
        "cursor": {
          "ref": "022a2f2a-ba13-4fbc-babb-2f86e21463d4",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a1885f40-a1c9-4e2b-9822-f43c780dbb7f"
        },
        "item": {
          "id": "bc1dade2-1cbf-4d04-8964-48c16b627ecc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "05d465fd-885c-4072-8948-99447596c005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7035114f-5262-4b29-8b68-52b5984050c2",
        "cursor": {
          "ref": "ee10028c-62ec-4675-9da7-ff449c060a12",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "af0738e0-3af4-46a0-a194-d016f65f1c48"
        },
        "item": {
          "id": "7035114f-5262-4b29-8b68-52b5984050c2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dc7b04f5-2376-4aaf-8c8c-fe9f6f7cd217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb732b4-0896-485c-92c7-ddbbb3a2b50a",
        "cursor": {
          "ref": "d69646f8-f758-4208-8a7d-a1c930eab8a5",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "57344589-fe9f-420b-b7b0-41e0aeaa00bb"
        },
        "item": {
          "id": "7fb732b4-0896-485c-92c7-ddbbb3a2b50a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b23ba81d-a8b6-4c2d-bd89-5136e752054c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20c6cf6-5914-47b1-be1c-0ac7697a84f2",
        "cursor": {
          "ref": "9f4426d9-4989-4c73-b18b-02cf633c559f",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4ab702c5-5bdc-4d30-b5ba-181582eaf58b"
        },
        "item": {
          "id": "d20c6cf6-5914-47b1-be1c-0ac7697a84f2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4f892ce9-bdd2-4d76-892f-249b0ab1edcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bae389-5a54-4e16-af3b-77e7afb12012",
        "cursor": {
          "ref": "3ce676d4-8052-4f78-8cdc-5bf81e084a6a",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "969ff447-6363-4a12-90bf-282aa6e6c7b7"
        },
        "item": {
          "id": "87bae389-5a54-4e16-af3b-77e7afb12012",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9b716724-e191-4b7c-86a1-cefcd058ec4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e144fae-93d9-4612-9e75-8e8cf8239a7c",
        "cursor": {
          "ref": "fdc7a15f-220d-46ac-aebb-d353dc817be6",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c66d4cae-9642-4092-a40b-4ad8bd5bf586"
        },
        "item": {
          "id": "8e144fae-93d9-4612-9e75-8e8cf8239a7c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a50afe76-cb4b-419b-aea4-1b7709c73e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7cd8cf-0865-44e6-8b9f-7fd9bb3f8eee",
        "cursor": {
          "ref": "868cc088-6e74-4e75-bef2-e8a95e944b1d",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4441bd03-eaca-49c5-8018-44b391b032dd"
        },
        "item": {
          "id": "eb7cd8cf-0865-44e6-8b9f-7fd9bb3f8eee",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ab0df9ef-6e88-4539-a4e0-13e6c3dc8acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c048ceef-28ea-40c0-8e83-c26c1959c938",
        "cursor": {
          "ref": "807ff2aa-89bb-4eca-a171-3ebcfe6acbce",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "271603c5-594b-4ec1-91cd-c8ee659a940a"
        },
        "item": {
          "id": "c048ceef-28ea-40c0-8e83-c26c1959c938",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "065a2590-ee17-4266-81c4-c0b212bff82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178cee29-3a4c-4aa2-adae-95490b1fab12",
        "cursor": {
          "ref": "1ce348d5-a7d5-4f23-9af8-e70c892fb081",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "03a1b0d2-3487-4011-89b3-8d79604afc97"
        },
        "item": {
          "id": "178cee29-3a4c-4aa2-adae-95490b1fab12",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cb792a57-6778-4e96-b4cb-7e082cabcca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83434fca-6616-459c-a448-bb2de5421238",
        "cursor": {
          "ref": "793c00af-0515-4d64-aa79-778688b33e36",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4b5cb7ae-7831-4e8d-9c73-e9f2ee7051bf"
        },
        "item": {
          "id": "83434fca-6616-459c-a448-bb2de5421238",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8d52fad6-9ef1-4aa9-a043-4951a0a87a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d513007-109f-4a06-a65a-df173a61352c",
        "cursor": {
          "ref": "fdfafaae-b669-42e6-bff8-b0cc77a099b8",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "27cec727-1f52-447f-981f-84baa393a48b"
        },
        "item": {
          "id": "1d513007-109f-4a06-a65a-df173a61352c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0a112aa4-278c-4465-a024-15bd2e11723e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdc1adc-93ac-45ff-b136-ab72a408ed9b",
        "cursor": {
          "ref": "15e81f02-1656-4dc2-9bd2-e8a03e228945",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "92c0368a-8911-4ac5-9ff4-a21e4e695fce"
        },
        "item": {
          "id": "dbdc1adc-93ac-45ff-b136-ab72a408ed9b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fafad4c8-aa77-4aa3-a13c-cf758575e48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fb24c9-0acf-4cb8-bdc7-07ffdc4751a6",
        "cursor": {
          "ref": "4a5df828-9f90-46f6-a6b3-a0bdf5be1e13",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "92159519-3e47-4439-9d1c-67c2585995c2"
        },
        "item": {
          "id": "24fb24c9-0acf-4cb8-bdc7-07ffdc4751a6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c80ecc60-a0c3-4657-8679-aca9f88859c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dceff012-90b9-436d-8eeb-6e835965905c",
        "cursor": {
          "ref": "e0144c68-3012-44b1-8455-ae6480f2c4bb",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0cd5b2a7-240d-4cc4-900b-0e1343164cc1"
        },
        "item": {
          "id": "dceff012-90b9-436d-8eeb-6e835965905c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cc9b2da6-cb17-40aa-b798-794564254e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a1aa8d-e82f-4026-a074-a7b661172b2f",
        "cursor": {
          "ref": "476501be-c1f2-4b23-9882-5d0f24c35fa1",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "98c922a1-0f19-44fd-b9a0-6d73f5157899"
        },
        "item": {
          "id": "c5a1aa8d-e82f-4026-a074-a7b661172b2f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d2653be0-f5ce-4679-b7f0-0ca63d43cf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65168b3a-ddb2-42e0-833b-73236b377e46",
        "cursor": {
          "ref": "5f241eb2-fc51-4835-aaea-b7ce9d497892",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "be8c53d5-9e47-4600-8cdf-65ea9c256499"
        },
        "item": {
          "id": "65168b3a-ddb2-42e0-833b-73236b377e46",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bae0bb73-d5e2-4a64-927d-f5ce19a241c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0539c9-c285-4b6a-bfd8-3ca665f94156",
        "cursor": {
          "ref": "5c277c41-4d37-4f97-87da-cdd8fc5e021d",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a77aa343-6e10-47c1-b478-9026311cbddc"
        },
        "item": {
          "id": "dc0539c9-c285-4b6a-bfd8-3ca665f94156",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dee001d5-a5bf-4074-ba2f-5473f83f9667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069a14a7-fd9f-4d8a-b4c5-9000f83daeee",
        "cursor": {
          "ref": "ef913181-f4c9-4e5a-bf89-6b99f0f811fb",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5fea4642-b3a8-4a48-9621-a4187e441c4a"
        },
        "item": {
          "id": "069a14a7-fd9f-4d8a-b4c5-9000f83daeee",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "da8f46ae-11ca-45bc-9ec8-9c8bd0487a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aaafe92-9751-4f46-b598-beb2e7628340",
        "cursor": {
          "ref": "c5a5ec43-b003-4a20-8f25-ecb764bc73da",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9afdf1ba-3741-4a64-aa2d-31ab2c3a937c"
        },
        "item": {
          "id": "8aaafe92-9751-4f46-b598-beb2e7628340",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "45e6ed50-5678-4c41-ac10-b21780d58598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873e3986-9b8f-4a72-b82f-08aaaaf41ab8",
        "cursor": {
          "ref": "afabeffe-b058-4c1f-9782-555f225b6ee2",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "25cb5852-caa7-45d8-a8bd-6b784dc61541"
        },
        "item": {
          "id": "873e3986-9b8f-4a72-b82f-08aaaaf41ab8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dd59be51-cff7-4c1e-8096-3dfed978a253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54023e3c-7ff6-4fb2-acb7-87d44f9c474f",
        "cursor": {
          "ref": "00fe4870-49d3-4017-96c1-b6eda9baf3e3",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "81d31fb8-7ec2-4805-90a9-ac45cae21f9b"
        },
        "item": {
          "id": "54023e3c-7ff6-4fb2-acb7-87d44f9c474f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a16cac35-1e17-4708-b02e-6fabba0d79f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb3dd1a-3fd2-4971-affc-86731a62e25a",
        "cursor": {
          "ref": "fc1637d1-9ebe-4d88-9248-b5c72379bb7d",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dc226158-a906-46bf-af0b-603062e41d8a"
        },
        "item": {
          "id": "ecb3dd1a-3fd2-4971-affc-86731a62e25a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "beb6bb8d-9032-4449-8192-2d4a6d41e3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862f90be-e8c7-427c-b41f-1663f2c61102",
        "cursor": {
          "ref": "7b468eae-a5d1-41f8-9e2f-887dea86410e",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "004142a2-3c91-42b9-a466-614cfbc25e86"
        },
        "item": {
          "id": "862f90be-e8c7-427c-b41f-1663f2c61102",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "28d7bc02-3391-4977-8ccf-0e8642b1ae07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80995912-e20e-49ea-bf8f-edb73ae8cf94",
        "cursor": {
          "ref": "38c31b9f-bfd1-40ab-bc15-d64953fe65d4",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e6f25d72-b049-44e2-9165-706394913cf7"
        },
        "item": {
          "id": "80995912-e20e-49ea-bf8f-edb73ae8cf94",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f33ab4ca-e469-4aaa-80a6-50121b92bb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049109eb-c4b1-4f4f-8661-de86c80e9c71",
        "cursor": {
          "ref": "b01690b4-de30-4bf9-b8d7-05230793060c",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b95a5b46-d2a8-4ffe-8c0b-2cc80027c067"
        },
        "item": {
          "id": "049109eb-c4b1-4f4f-8661-de86c80e9c71",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b1863f9f-3d16-4f98-8c35-5777c5150a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fd5cff-ab55-4b04-aca0-4ea2f4b6b218",
        "cursor": {
          "ref": "de5120d3-6d4f-4295-bca6-68c94933645a",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4d55478b-cc7e-4c5b-91e4-aa5a57d27013"
        },
        "item": {
          "id": "59fd5cff-ab55-4b04-aca0-4ea2f4b6b218",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2fc96106-fa6b-448f-85d6-7304f969303d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde9db66-a97f-4f75-b5ae-2b071ae367d9",
        "cursor": {
          "ref": "5bb9d94d-5f45-40e0-a3c9-6412b405f4c0",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "99752a97-adcc-4585-8e8c-45b55324a4ef"
        },
        "item": {
          "id": "bde9db66-a97f-4f75-b5ae-2b071ae367d9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d13f64c0-e0e3-4aa3-8eef-5794e556a944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4848d08-dfdc-4bdc-809e-61691c0dc862",
        "cursor": {
          "ref": "2db9b376-f753-427c-a5aa-42a15f31bae1",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a51e99a1-7b42-4bf5-9907-e4b403e89345"
        },
        "item": {
          "id": "d4848d08-dfdc-4bdc-809e-61691c0dc862",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "658ba4a3-8dc9-4041-9968-11d098212784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2655809a-53df-4e0a-809c-9ba07b291ea3",
        "cursor": {
          "ref": "b3be9d04-c0f3-4ca6-8342-29822604e71c",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0da027a2-3896-4ee2-b131-58a187ef2e7f"
        },
        "item": {
          "id": "2655809a-53df-4e0a-809c-9ba07b291ea3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7e22ddd2-9b29-4927-859a-66320b930aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d426b7f7-7af3-4c7d-84da-1edd14d550e0",
        "cursor": {
          "ref": "e19e10da-989e-4260-a34b-660e7298b5b6",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7e633155-74d0-4aaf-ace6-c387c08d024a"
        },
        "item": {
          "id": "d426b7f7-7af3-4c7d-84da-1edd14d550e0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cac636cc-0a4c-4a56-b461-1e9502a479fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d18b3d-4c79-4670-a119-47472a29e87d",
        "cursor": {
          "ref": "4d640917-fe5c-4f51-89f9-5493a722aa53",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "db5f8ef1-cc30-4c3e-b2b6-fbd2882280d0"
        },
        "item": {
          "id": "f4d18b3d-4c79-4670-a119-47472a29e87d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f6c9787f-371b-4f1e-8dc0-2ef5efea4147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffa68ea-c688-4086-9ec5-c9094346f175",
        "cursor": {
          "ref": "87925e4a-040b-4e7f-8dc7-5d63812c1d95",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0820a44c-9a1b-4b50-8286-1d1884917c04"
        },
        "item": {
          "id": "4ffa68ea-c688-4086-9ec5-c9094346f175",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "44a79f21-6e44-40bd-893d-10b29cad0b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edff2e99-b93d-4a2a-bdd9-1676f33c120d",
        "cursor": {
          "ref": "2bd262e2-2223-4dc7-b8f3-6b5f8929e2d6",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "16b4127e-a8ea-40cd-bb0b-8f025c277430"
        },
        "item": {
          "id": "edff2e99-b93d-4a2a-bdd9-1676f33c120d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1579071b-18d8-4522-8525-5e087c426044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce03431c-eb7d-4311-bc30-b1e1320c4849",
        "cursor": {
          "ref": "08e994e1-6cd5-4393-8f45-f1268e9f5910",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7b302681-2fb8-4f3e-82ef-468ff248cbf1"
        },
        "item": {
          "id": "ce03431c-eb7d-4311-bc30-b1e1320c4849",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "256e6bae-9e23-4d68-99bf-2d40a4cb3f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed12e436-f03e-4558-adf2-804a14f91178",
        "cursor": {
          "ref": "d9fd9fe1-bfef-41bd-a7ae-34c96b19d281",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f29e7d8a-18d2-44cd-bf40-468be518f438"
        },
        "item": {
          "id": "ed12e436-f03e-4558-adf2-804a14f91178",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "34a4862b-eb7e-45d3-993a-a42753dba2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b92a9f-f551-47f0-97a7-b801ed4577b7",
        "cursor": {
          "ref": "16f55999-7d8c-4d7f-b201-1db25b79c8b1",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e6a49012-e9f9-4051-9d64-d53ea5bb7301"
        },
        "item": {
          "id": "35b92a9f-f551-47f0-97a7-b801ed4577b7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ecd37103-414b-4f15-853a-b17d7fb3059a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbec67e-12a8-411f-aee5-8e3029be0d3d",
        "cursor": {
          "ref": "3fb699b9-2ef5-4806-a30f-14b256e4ad7e",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ac7f26d2-4479-42a7-93c3-bd972ee8f430"
        },
        "item": {
          "id": "7dbec67e-12a8-411f-aee5-8e3029be0d3d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cd2341eb-53f3-4d9f-80a9-ea349f558cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f695a408-826c-4d84-912c-f5bb8f0e462c",
        "cursor": {
          "ref": "1e32a2c8-05ae-4931-95ee-5a0799100b9d",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2a5fb659-1676-433f-832c-bc02436fe172"
        },
        "item": {
          "id": "f695a408-826c-4d84-912c-f5bb8f0e462c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6ebc57fa-8568-4830-8cf8-7295642a3727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1306f5-ba2d-4427-be8e-e6c8ed4ebcab",
        "cursor": {
          "ref": "f805353f-cbe7-4ca6-beef-ba08d272aaa9",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e1652a71-082a-4c18-86e4-0cfbe4fb2ab2"
        },
        "item": {
          "id": "fd1306f5-ba2d-4427-be8e-e6c8ed4ebcab",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "55e317c1-7b8a-4bfe-929f-8f68566d209f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f537ec-54d9-488f-b3bc-28186707efdf",
        "cursor": {
          "ref": "dc24ab4b-fd98-44d7-b43c-73ce80cafeea",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "15fa6eaa-bdf5-4e8c-9efe-366b8b129a94"
        },
        "item": {
          "id": "30f537ec-54d9-488f-b3bc-28186707efdf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ed67249f-6c6a-46fb-b35c-9af87088c15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99eb318-0a5f-4230-842c-0d4bbb85883e",
        "cursor": {
          "ref": "d8acdd64-e771-4d97-be18-b4991312f149",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "64fa165e-9988-4194-b4c8-c114e2b2e206"
        },
        "item": {
          "id": "b99eb318-0a5f-4230-842c-0d4bbb85883e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cc7d1327-a6b1-4312-a4c4-1d61e5850ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c6497f-d9ec-43ba-9904-7630e7bc3248",
        "cursor": {
          "ref": "8cba6c3e-89a8-416e-89c4-bc38c76b78ca",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4437b6a1-06ad-4935-baab-25f34f4cb5c8"
        },
        "item": {
          "id": "b7c6497f-d9ec-43ba-9904-7630e7bc3248",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b32f9817-9c72-498c-9800-af7d898c7afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cde4c3-da8e-4b28-bfed-a48a617bb8f6",
        "cursor": {
          "ref": "b931390a-610e-416f-9415-d219aec90d49",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2616ef5a-2824-4586-bc53-616775e04d41"
        },
        "item": {
          "id": "01cde4c3-da8e-4b28-bfed-a48a617bb8f6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "31119b2d-e88d-4ca7-8d9a-9d7e33217133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6232ab6f-84f1-4401-b0cd-85a42f76a9b0",
        "cursor": {
          "ref": "5f713cdb-d0a9-430d-971a-57ff69a7d4b9",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d540225a-1312-420c-ae9b-469ad05d6d94"
        },
        "item": {
          "id": "6232ab6f-84f1-4401-b0cd-85a42f76a9b0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d26e6532-994c-4254-8253-cd1b53e74c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfac289e-d004-4bb5-b151-c227f7914d5c",
        "cursor": {
          "ref": "7eb9da70-2ea9-4e2e-95b5-b54024892e7b",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d9463b6b-9160-437d-8137-d03b67d671db"
        },
        "item": {
          "id": "dfac289e-d004-4bb5-b151-c227f7914d5c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d9d9be42-782b-43b1-b43d-81b4f92eab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaa9575-b14c-476b-a9dc-2fe87f2f4a2d",
        "cursor": {
          "ref": "c24052ac-3546-4bee-bebd-aedb26314c7a",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ae74f443-3833-44bb-bb52-b7915c9348f4"
        },
        "item": {
          "id": "9eaa9575-b14c-476b-a9dc-2fe87f2f4a2d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "396e45b0-add9-4d48-88ab-b8b5f624e92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ad3604-a080-451d-ac10-7e558c9a04c0",
        "cursor": {
          "ref": "9ce93f6c-1ab9-41a3-b1d8-a6d445f64940",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "288afa88-3518-4b14-84db-744e90e421a0"
        },
        "item": {
          "id": "30ad3604-a080-451d-ac10-7e558c9a04c0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "715aeb94-a9ec-4fda-bccd-d2b2ca454703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae653d1-6914-4d28-aa2d-ec2032f2b77b",
        "cursor": {
          "ref": "05ac232b-cb8e-4198-b4e6-5d891220c431",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "679e1e4c-b464-478b-9a4e-cc55ad67ddae"
        },
        "item": {
          "id": "bae653d1-6914-4d28-aa2d-ec2032f2b77b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7a4261e3-e231-4634-957f-d9aad153fbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd19132-c1fe-4b07-9691-84faa1f257c3",
        "cursor": {
          "ref": "07b2de6a-2dbe-421b-b2a3-a50391df6b09",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "43c0a571-f6ca-4a78-976c-34d731f0fdfe"
        },
        "item": {
          "id": "1bd19132-c1fe-4b07-9691-84faa1f257c3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9c8a4b33-582f-423e-ada1-dc18a1964d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e927f603-93e9-4a0b-b559-9bc22f0cc69c",
        "cursor": {
          "ref": "aa9a990d-a75e-4bd5-ab49-a940437b0e11",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "aa60eddf-73f8-47ab-8156-d1f30af49661"
        },
        "item": {
          "id": "e927f603-93e9-4a0b-b559-9bc22f0cc69c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ea546e90-a74a-42b7-b9ce-f16c474d1463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d060909c-ea7d-49da-a62a-e090f6be427f",
        "cursor": {
          "ref": "89cf1fc7-1215-419b-90b3-6e8511173875",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "38ec754d-3171-4687-8685-44c8ddf6b424"
        },
        "item": {
          "id": "d060909c-ea7d-49da-a62a-e090f6be427f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d3456af9-1180-4964-b5df-5ff17c5861fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01d9b13-82bb-4703-b516-5cae06183d8a",
        "cursor": {
          "ref": "68ec15c9-7314-448e-b159-ffc2af32931e",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d94d8042-aa47-4082-9320-6404f69d2320"
        },
        "item": {
          "id": "b01d9b13-82bb-4703-b516-5cae06183d8a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cac3aa5c-e482-4ed0-a1d2-c95ea2f265fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b51776d-98db-47e8-a3bb-2cba829e9488",
        "cursor": {
          "ref": "ce6269a8-2089-49ca-b317-40382db4728a",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "57f8f680-7369-478c-84d7-26117b9523af"
        },
        "item": {
          "id": "6b51776d-98db-47e8-a3bb-2cba829e9488",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "690fc62d-fa7f-4bf4-899f-2dcf696eb732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7f86c9-d231-4338-9687-d1857ade715a",
        "cursor": {
          "ref": "443589a7-3872-476e-92bf-3eba4d922b4b",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f33a7f39-10a5-4715-bc29-978275d29165"
        },
        "item": {
          "id": "9c7f86c9-d231-4338-9687-d1857ade715a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6a92dd2a-0cd4-4b34-b6b4-57618a25a6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbabe151-58b9-4a53-8811-d3662a27b871",
        "cursor": {
          "ref": "2ad13914-7a52-4ae2-946a-1b150cdc9efc",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "80fb8af3-6cd3-4492-8a34-a058414f001b"
        },
        "item": {
          "id": "dbabe151-58b9-4a53-8811-d3662a27b871",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b0e6ebbc-d2c4-4ae3-892c-f8f03e05194b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3e94bd-4fc0-4ab7-8099-eccd1175d839",
        "cursor": {
          "ref": "baea16ae-057f-4e2e-bee2-d4f3b56a4beb",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "36be8159-ab82-4c85-85d8-5c45faf8d589"
        },
        "item": {
          "id": "7f3e94bd-4fc0-4ab7-8099-eccd1175d839",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5f2eff4d-ac17-4a61-8a3a-de604b4bfddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd58055-8294-4f78-946b-043f0461fe8b",
        "cursor": {
          "ref": "a6f57a7e-122a-4ac9-b92a-8145a4e90952",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ce57452a-1ab0-4a7d-a536-266b203a588d"
        },
        "item": {
          "id": "1fd58055-8294-4f78-946b-043f0461fe8b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "72511de0-0cc8-415b-8ffe-f5adf4f48891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bace2e83-aa42-4495-a547-cdc3ba8601bc",
        "cursor": {
          "ref": "5c8dbb27-1504-41ba-b9c0-ecfbee8ab44f",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8588f811-4437-43f5-89ac-e72713533961"
        },
        "item": {
          "id": "bace2e83-aa42-4495-a547-cdc3ba8601bc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ead939da-3dba-40c3-a406-c72dc5adb18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a565b2-b8b4-4af1-a159-ac218d689a47",
        "cursor": {
          "ref": "2a9868cc-0837-4b01-bfc1-febf9d53126b",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0184a872-7978-492b-b29c-5454d4639925"
        },
        "item": {
          "id": "d9a565b2-b8b4-4af1-a159-ac218d689a47",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "54022b78-0bfa-4efb-a7c8-2a21bed341fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33652f2-67ee-4f3f-862d-3c3871827cd4",
        "cursor": {
          "ref": "f4ce7a24-7f5a-43df-9f0e-6efd407b3c4c",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3b18d1b0-eca0-4c5e-be04-24d21f098ee9"
        },
        "item": {
          "id": "a33652f2-67ee-4f3f-862d-3c3871827cd4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d83ac07d-82c2-4fc0-9e83-b45092da4c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f052bd08-ce28-48db-97a9-73e6bc3a40d3",
        "cursor": {
          "ref": "a677c475-ecc6-4d9b-ae43-54159d0172b6",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e86a877b-267c-4caa-a4a7-4777be52fcfa"
        },
        "item": {
          "id": "f052bd08-ce28-48db-97a9-73e6bc3a40d3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "46d5a9fc-b6fb-487d-b146-56ded0957747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b6f218-2361-4661-83f7-f46fc44d7aa1",
        "cursor": {
          "ref": "7a69e353-8731-46ee-b386-80dd535711ea",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "56edfeae-5bf2-4835-b367-1698b837a873"
        },
        "item": {
          "id": "f7b6f218-2361-4661-83f7-f46fc44d7aa1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "db73e674-8f3f-4fb3-9692-8c09e7afc6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc1f5f1-d3f5-4128-82c5-cbc2549e7955",
        "cursor": {
          "ref": "1d4bcb9d-2c19-4f7c-8089-2fe771c1a347",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b1686e6b-4e12-4090-80bf-9a9d61f09c03"
        },
        "item": {
          "id": "fbc1f5f1-d3f5-4128-82c5-cbc2549e7955",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "299e02c4-4000-49c4-a2fa-5af329b349f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81048a0c-c3b6-4998-a8cc-bc44d73a1b2d",
        "cursor": {
          "ref": "85d21885-d2bb-462d-b745-17def0ff3dfa",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "30dc391c-89a7-4e31-877d-d2dd7ff502a2"
        },
        "item": {
          "id": "81048a0c-c3b6-4998-a8cc-bc44d73a1b2d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "267f083e-4adf-46ee-9a03-9c6d565e146b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7929cd11-09a2-4afe-869b-e592f2ebb862",
        "cursor": {
          "ref": "fbb2d5a6-06c5-4309-afbd-fa2f82577684",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "344b2481-e524-4567-8ebf-875a883213f5"
        },
        "item": {
          "id": "7929cd11-09a2-4afe-869b-e592f2ebb862",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c84ba75a-5544-4c57-b45d-2d1a5d898afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17c2f6c-fc68-4624-8d02-210885fb5e8b",
        "cursor": {
          "ref": "513b0000-43e5-4947-b732-6e5559d551ff",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "899fdfc8-76fe-4296-9001-983a9659acbb"
        },
        "item": {
          "id": "b17c2f6c-fc68-4624-8d02-210885fb5e8b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "df01ed80-0b17-407d-befd-54f87fe8baa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34703c5a-d520-475a-bb91-70c1619ea6a4",
        "cursor": {
          "ref": "48d443f7-3c87-4d10-8b70-7fbabcae21fb",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5d8493ee-bbc9-4d0e-a63e-d66d33c94969"
        },
        "item": {
          "id": "34703c5a-d520-475a-bb91-70c1619ea6a4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d81ca6e4-f95b-41f5-916d-0e56956045bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26512d28-7363-423c-a806-849a719309f9",
        "cursor": {
          "ref": "e54d0d5d-25f3-4c81-b9b2-b691297c2b81",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "06fe7fc6-4542-4136-8d71-a0680227ce55"
        },
        "item": {
          "id": "26512d28-7363-423c-a806-849a719309f9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "10d7878c-cf0b-47be-ac7b-5cb67df5c0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f4b40b-be43-4e6d-adff-7f22bab60fbb",
        "cursor": {
          "ref": "efb36412-f888-41d4-b7fc-606ebf21ae1f",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fd3e087b-4abc-4345-860a-a2e700eb6e0b"
        },
        "item": {
          "id": "62f4b40b-be43-4e6d-adff-7f22bab60fbb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3743f780-ff9a-4987-863d-6343c31883b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf88ebd-cc86-43cc-a205-c72a476fc8d7",
        "cursor": {
          "ref": "5ab8686a-5631-4a69-a2b1-f989e8c159a0",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5185d873-11a2-4fe1-8dcd-182dbe161a6f"
        },
        "item": {
          "id": "baf88ebd-cc86-43cc-a205-c72a476fc8d7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "822a2196-e2df-481e-bae3-b89662b8b83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec75faef-074d-4e83-93a1-52865b309a80",
        "cursor": {
          "ref": "7381ceaa-c5cd-4769-94fd-57a880960be0",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b07fae14-a55d-4d5c-a902-0fddbb986208"
        },
        "item": {
          "id": "ec75faef-074d-4e83-93a1-52865b309a80",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8973667d-9629-4b43-a82d-e60b5595ffcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c298fc0b-b394-495c-8e67-16ecdb5f445e",
        "cursor": {
          "ref": "2f61d31b-96e2-4827-94cf-bfb9a5eaaae5",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c124ddc0-24f0-49c6-be3c-5f7840e58958"
        },
        "item": {
          "id": "c298fc0b-b394-495c-8e67-16ecdb5f445e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d823ac9b-7a4a-446b-a6fb-5426c26c63fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a6bb39-75c0-493a-a092-e7b9acf980c2",
        "cursor": {
          "ref": "ea810939-7d89-4fac-8ce2-086fe1c037be",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9450b18a-3a6f-452d-a3d1-a6bd086887e3"
        },
        "item": {
          "id": "67a6bb39-75c0-493a-a092-e7b9acf980c2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0eb4c0eb-62cc-447e-ac59-105723c81e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e168bd9-c2aa-4e7c-b686-1166f933e417",
        "cursor": {
          "ref": "91c78cdf-af22-4e7a-8af9-7dbd0e724c4e",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "76ee2925-e1f1-4a6d-8ef5-e90c539e2f98"
        },
        "item": {
          "id": "7e168bd9-c2aa-4e7c-b686-1166f933e417",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fa9756d3-6913-49c5-8c97-3bbc40ea8898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940f5083-4c6f-420a-92e4-ea0215dc07c8",
        "cursor": {
          "ref": "1231bb05-9a37-4b8b-8c5c-3e4e514e9427",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "490c03f9-ebe9-498a-b901-58a7b0156047"
        },
        "item": {
          "id": "940f5083-4c6f-420a-92e4-ea0215dc07c8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "14f3e997-aab7-4a31-a195-0f2874d266d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f765da69-5945-4c20-89bb-f24ec42482ab",
        "cursor": {
          "ref": "f7513bba-18f3-4582-b7e4-6c091a1fff76",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e70207e4-9f98-4d81-8525-bd17527fe97f"
        },
        "item": {
          "id": "f765da69-5945-4c20-89bb-f24ec42482ab",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a33b9a21-6a38-4232-8e0d-eb1d1e6535c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de5d45f-1a8c-4cbd-ae2d-dbe8a759cee1",
        "cursor": {
          "ref": "71629b8e-79f1-4eb2-86d4-5a43eb6adcfc",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bccbc576-c9fd-4db9-b009-e2c8591adb5b"
        },
        "item": {
          "id": "2de5d45f-1a8c-4cbd-ae2d-dbe8a759cee1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2e885235-c0ba-4841-9584-d4aa2a1cf4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8e6a61-1dc5-4e8a-9459-cf05b79ae508",
        "cursor": {
          "ref": "74e27587-9601-47b3-9857-605dd3cada10",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "70cc63bb-790c-4936-9d5a-c4344c04f8e3"
        },
        "item": {
          "id": "af8e6a61-1dc5-4e8a-9459-cf05b79ae508",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a9440df1-126f-43b2-9a7a-99d7237e27cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8369db-5ace-4cab-b2ac-9a37f99f9e53",
        "cursor": {
          "ref": "7e02b199-ba58-4c3e-a5dd-d63449e6bf59",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d819042d-7f39-4657-99b8-aeecb756fc76"
        },
        "item": {
          "id": "fc8369db-5ace-4cab-b2ac-9a37f99f9e53",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c77d1e06-e7c9-47b8-9270-4814197f900a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7a5252-cf5e-4262-b018-a5bd9e3910a8",
        "cursor": {
          "ref": "da6ca26d-6109-4b0e-87d1-11bb566dd22f",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1867701d-34d6-4ce2-8df6-f7edb2b58bbd"
        },
        "item": {
          "id": "5d7a5252-cf5e-4262-b018-a5bd9e3910a8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2406b09d-7168-4921-bcc8-e11dfff1effb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e385dba-0fbe-4e01-9618-692889d3e79e",
        "cursor": {
          "ref": "85cb4eac-a6f6-4746-a101-36d8b921245d",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cac44f44-60d9-4b88-85e8-446ce6103695"
        },
        "item": {
          "id": "5e385dba-0fbe-4e01-9618-692889d3e79e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "40397633-83ed-4b17-8570-c4b505fd86e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f31679c-f32b-4f51-ae47-6efc4c038c63",
        "cursor": {
          "ref": "7c7ef33c-9b82-433b-a085-133cbb62acaa",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b5664e5a-be2a-44a5-94e4-805c7c60882f"
        },
        "item": {
          "id": "4f31679c-f32b-4f51-ae47-6efc4c038c63",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "000c9457-9d59-4deb-a492-02750c4f4837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e380dfee-3721-4b65-b825-0a8c748a9ead",
        "cursor": {
          "ref": "db365c2c-7096-40f0-a322-6c6649630918",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "715cbfbc-c8e3-4816-8a05-c4cb5bb62fe5"
        },
        "item": {
          "id": "e380dfee-3721-4b65-b825-0a8c748a9ead",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7937bb32-9f6e-49aa-aaf5-abf343a14d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17202daa-4697-4967-bdf3-bed513a56186",
        "cursor": {
          "ref": "4c65771d-c542-4a58-8874-41768bc2ca89",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8c2e76af-e1e3-4625-a8a2-5040b623d630"
        },
        "item": {
          "id": "17202daa-4697-4967-bdf3-bed513a56186",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1f47b10a-1966-420d-a332-4c2341fd7c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55343e6-7a65-4239-a868-4b63148ab715",
        "cursor": {
          "ref": "21dce5fe-9a5b-4926-9cbf-8e335bf43bca",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "993c324e-27f6-4d1a-b5b9-c100e986f093"
        },
        "item": {
          "id": "b55343e6-7a65-4239-a868-4b63148ab715",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a0d7d99f-a24c-4c0b-936e-fbdabb247fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c96edeb-d22d-49c4-906a-238d7665c6c9",
        "cursor": {
          "ref": "35464cae-eecd-4b0a-a5c3-c0c68a218aa1",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f59205c8-005f-4f57-bdeb-ec07b4e30034"
        },
        "item": {
          "id": "1c96edeb-d22d-49c4-906a-238d7665c6c9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "afaba9bd-7599-4a1c-905f-25f0e38e08ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df02fac-7f12-4861-a58d-06877f04896d",
        "cursor": {
          "ref": "bb8062e3-8162-45ba-a70c-603b7802a758",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2bcbc972-a6d8-4630-845a-f62e2d880175"
        },
        "item": {
          "id": "8df02fac-7f12-4861-a58d-06877f04896d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8928e76c-fe1f-4617-9de4-f2948438b477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877e53e1-2cae-49e1-9afb-81e61998ce20",
        "cursor": {
          "ref": "95a59c8e-f6a5-463a-b7f0-f7e06010cf4d",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e2de1faa-f67f-499a-9604-5a4f75492aee"
        },
        "item": {
          "id": "877e53e1-2cae-49e1-9afb-81e61998ce20",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1fea1885-c15e-4a5a-b596-366f215ed02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e4eb81-10b1-4065-b24c-e673e10fabce",
        "cursor": {
          "ref": "c4d88dc6-d122-409c-ac91-b190a273df53",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "304b5511-fcdf-44d2-a77f-cc98a603b65c"
        },
        "item": {
          "id": "91e4eb81-10b1-4065-b24c-e673e10fabce",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "576861b7-5060-44a1-9534-94181536bf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db6d774-d1ef-42b2-835f-5664d7d24ccb",
        "cursor": {
          "ref": "899aa380-8dbc-403f-97c7-6481b4c797f2",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "620a4996-9c9c-4a89-bf88-6fbe46fd23d1"
        },
        "item": {
          "id": "6db6d774-d1ef-42b2-835f-5664d7d24ccb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0c72214e-0199-47ed-83c9-f12fd9d819d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77575a10-8748-408c-9056-bd182826eadd",
        "cursor": {
          "ref": "50c6a039-59aa-4df3-93e4-41c330583d4b",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "47fc3e7c-5bc4-44e8-bded-68e70689d27e"
        },
        "item": {
          "id": "77575a10-8748-408c-9056-bd182826eadd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4cbaf3b6-6368-4cff-a60b-e1721e567867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c08d2bf-32be-4294-a8f9-2c6724235c4c",
        "cursor": {
          "ref": "520d1b20-0833-4597-ac43-f1049100e15a",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9e6de2bb-b851-491a-b0a0-6655bd1a79c3"
        },
        "item": {
          "id": "7c08d2bf-32be-4294-a8f9-2c6724235c4c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3825f91f-faa3-49ea-92fe-2ce6f5e0cf8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394a8509-4ede-4285-84ed-727bbd5ff3d2",
        "cursor": {
          "ref": "e2d586fc-240a-4b11-82bc-1611e1b678fa",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ecc89223-c00f-4b50-84e2-611d04d6ce52"
        },
        "item": {
          "id": "394a8509-4ede-4285-84ed-727bbd5ff3d2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d8a416ae-34be-443f-a3fc-cf12bcd7e65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9c8b1b-5834-4944-a487-dd2c1061e2b4",
        "cursor": {
          "ref": "7c7ac79b-6683-48f6-875c-7816988c5e56",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "27f0441c-bb42-43b3-9db6-aaa55fc5f993"
        },
        "item": {
          "id": "fd9c8b1b-5834-4944-a487-dd2c1061e2b4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3911d070-ed2e-42c7-933b-51f6747d95aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4a26e5-95b5-408d-8d3c-910e701b5226",
        "cursor": {
          "ref": "0ba31cc9-efe2-44b4-9353-e6248856aeb2",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f4c46c26-b581-4f83-b2ef-b3117fdaf348"
        },
        "item": {
          "id": "fe4a26e5-95b5-408d-8d3c-910e701b5226",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dd606813-b8b5-44a7-9cab-408650c0d303",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0a2a20-cf90-44c3-bc73-2e8d22819dec",
        "cursor": {
          "ref": "81c1979b-07f5-488d-b263-a744aa6c2c2e",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1db5b04f-ea21-455f-90e7-05148aced63b"
        },
        "item": {
          "id": "2f0a2a20-cf90-44c3-bc73-2e8d22819dec",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e4f11da4-725d-46bf-9379-30dba3b1f872",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 282,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797e2afd-1d0a-48b7-90ab-2836fecff608",
        "cursor": {
          "ref": "59cd87e9-f75a-44fd-99e5-a0e556762796",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3ee90afd-6e6d-4472-a582-02ee12da34e1"
        },
        "item": {
          "id": "797e2afd-1d0a-48b7-90ab-2836fecff608",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c0a468bf-cb5c-4c7e-938e-b1ea392e4fb4",
          "status": "OK",
          "code": 200,
          "responseTime": 372,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cc1350-f8a2-426d-a470-2ccefd33004b",
        "cursor": {
          "ref": "65c186aa-27ba-46ea-8f13-578f18c5bc03",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "30e8bd2f-07c0-4228-8348-a423f5334ace"
        },
        "item": {
          "id": "98cc1350-f8a2-426d-a470-2ccefd33004b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d930ea60-059b-40dc-9935-e2cf56eaf167",
          "status": "OK",
          "code": 200,
          "responseTime": 371,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9600e631-a571-45a1-876e-88c5ed5f1482",
        "cursor": {
          "ref": "3a097a0a-cf93-40a6-a84b-497f5bbbdf1c",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "604cc0f1-8903-4c0a-ba3d-c10edf621ced"
        },
        "item": {
          "id": "9600e631-a571-45a1-876e-88c5ed5f1482",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "72cc0e73-da99-4e0a-940d-861bf3ec1fb9",
          "status": "OK",
          "code": 200,
          "responseTime": 347,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba428a79-1feb-4fa8-b4bb-a5eb6113d403",
        "cursor": {
          "ref": "461ed843-a305-4ded-911b-8d0127503c5f",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ffa1df28-128e-4473-a0c1-b2d46909a2db"
        },
        "item": {
          "id": "ba428a79-1feb-4fa8-b4bb-a5eb6113d403",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f1e157ae-5124-4786-b16a-9595d5493252",
          "status": "OK",
          "code": 200,
          "responseTime": 352,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16079b1-4168-4789-ae2f-3a0fbce77be4",
        "cursor": {
          "ref": "6eb046ff-99aa-4625-ac52-69060026770f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bc669d30-114e-4d4f-bfa4-21f4920c3dc8"
        },
        "item": {
          "id": "e16079b1-4168-4789-ae2f-3a0fbce77be4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "80f5b3b8-c7ee-435e-ac19-4eb907935896",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16079b1-4168-4789-ae2f-3a0fbce77be4",
        "cursor": {
          "ref": "6eb046ff-99aa-4625-ac52-69060026770f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bc669d30-114e-4d4f-bfa4-21f4920c3dc8"
        },
        "item": {
          "id": "e16079b1-4168-4789-ae2f-3a0fbce77be4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "80f5b3b8-c7ee-435e-ac19-4eb907935896",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16079b1-4168-4789-ae2f-3a0fbce77be4",
        "cursor": {
          "ref": "6eb046ff-99aa-4625-ac52-69060026770f",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bc669d30-114e-4d4f-bfa4-21f4920c3dc8"
        },
        "item": {
          "id": "e16079b1-4168-4789-ae2f-3a0fbce77be4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "80f5b3b8-c7ee-435e-ac19-4eb907935896",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5fb4e5-70ea-4cea-88a8-1f587d3e56a4",
        "cursor": {
          "ref": "575366b5-a68f-489f-bfbb-47ecb4698537",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "17598a24-6a64-4fbf-b597-a8c53c2600f0"
        },
        "item": {
          "id": "ae5fb4e5-70ea-4cea-88a8-1f587d3e56a4",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6e4ac36e-1772-40b2-b405-4367d1879526",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 415,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43352100-9398-41ca-8eeb-17bbea8df9af",
        "cursor": {
          "ref": "00374a2a-2dc1-4794-b649-439732672d30",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1e9ac528-e471-41b4-a4f8-28ca672f7480"
        },
        "item": {
          "id": "43352100-9398-41ca-8eeb-17bbea8df9af",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5cce7133-aea6-4ea1-befd-9582a40b4d0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43352100-9398-41ca-8eeb-17bbea8df9af",
        "cursor": {
          "ref": "00374a2a-2dc1-4794-b649-439732672d30",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1e9ac528-e471-41b4-a4f8-28ca672f7480"
        },
        "item": {
          "id": "43352100-9398-41ca-8eeb-17bbea8df9af",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5cce7133-aea6-4ea1-befd-9582a40b4d0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c580b22d-758f-4093-9291-7cf5472c37fb",
        "cursor": {
          "ref": "154726df-75ae-4c13-a645-701a72e9ab31",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1ede5c11-7b9d-40c6-b74b-1e0104f0405b"
        },
        "item": {
          "id": "c580b22d-758f-4093-9291-7cf5472c37fb",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "4f3e20ef-00c3-4b7d-84bf-7effb0d20057",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 800,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380ddbba-d118-4145-b893-88112a4e7dad",
        "cursor": {
          "ref": "42779e22-6e3c-43d5-aff1-83350cfe9c03",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a3cc018c-5e2d-4dac-a08a-3234afa2d758"
        },
        "item": {
          "id": "380ddbba-d118-4145-b893-88112a4e7dad",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a9026573-8d12-45e3-941d-5429a4288f9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380ddbba-d118-4145-b893-88112a4e7dad",
        "cursor": {
          "ref": "42779e22-6e3c-43d5-aff1-83350cfe9c03",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a3cc018c-5e2d-4dac-a08a-3234afa2d758"
        },
        "item": {
          "id": "380ddbba-d118-4145-b893-88112a4e7dad",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a9026573-8d12-45e3-941d-5429a4288f9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a97fdc-6495-4100-90b8-a7871d73a150",
        "cursor": {
          "ref": "a4660abb-29f1-495c-898e-628403dde3fd",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "81a10cac-ca47-4084-9449-ae85a8d3aaae"
        },
        "item": {
          "id": "51a97fdc-6495-4100-90b8-a7871d73a150",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "5be3f09b-7c24-47b4-82e6-ef7d7e74c739",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 680,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}