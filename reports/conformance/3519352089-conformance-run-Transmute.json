{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "784892c4-6736-44e7-a2fa-d13f9a51d482",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9dbbca85-f366-4e79-b5fc-12c49abe3d11",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "387e832c-8302-4cfe-9298-04a8fe06e157",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "791c6993-51f9-4744-be81-111a05ec913e"
                }
              }
            ]
          },
          {
            "id": "a87872c9-ff26-4b4a-9538-a99cb1812959",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3bd233b-9bb4-409b-a997-13faa72ce7b5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3bcbdb49-0f48-4135-9aa1-1a436206991c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4928ad37-99ee-4547-be7b-2c2d4499d3ce",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "88ee4fe5-0103-4b5b-8faf-9184ae30fadf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46bb1e16-0981-4c26-a421-6ada732105e0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "101019ac-4574-4c4d-959f-9fa24f12ba1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db14ca6f-5ba7-4629-96d7-b40150e7e171"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e54a950a-4866-4575-84cb-11eb0a5ac305",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a50a76c-ea08-4258-8706-23cabd6a61c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e5d12091-d013-449c-b3d0-f8b28d8baabc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d2645d4-b892-49ec-af7f-b0dc651a6b7a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c1a6f40-6531-4284-8fff-6ec64fe9b00c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "60c98bb0-d09d-4861-a26b-24fd859bbfed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9f87a20-6df0-4c60-a1dd-bc67dc1f69c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71813e33-3b51-452e-919e-9d887125adc8"
            }
          }
        ]
      },
      {
        "id": "5ccbcbce-9db6-41da-afcd-f99051e265f4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ac1aa436-6723-40ab-8d19-6bf2de6c5daa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd2dc064-5c3d-4945-ae6a-d64408c21b74",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8132432-a005-40e9-9cb6-484c6a03191b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16840407-c92d-4015-9e63-ba8df46485d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f439733-daa9-4ee4-8f96-51ba38735ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348c1d41-2f8b-4461-a875-c3f8fc20be8d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbf58f2-4721-4f9e-8e2c-07f71e9129ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "078883aa-ea0d-42d7-bb2f-f51c1adc4ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e988e7-4ee7-496b-afea-f5222fb73005",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a392dc9f-3755-4344-953a-654bc5df65f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5047e52f-8e86-48a3-8082-3f52e562e446"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c844d2e5-2407-44a5-82bf-bace6f217110",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c2b84ed-32c8-4fe8-a61d-015944020179",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d407c7c-9f4c-4418-9e9f-18f6493b0b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b325cae6-056a-437c-9f8e-e8bbd9c57291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0dfb91-8c47-4758-ab2e-71f7b1b7afe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233c2fa9-5c45-4060-9d75-c1cc3d1a8913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec55dc7-3bb2-4fb5-af36-1cd39294c4a5",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6e1fbd-d605-4e98-98b0-ffab252cfb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdf39215-0e9d-4a2b-8af7-3dddc6a95c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6bd022-b0f5-46c9-b671-7377879eeb39",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "62d3fcc4-962a-41c1-88b6-4a639de423e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "045389a4-52c2-48ef-a346-a2760d4b0e54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "890c5a36-26d6-4793-9c50-4e1dfa28724a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8750784e-fd91-49cc-85f4-cbc4a53b8b6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "42623a43-f484-4ea8-b0aa-d5b1f75ebb96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e205de2d-1e1f-4224-ba6c-4e431d7fd250",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "424b1779-bd0c-437c-8900-14236f76485a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a1a62cc-15cc-464c-b50c-220931425615",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e17a2100-a97a-45d2-9a5a-3bc7fdf4a856"
            }
          }
        ]
      },
      {
        "id": "83e1d8ba-54d2-40b3-be7f-280e5bf7f789",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d200b748-12d3-4666-93ba-1634ee9e6894",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4383e22a-e2f7-4f99-864d-eb1c6176bd33",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "35def6b4-7172-49bf-9fd9-e81f335ba517",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a2e4c9-41bf-42cd-88a3-2a01201a27c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18f68be-5a62-44df-ab67-0a3905cf7d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696750c4-4083-485c-8c09-00d76764dfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c9ba183-7c33-460b-83c8-4d657acd3a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a2ccd7-4b1c-4f74-baa8-ce0bf80309c8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317628af-80b4-4f52-b1d4-54a35cecc7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a714fc-736b-4aa7-b239-f50b2c8cb6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b9e338-35bf-4fad-83cf-ed4d2d9da716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66d2fbb2-cb65-41c2-bf3b-fde7e01405e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7583c18-e291-4246-af01-e0560900ffc7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7f3f46-0d75-454e-bdd3-690bedc2dc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510e6182-fd3c-46cf-8edf-59e183bcd57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8334b0d-7627-43f0-ba71-edda082e3de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b534177-60a2-4c10-b05f-4d939b5abe37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ca008b-65ad-4e53-8146-a8b259fb4c1d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a087d9-c900-4de2-9220-d2f50ed9bcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bd7f3b-24c0-4a91-9112-7274b8334292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93eb275-46f5-49b1-a975-da6f613a0cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46faeb6b-d8f8-4df0-8af3-b03ed23a8f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e378e9-ee26-45f1-b0a5-8f1566b02d2d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a81c3c-b0ec-4c69-bcd6-08a1913b343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d8ef44-bc75-4c4f-acf6-3ea82ddc69f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2635cd4a-5561-49f3-a16b-3b4618b675db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80acb98b-eb5c-4a91-a098-b73f02c8a842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15552e9-70c6-441e-998e-94b0520432e3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0851ce-2a39-4a79-a0e6-8ce3fecdc2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdf7eae-a7f1-4a75-b66a-2f886f6656c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46354d7-9472-40da-bb6f-4f2b67a32c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be0514ad-ae25-4b13-99cc-a68d19473505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998702d6-269f-41ca-a203-490d9ce63ee7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd03be95-f72c-4ca4-b4ec-3ee8eef8736d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88512eb-e6f3-45c2-a238-e2753ed3e17b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c55c0f1-07bf-4120-8056-79a6d6cc6ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0180bc35-bc4a-4675-8c20-b01a5aac7a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c821e9-8337-4024-ba8f-39ce3d41180c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f35e61-1089-4447-b2aa-a0334d10790e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2df04d2-6502-4f1f-a13b-0c859e35834c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b84586-e35b-46c5-b2f3-4d6477958ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f511b44-b586-4a3e-aad9-5a84ae25b9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d91986-d199-4e02-bdce-d6a33f2f513e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b50a0a0-353a-4aab-9cba-b05e0c4d2cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6328244-6edf-44b2-9af6-4890becf29dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a605f5a7-39c2-4036-932e-60a692171f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67e0cd15-ed6e-408a-b2e1-20e3f2fcf680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d6fe74-380d-49d9-aeea-218da43efffe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a2d4a9-12f4-415c-9942-adbc9775e640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbf1d1f-7d8b-42c1-a63c-466a664f2b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ee1841-cff9-4f94-98b2-dac1c19a33bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ddc86c0-2603-4731-8bd6-1c6baa9df22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25eb833-eb01-4797-956b-64c6477fb399",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df6fe56-8848-4996-84ef-1206629e54c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9663a9d8-14ed-4023-be3d-3eaf1eb0a7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717db428-203c-479d-8c44-5e5bd3f96e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7fef87a-8644-4c99-859a-22f593ed8402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3729e00a-c8d4-47fc-92cd-5648ebfb39c0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18ef3bc-b755-46dd-9fab-a1799ed34b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e1ccce-c52e-4b6e-81e0-b1055a6ede45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63103df6-3464-4b1b-85d0-453138808e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a409c0c4-008c-47eb-82e2-d531c6dd8ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19af2b3-753b-482d-b827-3a96076ab822",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2db8d2-c305-43de-9e68-53f6490b22a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e40565-bf10-4ab6-b325-6bb171d2ae53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de26f40-2da6-4460-9ad7-bf683fd6ad1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3ed8399-0652-4841-a103-c04d3d845947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595e9a6d-bd68-4786-9918-b0d9608ae70a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fea394-3a8f-46c2-bc53-df4737eab650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ec3c78-26e5-4d7b-babd-762746fbfbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9251bb55-6d00-40aa-bd85-7e65ed1bacd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec75ee03-5e60-4b7a-878f-a8861212f67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1fc31d-af19-481d-bd06-79c382a94907",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c099d439-03fb-4bb0-a094-266f092b9aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b8adbe-63f2-407c-a86a-2fc41163632d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dd34ef-a086-4988-a185-dc119ea746f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48720556-46ea-42ed-ad94-7a17686374cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef296c14-2e10-45e2-9c7c-5f2b9277e085",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c89c3c-1832-4cc5-ad7f-2e854f2d780c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a294578-4ac0-498e-9112-39d10027bbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cf9261-8a99-4321-9456-c9904b749c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "464248cc-9a4a-42e1-9074-41c764987e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368903ee-eef7-4550-a526-9d67d778ea6c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f670a182-b224-4a6c-be21-6115f0472750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0990489-3812-41bb-9d9c-9d9e9a0b605e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720b4cbc-c5c5-409b-89a7-fdce09a83b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70e18d71-82b7-42b4-b99f-c8e33a22c5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f027f984-0f65-4583-bdee-75c8253e5f5f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad1110b-4f83-48f1-9bd9-b233890aa9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c528be2-24fb-4f98-a3f5-0548ea02f49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1e94b3-9e3c-4fbd-8eb8-0b2a0eb9ba5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb283ed-c5df-4ef6-96f7-0ab61df0cba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe882bf1-a588-48f9-a9b2-9c28a999481e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1264669d-5d8f-4b9b-824a-1a544c9637c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f29d4e7-6a68-4685-a3ab-5ac6d4eaa507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1164392-698c-410e-930c-7ef491ba8e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08b9dda9-c6ba-4f70-88e5-f220b4c77eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5256e3c7-5baa-43fe-9b54-7b854e0a8a85",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e34195-1775-42b2-806a-6ffeb2634adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba541a7-1b01-4157-9419-a1cbf31b0cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3501f078-bc4b-4d3d-a0e6-fa489f370e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cbdddc9-b729-4b0a-a841-21aa39f19b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7324914-4da8-4910-a2c6-da9023696e51",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d842572c-7391-4226-8389-72990b508fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee721cc8-94f4-4145-8c0d-238c9ad56f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b929fed2-eab2-4a6a-9492-5227ea148510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6fdf4e-03c7-4d35-90ca-7d2728073ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db589bc5-b8fa-41ec-8bb0-76363d51da0d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d5e6f4-33a3-4a15-91fd-49ae86f08954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6bad3b-fee1-4729-8175-1042477b5be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc962563-e78a-48c5-a628-122eb7437674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5ee2bd-3bdb-4567-8a3e-d73f694ff918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fc9ce1-4b9d-4c85-bc78-623258d59e0e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec69aaea-ed1e-447a-9921-d341044678fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d651e477-428c-45a1-b205-096a8f38e493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e4a8aa-0cee-41f6-89df-98f6192ad4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2aa8a42-dc81-46b7-9b44-571b10b350d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb75cf8-9c00-47f6-930f-65564c26dd2b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fd856f-0cab-4237-a430-b6d8a8915300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cecdbf-e9dd-435f-b4af-0d2650e6935d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09870543-a5ef-4c86-a0c8-da493ff92a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "12cd5300-15e0-4857-b36b-89d5216fda53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac84e002-69bb-4553-9351-44a8235c68e0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c629d11-b033-4415-bf9c-788e5062a98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e75093-2933-40df-a8c2-23f21fe88289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179699e7-16ac-498e-bd90-12a3991ee0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f8efa0-c77c-49f8-8974-3ccb2d41fd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3523f07-24ae-4e05-abcd-567cf744121c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891398ed-66e6-43ec-a669-b24a2d7436a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf7d16e-6513-4d82-96d4-d223785c7fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcec778-f25a-4849-bd8b-4fd3b8623285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38369d68-a5e9-4cc5-b0ad-3e2771590799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d00db4-fac7-45d5-9f1f-e15b6fb4831e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6835b47-2013-420a-a9d4-eec2cc340b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5db501b-d86a-4b8d-9665-efbc1303ebac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a2cd23-3ebe-49af-8a46-75833d1ac2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61226114-b0cb-48ff-8106-ba128081c4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbb5079-bb37-4e49-8c00-85a6fc37fedb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d471ef91-9934-469a-8a13-baf0d4a2bf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bd3e47-cf1e-4777-8f0f-8fbe026aeb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0edfee-c93e-4fc0-83fe-040067ca0693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9a39e8-9b60-4714-9f88-506a666b4d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ee9a7f-8c72-4777-8343-36d66a9c1456",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e12dfe-071d-42d4-b83c-580d20e99995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd531f9-6135-43cc-b186-9cf30bd60e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633b7038-be09-4c99-8c8d-f1ca4a30066b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bf36f9-633d-4c8d-a127-6abccf0599be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86345dd8-bf22-4cb4-a03a-63480a53c30c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ec5291-69b9-4479-b6be-201cb8ca2381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbef5f1-e7a8-4ba7-99b2-5afe1a6ba920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3964e4c0-04c5-4a72-8832-720e7aa08cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "38db20cd-1a99-4003-bac4-e314825df7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90659763-508d-4433-a2e5-4c00a5a2ca57",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcc66ed-9495-469d-acb3-212086f3619a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52a8380-760e-4525-9c5f-d6cd1aaf1463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be500d8-4725-4d06-a42d-bcb8d551b64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e72750-5b94-49f8-9841-0c1bb6723037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800ec45f-d032-4889-b615-b560074c4d8a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c06840-ec22-4448-a121-23a7018c9855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7d47c8-046e-4bfd-a4aa-013f439cfdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11da728-f0d6-4549-853c-7122c77a43b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0de305cc-2805-4c86-aa13-92d85f91db5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adb4509-74ff-4b36-b395-4ed3e688d887",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f68629-f94e-44c4-b2d6-15fef8078cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6caefcec-377b-4629-88f7-b376cad41340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd654d2-c5fd-48aa-9675-46e87711529c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56eba1b8-7c81-40fb-ad91-962f184f047b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19070a56-d136-4de9-a8e2-5fc6223cbc89",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836f1e11-162b-4492-8043-9bcfd7df8ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba99e879-bbd8-411c-9d9f-0d8f55dc4394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ca2616-4e92-4f5a-bf4d-bfdc775c1dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a785889-b506-48c6-8d13-e8648a8ea00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c779624-414f-483f-8f61-d5374ed9a8a6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd82dbb0-9224-4955-b34a-a513b4df0497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a72e181-3c3f-4ebd-9895-bd132309df6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c4dd43-23fd-4fd2-9594-83c0e68c7164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "06a4ec26-7c13-4287-9021-17eb33dfa92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c1d5f2-c3c0-4047-842a-f7fae063aa38",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5ea156-bb10-463e-a4f1-686d7ea2c825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cd89d19-7357-48e4-80b7-e03309bf192d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a426a5dc-b27c-4df1-ba95-e5b42eefaea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6823bce4-705c-4bc0-a2a1-f8d6d238cad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88639489-610f-4af7-84e5-ee8e9d324a34",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d65b0c-5562-4a79-a251-a01635354d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4367c175-aea7-4ed4-8477-a0577d18440e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfb67bd-8b11-4594-b8ce-5c8fb08d34ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8455552f-9730-4789-b3aa-a74edc326307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56af2fbd-2c30-4e84-bda0-50368d0efeeb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf47fbe9-c0d5-47c3-aa05-1ffc02b61e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3dc130-4ec8-49ef-854e-e33993815615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41725722-f667-41dc-8d2d-8c1af1ff0f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f469be12-5003-4985-8817-a0d49a198615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bddc857-7db4-48ee-86a4-f4f2141d1a90",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060023b3-b21f-4c1e-843a-7691c6dbe56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6215778-12c6-47e8-8390-dbe741722771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25de96a-0927-4e32-adb3-b4cfc7050935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "35a24bc3-cfa8-4d49-8590-4c6c780d998b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc84d4ce-fb59-46d3-bfd1-6a25feb24d2d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302dd0b9-9ac5-4fb0-8338-10ce37ca1d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4bb020-3054-4e71-8e31-cb2ff86aa1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0343f6-2aa1-487f-b69c-bc0e9b2728f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e14daaea-72e8-4550-8a0f-fa63c24c713c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c655bb-f42b-486c-9d74-55f744ee3c6b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46e86ae-3573-41d8-9f40-d72e3b515efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44563a2-f5ba-4bb5-a263-eba9e986048f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f872b02c-9422-48ce-ba71-a0e2e045b9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "26d8fbef-46a0-47ff-a2e6-09c77f876a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ce3eb1-6530-4112-8e10-353d4e2e8ebb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d965f7-e630-437b-bb87-309b139da71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e34a64c-f4e0-459c-9453-02464515034d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d36598a-eeb8-4558-b539-d5e99ca43cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "651b4241-429d-4521-98c6-b1a7e839fdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ab04bc-5380-42f4-9afc-c8e6b47989c5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db44af9-8cc7-46f9-8eaf-a1f566a365e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd18bf2d-2862-40c4-b506-a11b4a784f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137231db-3411-437f-9883-d53d7f9255eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b13ea66-60f7-4a85-83b5-7054d7a54884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b99705-170c-4f14-a818-379df3a3390d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1d6e90-a5fa-443d-948d-9fe7f34e2958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c69943f-813d-44a3-ae7f-f00faa55b4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fa83dd-418e-4a4c-a6d0-bb1307d8f8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "94b0a6d2-460f-463a-9ff7-c873f86dcb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e131b2c-5ebc-40f0-b5fb-1c9b4bee7d32",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560ac6d5-9af4-478f-a879-87e0acb4e115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f34610-ccb5-42bd-81d6-374328bcaa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f2bee4-2edb-49cc-b9a3-517afc5eb2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "81d4ba80-b059-4258-a64d-41a383a46a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2cb4a8-df77-4dba-b0dc-1e6960bd0395",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0d946c-ed75-4e26-b496-94c063c9a9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610b667c-006a-48af-a3c8-b89d17964754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5463960b-b922-4217-ace1-def066ca5dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81ace41d-23fd-42f3-b9e7-81047e5811f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56aecdd6-2072-4918-826c-4dcc5926bf2f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4afdbfb-36ff-4709-9f0c-d75308c05189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ffafc7-9595-4a47-96f0-897a730fb23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ea81ab-a396-4a65-9754-d6886f59b417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d2aa86-d22a-43b9-a5dd-9c3a135377c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a359de-7c86-4909-8c43-421a0a3f73bb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4b53a2-ad93-4c93-abb8-500e8226b902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d1a776-5864-44d7-9d94-db007e1b83f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4221a9-d2c1-47fd-b1eb-c523a851c924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26c4a267-2bf5-407d-9e7e-b0720c3ea4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b519df22-1c32-42f1-aa3c-3bc19cbaf0fb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cf9171-d53c-4dde-9bc9-60d5028eb8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f477d325-0b1f-4ca4-857f-df911672d1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d71c0a-907f-4158-89b8-ce7bcd3f446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc77daf6-bc44-4eb9-9f5f-8e517e97c0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c948f231-72ba-4a89-b777-0d289abc3f45",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf1f5e3-35c7-4a0c-96c0-0b9ec2ceca6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c62d90-e831-4efc-ae65-3ede17fba7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1c28ec-cca1-4add-8c9e-e3705432afc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "785674cd-3ced-4acb-a577-9b834892adf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3924db-4001-4e08-8db6-177efe3757da",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842a8c05-229e-4b3f-b977-15618c413df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb2ba86-1fcc-425d-8e33-f18e4a70d119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ea458b-9108-48f9-9e6c-b8f335dadeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac61edb-6cb8-467e-9d23-44325d9bb07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722b26a3-9ee8-4cc8-b6e4-208d647baf19",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f920fd-0681-41c2-9dfc-6ba06bfcdb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4107dd44-7953-4b59-b6c2-87dafe08bde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e2d6e9-9ac7-4f37-9f92-39382cccad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04284800-b206-48cc-b347-dc72de81f163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fffe74a-c1e1-40ee-a03f-410d9b627f53",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a62234c-442d-47eb-bc1c-3ce25a4a7cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844a2d12-f6d8-4e6d-91b3-eb562ebc9b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b37be4-f83e-4a37-8753-132039171de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddd80a1-ba49-45b4-b071-137ce3783b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0fd832-d416-44cb-b9ff-bcf13334db76",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f56268-9a84-410e-b011-e5639b418bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7e48b5-60b0-4e9b-9e7d-4d2d64129fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa2f708-38b1-48bf-934d-cbb04830c773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50a09a46-dbb2-4d9f-a66d-7689a90eb695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2efce63-6488-411a-92ee-905178aa298b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac153c9-f7b8-40df-a556-7ca22f3c593d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce546d51-6f7e-4efa-9c44-3fad2b738329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f20635a-a442-4349-9422-dc1ecbbb3604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "091c2010-329f-4a1b-9f14-1ca577e92616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f85d759-1ab7-4ccf-9bdf-4008c1a90e5a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e47316-1651-4022-81c4-be9a1b3ba37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953e8694-5f3a-4bc4-9d00-e1e765992843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2224c87-7efa-4208-8ca4-e27da6fdaeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "709b4544-54dd-40f8-b816-af3918b7ea84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886d8c41-75ae-41ac-b413-63306b5a1e29",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd32ec6-80a7-4ce3-8e03-18948f71e90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385ccf55-606d-4071-a48e-992f0527d986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4373156f-dfcf-4303-8d75-4906a3602aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae59938-52f2-48bd-a9a2-43ee9e962413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c97fba6-6eba-492f-a00f-a751878afa96",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ea868d-5bcf-4ada-a110-5e623ed87288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65265f43-5def-4fbc-b749-988fb67c88eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e70e56c-63a1-4c98-a2e2-0eff03cba6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b81bf4c4-7691-4915-88e3-23d98f7b4d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4be1d9-1e86-4f2b-8c2f-45bc2bc7d56b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59791ab5-5133-4700-a971-f24a429af466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cdcc8b-13d6-40ea-92db-a0d851c95fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71487ed7-6346-49ca-b1e1-5774a713c96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a55a6a64-c51d-467d-9dd0-449ca38f0f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e268e62-b47e-4dc8-8946-2dc3590a8f3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d2ff67-141f-42fe-8a3b-72e80481fafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8137d344-0aa1-4148-993b-1185bef8fa27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79411f18-6c56-493b-81eb-4a06f721e730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7c0a9f-ab4a-4dce-8fdf-a60af69972c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebd7eeb-e0c9-4e5b-be3b-17ffd8cb8242",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10f84cf-3c50-457f-b5c6-0786371b3229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc178e26-2f34-43aa-991c-5999bc7c248a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64892dc3-4472-4533-a5f9-eb2f37e9cabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c74db20-4622-41ba-9e73-27894e852b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49cb73d-a497-49b1-971c-534c02ec6fd6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a85600-3218-464f-974a-32bde9bca82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09565a59-a0a4-4e7f-a360-e67e505d94f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ad31c0-f2f8-4c7b-84b1-daf8226f0afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "542e9c65-9976-4315-887f-60e57095f22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ce9425-3f29-4d2e-9b7e-2641e28df073",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64ade0f-104c-42bf-9894-d09e0f32a038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4277dc3-a55c-4b26-9c48-b4038e68a8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823e3563-86b0-4f29-a701-dda52ffd8262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "881461f4-e07b-48f1-a381-33c3321f99ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a951724-83fe-4902-a4e9-fb3f7dfbf9ee",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ed5e5d-b662-4672-a711-c408cc43bf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca13b4a-ee33-48de-a5e3-9e1445164779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6840041d-3dbd-4153-b1d0-6bcf450585be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98f1c988-57f2-48fa-bbbe-bd3e2bf5dbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58265106-b9a5-45c9-a847-855fc27ecdd9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f012bd6-70d3-4511-8148-73d67d35023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2cc835-a019-4bef-8e4e-858872687c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85353cb-8a62-420a-b77d-aed6fdf955d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "254f662f-6deb-44ee-b2cf-dfeda1c31407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e618136f-3aa3-4cad-b4f6-d25924e728bb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79296c0e-187c-4ad4-99c4-2d88e98fe2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71fce37-9fa1-4cc4-a710-3820a8d1558f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fbfd48-80b2-4fec-9687-2cd2cd5978b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a61fc70-8c7d-4852-8332-056cf6246dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38e6bce-01e6-487b-8800-49282e6f9874",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52d6630-fb68-47d2-8ddc-e347fd7e2086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7da100-d8da-4e20-8228-2108f6b380c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53277892-5ca1-4731-90fe-3ae94b29c580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba8165b-ae03-48c8-8107-009ea1cb264f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb6a5d4-9fcc-4f0e-9a58-6545ca06a033",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70601e48-68c7-4289-8065-cc91d6b47f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cc4cf0-8543-47d7-a67a-853e6bbc7bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad6d583-2eaa-40bb-9431-3d0a870c641a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9b836a-12d9-4871-bc71-b8a1f23331d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3960d2a-2bf0-4191-8400-768f36fe8373",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bf6a58-0343-4fef-afc5-a7cc33434c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224c7d52-9e6e-4922-9091-b1b8e37ed10a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e9645d-a448-4223-a66a-90a49b57347b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8352194f-d530-4cb4-a7ec-b2e5a29d5525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2976e964-544b-4068-ad46-a36c9e0aa00a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b7a246-5303-4316-b944-789fbdd2ba56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51ac0b2-fc5f-4be7-bbc4-2b46d9d8616d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ae3cc6-9cd2-4082-bc3d-7317b2992315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8bf1bc-eec0-4f5e-a256-962a2132b70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5c1e99-9528-41ca-9331-9a5a2a8797cb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df013fa-9fef-4e80-925f-fe915f5dabd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98894625-7f70-41d9-a855-f17152b6176d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc01c46-613b-4fa5-ac47-5a2c9d4e8bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48f8645d-6fb0-4b3f-bd86-a7183598d814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1575e7-91e3-4744-88de-c8b2cbd81dd0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d16e57-7983-42a1-a4c4-87f191d94be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567b1c72-d7ff-4276-92d5-0dd735ffc663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9d8514-e502-4d35-86dd-9d65920c3700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de455e80-b072-488c-a147-7bf1b4e95a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aea0495-613b-4ab0-8f25-b1929acdc2ac",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abebb9eb-7950-4373-b6cd-4203dc2c28bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72cd7ce-60ab-4f10-ad39-31f85b00ff26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863952c7-5519-4327-8d22-b93b5b23fcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c8079b-501a-433e-b8cb-f397bad60721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b81280e-3050-4045-aee8-cb525faa39b5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2ae67f-585f-4a10-80c8-62e412966cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027e56f8-84d0-4c75-8c3f-1f4e5c0678b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8256566-08c8-4d10-901c-06c630b8a15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe109bad-b6cd-4b09-b69d-21cdae258102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c99e78-b991-4079-84db-4518a0bb21ae",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6e4c22-f87f-4333-8a40-58cc24d0efc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e1c728-f731-459e-906a-c9d107a72761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3628a67-3ff1-4c86-8347-797f5c6e33f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c19b8ab1-f975-4bd6-be83-06bccf233a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b857d3e-62e2-4f16-b02a-ac858213d804",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8839d0de-2349-4e0e-a561-c65b80cd493e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb7ecd8-ad48-45b4-91c1-0a56122145ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368e010d-3b21-492f-8b02-697da07f591f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77be1653-2cfd-4cd7-a33f-d0915bcb5eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b357c0c6-f59a-48fb-9fb0-9c92801a9fcb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2383a6d-1609-498f-b2ac-5e18b2676b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad97d91-28e6-4ca9-a6cd-f0543eabb359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12f79e8-6eac-44c8-a3c3-c446ad953b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd249bd-f300-4e40-8b29-cb6090ef1268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c934c59e-8ecb-40fa-8bae-330d3dbd21e1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a6c5ff-943d-43d7-883b-e45b08f8706c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30683c09-1e40-4da3-91e2-1c6032c4dcdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9957357f-233c-4999-a81b-73217d9b9384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f2bb7f-be98-40a0-a318-666c9b215e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ce0898-61d4-4643-8939-7c9f4e26736e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37a658a-77b0-4b33-9f6d-93256ff800de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee4eb79-b68f-407c-af7a-f1ae91087e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434311c8-c42f-43e6-bb19-c3df1471bd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c469136b-95ff-4788-942d-d47b0c433176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c16e43-ad64-40ad-8f79-a3b6527f30a5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c21ae66-46fb-444f-b9cc-53711a049b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ace1529-38e5-446b-a741-797fe92994a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86197d69-8586-4f3b-b22e-caa7c6f16f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb11d9f0-c9ea-4bc7-b179-f602efa0c974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caaf398-a7ce-48a3-875a-ad6a5dd239f9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7833ae8-a63f-41cf-ae98-608fbbf1b5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d45bb5e-430e-4a29-87de-db2b6f25ce15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b890a9d1-96cb-4b09-80bc-0c187f8485cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "129bc7ae-4bea-4ead-bc5a-45a6c0867c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b7fedf-aab3-4fe0-9f49-226c609267c5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5285ada5-9b52-428c-9639-e48776c5d86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd63b0b-fcf0-4c4c-93d9-52c8121a2b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c80c6f1-c5c7-42b0-ae9d-7d21308e248a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32ce76c8-fcbe-4357-af50-7fce608247f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935907d8-b07b-414a-a9be-05cc155aa191",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4b372b-c752-4e18-bfe5-9b3c2d64e970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d213160b-ba29-4070-83de-9d0236786b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df97e48a-6d2b-4d8d-81ce-72e36b3a76e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4a8d72-2e1a-4826-9e47-5ca734fb5634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de36479-0bd2-4bd6-9469-631be374632e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034f38a4-9879-4bac-8bc2-fdcdfafab11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c418e1ca-28e8-4651-943d-b5de94a1807b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb679ae4-dc28-43bb-a8f3-7f82e080a049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cea85cc-46a7-4cb2-9ad6-89261e65b800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d0750c-55c9-411a-ac97-69f433dd0ef7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8881368-d57a-46a6-9bb4-73055bca326d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1bd7aa-e25f-450f-aa08-ecd5b71c1e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef0bf07-9e44-425e-a365-7f7213a17277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a503b21c-a010-4115-b3cf-5a5b1014c39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cdc315-7ae6-4c60-b4a3-0355ce115ad3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4616ce1-8bc4-4922-b1f0-637f9cd32861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0fa3f3-c12d-4cc2-b44f-989b9e42d506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a14149f-a092-4107-b67a-7e681070dba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "395f42fb-172a-4d7c-a91c-ec2725950913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3b5e45-ee33-4d47-83eb-c52ae56d0c0b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9707e16-4b9f-4cdf-be89-d71f44bd9520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fdf12d-6cff-4274-9804-51a9e0ace915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d22cf2-4dea-4f65-bfb7-ad1c95834415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3832195a-bde0-4539-b2ed-68a36956c9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa402ee3-4c77-4124-a6be-1bb7e289e78c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b3ab81-24cf-4e8f-8166-528ee84fbe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8216184-aec4-4c15-8cd4-37daac3bfa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8309407-8ee2-4abd-bbbd-dcc70093c79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "88841bc5-ad79-4e5b-aaae-4fe55c9f62ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b0a13a-22a7-48f9-b68f-2e4db3f6fef6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5071717-dcd1-45b3-9b4a-80574fc2dbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5a0a08-38a4-436a-a782-292530e6f993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3dd771-0b2a-4f82-a4c2-903e4990746e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01d43460-2d02-4762-81a0-cad38aae2630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac21325-f3ff-4de4-b299-f2620b5631ba",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94922766-3ba6-4643-a4b6-7e8ca994ab80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf9fa2d-022a-462f-adf3-de5d1fccce88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863ab25b-7cc6-4fc8-8668-a32d675a7c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a34d2fa0-9763-40bc-b5fb-4ecbf4503c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199d590f-7997-42ac-b6fd-a42397a573d7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9a3a82-8004-4136-9163-3b4b79312ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018d7de4-4b75-4452-b913-7d660702acc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc58aa0-5b44-48c4-87cf-76f4dc799391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "28980238-d038-45f7-86e7-7cb3cd1bbf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58bf380-1f03-4405-ac28-6250780f4984",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84b0c82-fddd-4e02-88ed-2db6582076e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "439d6b9e-b451-4307-8d40-cbc09dc322d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a5a2b9-8e7a-40c9-8b86-61f7996f1286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "210b801a-a639-4bbd-8bee-72b91f45f7b9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ecba6cc-b88d-4b29-9c3e-9ed1ba3511cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f1e4d0a-44be-48b2-a434-0039b1f26728",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5992745-24d6-4016-9c6e-01ad2b3c5e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8c6e1c2-14f7-425f-847b-b3dafaae72a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b945842-eb3d-4f04-a6df-d36e8e40f394",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "db9a6573-c110-4889-9af9-605761a79a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf1991b-2809-4a61-9892-8cbf71e43fb5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b120acc6-3919-4671-82d3-3b023be1fab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52f28690-7e74-4a02-9429-8ab325247d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd93139-de98-4b46-99c1-ae3e57534add",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "42fedbf1-c73c-4f25-8230-bfbe07db097c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "736d4cf0-f216-4689-ae4c-4cd165476405",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "453073dd-7fb4-4dfc-83af-d654b2271c63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "add69d61-0bf6-42ec-9525-5b91242484fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e225e27e-d16a-4f31-836b-3001d5e8987e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac8bd034-4c57-4256-98c6-05718389c723",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73deeb52-8925-42fa-9cfd-39cf51dd3f15"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e118b0eb-8c88-4761-9ec4-7ab9095b79d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ab3945e-7911-4c9a-8a82-68134b35dcce"
                }
              }
            ]
          },
          {
            "id": "f79c3a86-c7f7-4745-99ea-cee9fd4d99b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca9f7da0-09f9-4440-b5b4-82e7a853440c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "387b3c5f-9823-40f3-912d-df45bada67a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50b4f65d-bb7d-4b20-9dde-72a316566d9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20081298-f1ad-45bd-82ac-e13b840f9ed8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e05bc17b-d575-4e19-80fa-eaed173033f7"
                    }
                  }
                ]
              },
              {
                "id": "f7cfbd39-0ac1-4eb3-ae90-d06936d6056a",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6525878e-ce9d-4585-8043-a859dc8106e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97a06ded-f6e8-45ef-a50b-71ff9c9e11ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e63ec72-6e86-4abe-ad20-f78788aa1605",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62c71e65-4d59-46e7-8ab2-8d78feb8ded7"
                    }
                  }
                ]
              },
              {
                "id": "c34983a8-617c-4bec-96d8-c3ae3d2b2be5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf531731-e6e8-42ce-8f08-fbf48cc594ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "418414c4-46f1-4f04-8763-a09ed48d5a23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b18d46c-c075-4a61-9868-eb8653cf0f03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f13ba43e-1bde-4aa2-9de3-df3c05c923e8"
                    }
                  }
                ]
              },
              {
                "id": "7219877e-6740-4e6d-952f-e28ca3c265d7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34fbfec7-92a1-47b9-b99e-327ed1bb06fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c99e3b4-b5c9-48b6-b404-e3218e699f58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bb9b1e1-42bb-403b-a15d-b109ec75d571",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "634f80e6-402c-41cb-bc4f-87f4955c535b"
                    }
                  }
                ]
              },
              {
                "id": "4f7cd3aa-2fd3-4b8a-ae61-5b5a07e95629",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89515456-e39b-4e98-84f8-1984b2405662",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78533eb3-c549-48b3-a371-24dc31419e25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6cad1d8-b3db-47d5-8224-15ee684ee134",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1e689462-af73-4871-9b5f-54d8c2cee3da"
                    }
                  }
                ]
              },
              {
                "id": "603571fe-ff21-4bb0-bb5c-79a26737c368",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "211c5931-f547-45a7-8263-1844e8e466c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44680ee7-7161-43b7-a923-6646e736ca9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71d4c2f9-39f7-42f3-a9e9-6ea1db85a6d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "010c3fc0-b0a8-44fc-9dc4-347c52a3c39e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5edb9c3b-dc0d-4bae-aab7-aea120697958",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28a3f6df-2c83-407b-859f-ec5708e5fceb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b53ec836-41ed-4694-81de-33726aa1d3fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "adfd068c-a577-4016-a3bc-1e5873e70bdf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c12d604-7b58-4ec1-84fd-2a741750c852",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "44d50d1b-e1f5-475a-b368-b8856b2184bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4822013-b75c-4125-a659-b76530af3481",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f7849ad-9448-4c3e-901f-0b63beb467e5"
            }
          }
        ]
      },
      {
        "id": "55f43a7d-5b3c-4991-b767-f311f1ff3f9f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "129a367e-6dd7-400c-aea7-9ce30378319c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed11141e-21d6-4d39-b0ca-68c136a45341",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a9b684f6-ee43-4a9f-9db5-1fa481986476",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5752fa5e-e8ec-4cbf-b85d-24b16c4edd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0b18c9-e831-4cc5-8e31-d484177b3e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafcc724-4b31-4d3f-9da4-5e27fdf7da2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4faf9a5-2f14-413c-90f7-4c4887ca98a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9148370-b8c6-4e11-831b-59a04a40eebe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f943aa-8bea-45c8-afe1-a8e6405c2b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63314e9-c0f5-47a5-9e8a-7bed9a239892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a0e30c-732c-4816-9014-d7a4e237ed7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08eccb4b-88f2-4487-b8f8-c604a9cc3e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867bfb85-eb18-4853-a12a-a9a225a56b7d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbc8e32-92ba-44ac-ab9c-e268aa5e2391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba153929-a950-40e5-a7c5-07ad1d1c2489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670a303a-29c8-4caa-9cd1-681619946232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6440b7-cb21-4b8d-b01e-37aa8d8974ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0566895e-27f9-4784-a1cd-85e5f2e944f0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f1f158-b9bc-4fad-87d7-02b99e6dcaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d35145-0cb6-4bad-ae23-6d8e8c721f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6d8186-5f0f-4071-b402-540d3bd8c638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b44964-6226-4d0c-9187-1a8f6621ac4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d0d6dc-56ae-49ba-bd3e-ece5d5875346",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6598b6c0-f78e-4bac-a511-0976f89a80c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b214cf1-eb6f-4721-998f-591ddcc260f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c46c30-9ec8-4f2c-a298-e2fde38c3ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "beedfa44-100e-4d92-bec1-fbc87fc351e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad137a9d-3095-47a0-b58e-d8916f88077d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea20484-426b-45d6-8d76-ecbd620ca229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfa7f9a-ff53-42b1-9954-e3ad708bd290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d248a4-2806-4305-90c5-d8e6bb095e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70a83c5b-297e-42b3-95d6-bca662543598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334fffef-3413-48b7-8927-3294d790116f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27cd624-4fd5-40cb-b844-2d624d2feea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4879520-1d5e-425e-91f0-ead9347c9d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95c4d55-933b-4ff5-9490-994e8546a9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0851109-1d78-42f0-8354-48c97416f130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7da56a-1b7a-4e12-9340-ca0ef35fd802",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25548410-d789-4cad-a331-df07fa638f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307253aa-53ce-43c9-89d6-e19133ef2899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a94ece1-47fa-415e-9035-9d3228f0da73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84eea468-f53b-454c-9063-7307e720acdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424c6446-2a2a-4ad4-8cfa-650e3d7b26ce",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897764b0-015f-497d-ae80-46591d0783a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83019522-2881-471a-a961-e28c3f6237f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2154d5e-7be0-4511-bc58-ac4f3ce895ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b47d0c15-17cf-4833-bb87-9cf78ace7108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1b1538-3236-4c2a-9309-75737bca8251",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5333bf-e59d-45af-9d52-692b830a8784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf0f3a4-76ff-4028-a170-c17a9645796d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80972bdc-3442-4611-be8d-1d377373cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfea737-03d5-4032-92da-91a89a59116f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f35008-5d00-4149-b080-5c0e29b34e2e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea35a3f6-97a3-4cb5-8622-f6cd01af7b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b93db4-533c-4931-9f27-7ca2c6caa12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207c3c41-b0c9-425d-bf66-e5f3b8755f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e2779439-13f7-443c-9456-92cc8247818b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb3988d-3e3c-4e70-8b7d-099221eec063",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9a4591-e8d2-4124-a0ba-40c8339d06bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af3a3f0-dab6-4add-bc7a-755cb3161685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1962c75-a8ed-4193-a92e-13507a6a063b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40735d9b-5c6e-4bb8-8a2b-d1e3fa1fa5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712b56ae-aef9-4b48-baa6-3da9582c734f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c6e5d5-ce35-432f-9cc5-b946b361f1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cec8b8-7410-48e2-ad5b-77a6be739445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3886992b-31dc-42b1-9150-ac331c44d6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd9da65-4edd-4f37-b2da-d27a5922e7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cb582d-62a0-481c-8488-9f067016684b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d87500-280d-428e-b570-43969eb4fc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43ba35d-2819-479b-ae21-e20bb77d05a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3981890-bac3-40b7-b0af-439b7da27bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88f9836-1d51-4f5e-9b77-d7efdd724b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dc6e51-d6a0-48b0-887e-5c08a487c668",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9f1695-44a0-4820-826a-b2b7008918ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd28d8b-953f-46df-a14d-93de6c0fe582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aff123-3ae6-462c-966f-f1336c20f809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a28fbad6-f14c-4060-b151-cedb6de4b1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293d6c61-f9e1-4a01-947e-d4459f799418",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2b3524-72d7-45b4-abb0-af948d70c19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39df10ad-53f3-4057-88c6-aee892248ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba905b44-4e00-43dc-96b0-b75497994ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2290843b-dae5-4b66-9f95-ae3b67f720f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751618e1-4ef1-40f7-8d7b-85f21bcde376",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38315ddd-37d0-412c-b935-b1e0e08a4222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e997c9-4fe6-4edd-92b7-c497a9e4c4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9783816e-add9-41c1-a1f9-a286256e1d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "298c0061-e03c-4a8e-b7da-b826f59ea5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacd516b-9df1-4c21-ade9-310de04f5db7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1557db-3303-48ac-b9ce-0a1794c686c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ee42ef-268f-4378-aed7-b11ce8a163bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65d3f2e-a71f-471e-b8a4-8d459850d4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bda40c-863a-4582-8912-014c7c3249ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bd5deb-1fc5-4651-bbf8-ce041b3e70e5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645bec91-0f1e-4f51-9895-d678ee21c708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323df1e3-bf65-4082-856e-86c6d77f6570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58894d52-b685-43c6-877a-e3ce43981f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "472cd604-c933-4d00-8134-4997883e9b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ec7b9e-2786-4a1b-99f2-f4bee84fbdce",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77ddd62-0481-4338-bce6-38e6562d79dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4211e4-9eb8-4ea5-bb45-06799cdaa7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d65b9f-1b2e-45f2-beb6-258e8e74049a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f97a2318-5d03-4ee9-874b-bb413a5b3594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151d3d9b-955b-48bd-9521-41caae77e91d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41381ddd-8418-4462-a555-e8b5f65ea2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dae5334-8542-401a-9254-a4ce0ffe9b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67d6212-073d-40b3-8322-9f3041207136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bf60a56-4261-400c-8b74-1199b54cc740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b7f8c6-3da8-40cb-a6b8-480c427b10bc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88530163-ce25-4d89-9def-438512549055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f39d96-c458-494b-a288-029e4c4a3757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1435bafe-8739-42f8-b662-8c745db9a76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1d7e95-3266-43c0-bb26-04e9f3e97d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd33fd8-d496-4c68-9961-96d26783a873",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba89906-c260-4c7b-8e17-876cce3d349b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a3fc35-8851-4806-a523-cc42938b9656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5caf3c61-0734-4e23-8a17-d0d720c2aa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66500a59-76e0-497c-9ab7-7afb6e76442f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2970643-b9ad-4da2-8d0c-239887d50fac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de0a86f-3e4a-41ba-94ab-eaec2159dfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c136aab9-5385-4443-ab93-0b75b2da41c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19be9325-40f3-4a4b-9d34-597bda22d08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16eae3a9-a711-47e6-a23e-5e45462f6f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda895c5-642f-48af-9a33-3df3f4f8b55d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c7d1b2-8ae1-4c5c-8c24-5bbe23a53831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f34b09-8fb1-4ba6-9267-3e04197525e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac866f27-40c8-4373-b735-cc40ec6118f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c126154-0698-4d04-9bbe-8b4c0d691dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1847fc3f-13ed-4b81-a68b-d8a92aebad80",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dce470-1705-4504-95f5-cbd518e43726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b375d2-38db-4d96-b572-faed2648f58f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af20496-3c98-406d-b976-f51f9f776a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98e16b65-40c1-4ec2-91f2-331c048447a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed5ee43-5567-4a43-b386-8cf0433e6d4a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4cccb7-0364-4e0f-85bf-92027a159544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0241fc-e081-46c6-bede-39d51cf73253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218f6281-f6bf-4b2f-8e59-99da5bd98d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0d87c0-8425-4cec-bb44-fe7d4fee13d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fb30c2-d37c-4a59-99f1-d6e369e75aaf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13571e13-d889-488d-a3b7-cbf6481817af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78877057-9c03-43e4-b475-76a6c082a9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1429931b-55db-4aae-864c-7761dfa6ed0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e3ba85-33f9-4ebe-92d0-aa3b80c05d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0375def-566e-4614-9bf2-17dd5b88b438",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98dcb78-00ce-43e8-95f6-ba0503393c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9fa8f4-264d-4c34-9eeb-7c354830bf21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ad322f-9e14-4d7b-9b73-587498cbe0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c695a6b-f673-4b94-8b04-4e3138343a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08218c87-84c7-4a31-800a-6e8e166f1624",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebd5776-6bee-417e-9e13-b6a8aa9d5e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120e7daf-25e4-43da-96c3-4dc8e5925df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff805fd-85a9-44bc-843c-05f235e3062a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d417582b-a41e-44a8-8535-f0558f5eaceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc235144-3b1e-42e6-90aa-76d95031fe56",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af68be9-31cf-4132-9eba-845accb28ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e3c6b6-9992-4977-a4ef-a72f33df28d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63f6e4c-0055-4455-b774-69b1a1bd07e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9dea34-822a-43b8-87dd-1c6888ba7dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de92246-0713-4e9c-96db-f076750be8a3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344e2ab1-9ab8-45e1-9499-ad20f050543a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc18c083-dfaf-4254-9a34-d472aa2dd6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3688c6e6-0157-4a10-937f-bded6fe7f0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5366bf-d365-404d-839f-4f51ac52672e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49949c93-3172-4e43-9019-43ccfa55cccb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afb946da-5c81-4d5e-bdbc-4e9ad3d7eed2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec79c01-e529-48df-b287-facb8283d8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a72e2b7-841f-4d3d-bda2-5f2979cdd4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b991c47a-5f5a-4f6b-ab2b-c9f82e0c6d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c79aa0c7-2936-4d29-b194-b0d7c6170cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efe3814-e441-47ea-8293-c5e998a780b8",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a323d51-2a5d-4c4c-9349-7eb792c8dfd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "36de6dce-909c-4947-b171-6949cdbcf1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e70ac0b-5bc3-4760-ba44-a576e8cd0375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d7814ca-bfba-4164-a2fa-7b6bc13135e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ddd433c-c4ec-4a25-8920-ed7933a59621",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "785292c9-9985-4822-96d4-cbb2e3c25656"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e98702d-fd45-4fac-b5b0-19e66d996288",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7bd4d47-85eb-44d2-9fe3-4e9a7926ae3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4953a18-11a3-4251-be81-da6f170339fb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53c2d029-40a9-436e-8a5f-e2c5f0cab458"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d87576bb-2c49-496c-99af-2938e12973ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b769e32-f744-4eba-ad90-ffec2b593418"
            }
          }
        ]
      },
      {
        "id": "b790d803-9114-439f-986d-da105f28956c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0ec508d4-fcc9-4a85-ab61-991f8dcbaf5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cbcccc1-37b1-4bfd-9a30-038660957ebd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07f82cc7-3cc5-4fd4-83fd-1cee20625aa9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b17270-bae8-4d3d-9fce-f5e5ea5b7ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68074e1b-1d6c-4cc3-a97e-0f9473aa9683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66d578e-9a06-47c7-8e9a-bc66a12843a3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd71979-0bea-4905-83b8-72bdd9a2f819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ddc3689-05c6-4726-b3a3-dcedf951533d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bec5e0-3d7b-41b3-9877-5aadd739a516",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f39273-9231-4434-81e1-a63c66e32246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cfa10d-c265-493a-967a-4d59bde5de58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a643fc-ef74-4f9a-9d06-dda23157d7c7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd50aa43-0417-44d4-b6a8-6f52c3862fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84378fb7-b256-4bfd-bffa-c7c5ed183c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fb28f8-c981-4d37-83d4-e0dbcf44d771",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcf7927-590d-4d26-beda-d3cfd637b49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058c901d-e245-4ef5-a308-2f5e741a2998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5d10a6-f92b-45c0-bd71-d6789d45955f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6faf25-5ba4-49c7-89cd-b9e1423f67d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4082b90a-75e3-44fb-80ec-d410a415bc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2180637b-2e7c-484f-992b-afc465df33a8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0444bfb2-0291-4d6b-8da8-a3b67a5b2a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b69fa03-8547-447f-88d1-25c030a2cb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62856257-77ad-4ce0-94b7-483b9be6761a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc21ddec-b0e7-4ad0-ba4c-ed9e522241e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d93b3ee-c3a6-4800-b16f-ec4b4cc4ee8b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790ffe66-daaa-438a-9482-0a394eb89761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5319c6d3-438d-4974-80a8-26b8d7cc507f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c3fcf2-acb2-4fec-bd2c-ad57eedb8c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35830e5e-ba72-499b-b610-5ddebed12379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d897f465-b8d4-4da8-9d7a-0c133cafab47",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d768638-d901-4e9e-a32c-749e04bebeab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a1431cf-26d0-40cb-a83c-9439423154b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925f8116-d5f3-4c6a-a301-b5e16dcc5f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9e9142-9cee-4ab4-a009-7fa094ce993a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a44f69b-da85-4b46-b0ab-8f1b761f969d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf30ff3-162c-430d-b6fe-f0b0d5ab3706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e8afee-ea4a-4db1-81cf-7ab5c4eac563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13982dad-2707-4ce5-a38f-a92f8ab959d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87cf90b7-5862-47da-8b00-4e090a14a0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177ed9b0-05a5-40b5-8cce-b73ccff10d4c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e1ab9c-fbea-4dba-ac6d-bc381a593cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3751c96f-823f-47c4-aab0-0b75432aa6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125b0730-56fb-46f7-994c-fa39c047586d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3654e5c-414a-4950-b7aa-46277d6e93de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d67fded-e4b1-4d0e-bf58-d8c8f68c0c99",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44762bb7-479b-439b-947b-38e958424335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9649ef6a-603d-4a6d-977c-12d404a54c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b31e6a8-254f-4afa-b99a-664925c408c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595b8afd-9233-41ea-8473-fa9625a72d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c522dcb-938c-42ac-a6eb-d98ed65667ee",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa61e65-8920-4a72-b04d-2652966a5a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0717b981-6ede-4ae8-b0e7-d819d4eb850f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ee0f17-abe1-41fc-aafb-466682efd21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5ae777-fd4b-44cc-af5e-5822b4753588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b61245f-d093-43df-8b5a-edc0932a0ebb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bac9bc-6dc9-48a5-a25c-3062b2019c4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e95ece7-4024-447b-a09d-eab81b955041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb43427d-8e26-476a-ae78-d2773b1ec61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e9e4e4-6989-4253-ad52-51a567fe4640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bee957-51b8-4992-8397-000753562af0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990f597a-aea7-4db8-ba3c-0f73b16e116f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e97e261-4fe1-4abf-9e80-91f9dce50d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0661d38f-491b-42ef-bd44-1fc38b19d11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e300d3eb-b13e-4afd-ac3e-158f1c944a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096a2d89-2352-4c52-b1df-d45bb668acee",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7767f068-4963-4a6f-aaf7-05e8efe21998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d13f7d94-689a-4b51-bfda-28018494187f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9257541-4e7e-425e-b1a9-de4df185277d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5186e34c-6bd5-4468-9c24-154947fa2848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7f6417-5e23-48d9-a6c0-59db9a42f00d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a500ec78-bd9a-4054-a0bf-4b4246593cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7f5ff0-4d24-43c1-bdb6-1df5486061f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09903e42-3c2f-4416-8a55-e8a8cf79ae2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991a0b9f-6bbe-420e-a3b9-9dc7556e64fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9854be-b18f-4194-bb82-de6de6a4919f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7495af2-25a6-49c4-9bd0-4f284f41a1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ab644f-d271-4161-bc7f-f054cc94f358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028866dc-0957-4087-8fd2-d273a83b3822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e71d993-20dd-4d94-8029-4747ad8fd296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b562937b-f1c3-4a67-8d3c-2b3bbb7232cc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c20489-49d3-4e01-9bc7-d2e0e5e12289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb5ed9a-6f22-47b6-a595-8dbf42c27567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f0a48f-f348-4f2e-b31b-cde79fd92238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458da49c-cc26-4135-8e16-fad090b2608d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c0efb8-057b-4725-ab72-a7f252d69b9d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073bc0a7-c60a-471b-854c-de77a7409cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1eb6c7-d6fa-4a48-a13d-2bea32ed239e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464e24b1-2d7f-492e-9366-e3db323bc236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511a326e-b51b-45e1-b64b-4be5d7d0c882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8225d730-2c32-4bad-b4f3-31911f654257",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb5d944-6cdf-4b91-9f95-a61ca8d083ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0a8dbc-b24d-44fb-aa03-1f60250a68ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061af598-3c28-42b1-ae03-d9131482f8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab059ea-0318-4a79-b200-072902f046fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1732f4e2-8404-4672-bb92-fe535b3b563e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea2e50f-e7e2-4dda-88fa-492dfe529a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94521b94-2ef6-4991-adca-18f9376b2f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0849db-2170-49ca-8d9c-d4db74b5b8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a383e955-e829-4b1e-a6b7-865747cd4a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3149358-507c-4d75-9801-293bd679b5ce",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33551c1e-59f8-43a2-a172-a17c512727e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d214247-f7f1-4023-b140-a2fa506823d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f611850f-5d05-4a62-9659-9c622d95d341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05d85c8-a113-434a-b3cd-975f131c55a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee6a4ba-9771-4919-8f86-c71bbe51d55a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43c1654-30a4-44c0-b653-b4dce7c775d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8f44b6b-6841-4a96-951c-c7dfb9d75da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25135fd-0bbf-4041-9719-fa02a23f91fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95666232-ab3b-4182-8eb1-b24afc32cfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5842818-21c0-4748-97c1-9768c21aa182",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b6e0d8-07e6-47c4-ace8-878edc91a2ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb01666-e71b-4801-9590-46c457b6cef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c577271d-eb01-40ab-bb38-4edcd623871f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9a0f38-62d4-410d-a013-3965b2f3a4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11634525-13d7-4396-9174-410ede603a53",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c50eb3-47ec-471e-b367-183a67f4cdbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55817cf3-84a6-4491-a2d8-91e4a59ad154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fb4496-5323-4a8c-9550-f78dae0027ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4659ded-6ae1-4e72-a329-a0c2bc387a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754822cf-602e-44c3-b159-9433e9be740d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7680b7a-1d67-4fd5-86b7-673d15be5d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3754e328-d072-4afa-a2de-c07183fd5042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82b24d7-25f0-4750-9790-7c763f38a4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c1cac0-c1bb-40c6-9554-a71ac13fbb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5affa7-10f9-4759-944b-bf7bfa176493",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8820dc9e-dc4d-4fa9-8e5b-e9e75b1c45c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d0e519-9138-4aae-88df-10dc2b428762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaf27b2-e6bf-48ec-b142-ccf3da1b5e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0f6fec-200a-405c-9ed9-05a07b9c3146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccbe766-7aac-4ed5-a783-7d8c6083f387",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4ec3d7-af8c-4893-9280-51d6fa7bf31b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3abff39-8b37-4b56-ba3f-057a213a068d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573b7727-2a01-4e99-83a2-d4eab1de3c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9db89f7-57cc-4535-988b-b91a688c2858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59da70c9-0981-4741-8a45-fbc185344f6a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a6cee6-2566-4298-95d1-a2379f49fcae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d27a97a9-4f0e-48f6-a518-c7b263191f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d893452d-a6c8-439b-a3fe-02199722f525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426ae2b6-a3b1-47f3-97f1-1c6cd7278225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7e2fbc-1903-46df-a732-0ed0281f04c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970c373d-0958-4a1a-8c17-04c31016005e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c0d9958-d7bc-47df-a516-1f75ac36eb7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069d8cde-51a7-498f-b836-0f6d1a31c72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226cfccb-c936-4432-ba8c-7869d255e5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ac6629-6117-4bd7-88b8-cd1eaa0edf42",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d844ef-befc-42cf-90a1-e2312283ad13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db90373-409b-4076-b6e8-165217385100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8de37bf-edd1-4b67-8464-9607b6658244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e352000-b1f6-4f3a-8579-61795f52cfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e37480-fbcc-4011-bcfa-986e345addfd",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a732dcd7-314d-4135-9067-f9dfb3a19748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b6441aa-9aad-4bc5-8ae8-84101c2194ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2845c3e-bb6f-42d4-b3e7-10ea345f1859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a0d68f-9c94-4f81-89d1-63442fdcbb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a35256-b08f-4189-b683-2f4bbc0afa2b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b7db9e-5556-45b4-b521-a3b54168e33e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a61542-7bda-497b-ac32-c15af633bdd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c83442-bfcd-4cbe-a1d7-fd3b718d4be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c98f07-9f66-40c7-b81a-0c9860c3867b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde28f74-3116-4840-a520-5d59d1d8a131",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b8f645-1574-49c9-8ec9-b7afcbb03c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1285586-5b21-40d1-9933-030cb4856553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fa59b1-ad94-469d-989e-767d51288936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953a1f47-ecf4-47eb-9ff1-ae1e31c68c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526977ab-8cc6-47ce-a0a6-75f6bd17afb7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451c7245-5b11-4976-b55c-378d1f74e9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56e6fa1-ba9f-4e98-8307-ece3b998515e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99125480-14a9-46f9-a7e2-72dfcd1dcfb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04be826-78f1-47b9-b0ea-946b3d128ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fed2bb-d9cc-4e91-98cd-9be9459584dc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfae0f76-a9f1-4cbb-9bbd-64a55ec86372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598cf854-1be2-4438-9cd1-899b73131ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce15df8-2408-4789-bc28-9b8473e2ff1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05acf83-eb33-4d5d-89cf-fa0dada715d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c2d9df-4088-4988-9ddc-91ed8b380cb3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ce85f9-b783-40ef-a7d8-3a6ae49e4525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2185a4a-1086-4268-bdb6-748efcb7ecaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a1f148-d400-47b0-9afa-c47fe99b042f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbcb5545-77a0-46a4-9b6f-760ef939a27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4b3b25-830a-46d5-a7d1-5ff9f3ef1bd0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dbfa7d-323f-4bc0-a366-a25b3e2a5b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab00b27-ceb2-448f-9302-2dd920ff24bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8ddc30-0658-4dd9-99f2-dfe8e716749a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4393beec-c4d8-421d-9173-045297034cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14341585-1a9d-4d3e-a853-c4d4b918e505",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4045ef8e-1fd9-4ffc-adff-1f7b7880304e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402b5421-5599-4960-8e52-812735629b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752ed59d-211c-4d58-95ea-325b59919891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c76f85-a3e0-4a3b-baf1-18af95badff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c4aae3-fe53-46e7-a6ca-a60d5c491cb3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde36b15-7e1d-4ef6-8619-c05eafac7070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91385a9-7658-4f0b-b95f-ffc5ed4c9d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a19e786-9688-4253-aad3-07bd892a1aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751c0e84-0c65-4803-a6aa-eb9e35149508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd6bc34-4069-4425-a71c-6c56b0023702",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6962eaa2-94b0-4a4f-8d44-3057695cb1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66a48f0-c28d-4fd4-a482-7c5c9151482b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b66b418-3763-4c30-b7be-e8d4290b0c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e24c19-af96-4b2a-8d56-627628de4e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e9ecce-0a93-4a3a-95ed-7e7a93c00613",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca3107b-c9ad-4760-b84a-b59f5181d399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c1ef6f-3325-4e6d-b317-feb3b265fe23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d627368c-c477-41c0-b2e4-48735e8837c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a30465-8023-4d6f-b9a1-4638f0b5dcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dabcb0-bdb5-42ca-acdf-547019b5beb0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2553d1bb-260a-43b4-925e-2d6ebb7f373b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d463eeaa-933b-4c63-b83f-5ca267b8293f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16f9633-df67-4ad4-9843-de525b2a3a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795229e2-90d5-44fb-ab7d-f84c5e8aae7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffa142e-8b6c-4bc9-829a-45fe36098da4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6eb982e-a0e0-4a6b-aabc-1448c1af9189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960736e5-ec5c-4898-b9ce-28d711a0d19d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d7a572-2be6-469e-9bc1-ee7e73442d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8e9d46-f03f-443e-8915-8fba6430245a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121c0e83-afe0-4361-843c-cd28f1c36209",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9de52c-1df6-42b6-a1d9-d4213ccc31bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159e468e-181b-4bba-9cb8-bac31401a0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafb5ff1-068f-40a5-8ffb-806ece895d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59a2605-e584-4b9f-9f22-7e39ead8bca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbd91db-c5cd-4af2-b1b1-05e6cfab63b6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ebbe67-eaeb-4976-935d-457b3426f648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c576b650-07b3-418d-bfa1-b9dead6e601f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271d28e6-6626-42ee-a9b3-b77c553b64e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2b1c6c-dab4-4bc4-ad3c-1234b58fb264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82942368-3bd9-48d4-9f52-96175a57bbc9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66df2d3-52e9-423b-b7dd-148b5c282329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0eef7e-0e79-4f93-a978-16e2a7a003e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf317828-7bd7-40a2-90e0-0ca658f4826d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfbd199-e906-4778-b159-c44379fac4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7200f50-49e2-4ce8-9e26-bfad3ba18957",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3018b02-b3c5-4a4f-9611-b77b9ee186ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed43247-84f6-4715-adf2-544bec101278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52719ca-7d0c-4ede-a49c-543170f9d2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e06ca8-51df-48c5-8ecb-cec8670fdbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee0ec79-495a-403c-89cf-fa1730eee211",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50892607-f886-4bbf-8138-ff28e8e1e76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fba4805-1cc1-4190-81f5-8aacf0db820f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b1989f-34a1-4ba0-8938-e1825399b248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba8e9cd-4a67-4e61-9bbc-df2e62d2a6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb287a98-07e5-46b9-94ca-10c6fba820c6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54b3a59-62d5-4705-b2e7-c9fc60708698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a8f8fb-ca9f-40af-a042-3b03267ab6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdde252-62ee-4f18-a7b5-7e3182566cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b71443b-9d45-44cd-8899-10e648c4dd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa22b08d-c1fa-4a23-9d94-c340dbd911ff",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3606d160-1d28-4cb7-8586-f00f0f54ac00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9b2083-f097-4180-87cc-7e2ec182d814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941653a6-33d6-4b36-b0cf-cca273e469a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607f6543-11ef-45cd-8b4c-8ed8867da085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47e1e2b-6223-4dd8-8fc8-07b993173bf6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8480be-9348-4956-95ae-ff220e846303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e94b6f-e909-4aa4-afc9-5d83f3d50668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b113fa58-baec-4b75-8c5c-7b4d3141f632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01aaec3-489c-4ccf-8a27-6f2f3ac234ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb41d2a0-e47a-46d3-a226-6ab740d91cf3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f246266-6eec-4a8e-94f4-06ce39d134f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29790d2e-aa54-4990-ab03-c4d5be0e7d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9165788a-a4b5-4dbc-9a07-bad6be86874a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ce1019-b448-4f48-a9d2-c9411a0fc255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138531c7-adaa-4f95-bbd1-dbb1c237adb5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdbc072-8ece-48d8-b2d3-edb82deaea26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2273972-5189-412e-9152-ff063571aeaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f5927f-9214-432b-aaf9-a3f48fa8c135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e922a9-5b0b-4455-8ed4-34b4d59d4217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6526bdad-3366-4dbd-9952-2e1d9d5674ee",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60c89b0-522b-4520-ac5e-436173a77e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f516b28-6de6-44cb-b2d4-404ad4d0e3ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537c71bc-d3d2-40d1-ac59-c495cda7fdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27862cc7-485c-40ce-8b4f-c7d10f8c5d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d585c2f-35ca-4edd-a93c-4cef86e49b38",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a44742-0189-4c02-bbb7-49e2e1bcd581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502e7046-5ce1-452b-bc24-d50ffcb88044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9de4eb2-3966-4d41-80c6-afaad1548663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c95471-62f8-4796-85ec-5cd8622eebac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c91e0a0-ddf6-44b5-a34a-f014a423f9b4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a54706-bb40-4228-afde-669c1801abd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dd0ba5-cad2-40c5-9efb-55e9fb390493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca8c8f7-7c8f-4b49-820c-9b3264dc4508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bcd57b-df0f-4f6b-aa98-7c14d1c5f89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab70d889-e49e-4ca8-8dc0-b879d5abafca",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b370700-2ca6-48a4-a7c1-3295a1a217ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558721cc-6946-4eb0-ba2a-a87998d5ee4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2dfa87-1927-4c50-918f-a58149e6dac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27efe0da-c334-4c3e-9c5a-c02682e15082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92657801-4f4f-43e8-8de8-94d9ee35f012",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5525ecb3-f99e-4b73-84ba-a9c17e3bf75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fdd2e5-4f9e-4974-9a4f-de1f90e737e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7efdef6-370a-48f5-825c-d5d75da2b9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a04f2f7-dfc0-4057-bdf5-d521cf0c1292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47419776-43f2-4d89-9ea3-73336eff304c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204e3a15-7568-4969-84ab-693039ae83aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1238a1-6217-4289-9a05-60e96b627a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c483d0-4481-464c-841b-2eb3a458f0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dfd6bb-c14f-40cb-bb1a-10fd3562324f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7405fd4b-db5c-4b79-8660-4540aececc2b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0caa6b-1377-489b-a4c9-561097b138a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bcbccb-d7db-40ff-ba3a-fb6be471620d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f5606b-a01c-4973-9511-9bf8651b6e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725882b3-65af-450d-a546-2a89c9178ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b541890-9f34-463b-bf1f-94dc9ba6c17f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9298e63-4b5f-43cc-98d6-0f29d5f028e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab7db07-1d87-4e0d-9a7a-ee2eac4bdaf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a306b0-9700-4e6e-aad5-c96ba412452c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e74f7e-f4d1-481d-bcef-7b6ab8c6fd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d2e557-539d-411f-8afb-1a3d93aa80f3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd19b803-0fbd-4342-ba95-785fef7e1d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910f0d61-a078-4ae6-9807-bea93a372615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e5096a-7d69-4d86-9b5c-962b66057d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e784978-dd7c-447c-9320-9619d07ec087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e76fb0a-6e1d-4266-89ca-1ff05c00bdba",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44626e5c-66e9-477a-8331-fd0e8924f5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4d3586-29a5-44c4-9d16-fd0427dfdc73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9a6859-fbd7-45fb-acb8-2cb9d5fb02cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727bed45-7bfa-477a-a8aa-ce37bd002e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8789cd58-c891-4aab-aa68-c645eea3fa09",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd23009b-d069-490d-8cd3-cc842bda4425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87a185c4-d37e-4a13-9434-729ce5166dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccb8c3c-ba17-4745-9f90-9f2318c04021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f03a74-702a-4d50-9a46-e88316fb883b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d852fd68-b2a7-4604-9df5-db36a2ed80b8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ddc6e5-a921-4554-9891-f2a55e8620b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84602cf-3828-4db3-9a84-c02eb16fe4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5d88cf-17d4-485e-98d5-0dd658476c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830f39b9-e825-4bff-8946-24ba83cc0915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb6a8b7-df27-491d-93c9-bd687c06c59f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9463ca-db42-4b2b-8efa-d51f61c558f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69625423-7c27-4dca-bdd1-5a00b302a46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae694f90-e7a4-4e54-bb76-ab425c4b2082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db629b0e-df05-428e-b60b-e4dd0efe64b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6d609c-52b7-4573-a6c4-98d5715e2fc1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f604bf-a99d-46bb-b42a-bc1e707a40af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10420c56-4661-4af3-be3f-e53a6e83ed3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3b6d70-6d66-476e-9750-c456aedf0d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efb59a8-315f-466d-b3fd-18d5952e55b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b21a731-51e5-4852-a63c-b014d751bbe3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16a02a4-2202-418c-99aa-3e769b0caaf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d57959-2b23-46c1-a533-c11fde4c75e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332e7f5f-9104-4cc7-b5ca-736f9bbe14ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ca1eb3-e91c-492f-96be-424a7b28f40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dd9d26-85e6-4946-be55-231abcfc41c8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d0fd27-1c2a-4376-883a-3041ef449441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d12b30fa-b64c-4738-9d14-f857a018faf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bdf19f-cc11-448c-b665-eb7eefb2575e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5950316-03d9-4b39-ad50-1c3a364b33ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239ff774-3170-4d8d-8367-61775d05da80",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913f3169-0df7-4e70-9c4f-3439617ebbf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e06c84b-d81a-49c2-b963-aaacd22ff213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10631517-4cf3-45ad-bd7e-87de42005f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbd71ae-9761-4ce2-9b7b-e96713c91694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306cc2df-2ef3-4923-af54-a3b1402a1d73",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9f23ce-8dc1-4453-b62e-05224916d585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b55fdd6-4e57-4b02-af78-dc9205aa7ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc477d6-2539-4c7f-bcf3-2bcb82c2af5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4bf7ad-2c52-4832-9e02-f86c249da72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514b853c-12a7-4230-b025-5c7b21a6f476",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0700a94-2173-4d85-8b76-fe026ad60bae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8d78872-8004-41e7-ac7e-d7990b42b0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bdde6c-b699-46e4-98a4-29ba7247c06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb494e6c-2e77-4c6d-9ece-f4edf5b803ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c8e78f-86dc-4e8f-930d-8153330d6603",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14a6e10-431d-40fc-9a59-dff1cfc4ee2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7726edb1-56a0-4c16-ad72-3549e9a1d734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b53fab-7e65-40c8-9982-b96a5729b7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae308f0-d92a-454f-a53f-7f1cacfdc34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c0b65d-7969-48a8-bf41-e41d816f8b5c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fa0e65-e415-4676-a08d-9ab36db65d8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b854cb9-1be9-4c64-b598-5b4c56f75421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f7c120-c050-48cb-8c5c-55790ac23ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee17fd60-ecec-40a2-a8e5-c3b7c4f66299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87df79d9-6d6c-4c27-9797-a5a894637c82",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9c74d7-8699-4b29-8f6f-94939635a92c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b486e92d-7b44-4841-9cc3-b011cee309b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f1958a-113c-4491-8848-72bfaca5935a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd474bd-761c-4c95-b69a-f2da6db88bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cb6063-5d32-466b-80e1-310e6dd13257",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371b96b0-10d1-4d39-b2cd-7e3e9b959cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5ee89d8-d126-4219-990d-0ebfc808efc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56e5e9c-f9e3-4599-809d-a803f6f0c137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc3e3dc-13ff-419c-8895-f5208c73adb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f3f4f7-2421-422f-99d8-9eb3877a0500",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51826ac9-a6a4-4f17-ab91-b7b3fbfef48d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cda56e5-2ac8-43a0-b447-7e1a06c136c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efea277e-2bd2-4bfc-b2f3-f6383a9e8c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36567cfe-30c1-4b18-95d7-dd2e7b2dd544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42024a31-db88-4300-8ae9-82acb59b12de",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab81221-2cc0-41ac-8758-f3818b82cd9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801e1158-002d-4aba-bdc5-eadd17be3fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37609d2-046e-4141-9e2d-1fe29bc6dc2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc186f88-9deb-410c-b392-bfb28b64f843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3adebe3-eb94-43a6-a30c-a974fda2c7ef",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683cb077-f828-4685-adbb-1fab524e1a3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb2127ca-8af1-4b2f-a601-84fdae295485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09ad106-6259-44be-8c45-e08ebddde6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95feac4-029e-49bb-8ae5-6a763c665642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f2d059-49cf-4f46-9621-b537737d04f2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61d2c83-5105-4b48-9599-5a371b966cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1dad72-37e8-4139-9f97-5d27a60aaeca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d794fc-f859-4285-a6dd-0de6d837db18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcba2fc-d7df-42d2-b4eb-5c214345da35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52478502-4a7a-40d0-ac89-dfb061cdb2cc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3fbec9-926a-4808-82be-56289e5a0130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23adc16e-a43f-4b32-a019-70ee96aa179b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad37a59a-d3a3-4e2c-8f90-4a5d70e74d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57277ac-7e44-4578-8b0a-b77c573edc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ff7bd0-29cc-452c-83f8-2547f58ca2bd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0beaad9-e854-43c0-966a-ee1ea779d422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b66c294-41b2-4560-95d1-5a60101a4984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5568d824-c5d5-4088-bf35-b6b4be424e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3684ae07-5022-4d0a-835c-35780d9ef3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c2cf2d-6264-4848-ba5f-9949c622fc44",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ed78bd-3c42-4396-a50d-ca0f58c4a41d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4154fad5-029d-461c-8669-edb524fd476d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7738208-5d93-485f-beb9-bb6fb4958d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3543d9-16b4-4ede-bacc-a6c69575b5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d00b043-d836-4935-aab0-2610048cc8f3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218e7e0d-9bc5-4d48-a3d5-cfff2894fc3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a40d9cb-b082-4b49-983f-f49b1d64ae29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f498682-1957-4f23-9247-60025e5ff9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be654871-a4dd-46a0-9b10-5aee565ba8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12ae840-d97d-45cd-824a-c3a7f7f8e4f2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721ebaef-40f7-4271-94db-c31c5f78c6e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e352512-ab85-4e9f-bfa5-26ffe8c6b014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01369535-6f1e-4f7c-9402-e7f3e27efc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1dce68-db99-4973-aba9-beb2e43d9d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102fdad5-9018-4d8a-8db1-1045e6343caa",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c0cecc-6282-4f20-8920-8270e05ebdcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54203b46-36e1-40c5-a14e-cb4342e1e233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a90219-7eb9-4203-a079-e116f438712c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fdaa4e-37db-4836-81c2-f091e62dd810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876dc99f-abee-47db-b905-5dda72f05e8b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7787e979-8725-4aff-a7f0-1d502cc96285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3904fd7-7ab3-4c54-a5a1-73a83c511bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98d0ce1-94b1-4ab8-a576-b326d242d2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80571e44-8a8e-4fc8-abb0-21a9c292dfd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0f7cca-6d44-44e2-ab35-9d5af3cab122",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bf98e7-045a-4d9f-8440-ae4da14fc809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "898ddd8c-7709-447a-a513-5831b57c6937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e054ad-67b3-4d28-814e-7c6c08f06861",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9838dd7-8cc4-44d9-a6ce-1fb39b736342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649e06c6-f729-4913-9611-d4ff5127a8da",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85d91f4-c230-4337-9a4a-937a23d26d60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7b7271-22d9-4407-95c9-e992d462e729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f882daa6-63e5-4b30-a953-01ac788cf710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4e9740-9a36-4d69-b1d4-b69d627c2533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b658a74-d692-42ea-9d53-adfc892b3e8c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51165370-7172-4551-b917-5825c28b1bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cafcbae9-050a-455e-a842-a71cf5351c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304bfc26-eb44-4404-a799-901c2c45e9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5885af03-e642-4f86-aff7-bcf5a9fef1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8a0846-2e63-4ba5-9393-a9c4b8d16df9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b470c9-b5f2-445f-aee3-18e38a592461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ebc9ef4-38c9-44eb-8c91-73eb9926d887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1fd1fe-8475-4855-890a-02601d1ea9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964a3f63-057d-43ff-bd3b-2df15389844a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d16141-b84c-42ca-ae59-6d5f0ffe71e5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184d5979-0490-4547-8e85-fb263a8b9402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64d06007-2bd5-4c70-a960-96d11c5a5d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "731700de-143d-463f-a042-99e321654120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a217546-1da7-4975-bd38-00c399374510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25991123-8026-4b7e-9558-c7ec52234b95",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5304eabc-17d8-4925-b5e9-0fa331128c4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98b9650e-387e-403b-b4d1-1bcbd8044871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64018f8a-5d58-43f8-b58d-5728597d9fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d1b46b-8e78-4970-a8af-38966f2adbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf5fb0d-bf44-4db0-bd88-05e102a09ac4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931f03dd-9ec4-4a24-a9f9-8fbd35ecb194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ffdfcea-e015-465d-b903-8efe80ac8738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7948200-c1f7-49b5-b8a9-55866ee1d9ee",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37a49f3-3ea6-4289-b35a-b49b54afb032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7225b506-3ee7-44e7-9438-a93e3c8a486b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e11a53-eb6a-4b79-8121-b315efe15843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4c71a7-a31f-40e5-9286-8a31eb31ab6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805fac3f-61db-422f-9674-ab3eeba68464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfb3d6b-e33b-4229-b923-91c0aa9e7b33"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb44196b-7357-4003-8ed4-3980988dc20e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fb20965-0559-42af-a6a1-fa5bdd1852fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1478a1ae-3411-4de1-bfcd-086947269a3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "139a6c0e-9428-4602-a5f4-97b34c0ab83d"
                    }
                  }
                ]
              },
              {
                "id": "18ce9990-cf8e-4d0e-981c-97c756f4e229",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77daa956-2d90-497e-a284-1308c376ea7c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7aa59d-4d3f-4601-a7ee-eaddff3d98fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8d877527-0d78-4d19-8104-d1cde6df7731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdd54e3-857d-4210-bee1-771780a7d4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "647e8078-359d-4732-a8bd-53ed150fc0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa48e0d-c85f-496d-b20d-9977f310a705",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c926e848-0654-4f5f-8f27-93b5d154aaf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2ffc6727-095c-481e-ada7-16b19778b9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a461d8b3-e65e-4279-8e59-e7c5f65c34f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a08f5fd0-7165-4011-9db7-058efac94ff4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "706a9450-f1f9-4635-808c-0f38c18f7991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6a32736-f47b-4304-8512-53afbdfd3ea7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e87654b-565f-4e85-9ebe-96efe34d62cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "390cc68b-f481-4e49-8edd-bdb892b5a05a"
                    }
                  }
                ]
              },
              {
                "id": "c1a6fffa-7d55-46bc-b5aa-cd6b2bed5d23",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "02bded4e-410c-41a4-b495-61c46fff3196",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787f4b84-da44-4f8b-82ce-1d2d603a2042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "76c1169a-4af9-4fd5-94a6-81d150209695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309fd2cb-8c37-4044-bb95-a045676a9da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018c3a42-1199-492e-8470-edcc4f588d87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ee17e953-a67f-4914-8b15-364cc1f2e4bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19faab7d-bdd2-41de-831e-25f6c187ab76",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d52f250-b2ec-4939-aaed-fe8c90d95b0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "037328d7-2e99-401e-a26e-929562d701f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "320cf1eb-78a4-4990-9437-6a94d06a0dc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32cfac38-d520-40a1-9cc4-c06127e1609c"
                    }
                  }
                ]
              },
              {
                "id": "077b6e9b-1faa-4d49-9a01-ba178a1c0b1b",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "543c550b-d3bc-4cd4-9b69-7123c459034b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "92ca22fe-d310-4559-af7a-622a7eedc4b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e150dec3-fee4-4b3a-b793-04545e21f511",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5031a0d-f2ca-4298-b9d1-bbc31b331ef1"
                    }
                  }
                ]
              },
              {
                "id": "73322e69-4509-4349-bbad-a9351a67d312",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a926d83e-7906-496c-83fb-4d1be0e88f15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1737fd52-f58c-453a-a295-3e7a47afcec9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a732d24-343c-410e-928c-91810959250a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6d8fb6a-83a1-44f1-b6bd-f545c483861a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf93fa19-899c-4b8c-8a6c-a81bacf08ed6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6414884d-3f87-4dec-8e7b-3833ebe09220"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4ef6f05-ce7b-4ec4-877b-501ab316e5a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c2b0c62-e7e3-4045-8157-73b3cbec7b89"
            }
          }
        ]
      },
      {
        "id": "da0d488a-bb92-4271-9946-841c2d8597c9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "97dd801f-9d4a-4937-9a9b-c180e8a5e418",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8877fc86-0f8d-45d1-84f6-13c69383d43a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0df5d0f6-26b5-4c2e-bc41-2421787f3908",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f33bfd-9efe-4e8c-9682-7dae079996dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fcf0b2c0-ed1a-4491-b3c7-7bcdf809792c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c51113a-a84b-4006-a750-97dca400dbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16043d24-9cc3-45c2-92ac-b28d5ff0d86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d06d3e3-6850-41fb-bef4-ea4066a6666f",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fcce25-3eec-44d3-bdfc-64b8f7852995",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "edd3c57e-66c7-4f81-b36c-4d87d99bb6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced4ba20-2dae-43fa-943a-991d50e6d299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9357a63-6291-4cb9-bbf6-da697aebfea5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "090a2e76-4cd3-406e-93e3-7e1c776669ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bdce463-fcf8-47ce-8e69-cd3058daa6e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98546c1d-862f-4d59-9664-a2684554c9fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba5a0370-e2a1-4ded-aaa2-bc78510082f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8091391f-b846-4f5b-bce3-01aef9246403",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "36083f07-6e49-40f5-94b8-b8629f8c0a15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd804d35-9650-4188-9abe-3b53898520f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7567bc4-fa51-40c8-b054-37a221e87ed3"
            }
          }
        ]
      },
      {
        "id": "d10c1779-c8a2-4fd6-87c0-4b39b199c0f7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "efc63d51-f591-4a02-9f05-e862b152be24",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a937a2a0-e8a1-4a36-b24e-cba120da1302",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10d4ef07-ddce-4aaa-804c-5ad979d7e2f9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375224c6-1002-4e3c-9e02-cff8d74bc14d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e09a2f06-0fc7-4ce3-9e6f-be20d59368c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028520bb-4d74-42e5-84f6-30f66bc0ebaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75bfe739-ecf5-4bf6-9c78-f305fba876fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6c8d2e-5f7c-4aa5-bb6e-3a20b5badb21",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db8f2c9-0e0e-4b3a-a434-3b6bf93f3d5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c27be74f-9ff7-4574-9579-271565b39176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c439fbc-c346-4b7d-a7b0-31e46b99c817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f3374d4-4529-46df-840c-cf0d5ce28cca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec417c68-1e3b-4567-8fb0-1538c0335ae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c020fe69-2231-4fec-bbce-341ab2d09cb4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49dc9330-183a-45c7-8e65-b7dd081bac2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61c2b34f-fd1c-49cf-82b8-20fe5b31f87e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a6525d0-3ae6-443b-bbbc-6332baa3bdb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "eb94bcd1-8b12-4170-891c-eebf03a0c55e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f63b4952-db1b-409d-9e9b-4c6914e5a1cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00138e95-e9d1-4ccf-8a76-9dcb70f34d28"
            }
          }
        ]
      },
      {
        "id": "b6b0ac9e-7184-45d3-bd6a-8788b4b23355",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4a615ae1-ec55-4744-b42b-61cf330ebcfe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b468cc20-c6cd-49b1-8a91-76a9db7604fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "280b5e37-22df-44e3-a7d7-cadd8abfc6f9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f5995d-cfbe-409b-8bf6-35c23c0aaa94",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ae2e74e1-4530-4146-af92-5d45f425a179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71df35ff-daed-42b8-b254-0b765773f00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "360f13e6-1096-4210-8f40-a4503390293f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba298e7-3f0b-43e6-9bce-ebcc415cd9eb",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0c3798-3368-4f8b-a153-029a63777c95",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "53d5561e-29c0-4b81-93ca-dea1c6c371c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75ad922-f1c8-4dc6-879e-c61715525588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8189921a-4b56-4d4d-ab82-a946d80d3b6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "082b0409-3c00-4ea4-a450-4f5c041a04a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9042c666-1f71-459b-ab7a-b25d4c5d0b2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "158db6d7-79b6-46d1-98c3-862b46471500",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f091088-8def-411d-8777-281ee50eafcd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "112adc08-bd33-420f-a397-8f0ab542f5c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "32a5a642-314a-4e87-9b13-f0e9a4cde8b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cebcfff2-cbc5-4a2d-ad09-6d261ff9c874",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29d210a0-3e99-42f0-8c9d-952550a880f4"
            }
          }
        ]
      },
      {
        "id": "120f48ee-b284-4aa6-bf55-352b72f518bb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29a5d0b6-d06c-4a3c-bb23-84ef1de422e4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab0731c4-a11a-46e9-bde7-5b135f48c402",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "39c4db60-180e-400d-a44b-ef94e4186a16",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0155b99e-e9fe-45de-b001-c0367c2d9bc5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb0ca8cd-c862-4a43-b9fa-f58f84eea57e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 506.8122605363986,
      "responseMin": 6,
      "responseMax": 4255,
      "responseSd": 424.90272856098295,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669077947031,
      "completed": 1669078092372
    },
    "executions": [
      {
        "id": "9dbbca85-f366-4e79-b5fc-12c49abe3d11",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "df67b158-89df-407c-ab31-29bd1ef5f786",
          "httpRequestId": "6b7f30af-73c4-4e57-b295-7470ea55a22d"
        },
        "item": {
          "id": "9dbbca85-f366-4e79-b5fc-12c49abe3d11",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "51d6efc5-2c36-4f84-a427-acfac113d0d7",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 0
        }
      },
      {
        "id": "a87872c9-ff26-4b4a-9538-a99cb1812959",
        "cursor": {
          "ref": "bdb63445-5bfb-44ee-8e7e-efdb87bb5304",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6fc7d738-6948-4a13-9a39-52d8e5ab7ef0"
        },
        "item": {
          "id": "a87872c9-ff26-4b4a-9538-a99cb1812959",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "df53be9f-cbcd-4cc4-a272-f375a9405deb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "46bb1e16-0981-4c26-a421-6ada732105e0",
        "cursor": {
          "ref": "1675687b-4dd5-4bd2-b8af-4cf792a25cb0",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4bc10794-aec6-4241-b266-9c8948c74379"
        },
        "item": {
          "id": "46bb1e16-0981-4c26-a421-6ada732105e0",
          "name": "did_json"
        },
        "response": {
          "id": "dbc8e8bd-3a5b-463d-b30c-45d7c434a277",
          "status": "OK",
          "code": 200,
          "responseTime": 651,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8132432-a005-40e9-9cb6-484c6a03191b",
        "cursor": {
          "ref": "f2728241-b1ee-46e5-9ccc-b7a0bebbc352",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d23cbf36-aba9-4e6a-b95b-1bd6148a47eb"
        },
        "item": {
          "id": "f8132432-a005-40e9-9cb6-484c6a03191b",
          "name": "did:invalid"
        },
        "response": {
          "id": "aea115b8-c2b2-422a-8c1a-65033a627d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8132432-a005-40e9-9cb6-484c6a03191b",
        "cursor": {
          "ref": "f2728241-b1ee-46e5-9ccc-b7a0bebbc352",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d23cbf36-aba9-4e6a-b95b-1bd6148a47eb"
        },
        "item": {
          "id": "f8132432-a005-40e9-9cb6-484c6a03191b",
          "name": "did:invalid"
        },
        "response": {
          "id": "aea115b8-c2b2-422a-8c1a-65033a627d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348c1d41-2f8b-4461-a875-c3f8fc20be8d",
        "cursor": {
          "ref": "365db497-053f-4c37-a71b-4382bf35a20d",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1930f07d-8857-446e-976d-a080db216dd3"
        },
        "item": {
          "id": "348c1d41-2f8b-4461-a875-c3f8fc20be8d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3683f74b-8199-4555-b335-1b71a795624c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 590,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e988e7-4ee7-496b-afea-f5222fb73005",
        "cursor": {
          "ref": "dc668aff-121e-4713-8265-a7c6091e1b53",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "388a9883-f2f5-4ed7-b184-8c28b4d1dcc8"
        },
        "item": {
          "id": "58e988e7-4ee7-496b-afea-f5222fb73005",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "aa81e559-c69f-418e-ad07-bac62ac5efab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 492,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2b84ed-32c8-4fe8-a61d-015944020179",
        "cursor": {
          "ref": "dbf861b5-19c8-4743-b5b4-bc1bfe1527dd",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "061a1b37-80bc-4be5-b077-fcb712d05324"
        },
        "item": {
          "id": "4c2b84ed-32c8-4fe8-a61d-015944020179",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a608af4f-f9ee-4b6c-8680-87d1be5edf9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec55dc7-3bb2-4fb5-af36-1cd39294c4a5",
        "cursor": {
          "ref": "22c26ab0-d5a2-4343-b024-23052220f8c6",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f2c9e7d9-a1e1-4598-9dfb-93d14b486a32"
        },
        "item": {
          "id": "fec55dc7-3bb2-4fb5-af36-1cd39294c4a5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3077b951-a06c-46f8-856d-323d44a74023",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 523,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec55dc7-3bb2-4fb5-af36-1cd39294c4a5",
        "cursor": {
          "ref": "22c26ab0-d5a2-4343-b024-23052220f8c6",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f2c9e7d9-a1e1-4598-9dfb-93d14b486a32"
        },
        "item": {
          "id": "fec55dc7-3bb2-4fb5-af36-1cd39294c4a5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "3077b951-a06c-46f8-856d-323d44a74023",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 523,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890c5a36-26d6-4793-9c50-4e1dfa28724a",
        "cursor": {
          "ref": "94664d58-2c5d-4674-adae-600a507baf38",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "45f36f39-97c1-45b6-a404-b96aa601848b"
        },
        "item": {
          "id": "890c5a36-26d6-4793-9c50-4e1dfa28724a",
          "name": "identifiers"
        },
        "response": {
          "id": "4280f57d-d08d-4e4b-a1de-203d758138f2",
          "status": "OK",
          "code": 200,
          "responseTime": 719,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35def6b4-7172-49bf-9fd9-e81f335ba517",
        "cursor": {
          "ref": "9a17157b-c22f-4013-8929-ed4f3e6253c5",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bc29df0c-3fba-4603-b27c-9409de714e60"
        },
        "item": {
          "id": "35def6b4-7172-49bf-9fd9-e81f335ba517",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "28f64cd4-24ee-4790-ac16-75de364be81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35def6b4-7172-49bf-9fd9-e81f335ba517",
        "cursor": {
          "ref": "9a17157b-c22f-4013-8929-ed4f3e6253c5",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bc29df0c-3fba-4603-b27c-9409de714e60"
        },
        "item": {
          "id": "35def6b4-7172-49bf-9fd9-e81f335ba517",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "28f64cd4-24ee-4790-ac16-75de364be81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a2ccd7-4b1c-4f74-baa8-ce0bf80309c8",
        "cursor": {
          "ref": "e9303679-1560-4d29-ac51-03a3e5bcaa99",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4dd726f7-d04e-42b7-ba61-37817a585028"
        },
        "item": {
          "id": "66a2ccd7-4b1c-4f74-baa8-ce0bf80309c8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e4f1a283-05b5-42ec-bd60-787b4877c031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7583c18-e291-4246-af01-e0560900ffc7",
        "cursor": {
          "ref": "4c52de9e-c4c6-43fa-b9f9-4ad08c01ef62",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c353340a-dc75-415f-8440-148ed135726e"
        },
        "item": {
          "id": "d7583c18-e291-4246-af01-e0560900ffc7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cb43c9b7-8998-4dc3-b68d-0d3f6498db65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ca008b-65ad-4e53-8146-a8b259fb4c1d",
        "cursor": {
          "ref": "b0b90344-9562-430d-9ece-2f6063470415",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "52eeb784-7df5-4727-9f4a-39ba6f3796d1"
        },
        "item": {
          "id": "10ca008b-65ad-4e53-8146-a8b259fb4c1d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c76aa711-543b-4c6c-8d0a-b808acf0fb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e378e9-ee26-45f1-b0a5-8f1566b02d2d",
        "cursor": {
          "ref": "e63d78e6-6754-45f9-aef8-e385660cb8c8",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "17560101-388b-4739-a556-e19b82f1ff3c"
        },
        "item": {
          "id": "70e378e9-ee26-45f1-b0a5-8f1566b02d2d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3af2c78e-e0ad-416e-a28d-2034dc8e52b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15552e9-70c6-441e-998e-94b0520432e3",
        "cursor": {
          "ref": "6f046d3a-33c2-4382-b398-4539c998dc63",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1cf12611-4e74-40cb-86fe-510346f04bec"
        },
        "item": {
          "id": "d15552e9-70c6-441e-998e-94b0520432e3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "32ad4fde-c78a-4bcd-83a5-ee2866882795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998702d6-269f-41ca-a203-490d9ce63ee7",
        "cursor": {
          "ref": "3eb01225-1f57-4d70-af9f-35720defc1e0",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d7223b11-30fa-468f-9eb2-7640f2461fa0"
        },
        "item": {
          "id": "998702d6-269f-41ca-a203-490d9ce63ee7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1d32f4f5-346a-4ffd-a156-d836f389d931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c821e9-8337-4024-ba8f-39ce3d41180c",
        "cursor": {
          "ref": "8dc12f2b-3f4a-4fd0-935c-19e2c53ede2f",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d44df8b0-0621-4724-a834-9ee30c231b64"
        },
        "item": {
          "id": "63c821e9-8337-4024-ba8f-39ce3d41180c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7ef39a2f-24c5-4a6a-8ba4-64ea387bbc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d91986-d199-4e02-bdce-d6a33f2f513e",
        "cursor": {
          "ref": "860af189-43a3-4b1c-ae7c-78966f37d22b",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ff0fbd13-3e7f-419b-a114-8b601fa3c47d"
        },
        "item": {
          "id": "30d91986-d199-4e02-bdce-d6a33f2f513e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a56a6a69-7969-43bc-9d7b-8a887d6b61e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d6fe74-380d-49d9-aeea-218da43efffe",
        "cursor": {
          "ref": "2bc248a6-4a75-4794-b405-64402a1a1bd8",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "303909f6-f3ed-4ffd-854a-9c1340b2540a"
        },
        "item": {
          "id": "86d6fe74-380d-49d9-aeea-218da43efffe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fed528e1-dcab-4c9e-9d9f-99a8c2afbbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25eb833-eb01-4797-956b-64c6477fb399",
        "cursor": {
          "ref": "83154a70-4079-4a2c-9e17-3d67f49fd1f4",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c9e7b1ca-ffab-46b8-b26c-50c5f3a90698"
        },
        "item": {
          "id": "b25eb833-eb01-4797-956b-64c6477fb399",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cafcef29-254f-4bc0-824a-fc75d8ad6753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3729e00a-c8d4-47fc-92cd-5648ebfb39c0",
        "cursor": {
          "ref": "df12770e-0256-4e69-aa76-c6a306b498ac",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f0a2d1aa-d3dc-494b-bf19-d9e3a48faae3"
        },
        "item": {
          "id": "3729e00a-c8d4-47fc-92cd-5648ebfb39c0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "575519ae-071e-4241-8b1b-fd5d385976ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19af2b3-753b-482d-b827-3a96076ab822",
        "cursor": {
          "ref": "39ef1b6c-0f1b-4e94-a82d-5e8ed7761262",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d5362d6a-95c8-4d89-9dae-12ebd8e6b0d7"
        },
        "item": {
          "id": "b19af2b3-753b-482d-b827-3a96076ab822",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2a914b20-6de9-4a52-8583-cf054555c018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595e9a6d-bd68-4786-9918-b0d9608ae70a",
        "cursor": {
          "ref": "333cae1e-a627-49a0-84b6-9f7e28c77981",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "693590b1-1cf5-4234-8d36-6da354b1dac9"
        },
        "item": {
          "id": "595e9a6d-bd68-4786-9918-b0d9608ae70a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "916fde99-9dc7-47e6-b650-70a1101471be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1fc31d-af19-481d-bd06-79c382a94907",
        "cursor": {
          "ref": "dc7db4f9-ed10-4da4-bd42-e52b75ee14f6",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1189c82b-5c2d-4957-ad9c-91524b01d513"
        },
        "item": {
          "id": "7c1fc31d-af19-481d-bd06-79c382a94907",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "82eba8cf-9bb8-4092-bf9e-b5c9d3cb6685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef296c14-2e10-45e2-9c7c-5f2b9277e085",
        "cursor": {
          "ref": "54c7c70b-b0f7-4121-b3fe-1cbad7ffde74",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5814dc0f-4acb-493b-946b-22fa6303d1c2"
        },
        "item": {
          "id": "ef296c14-2e10-45e2-9c7c-5f2b9277e085",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "170f38ff-2b78-4a6e-8fb8-00d1ebe6775a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368903ee-eef7-4550-a526-9d67d778ea6c",
        "cursor": {
          "ref": "4fff8dc4-25ea-4b86-9ecd-f2056236547d",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e8752c9a-cc13-44ca-a534-d78662bb8c83"
        },
        "item": {
          "id": "368903ee-eef7-4550-a526-9d67d778ea6c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ec60dc7d-1233-49e5-90e1-29439c57612e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f027f984-0f65-4583-bdee-75c8253e5f5f",
        "cursor": {
          "ref": "0356b4aa-6903-4b16-9a9e-fe0476e3cdfd",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "69ea6671-fb03-4107-8f86-a678448dec1a"
        },
        "item": {
          "id": "f027f984-0f65-4583-bdee-75c8253e5f5f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f05063ad-687d-483e-a964-58f9d71c9f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe882bf1-a588-48f9-a9b2-9c28a999481e",
        "cursor": {
          "ref": "d0d92931-8ddc-4dea-8b59-a990360f8584",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c90e4955-0673-4895-95f9-b31ea3af9d16"
        },
        "item": {
          "id": "fe882bf1-a588-48f9-a9b2-9c28a999481e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f3cc0cb2-0caa-4caa-aeb8-101525d2380a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5256e3c7-5baa-43fe-9b54-7b854e0a8a85",
        "cursor": {
          "ref": "7ba31e80-6825-4b8d-813d-3c41a87b2b6d",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "481f13c0-3492-4b47-8b4d-6b02d8d33bd3"
        },
        "item": {
          "id": "5256e3c7-5baa-43fe-9b54-7b854e0a8a85",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f76eb64c-617c-4693-a39a-1020773bfb33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7324914-4da8-4910-a2c6-da9023696e51",
        "cursor": {
          "ref": "57e6239c-da5f-465e-94fa-029e82d3f371",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a9917990-27d1-4aac-96f1-338515011405"
        },
        "item": {
          "id": "d7324914-4da8-4910-a2c6-da9023696e51",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "63b50295-2257-4385-9b0a-1f729e8479ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db589bc5-b8fa-41ec-8bb0-76363d51da0d",
        "cursor": {
          "ref": "dfae2bd0-866e-42f0-9608-6a371f6f3651",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b41585f9-f940-47a2-947e-ab62085d53ac"
        },
        "item": {
          "id": "db589bc5-b8fa-41ec-8bb0-76363d51da0d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "949a76f8-f13f-4f30-86ff-3b1547739d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fc9ce1-4b9d-4c85-bc78-623258d59e0e",
        "cursor": {
          "ref": "ba9a1f3f-5386-45e9-a66b-729be1581b64",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e94e9387-e7c8-4fd8-941a-37eefaa0d05e"
        },
        "item": {
          "id": "07fc9ce1-4b9d-4c85-bc78-623258d59e0e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "50be2204-2cdd-457f-a6d4-7e2f92f19535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb75cf8-9c00-47f6-930f-65564c26dd2b",
        "cursor": {
          "ref": "9db20016-ec65-45ee-bcdd-11944a65471a",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3cc5f04e-fc9d-4570-a115-396af7835ccd"
        },
        "item": {
          "id": "ebb75cf8-9c00-47f6-930f-65564c26dd2b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6466d75b-0f55-4e31-84f4-f89e9b584224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac84e002-69bb-4553-9351-44a8235c68e0",
        "cursor": {
          "ref": "d309afd6-6e7d-4309-8d9d-bcd49a667452",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7ad81f28-6039-4178-951c-839b980932c7"
        },
        "item": {
          "id": "ac84e002-69bb-4553-9351-44a8235c68e0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f3cc6c09-0519-4c80-a7c7-c4b0d4004490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3523f07-24ae-4e05-abcd-567cf744121c",
        "cursor": {
          "ref": "6449b8b6-6071-4808-8599-92d449078742",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a2798e5f-aa9d-46ac-a50c-563a83ce2af5"
        },
        "item": {
          "id": "f3523f07-24ae-4e05-abcd-567cf744121c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "673efbbb-294e-4b71-bd2d-5b9ae55c42ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d00db4-fac7-45d5-9f1f-e15b6fb4831e",
        "cursor": {
          "ref": "bf1a10c9-0adf-4b48-b95b-01c12e9365ec",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "349a5a61-8998-46a1-ac61-8b597a33f5e1"
        },
        "item": {
          "id": "83d00db4-fac7-45d5-9f1f-e15b6fb4831e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7d423c6b-ce9a-499b-a26f-d9cc28b46d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbb5079-bb37-4e49-8c00-85a6fc37fedb",
        "cursor": {
          "ref": "c6eb2d2b-e820-44cc-9e5d-5ecf9c4df807",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c95d2a7a-b248-433e-8679-90b4e2d04e43"
        },
        "item": {
          "id": "ddbb5079-bb37-4e49-8c00-85a6fc37fedb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c9b8343b-df54-4425-9d9f-1fb2d4d8391f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ee9a7f-8c72-4777-8343-36d66a9c1456",
        "cursor": {
          "ref": "bb073736-efdc-4de3-85ad-c0adcae2df66",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "db782f1c-220d-4ee8-aa54-256e72f4a8ea"
        },
        "item": {
          "id": "b5ee9a7f-8c72-4777-8343-36d66a9c1456",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8533c077-490a-44a1-9f87-f7df5c7b266a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86345dd8-bf22-4cb4-a03a-63480a53c30c",
        "cursor": {
          "ref": "768b431b-1236-4a5a-b0ed-a3faceb11358",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "68727ca1-2d36-471f-b2db-c7cb463ea1b7"
        },
        "item": {
          "id": "86345dd8-bf22-4cb4-a03a-63480a53c30c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "eedd8127-9b91-4581-8614-3e2188cbc413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90659763-508d-4433-a2e5-4c00a5a2ca57",
        "cursor": {
          "ref": "7766dc62-d27d-44b4-8092-486518f3ed1c",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "428be969-5c61-42fa-bb87-44838ebcf2bc"
        },
        "item": {
          "id": "90659763-508d-4433-a2e5-4c00a5a2ca57",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "aeaaf2ed-a514-42aa-82f2-c7ece13e740b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800ec45f-d032-4889-b615-b560074c4d8a",
        "cursor": {
          "ref": "6a5355af-b0a8-4bcc-bc66-090d2aab892e",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d9e2f05e-9e5f-4c4e-82f0-788efa881e74"
        },
        "item": {
          "id": "800ec45f-d032-4889-b615-b560074c4d8a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2fa9abdf-5c1e-4508-8884-66f30c3f1e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adb4509-74ff-4b36-b395-4ed3e688d887",
        "cursor": {
          "ref": "246af683-42fa-4449-900f-92ee548c086c",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d384f829-96d1-4cf0-b93c-0a2dec20602c"
        },
        "item": {
          "id": "0adb4509-74ff-4b36-b395-4ed3e688d887",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5e639641-53e8-4114-ba10-d8646b5dea0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19070a56-d136-4de9-a8e2-5fc6223cbc89",
        "cursor": {
          "ref": "f0dcaf4d-8b91-4d2e-bf28-57325e957971",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7296f396-72d1-4f5b-8674-26ba7ee33102"
        },
        "item": {
          "id": "19070a56-d136-4de9-a8e2-5fc6223cbc89",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a508f947-d31e-4c5b-a90d-2b40c7c82fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c779624-414f-483f-8f61-d5374ed9a8a6",
        "cursor": {
          "ref": "8d13af25-d865-4f04-9db2-f499aee70d55",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "186df184-30cb-4f30-a283-31fd4a117384"
        },
        "item": {
          "id": "5c779624-414f-483f-8f61-d5374ed9a8a6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c4d302bb-a998-4e0c-bbaa-11992473edb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c1d5f2-c3c0-4047-842a-f7fae063aa38",
        "cursor": {
          "ref": "4e457f39-dee3-44e0-ac45-6404287a759a",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "345288f8-1b19-476c-8e56-0e9ee6b1642b"
        },
        "item": {
          "id": "91c1d5f2-c3c0-4047-842a-f7fae063aa38",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "20a95e69-67dd-46d1-a774-8fbb2e67fe2a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 582,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88639489-610f-4af7-84e5-ee8e9d324a34",
        "cursor": {
          "ref": "ea32b5a4-17de-4086-84fd-0169b22f4a6a",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "db7aa3ec-1de7-4178-8232-fce7e88a4f0b"
        },
        "item": {
          "id": "88639489-610f-4af7-84e5-ee8e9d324a34",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "89d0ac48-ceda-4b2f-afcb-5726d2b2429b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56af2fbd-2c30-4e84-bda0-50368d0efeeb",
        "cursor": {
          "ref": "f3aef9a8-9878-4dfc-9fb8-23067447e62d",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "395f1754-a3a1-4d5a-9ff9-2c3ddc6f1f7a"
        },
        "item": {
          "id": "56af2fbd-2c30-4e84-bda0-50368d0efeeb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fbe93f50-4f3e-4fd3-9120-42f4d90b1127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bddc857-7db4-48ee-86a4-f4f2141d1a90",
        "cursor": {
          "ref": "ca954774-a418-4c91-b3e8-80fc51ed3b70",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6d69631f-c111-4c99-9edf-e662e9ac364d"
        },
        "item": {
          "id": "4bddc857-7db4-48ee-86a4-f4f2141d1a90",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "77b937d9-42d8-4600-b0e2-6057d11a24c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc84d4ce-fb59-46d3-bfd1-6a25feb24d2d",
        "cursor": {
          "ref": "74bbfaaf-c85d-4d43-bef2-20c9e0b6f78a",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "86a36039-f6ae-4ff0-a284-1acb7530883e"
        },
        "item": {
          "id": "dc84d4ce-fb59-46d3-bfd1-6a25feb24d2d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cc22abba-c5cc-4e2b-92b9-f268c58f80f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c655bb-f42b-486c-9d74-55f744ee3c6b",
        "cursor": {
          "ref": "e6a32983-89f4-4bf3-bd14-b82101d36dd6",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "26ec7416-ce54-4b5f-8220-0bc5a4a745c6"
        },
        "item": {
          "id": "15c655bb-f42b-486c-9d74-55f744ee3c6b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8d7f3442-7292-4819-a66a-f4b0b0f04ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ce3eb1-6530-4112-8e10-353d4e2e8ebb",
        "cursor": {
          "ref": "b2edd715-3424-41c9-b20a-e733b190e012",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a6fe4b9d-3b3f-4d8d-9e78-2e77fc2fc029"
        },
        "item": {
          "id": "94ce3eb1-6530-4112-8e10-353d4e2e8ebb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c7cd462e-1f13-4f8d-93ed-dccf165fd196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ab04bc-5380-42f4-9afc-c8e6b47989c5",
        "cursor": {
          "ref": "14241a93-bc74-4ecc-8783-f5c3b8ca78ee",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ad66e2c7-bba9-4063-9bc3-7cdee1ee1b93"
        },
        "item": {
          "id": "d0ab04bc-5380-42f4-9afc-c8e6b47989c5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2206bb1b-cd37-4b73-8b4a-c872078f19e1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 582,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b99705-170c-4f14-a818-379df3a3390d",
        "cursor": {
          "ref": "66a9ace0-38ec-41eb-a033-87c961da4568",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "93f2ea88-73c8-4993-b2cf-862e1c43fe5b"
        },
        "item": {
          "id": "56b99705-170c-4f14-a818-379df3a3390d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d22744e8-22bf-4c6b-806b-7a8664f50271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e131b2c-5ebc-40f0-b5fb-1c9b4bee7d32",
        "cursor": {
          "ref": "04fc5794-60cf-4c09-a97c-cd0d4779b433",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "69f5e1f3-921b-4984-bf69-5252145eabbd"
        },
        "item": {
          "id": "4e131b2c-5ebc-40f0-b5fb-1c9b4bee7d32",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fac4405b-8b44-4651-abca-dcde31590340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2cb4a8-df77-4dba-b0dc-1e6960bd0395",
        "cursor": {
          "ref": "7df0f2ec-9bf7-4e85-a4a8-2cb51871bc12",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "58dca598-e4bd-4ef3-b2d3-42491b187a4c"
        },
        "item": {
          "id": "7b2cb4a8-df77-4dba-b0dc-1e6960bd0395",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3f7b3f9d-b8d1-45dd-bd58-c638cf18e616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56aecdd6-2072-4918-826c-4dcc5926bf2f",
        "cursor": {
          "ref": "7da30521-a7e1-4dc3-9ca9-edb1d92a0ad5",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "17bc17db-adda-4b2b-b8da-fa0130c28065"
        },
        "item": {
          "id": "56aecdd6-2072-4918-826c-4dcc5926bf2f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "73857f9b-ee3d-431b-a7e6-90e773e5e797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a359de-7c86-4909-8c43-421a0a3f73bb",
        "cursor": {
          "ref": "156bbf22-d29d-4072-be3f-062647e631c7",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "738f3315-9383-4b81-a484-256a66c79689"
        },
        "item": {
          "id": "a6a359de-7c86-4909-8c43-421a0a3f73bb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "db68fe1d-45cd-4d79-9fde-23e5c83f11bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b519df22-1c32-42f1-aa3c-3bc19cbaf0fb",
        "cursor": {
          "ref": "0e2bcddf-a877-486a-85c1-9665897ea355",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "de9994cb-b3fb-4ed4-9ade-6fb233e42583"
        },
        "item": {
          "id": "b519df22-1c32-42f1-aa3c-3bc19cbaf0fb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b1a38311-a97d-4193-84bb-b97387a89076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c948f231-72ba-4a89-b777-0d289abc3f45",
        "cursor": {
          "ref": "7051ba58-b5ba-4331-8a03-d39181069c65",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8e15a063-54a3-4a70-a257-c0aaea585df6"
        },
        "item": {
          "id": "c948f231-72ba-4a89-b777-0d289abc3f45",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "107d4666-fcac-4186-a3b5-ab14497e7a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3924db-4001-4e08-8db6-177efe3757da",
        "cursor": {
          "ref": "2a7e731b-5d69-4e26-ad9e-75a9f8344337",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f8fd671b-2570-4764-8b7f-c081f5f41f44"
        },
        "item": {
          "id": "5d3924db-4001-4e08-8db6-177efe3757da",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "854dc43d-e901-4ab9-95b7-6c7a7803d7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722b26a3-9ee8-4cc8-b6e4-208d647baf19",
        "cursor": {
          "ref": "a78e06b6-c400-4622-8d75-78c9e7aee43a",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a0bb8d8f-41f4-410c-a67a-a380d8b0f07b"
        },
        "item": {
          "id": "722b26a3-9ee8-4cc8-b6e4-208d647baf19",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4e60ea45-d468-48a3-a9ad-7ffbd5ddccd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fffe74a-c1e1-40ee-a03f-410d9b627f53",
        "cursor": {
          "ref": "8c816314-842b-46c6-8312-ae961619fe7b",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f10b9ac5-3f88-440b-b502-18d35544df8b"
        },
        "item": {
          "id": "2fffe74a-c1e1-40ee-a03f-410d9b627f53",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b9b5081e-6df6-4871-a2a1-7f341662a37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0fd832-d416-44cb-b9ff-bcf13334db76",
        "cursor": {
          "ref": "ecd32425-3961-448e-b151-d5637bbf2397",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cc008d6e-69b5-4039-b0ec-23becf1c7233"
        },
        "item": {
          "id": "dc0fd832-d416-44cb-b9ff-bcf13334db76",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2142c5b1-612f-4387-8453-d0ddb6fe1e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2efce63-6488-411a-92ee-905178aa298b",
        "cursor": {
          "ref": "4c89f5a9-ef28-4ef0-8333-6747df11932e",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2cd33063-00ec-43ef-bd34-a1e476bbce1d"
        },
        "item": {
          "id": "a2efce63-6488-411a-92ee-905178aa298b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "857d9fe1-482b-42d3-af48-e1a1e2a0d116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f85d759-1ab7-4ccf-9bdf-4008c1a90e5a",
        "cursor": {
          "ref": "75ef152a-f869-4b10-b1e3-a9a79de630b2",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "33908069-02bf-4153-b955-15280ebba9b4"
        },
        "item": {
          "id": "7f85d759-1ab7-4ccf-9bdf-4008c1a90e5a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3d6711e5-eac7-491a-af42-e1a79bd31af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886d8c41-75ae-41ac-b413-63306b5a1e29",
        "cursor": {
          "ref": "5320de53-c27a-435e-b628-785d30fb7a36",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dc5e553e-a81f-4f55-bfb9-f15aa7b16545"
        },
        "item": {
          "id": "886d8c41-75ae-41ac-b413-63306b5a1e29",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "063f7979-2aa0-4c28-8fbe-da766a8f4061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c97fba6-6eba-492f-a00f-a751878afa96",
        "cursor": {
          "ref": "2f97baec-66e7-4df9-b2bb-5e5adffc9d65",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "87fdd37a-619f-4144-9fca-b61ecade1e48"
        },
        "item": {
          "id": "4c97fba6-6eba-492f-a00f-a751878afa96",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ba82eac7-ea7c-4a6f-a607-4ab381f364bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4be1d9-1e86-4f2b-8c2f-45bc2bc7d56b",
        "cursor": {
          "ref": "3d21eace-6610-4b47-8b26-64ba57567b0d",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c6189ef9-bda3-4d61-a8d9-b0465e68b89d"
        },
        "item": {
          "id": "7f4be1d9-1e86-4f2b-8c2f-45bc2bc7d56b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bdcfe630-d4fd-4dea-8aa5-549b8b409b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e268e62-b47e-4dc8-8946-2dc3590a8f3e",
        "cursor": {
          "ref": "ffca41df-d680-4656-9184-43f2fb6bbc8a",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "01fc089b-6508-4080-9581-d24062ccdfab"
        },
        "item": {
          "id": "5e268e62-b47e-4dc8-8946-2dc3590a8f3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e7b1f224-f1d3-4fc3-9f2b-50ebd351afc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebd7eeb-e0c9-4e5b-be3b-17ffd8cb8242",
        "cursor": {
          "ref": "e149cd3a-d8e8-41ff-b552-4ba3aa9ac0ba",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b03f116e-bac2-492d-ad69-0cd0b6d8dcd5"
        },
        "item": {
          "id": "4ebd7eeb-e0c9-4e5b-be3b-17ffd8cb8242",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3aa59511-0d46-400b-9876-e4d683bcbbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49cb73d-a497-49b1-971c-534c02ec6fd6",
        "cursor": {
          "ref": "05885255-e6e4-4d22-8d60-b2f344b27ec6",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "19068087-f3e3-406f-ab7a-fc42e99d1668"
        },
        "item": {
          "id": "c49cb73d-a497-49b1-971c-534c02ec6fd6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8316b49a-e477-496c-90e1-49095b70ddae",
          "status": "Created",
          "code": 201,
          "responseTime": 2171,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "62ce9425-3f29-4d2e-9b7e-2641e28df073",
        "cursor": {
          "ref": "d53667d0-6c6b-4a2a-be4c-5502a371eb97",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f7bca78b-91d4-44f2-868f-b069186c3ef6"
        },
        "item": {
          "id": "62ce9425-3f29-4d2e-9b7e-2641e28df073",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "00c7bf77-a257-4bc9-9595-130d327fdba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a951724-83fe-4902-a4e9-fb3f7dfbf9ee",
        "cursor": {
          "ref": "87649ac8-8bed-4714-a2c1-fa67b2a76a26",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "23977abb-22fb-4625-baf7-371f91f67382"
        },
        "item": {
          "id": "6a951724-83fe-4902-a4e9-fb3f7dfbf9ee",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b28c2676-137a-4d62-b161-e608c93ba984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58265106-b9a5-45c9-a847-855fc27ecdd9",
        "cursor": {
          "ref": "4f2dd4dc-7f50-4d8b-8dc1-216ffc6c46c1",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4284f9b9-b606-4bca-a793-fdf048b31165"
        },
        "item": {
          "id": "58265106-b9a5-45c9-a847-855fc27ecdd9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2c63c6c7-39cb-4a10-99e6-63984dc88414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e618136f-3aa3-4cad-b4f6-d25924e728bb",
        "cursor": {
          "ref": "aa525683-ef13-409b-97fe-2b9d343fcb91",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f3fc414e-7f18-43a6-97c7-7faab829b04c"
        },
        "item": {
          "id": "e618136f-3aa3-4cad-b4f6-d25924e728bb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e2d5c9e3-2339-4174-a59e-1e5659581c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38e6bce-01e6-487b-8800-49282e6f9874",
        "cursor": {
          "ref": "5545fd21-c845-454a-b511-b17ff000d2c8",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e66163d4-41ba-443e-b047-80795c571511"
        },
        "item": {
          "id": "c38e6bce-01e6-487b-8800-49282e6f9874",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d140de10-7362-49c8-bf1d-8dfaef9af821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb6a5d4-9fcc-4f0e-9a58-6545ca06a033",
        "cursor": {
          "ref": "ba2bf0eb-7182-48ca-a677-9647bc16e2f9",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "85d05add-0b6f-449c-ad7f-cb53dd10a7a6"
        },
        "item": {
          "id": "acb6a5d4-9fcc-4f0e-9a58-6545ca06a033",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "74f9c817-9f19-4fee-8365-3b92fb4b4e95",
          "status": "Created",
          "code": 201,
          "responseTime": 3629,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "d3960d2a-2bf0-4191-8400-768f36fe8373",
        "cursor": {
          "ref": "762da1bc-7b36-4100-9f96-a060b906b87f",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5318a9b0-1e09-48f8-86fa-6ba4b0047117"
        },
        "item": {
          "id": "d3960d2a-2bf0-4191-8400-768f36fe8373",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "586a126c-f19d-43cb-a486-eefd58cb9fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2976e964-544b-4068-ad46-a36c9e0aa00a",
        "cursor": {
          "ref": "75fe1811-3791-41df-80e0-36dc65bec73c",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3b515f83-64d8-48c5-ba59-fd9f1a4aa4c6"
        },
        "item": {
          "id": "2976e964-544b-4068-ad46-a36c9e0aa00a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "44a5d0ca-cfa7-431a-8e1c-1729e7d62e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5c1e99-9528-41ca-9331-9a5a2a8797cb",
        "cursor": {
          "ref": "10d23650-5ef2-44fa-ac88-0b085640b423",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2b2d0e70-0a06-46e7-9216-13422d6557c5"
        },
        "item": {
          "id": "8e5c1e99-9528-41ca-9331-9a5a2a8797cb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c32d2ad6-c282-4725-b633-0c8ddc42a2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1575e7-91e3-4744-88de-c8b2cbd81dd0",
        "cursor": {
          "ref": "e323a5f1-df5d-4d0f-abc1-853d5c5f3efa",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f2e390fa-d996-499e-8a48-6af2ea69d75d"
        },
        "item": {
          "id": "7d1575e7-91e3-4744-88de-c8b2cbd81dd0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a6b48374-2886-4802-84de-d699c234f85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aea0495-613b-4ab0-8f25-b1929acdc2ac",
        "cursor": {
          "ref": "c3a41b61-85df-4a4c-b0b4-f21d36915c79",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1c169cdb-30f0-4982-9c6e-b2f4e94031e1"
        },
        "item": {
          "id": "7aea0495-613b-4ab0-8f25-b1929acdc2ac",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "92739dac-3aa6-4262-9481-9adb6ba8bbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b81280e-3050-4045-aee8-cb525faa39b5",
        "cursor": {
          "ref": "086314da-a957-49d0-b8cc-8cf2d0cd5410",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2637fd54-3d7d-470f-a82e-910aad3e90d1"
        },
        "item": {
          "id": "5b81280e-3050-4045-aee8-cb525faa39b5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "37ad453b-d90c-4936-a63b-a77b7552d141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c99e78-b991-4079-84db-4518a0bb21ae",
        "cursor": {
          "ref": "d6844299-0490-4e2e-b634-553942222132",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a2b23249-def5-4e02-a340-fb8d150514d0"
        },
        "item": {
          "id": "a1c99e78-b991-4079-84db-4518a0bb21ae",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2555e58e-d046-4ae8-8ce2-cfa2925aa3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b857d3e-62e2-4f16-b02a-ac858213d804",
        "cursor": {
          "ref": "dac1a2f3-6944-46fa-a811-6d00e0a0702f",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "88dfe89c-5748-48e6-92ae-3a59168eb06f"
        },
        "item": {
          "id": "7b857d3e-62e2-4f16-b02a-ac858213d804",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1605c4b3-6cbe-4dd2-82d8-8680d4b995d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b357c0c6-f59a-48fb-9fb0-9c92801a9fcb",
        "cursor": {
          "ref": "8926f6d7-a49a-4f6b-af93-5333d2ce1a7e",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6dfc17e3-db61-4752-be6c-ecfc8c545e6d"
        },
        "item": {
          "id": "b357c0c6-f59a-48fb-9fb0-9c92801a9fcb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "82a323af-7d65-41d9-9566-71ca24134179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c934c59e-8ecb-40fa-8bae-330d3dbd21e1",
        "cursor": {
          "ref": "f47f08a6-0b4c-4668-bec9-3ca218566af2",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8e34ba1e-3506-4d38-b327-1459b9211a33"
        },
        "item": {
          "id": "c934c59e-8ecb-40fa-8bae-330d3dbd21e1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b3639309-7cf5-4a22-9bca-7655c75d8a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ce0898-61d4-4643-8939-7c9f4e26736e",
        "cursor": {
          "ref": "a14ae2ad-27c7-4e75-b0a4-076463ec6929",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "98e7f3f6-8532-40cd-995c-18decd6abbc2"
        },
        "item": {
          "id": "c3ce0898-61d4-4643-8939-7c9f4e26736e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d39b5da3-f78c-48e2-a202-a1df5cd41a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c16e43-ad64-40ad-8f79-a3b6527f30a5",
        "cursor": {
          "ref": "411f5159-8465-4bec-b230-7f779cbb7ba0",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b4c88bc5-2ab8-4be8-b88e-4983fa1d075c"
        },
        "item": {
          "id": "70c16e43-ad64-40ad-8f79-a3b6527f30a5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fca3dc62-7da8-400f-b3d2-0147029406d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caaf398-a7ce-48a3-875a-ad6a5dd239f9",
        "cursor": {
          "ref": "896f6436-128f-4870-858c-be15b9c640e7",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7d352e98-e567-473d-b6ab-c00d5e5d621c"
        },
        "item": {
          "id": "7caaf398-a7ce-48a3-875a-ad6a5dd239f9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9229399f-f198-41f6-b66f-25f99e40f8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b7fedf-aab3-4fe0-9f49-226c609267c5",
        "cursor": {
          "ref": "633abeea-0e69-493c-b37f-351b6c899fbe",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e5f152ef-7f82-4ef0-84be-f5dd5d2f0922"
        },
        "item": {
          "id": "a7b7fedf-aab3-4fe0-9f49-226c609267c5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3000f65b-6691-41c9-93d0-37f23ed43982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935907d8-b07b-414a-a9be-05cc155aa191",
        "cursor": {
          "ref": "3f7ddd70-5f35-4998-b531-228520765c72",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d6dd9107-0c68-4e57-974c-7e5efb93cdcd"
        },
        "item": {
          "id": "935907d8-b07b-414a-a9be-05cc155aa191",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "00b05225-d2ca-416a-9aa6-15a8d1c44674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de36479-0bd2-4bd6-9469-631be374632e",
        "cursor": {
          "ref": "6ddadf66-3bd6-4532-89bc-f51f083b1082",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "37f1f38b-36cb-4782-88d9-2605ea115aee"
        },
        "item": {
          "id": "8de36479-0bd2-4bd6-9469-631be374632e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "de53a7f9-bcf6-41ba-adaf-d6473312c4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d0750c-55c9-411a-ac97-69f433dd0ef7",
        "cursor": {
          "ref": "0c63be0e-dd35-40f8-b955-0eb021a61fa6",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1c2411ac-1cd5-44e6-bd92-3effa6d6d0cd"
        },
        "item": {
          "id": "c6d0750c-55c9-411a-ac97-69f433dd0ef7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "65ac5434-a111-4f1b-a350-bffcc90ce548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cdc315-7ae6-4c60-b4a3-0355ce115ad3",
        "cursor": {
          "ref": "98bfc9cd-6237-4c6d-a677-05f44e89bc59",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "79e887ed-cb7c-4f47-85f1-42b6a4d7e98e"
        },
        "item": {
          "id": "a6cdc315-7ae6-4c60-b4a3-0355ce115ad3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0927ac27-4cda-4425-b3ff-b2a19543933e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3b5e45-ee33-4d47-83eb-c52ae56d0c0b",
        "cursor": {
          "ref": "9acb15a7-b72d-4c61-89f5-577bd85dadeb",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f933f2dd-db58-4588-995e-dc12f663d411"
        },
        "item": {
          "id": "ab3b5e45-ee33-4d47-83eb-c52ae56d0c0b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c829e0ed-d5c1-4d74-b53a-4dd6c83c1772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa402ee3-4c77-4124-a6be-1bb7e289e78c",
        "cursor": {
          "ref": "88de9778-3dad-4939-bccd-dcc9595d544e",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5fa0388b-b050-4e7b-b40b-1776252c4f63"
        },
        "item": {
          "id": "aa402ee3-4c77-4124-a6be-1bb7e289e78c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6f76eae4-2c26-48c9-b258-9768c731cf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b0a13a-22a7-48f9-b68f-2e4db3f6fef6",
        "cursor": {
          "ref": "c2fb68ef-d99b-430f-a846-691db24670c9",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "db9b3f9f-bdb6-4eaf-aee6-f8ab4c22de99"
        },
        "item": {
          "id": "44b0a13a-22a7-48f9-b68f-2e4db3f6fef6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6b4ca8b1-214d-4ba9-a471-76d1d965aa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac21325-f3ff-4de4-b299-f2620b5631ba",
        "cursor": {
          "ref": "b88d9e85-f6f7-4d57-9788-27e0cebf936a",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1cbfd88c-adc0-4c71-a0ee-066aebf132b3"
        },
        "item": {
          "id": "4ac21325-f3ff-4de4-b299-f2620b5631ba",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3d75ec55-8871-4985-bd8d-1f89a0eab7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199d590f-7997-42ac-b6fd-a42397a573d7",
        "cursor": {
          "ref": "71c04507-283c-4675-822a-6e3d8ca69516",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e3b535fb-610d-4770-8e72-26c72cf5435e"
        },
        "item": {
          "id": "199d590f-7997-42ac-b6fd-a42397a573d7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "787b5962-70ea-414c-8eaf-c199ab417d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58bf380-1f03-4405-ac28-6250780f4984",
        "cursor": {
          "ref": "3f3c405b-ea99-4149-bbf9-11c0fbc4303f",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "938e05d5-88c9-41a9-9170-4c1947da9364"
        },
        "item": {
          "id": "d58bf380-1f03-4405-ac28-6250780f4984",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ffa4e9d1-c401-4c18-9750-ffddd6f6da69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1e4d0a-44be-48b2-a434-0039b1f26728",
        "cursor": {
          "ref": "813d5c3d-d694-4642-9dd2-ad4650d809ca",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "450b6b05-10ab-40c4-81a1-c4794270caf3"
        },
        "item": {
          "id": "7f1e4d0a-44be-48b2-a434-0039b1f26728",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "32286bed-8f92-4032-bd9a-f1be8515bd9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf1991b-2809-4a61-9892-8cbf71e43fb5",
        "cursor": {
          "ref": "7650ca18-2bf8-4cb7-b050-8955662d537f",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b783e658-fefb-4f5a-a4ee-993cab7b2f94"
        },
        "item": {
          "id": "2cf1991b-2809-4a61-9892-8cbf71e43fb5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c75843de-3a93-46d2-a111-06ec042553f7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 563,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9f7da0-09f9-4440-b5b4-82e7a853440c",
        "cursor": {
          "ref": "08290e68-d429-47f7-8d2a-658460015e47",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6acdf07b-582e-4d60-99d7-dbd903f2c42d"
        },
        "item": {
          "id": "ca9f7da0-09f9-4440-b5b4-82e7a853440c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8db9c85b-8cee-48c8-ad09-cf2c85919ec7",
          "status": "Created",
          "code": 201,
          "responseTime": 2055,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "f7cfbd39-0ac1-4eb3-ae90-d06936d6056a",
        "cursor": {
          "ref": "241d803a-6efa-458c-9394-aaff47085d64",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "20a1411e-f125-4f63-b4c1-4b82c9e1aa47"
        },
        "item": {
          "id": "f7cfbd39-0ac1-4eb3-ae90-d06936d6056a",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "49442803-5970-4c78-a077-f31ab7d3213c",
          "status": "Created",
          "code": 201,
          "responseTime": 2194,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "c34983a8-617c-4bec-96d8-c3ae3d2b2be5",
        "cursor": {
          "ref": "ba83c678-9802-43bc-b619-4fa3b4e2b612",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9842f843-cab8-4386-9651-c728674fcbda"
        },
        "item": {
          "id": "c34983a8-617c-4bec-96d8-c3ae3d2b2be5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2a34e656-296a-472f-a269-13fcbd32b8c8",
          "status": "Created",
          "code": 201,
          "responseTime": 2071,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7219877e-6740-4e6d-952f-e28ca3c265d7",
        "cursor": {
          "ref": "33141ed9-436a-4db7-a4e1-67e8ed993677",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f12cb974-4d0e-4fc9-9fe3-ed88f3f5fb2c"
        },
        "item": {
          "id": "7219877e-6740-4e6d-952f-e28ca3c265d7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6ef4d8c2-ac9f-4dc7-98cb-49227ccd684e",
          "status": "Created",
          "code": 201,
          "responseTime": 2108,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4f7cd3aa-2fd3-4b8a-ae61-5b5a07e95629",
        "cursor": {
          "ref": "a66e3026-61ef-433a-aad8-c2084bb20b14",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b3632e73-e439-44e7-969e-685cbb549eb6"
        },
        "item": {
          "id": "4f7cd3aa-2fd3-4b8a-ae61-5b5a07e95629",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1cb30cc3-c0a8-48a5-b425-5b15bf742847",
          "status": "Created",
          "code": 201,
          "responseTime": 2192,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "603571fe-ff21-4bb0-bb5c-79a26737c368",
        "cursor": {
          "ref": "341beca0-0c29-4d0d-9273-58d527fe9bb2",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7a0033d8-cdd7-4fae-9670-9e7e058b1336"
        },
        "item": {
          "id": "603571fe-ff21-4bb0-bb5c-79a26737c368",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0cbbffdc-51af-4b62-99ee-632536236f25",
          "status": "Created",
          "code": 201,
          "responseTime": 4255,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "a9b684f6-ee43-4a9f-9db5-1fa481986476",
        "cursor": {
          "ref": "2c3bc8a6-cfc6-46cb-8a04-01e1c3f2d65c",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5a7436a8-b5f1-4236-8997-e509e8dcb259"
        },
        "item": {
          "id": "a9b684f6-ee43-4a9f-9db5-1fa481986476",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a3be4948-ed63-4473-a5ef-adfbf19b1fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1110,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b684f6-ee43-4a9f-9db5-1fa481986476",
        "cursor": {
          "ref": "2c3bc8a6-cfc6-46cb-8a04-01e1c3f2d65c",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5a7436a8-b5f1-4236-8997-e509e8dcb259"
        },
        "item": {
          "id": "a9b684f6-ee43-4a9f-9db5-1fa481986476",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a3be4948-ed63-4473-a5ef-adfbf19b1fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1110,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9148370-b8c6-4e11-831b-59a04a40eebe",
        "cursor": {
          "ref": "7e66f9f9-8333-4864-adb9-2d0b98d23745",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "96681560-f6c6-40d4-9d40-7a48c68bbb43"
        },
        "item": {
          "id": "d9148370-b8c6-4e11-831b-59a04a40eebe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9a1f0ae5-9369-4dd5-a368-658b423a0508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867bfb85-eb18-4853-a12a-a9a225a56b7d",
        "cursor": {
          "ref": "0d8a4fb9-7531-463c-8fee-20d2501be748",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cd048f4f-9a02-4b45-ad64-adb7569d6833"
        },
        "item": {
          "id": "867bfb85-eb18-4853-a12a-a9a225a56b7d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "db6963b7-1c47-4ab3-b7e3-d670fb65ee19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0566895e-27f9-4784-a1cd-85e5f2e944f0",
        "cursor": {
          "ref": "1d30e850-d943-4a64-8bd2-80c5808f7be7",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bf855656-69fa-46e4-99d9-eca62e73b8be"
        },
        "item": {
          "id": "0566895e-27f9-4784-a1cd-85e5f2e944f0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "46095e96-f072-4946-bfcb-c1680c7e83d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d0d6dc-56ae-49ba-bd3e-ece5d5875346",
        "cursor": {
          "ref": "dfbfb28c-f9b7-4405-90c5-5f0e2f474892",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8b82e1f1-7ea7-40af-98aa-1adc074b8216"
        },
        "item": {
          "id": "f5d0d6dc-56ae-49ba-bd3e-ece5d5875346",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "27a7005f-5729-4547-b23b-f16cc63e6e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad137a9d-3095-47a0-b58e-d8916f88077d",
        "cursor": {
          "ref": "6756880e-356f-4b3e-a254-369ea09cf335",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "563a29f1-c319-435f-955e-534ebdad3377"
        },
        "item": {
          "id": "ad137a9d-3095-47a0-b58e-d8916f88077d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9d173762-e7fe-44a7-afba-11b9cd19002e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334fffef-3413-48b7-8927-3294d790116f",
        "cursor": {
          "ref": "9c3494d7-848f-4261-8a17-e296edbe02d5",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "77fdbc03-96a7-4ae5-ac77-dd137a0044ae"
        },
        "item": {
          "id": "334fffef-3413-48b7-8927-3294d790116f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "22ff842c-6f95-49b8-b7bc-0d93f2310b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7da56a-1b7a-4e12-9340-ca0ef35fd802",
        "cursor": {
          "ref": "ba2a21db-14c9-4b60-88ad-7a361590e2bb",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "329dfa82-68f5-45a0-a22f-367176ca7234"
        },
        "item": {
          "id": "7e7da56a-1b7a-4e12-9340-ca0ef35fd802",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "17a61b68-8078-464c-a809-9cbb8fda4822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424c6446-2a2a-4ad4-8cfa-650e3d7b26ce",
        "cursor": {
          "ref": "a43edfd9-0bb1-48ae-bbd3-274b044ee2ca",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b2e9cca7-f6c9-4ebe-9c6a-e5d36524e5c3"
        },
        "item": {
          "id": "424c6446-2a2a-4ad4-8cfa-650e3d7b26ce",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b271b827-9a0e-4408-9a8d-666baddfa4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1b1538-3236-4c2a-9309-75737bca8251",
        "cursor": {
          "ref": "3dceb5d2-09a7-4ed1-9bab-635072e3bd5d",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b1e39ce0-d6c8-4edb-929d-741b9f1715d0"
        },
        "item": {
          "id": "2e1b1538-3236-4c2a-9309-75737bca8251",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3586b6fe-7e59-436d-8933-28391aa167fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f35008-5d00-4149-b080-5c0e29b34e2e",
        "cursor": {
          "ref": "5eb3907e-27f3-40fa-b635-64a7290a1939",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c8360c0b-ae80-45f1-927c-a299dd06684b"
        },
        "item": {
          "id": "d9f35008-5d00-4149-b080-5c0e29b34e2e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a73f5517-cca7-4b81-a9cc-741bf15decd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb3988d-3e3c-4e70-8b7d-099221eec063",
        "cursor": {
          "ref": "57ecfb7b-8055-4192-a796-56ca639590fc",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e1e62d55-10dd-48db-b135-e0400f953709"
        },
        "item": {
          "id": "ffb3988d-3e3c-4e70-8b7d-099221eec063",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "98716a97-bca5-4ded-b1ee-4735d56879e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712b56ae-aef9-4b48-baa6-3da9582c734f",
        "cursor": {
          "ref": "f15545bd-78cf-493c-be5e-8f96d27986b5",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d8531f86-c12c-47dc-8dd3-e58dc057f379"
        },
        "item": {
          "id": "712b56ae-aef9-4b48-baa6-3da9582c734f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7188452f-1b38-4c44-9b5c-06a4feffb43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cb582d-62a0-481c-8488-9f067016684b",
        "cursor": {
          "ref": "eaeab18c-5839-436d-81a3-b1ade5ccec2b",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f885c052-6d4b-498d-a8ac-9cd21eed4ba1"
        },
        "item": {
          "id": "94cb582d-62a0-481c-8488-9f067016684b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d46efca7-24b9-463d-981b-f304d1cb1b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dc6e51-d6a0-48b0-887e-5c08a487c668",
        "cursor": {
          "ref": "ce3ddf00-5a4b-48f1-b7ad-d28d44966f50",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c4fe667b-0b34-4a7a-99b8-f474b71ded91"
        },
        "item": {
          "id": "60dc6e51-d6a0-48b0-887e-5c08a487c668",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8d260f97-95bd-43eb-91ae-a84c427c2b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293d6c61-f9e1-4a01-947e-d4459f799418",
        "cursor": {
          "ref": "16110ef9-4cc1-4384-9a9f-cc8573001d2e",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fa17b80c-81b9-42fe-80bd-3dbe49f54be8"
        },
        "item": {
          "id": "293d6c61-f9e1-4a01-947e-d4459f799418",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "09897145-571c-4539-921d-6e797c7cab25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751618e1-4ef1-40f7-8d7b-85f21bcde376",
        "cursor": {
          "ref": "eac9dcbf-eb2b-43c7-a9c5-4e40bd6dbd58",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3ea32f15-0c3d-47f6-a7ab-4030ef4d619e"
        },
        "item": {
          "id": "751618e1-4ef1-40f7-8d7b-85f21bcde376",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1467824d-ac53-457a-a6f0-13f2381c2be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacd516b-9df1-4c21-ade9-310de04f5db7",
        "cursor": {
          "ref": "a44ee511-2607-4628-a4d9-3aff70f6d050",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b19a1c0f-d00f-4812-9c24-782b44ccd085"
        },
        "item": {
          "id": "eacd516b-9df1-4c21-ade9-310de04f5db7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6429cf3d-49da-403c-a9b0-0c7150466d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bd5deb-1fc5-4651-bbf8-ce041b3e70e5",
        "cursor": {
          "ref": "9831a9b9-aae1-49e0-a143-82e97ad56877",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0fbe3f8c-a656-4c7d-b081-a85717e551f6"
        },
        "item": {
          "id": "06bd5deb-1fc5-4651-bbf8-ce041b3e70e5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b811db9f-a5c3-433d-832f-c3ba2ff5848a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ec7b9e-2786-4a1b-99f2-f4bee84fbdce",
        "cursor": {
          "ref": "56e79f67-5937-4a7b-8c6e-889f48f9e922",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ac5640d2-62f1-477c-b52b-00f53d55cadc"
        },
        "item": {
          "id": "a4ec7b9e-2786-4a1b-99f2-f4bee84fbdce",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "94f57e9c-4604-4014-9543-3f37db5e6f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151d3d9b-955b-48bd-9521-41caae77e91d",
        "cursor": {
          "ref": "6906a014-6962-4014-973a-54e675ec1c77",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e7447057-0d2c-46b6-963f-810f335673b9"
        },
        "item": {
          "id": "151d3d9b-955b-48bd-9521-41caae77e91d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "830bb27f-1eb9-4671-bd4f-8173f3fa0928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b7f8c6-3da8-40cb-a6b8-480c427b10bc",
        "cursor": {
          "ref": "8f6683c2-10b3-4359-b391-84bfbf0bf990",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "951678a4-9dac-4187-8b4a-6e0d614fa1e5"
        },
        "item": {
          "id": "f2b7f8c6-3da8-40cb-a6b8-480c427b10bc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ae3f4a02-f812-4763-b056-ab378cf4f548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd33fd8-d496-4c68-9961-96d26783a873",
        "cursor": {
          "ref": "bac4576b-afc8-4fb7-b3ba-9f6cdfa6c223",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "06b72738-c668-497f-bc29-624b36581de9"
        },
        "item": {
          "id": "1dd33fd8-d496-4c68-9961-96d26783a873",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a800ee2f-d5db-4f6d-b1a4-5734f0a731c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2970643-b9ad-4da2-8d0c-239887d50fac",
        "cursor": {
          "ref": "225676d7-ae77-48f8-a01e-c0b48c141cf3",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f9d7beea-c380-4ea7-bc4f-089f1aa5e4b7"
        },
        "item": {
          "id": "b2970643-b9ad-4da2-8d0c-239887d50fac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "932a3912-2db9-4530-bfcf-73c9af363469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda895c5-642f-48af-9a33-3df3f4f8b55d",
        "cursor": {
          "ref": "2fb165cf-fe7d-4820-86d4-5b207eb7bbc5",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ccb9c6c4-2288-43f3-af82-b4815333fb88"
        },
        "item": {
          "id": "bda895c5-642f-48af-9a33-3df3f4f8b55d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3fe7f8fc-d0cf-41b6-b03a-0c34180efd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1847fc3f-13ed-4b81-a68b-d8a92aebad80",
        "cursor": {
          "ref": "900a05be-d6a8-4543-acdf-7a39815d32ed",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "90b049ac-948d-4f8b-bfae-4f97cb68d407"
        },
        "item": {
          "id": "1847fc3f-13ed-4b81-a68b-d8a92aebad80",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a1fe602c-2747-43d4-90fb-3390e1266488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed5ee43-5567-4a43-b386-8cf0433e6d4a",
        "cursor": {
          "ref": "9b49f830-0a9e-4d4e-bb68-8e3050c3c7f7",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fa5be5b5-c415-41bc-a7db-81086560e0aa"
        },
        "item": {
          "id": "8ed5ee43-5567-4a43-b386-8cf0433e6d4a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a691d15b-8bc3-4441-a896-c0ed40924a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fb30c2-d37c-4a59-99f1-d6e369e75aaf",
        "cursor": {
          "ref": "900184e2-ac42-4397-ba9c-6642d38b6da9",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1d4266fa-d21e-4b66-bc2b-22de6cc80658"
        },
        "item": {
          "id": "c4fb30c2-d37c-4a59-99f1-d6e369e75aaf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "de4f6de2-e9df-4523-8a4d-699327e51a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0375def-566e-4614-9bf2-17dd5b88b438",
        "cursor": {
          "ref": "92702aea-e7d7-4704-8f14-f9d6e94a6419",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a924c462-1ed0-4dba-b27e-29cb4e966ce3"
        },
        "item": {
          "id": "f0375def-566e-4614-9bf2-17dd5b88b438",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b1efd271-4326-4341-81d9-4c9e3278c4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08218c87-84c7-4a31-800a-6e8e166f1624",
        "cursor": {
          "ref": "18c9c260-cbcb-4b32-a04e-edecd44203a3",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c483dc48-b62e-405a-9f67-22be65745493"
        },
        "item": {
          "id": "08218c87-84c7-4a31-800a-6e8e166f1624",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "56ded601-e1b3-4cc6-94b1-4874cdccba72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc235144-3b1e-42e6-90aa-76d95031fe56",
        "cursor": {
          "ref": "16e8a3ce-ca03-412a-b2ac-cebd0b2a0f8d",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "33029709-13d2-4aba-8d5c-557402752218"
        },
        "item": {
          "id": "dc235144-3b1e-42e6-90aa-76d95031fe56",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8de1f884-a1ad-46c7-8695-2f85ff47c605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de92246-0713-4e9c-96db-f076750be8a3",
        "cursor": {
          "ref": "3252d993-0de9-4a9a-abcc-a267d59c8860",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cda516f4-37ca-4388-b092-2f5058acd3c6"
        },
        "item": {
          "id": "6de92246-0713-4e9c-96db-f076750be8a3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a4a33014-6e2c-4131-a069-82b36b74e43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb946da-5c81-4d5e-bdbc-4e9ad3d7eed2",
        "cursor": {
          "ref": "256b9f9a-c9e8-454f-9917-4a0ab9e45537",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b27e2708-dd90-42ac-8b68-a9cd7de7d2d8"
        },
        "item": {
          "id": "afb946da-5c81-4d5e-bdbc-4e9ad3d7eed2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "76c72607-fabd-4f2c-8317-df1c10580804",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efe3814-e441-47ea-8293-c5e998a780b8",
        "cursor": {
          "ref": "f9f1e438-1080-420e-acf6-3c94a320720e",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9e3f9694-030a-4fbe-8b9d-aa603baf92e4"
        },
        "item": {
          "id": "5efe3814-e441-47ea-8293-c5e998a780b8",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e695db86-69c5-44de-b792-5b9236cbe07f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 551,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f82cc7-3cc5-4fd4-83fd-1cee20625aa9",
        "cursor": {
          "ref": "c000e32a-eb9d-412a-81c2-20833ee9d99c",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d7e470c4-6727-4138-a580-9792909dfe4a"
        },
        "item": {
          "id": "07f82cc7-3cc5-4fd4-83fd-1cee20625aa9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e8ad5243-a889-400e-acfe-d7e071193656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f82cc7-3cc5-4fd4-83fd-1cee20625aa9",
        "cursor": {
          "ref": "c000e32a-eb9d-412a-81c2-20833ee9d99c",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d7e470c4-6727-4138-a580-9792909dfe4a"
        },
        "item": {
          "id": "07f82cc7-3cc5-4fd4-83fd-1cee20625aa9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e8ad5243-a889-400e-acfe-d7e071193656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66d578e-9a06-47c7-8e9a-bc66a12843a3",
        "cursor": {
          "ref": "b2330b1a-1a87-4153-80d2-9602bc404792",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c26e10b9-8c19-4ae4-8a28-604bc031dd44"
        },
        "item": {
          "id": "b66d578e-9a06-47c7-8e9a-bc66a12843a3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "deee2aed-1289-4af2-8162-5cf3b1e57469",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 279,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "67bec5e0-3d7b-41b3-9877-5aadd739a516",
        "cursor": {
          "ref": "7482527d-202b-49ec-ae6b-7767ceeb0b95",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "37e91441-cb62-4ece-8068-af61fa5bb3ab"
        },
        "item": {
          "id": "67bec5e0-3d7b-41b3-9877-5aadd739a516",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1ddbb263-4346-485f-aaa4-6de2c988c120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a643fc-ef74-4f9a-9d06-dda23157d7c7",
        "cursor": {
          "ref": "303c0948-5fc7-42be-9561-92bcf4d6233f",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8efac11c-6a29-45a5-9a3e-e0665b50ade0"
        },
        "item": {
          "id": "b8a643fc-ef74-4f9a-9d06-dda23157d7c7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7fa3c88f-c5f8-4dd9-b598-6225c7877189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fb28f8-c981-4d37-83d4-e0dbcf44d771",
        "cursor": {
          "ref": "1a747270-5094-49a8-adf3-bc3a580ca3a6",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ce7484b8-22da-4587-a911-406db67e6f20"
        },
        "item": {
          "id": "c5fb28f8-c981-4d37-83d4-e0dbcf44d771",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "af66bea4-869d-44c6-8fb6-a579728b2907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5d10a6-f92b-45c0-bd71-d6789d45955f",
        "cursor": {
          "ref": "4852065b-5b8a-4416-9f16-d4c8005f1a58",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "119d72ba-ed14-4253-b248-b238e2b54efd"
        },
        "item": {
          "id": "1c5d10a6-f92b-45c0-bd71-d6789d45955f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0dead197-694b-4e2b-a63a-8fb72bfe9ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2180637b-2e7c-484f-992b-afc465df33a8",
        "cursor": {
          "ref": "b8a69076-7872-4ba4-91cd-cb621f2398bb",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d2b35e21-21a6-4772-8470-ed087165bb3d"
        },
        "item": {
          "id": "2180637b-2e7c-484f-992b-afc465df33a8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bb06f36a-8820-42ed-9b04-0725c0d6228e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d93b3ee-c3a6-4800-b16f-ec4b4cc4ee8b",
        "cursor": {
          "ref": "851ce75f-e32c-43e5-b034-2c1b14e25510",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "53f12597-b568-45b2-8aea-819f06ca18e6"
        },
        "item": {
          "id": "8d93b3ee-c3a6-4800-b16f-ec4b4cc4ee8b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ed5c7d14-1a40-4421-b40a-c2121b8e720b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d897f465-b8d4-4da8-9d7a-0c133cafab47",
        "cursor": {
          "ref": "bf641947-d34e-4af1-972c-909b0e80eab7",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2e5a4494-2c88-4b2e-994e-a8a7d95da459"
        },
        "item": {
          "id": "d897f465-b8d4-4da8-9d7a-0c133cafab47",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "658246c7-5091-423f-b489-ae71795ef3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a44f69b-da85-4b46-b0ab-8f1b761f969d",
        "cursor": {
          "ref": "fbcb544b-60a7-49ca-b722-b6cd0d932e3c",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b1c52bd7-52be-4d15-b19d-2768ee549095"
        },
        "item": {
          "id": "5a44f69b-da85-4b46-b0ab-8f1b761f969d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7e0b3093-a110-4b03-a260-6a6be8fb6183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177ed9b0-05a5-40b5-8cce-b73ccff10d4c",
        "cursor": {
          "ref": "eb0d51cf-4e47-44c6-9e62-6f1bbdcf4fa1",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6f34df07-cc09-4b24-a557-db4bec2cf43a"
        },
        "item": {
          "id": "177ed9b0-05a5-40b5-8cce-b73ccff10d4c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e2492fe5-0253-4c31-971f-9c6faf7d28cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d67fded-e4b1-4d0e-bf58-d8c8f68c0c99",
        "cursor": {
          "ref": "1aba5c7b-c4d9-4093-9529-52823b31e7db",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3dba2072-e276-45ff-bfcb-931c13daee3a"
        },
        "item": {
          "id": "8d67fded-e4b1-4d0e-bf58-d8c8f68c0c99",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cc569b45-2ccd-4dc6-b86a-365943c81ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c522dcb-938c-42ac-a6eb-d98ed65667ee",
        "cursor": {
          "ref": "ef78772a-dc9d-48d2-a762-82af2e4a2a55",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "01f158bc-44f2-466f-bcbe-892a697bdc71"
        },
        "item": {
          "id": "7c522dcb-938c-42ac-a6eb-d98ed65667ee",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f2aa8c7c-54d6-4d3b-9b15-63b0b35e4dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b61245f-d093-43df-8b5a-edc0932a0ebb",
        "cursor": {
          "ref": "841b4b0b-b503-4245-b313-f3be0ec2d30e",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2fb50e4e-17f4-4c9f-a16a-b930bf3f317d"
        },
        "item": {
          "id": "9b61245f-d093-43df-8b5a-edc0932a0ebb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "65250dc0-e804-45d2-a9be-9b4e35ccb498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bee957-51b8-4992-8397-000753562af0",
        "cursor": {
          "ref": "6be7487b-1937-429b-a2f4-e3d8e713bcf5",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "046b7a2d-39c8-459d-a063-2df38272b0b3"
        },
        "item": {
          "id": "09bee957-51b8-4992-8397-000753562af0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7786dfa7-d06c-4064-beb3-ddc7a96ccb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096a2d89-2352-4c52-b1df-d45bb668acee",
        "cursor": {
          "ref": "e3b5d502-0413-401a-a047-d556045b2e8b",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4a6c7838-a2f7-4e5f-9436-7b274b9f3d39"
        },
        "item": {
          "id": "096a2d89-2352-4c52-b1df-d45bb668acee",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3375abf5-b4e3-4f0a-a550-d8a379e31564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7f6417-5e23-48d9-a6c0-59db9a42f00d",
        "cursor": {
          "ref": "f61036f3-a777-4019-b9e1-a2346b1513d7",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7a6df171-be45-4447-8b7e-e457f2a546ac"
        },
        "item": {
          "id": "ae7f6417-5e23-48d9-a6c0-59db9a42f00d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bbb2f96e-64ac-421f-b21a-4b815f3dccaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9854be-b18f-4194-bb82-de6de6a4919f",
        "cursor": {
          "ref": "d197b880-9c03-400b-a316-fed25fea3de5",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3bc08369-a0e7-4f8b-8d07-9a75d0e46370"
        },
        "item": {
          "id": "6e9854be-b18f-4194-bb82-de6de6a4919f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "891b0393-1f63-424d-95e1-d6eac96503ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b562937b-f1c3-4a67-8d3c-2b3bbb7232cc",
        "cursor": {
          "ref": "a0d2e41a-1798-4a7d-b454-851626cacae0",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a77c66ac-1200-4938-a75f-ca9583d5d9d8"
        },
        "item": {
          "id": "b562937b-f1c3-4a67-8d3c-2b3bbb7232cc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ec820fbe-dc23-481f-887a-463400a9065e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c0efb8-057b-4725-ab72-a7f252d69b9d",
        "cursor": {
          "ref": "71bcde50-0f9e-4b86-bfba-dae000170607",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c9c8641f-1a48-4bff-84e7-550d65eb96b8"
        },
        "item": {
          "id": "d2c0efb8-057b-4725-ab72-a7f252d69b9d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0a85f84b-ffe7-40dc-983f-bb765875180e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8225d730-2c32-4bad-b4f3-31911f654257",
        "cursor": {
          "ref": "56e90e85-ba92-4cfb-af1c-07dd46ff10d3",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c580c0ac-0b96-4233-87af-cd8e970448c8"
        },
        "item": {
          "id": "8225d730-2c32-4bad-b4f3-31911f654257",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3f40bdb4-04bc-4c60-8e94-9d1976c46afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1732f4e2-8404-4672-bb92-fe535b3b563e",
        "cursor": {
          "ref": "bbb6dbb6-7db3-4b10-aa0d-378f42133f9a",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a011a4f2-7d24-4744-b083-79296e970241"
        },
        "item": {
          "id": "1732f4e2-8404-4672-bb92-fe535b3b563e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "69588da0-b635-4633-b4e1-83dfde5393cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3149358-507c-4d75-9801-293bd679b5ce",
        "cursor": {
          "ref": "94d93a10-bfbe-4d48-86d9-4cb8dca9817d",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b7b1cad3-2866-4bc4-892c-d592c09e4d92"
        },
        "item": {
          "id": "b3149358-507c-4d75-9801-293bd679b5ce",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "491116d1-e6c5-4222-8507-c4e940407eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee6a4ba-9771-4919-8f86-c71bbe51d55a",
        "cursor": {
          "ref": "358a791a-d80e-436d-8fc4-de56aad71926",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "991946de-9b63-4875-97b7-aba2a2782ff2"
        },
        "item": {
          "id": "0ee6a4ba-9771-4919-8f86-c71bbe51d55a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2f45e77e-3a51-4e95-8ed0-1d879c66f37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5842818-21c0-4748-97c1-9768c21aa182",
        "cursor": {
          "ref": "3696b98f-f0ea-41c5-9c52-e8a65f4f49e1",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "af99d5f2-2244-43ec-96f2-075c5ff55202"
        },
        "item": {
          "id": "a5842818-21c0-4748-97c1-9768c21aa182",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7d608554-4399-48c4-8dbb-41b3b55f3720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11634525-13d7-4396-9174-410ede603a53",
        "cursor": {
          "ref": "28932df6-8120-435d-b44b-6c714a03d424",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "35fc4ad8-6160-4bd4-be51-01ec68ae9c4c"
        },
        "item": {
          "id": "11634525-13d7-4396-9174-410ede603a53",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b047c95a-a36b-4b7e-9980-5d1aed4820f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754822cf-602e-44c3-b159-9433e9be740d",
        "cursor": {
          "ref": "4bfba14f-4c20-43c5-85bb-022ad32d2e53",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b19a2f5f-ad28-41d5-99d3-dc5712fde452"
        },
        "item": {
          "id": "754822cf-602e-44c3-b159-9433e9be740d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5f1cb8c7-2ade-4d10-a416-5e4e671c09a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5affa7-10f9-4759-944b-bf7bfa176493",
        "cursor": {
          "ref": "394aaa8b-8df7-4d74-ada4-635ea55d3a78",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d2019602-3d84-42ce-99b3-9c283864f40e"
        },
        "item": {
          "id": "dc5affa7-10f9-4759-944b-bf7bfa176493",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "17df482d-fb00-46fc-a986-aaaf71069905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccbe766-7aac-4ed5-a783-7d8c6083f387",
        "cursor": {
          "ref": "c0df06e2-36c1-4c82-ac61-fbcd0175f632",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4c6abfd5-8978-47e2-9ce7-c9da722d886e"
        },
        "item": {
          "id": "6ccbe766-7aac-4ed5-a783-7d8c6083f387",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ec5d9700-42d2-4992-98fc-870b0647d658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59da70c9-0981-4741-8a45-fbc185344f6a",
        "cursor": {
          "ref": "a10b8efc-70cc-410b-952b-a246cd39e823",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c79ad8dd-279e-488d-a2df-b5b93752d0f5"
        },
        "item": {
          "id": "59da70c9-0981-4741-8a45-fbc185344f6a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1acdf916-f443-43e1-9fa2-12dabc088935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7e2fbc-1903-46df-a732-0ed0281f04c7",
        "cursor": {
          "ref": "851160bd-8217-4b6e-9bde-7f30db9f2984",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "23124ccf-ccef-4304-85c3-f557dcdfe308"
        },
        "item": {
          "id": "2b7e2fbc-1903-46df-a732-0ed0281f04c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6bb0a756-52ab-42a2-8c70-7b56e644d7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ac6629-6117-4bd7-88b8-cd1eaa0edf42",
        "cursor": {
          "ref": "e57f37cd-c92d-491e-9fa5-32ed3f9a6f89",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3f605571-6938-4c6d-beb5-8b4f63c128f9"
        },
        "item": {
          "id": "c2ac6629-6117-4bd7-88b8-cd1eaa0edf42",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5631c3c8-6aa3-470b-9512-1c487818cdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e37480-fbcc-4011-bcfa-986e345addfd",
        "cursor": {
          "ref": "8c9f9051-8381-4bf1-941d-badd72153e6c",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e2864c37-75fc-4096-9ccb-c87349c5a553"
        },
        "item": {
          "id": "00e37480-fbcc-4011-bcfa-986e345addfd",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e8fbe51e-b976-4075-93f0-c1f6934dd46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a35256-b08f-4189-b683-2f4bbc0afa2b",
        "cursor": {
          "ref": "80a10f46-e44b-480b-a21d-2c13bee392ec",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5936e523-d01a-4f5c-9a87-6e3bcfe70e13"
        },
        "item": {
          "id": "52a35256-b08f-4189-b683-2f4bbc0afa2b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "15576b7b-9c01-40f2-9fb3-5b1c07e6c004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde28f74-3116-4840-a520-5d59d1d8a131",
        "cursor": {
          "ref": "3889b6f8-612d-4280-8379-b3682cb80256",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ef1e3cbd-8589-4d0f-81b9-83be85b4ea7c"
        },
        "item": {
          "id": "fde28f74-3116-4840-a520-5d59d1d8a131",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "039ce864-b55e-478a-9671-e9524805c85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526977ab-8cc6-47ce-a0a6-75f6bd17afb7",
        "cursor": {
          "ref": "a3e736ce-58ee-46e9-b1cd-67e4ee64171f",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3926aa31-ca32-47a7-a410-4dd0bbe2c0ba"
        },
        "item": {
          "id": "526977ab-8cc6-47ce-a0a6-75f6bd17afb7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a9c26c0d-1be1-4031-88e8-2653af18e56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fed2bb-d9cc-4e91-98cd-9be9459584dc",
        "cursor": {
          "ref": "7a29a929-bfcb-47f0-b346-d8eaa8741bb3",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "423005c8-944d-487b-8abb-599d92c9d3ab"
        },
        "item": {
          "id": "27fed2bb-d9cc-4e91-98cd-9be9459584dc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "dadbb1d3-b012-493a-bf69-2bf186f10d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c2d9df-4088-4988-9ddc-91ed8b380cb3",
        "cursor": {
          "ref": "3ad0a03c-8122-4d20-a950-5ce1be9cadf0",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "841977a4-79cc-464d-a6b9-8df9c2ae5ed6"
        },
        "item": {
          "id": "c3c2d9df-4088-4988-9ddc-91ed8b380cb3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7ecb17be-36f2-46b9-980e-91dcd5a51112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4b3b25-830a-46d5-a7d1-5ff9f3ef1bd0",
        "cursor": {
          "ref": "464d3e93-f9e2-4587-a16c-891d1b149c8b",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5813d731-e104-4b8a-ad24-9f6023cd140a"
        },
        "item": {
          "id": "0c4b3b25-830a-46d5-a7d1-5ff9f3ef1bd0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f57b40b1-f4e3-4a0e-adc0-3bebf10afa8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14341585-1a9d-4d3e-a853-c4d4b918e505",
        "cursor": {
          "ref": "da081206-a5da-46ad-9e69-c3b3a7b22be2",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "db93406e-615a-492b-8c29-66c3a49bbbdc"
        },
        "item": {
          "id": "14341585-1a9d-4d3e-a853-c4d4b918e505",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c020878e-1436-4eab-affb-8cc5316adcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c4aae3-fe53-46e7-a6ca-a60d5c491cb3",
        "cursor": {
          "ref": "10712fde-b340-4958-b93a-86e5c21032c9",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "46a4cb03-62b4-49ac-a4d1-b36729f76726"
        },
        "item": {
          "id": "89c4aae3-fe53-46e7-a6ca-a60d5c491cb3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fc58aec8-9913-4f44-8c90-a4ba0adc0018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd6bc34-4069-4425-a71c-6c56b0023702",
        "cursor": {
          "ref": "205d0494-2400-4f67-a909-947ddc9dce9d",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "21274ee5-a10a-45f1-b5ba-126f707f1bb5"
        },
        "item": {
          "id": "abd6bc34-4069-4425-a71c-6c56b0023702",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fa8f32c4-d330-425f-b881-b2220d248e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e9ecce-0a93-4a3a-95ed-7e7a93c00613",
        "cursor": {
          "ref": "2cdefa9b-3297-4577-9505-6aa5c56d4b90",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cb2b8374-620b-44c9-b208-d392300a5a3a"
        },
        "item": {
          "id": "51e9ecce-0a93-4a3a-95ed-7e7a93c00613",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "32c3e4d2-4000-454d-b693-a187752c7928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dabcb0-bdb5-42ca-acdf-547019b5beb0",
        "cursor": {
          "ref": "bc53d9ac-11dd-40d2-b5a8-6ac639701eb8",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "20c497e2-981c-4ee8-bf86-026e4168df52"
        },
        "item": {
          "id": "c8dabcb0-bdb5-42ca-acdf-547019b5beb0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "25a13d4c-1d3d-46ec-9350-8d143af5e429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffa142e-8b6c-4bc9-829a-45fe36098da4",
        "cursor": {
          "ref": "bb722a9b-6838-4e5e-aa60-a92d8615cbe5",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "58db5d5e-0ddd-4e1a-bd14-5dff04570614"
        },
        "item": {
          "id": "0ffa142e-8b6c-4bc9-829a-45fe36098da4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "99cdc04f-73ba-473e-9119-9221e4ed5fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121c0e83-afe0-4361-843c-cd28f1c36209",
        "cursor": {
          "ref": "aff568ef-1345-4dea-a3d7-51cac8b404f7",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "71ca2da8-b9f1-4bb9-a321-6faa2714b173"
        },
        "item": {
          "id": "121c0e83-afe0-4361-843c-cd28f1c36209",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6ce10a79-ecdf-4674-8f9f-afb7243999ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbd91db-c5cd-4af2-b1b1-05e6cfab63b6",
        "cursor": {
          "ref": "4120b748-7075-4f7e-b64c-70df1b1d0ae1",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "981ef49b-676a-476e-876c-44a582e83342"
        },
        "item": {
          "id": "7fbd91db-c5cd-4af2-b1b1-05e6cfab63b6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5eb33387-dc30-4ecb-a137-34b23c191414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82942368-3bd9-48d4-9f52-96175a57bbc9",
        "cursor": {
          "ref": "bd2e88fe-8fe5-4b88-9d9f-28febe2f2a2b",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d3ee6164-e397-49bb-a2ba-2a2efc36a252"
        },
        "item": {
          "id": "82942368-3bd9-48d4-9f52-96175a57bbc9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a6a22a8f-1616-43a0-93e3-aa300d61e9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7200f50-49e2-4ce8-9e26-bfad3ba18957",
        "cursor": {
          "ref": "5e273fcf-548a-43af-8e0f-a65166bf0f34",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cef54a03-f8a2-42f7-b97f-e6b0b0403e94"
        },
        "item": {
          "id": "d7200f50-49e2-4ce8-9e26-bfad3ba18957",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6b63de4b-1a70-46e5-beab-1ee45e0b20cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee0ec79-495a-403c-89cf-fa1730eee211",
        "cursor": {
          "ref": "ef06a50e-e580-44f1-81bf-c287ccee1135",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2746ffdd-3de8-425f-b431-cc8059ebba5f"
        },
        "item": {
          "id": "7ee0ec79-495a-403c-89cf-fa1730eee211",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3c8cf6fa-a5b0-492a-908b-0671b5cc0613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb287a98-07e5-46b9-94ca-10c6fba820c6",
        "cursor": {
          "ref": "689f77bc-fe76-4ab7-ba55-b1a89e93fcff",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7f294405-3952-4782-ac6a-85f49f1450fc"
        },
        "item": {
          "id": "fb287a98-07e5-46b9-94ca-10c6fba820c6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "61bf2c05-3cba-4d26-ac4b-aa235d47bff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa22b08d-c1fa-4a23-9d94-c340dbd911ff",
        "cursor": {
          "ref": "37b61ebf-0487-4aca-8431-946db069bff7",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "51f2e1f6-8281-456e-a095-11c16aae6dcf"
        },
        "item": {
          "id": "fa22b08d-c1fa-4a23-9d94-c340dbd911ff",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "89e7f0be-2794-46be-bd84-d3e763225c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47e1e2b-6223-4dd8-8fc8-07b993173bf6",
        "cursor": {
          "ref": "2d8629e9-67db-4cc1-8066-13aa807fce60",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6d6b095c-0e1a-4e9f-953f-c7c97c923ad2"
        },
        "item": {
          "id": "a47e1e2b-6223-4dd8-8fc8-07b993173bf6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "291dd2d0-6e96-4eda-b528-54757659a6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb41d2a0-e47a-46d3-a226-6ab740d91cf3",
        "cursor": {
          "ref": "7e6350dc-7886-4ce3-a6f7-0324eff58b6f",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a0fc0e74-12a3-4afb-b82c-3a8c1ef44fca"
        },
        "item": {
          "id": "bb41d2a0-e47a-46d3-a226-6ab740d91cf3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2f1ab4a7-57b0-4a0b-b4f8-49c52a110f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138531c7-adaa-4f95-bbd1-dbb1c237adb5",
        "cursor": {
          "ref": "0e6145a3-e5f4-4e96-aea7-f9380365ac7a",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c21625c7-df36-442f-836a-73fe2f75f0db"
        },
        "item": {
          "id": "138531c7-adaa-4f95-bbd1-dbb1c237adb5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2f1485bf-3557-4264-a922-d61fdfb0995a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6526bdad-3366-4dbd-9952-2e1d9d5674ee",
        "cursor": {
          "ref": "fa2a0b8b-f11e-4847-b9e3-1637f17e61da",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c8b311d3-ac4e-42bc-9067-71f8061a71d3"
        },
        "item": {
          "id": "6526bdad-3366-4dbd-9952-2e1d9d5674ee",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7c6f3c1f-ba99-49f0-8b5b-ab303e2bfbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d585c2f-35ca-4edd-a93c-4cef86e49b38",
        "cursor": {
          "ref": "aa393d91-07b3-475b-a56c-24985f2a211d",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ab9075e5-f432-4299-bead-6980bb6d05b3"
        },
        "item": {
          "id": "8d585c2f-35ca-4edd-a93c-4cef86e49b38",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0cfc5648-f6ec-40bc-82e8-95ae11daf408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c91e0a0-ddf6-44b5-a34a-f014a423f9b4",
        "cursor": {
          "ref": "0e3bee23-7973-4570-8cd1-4096c6be701d",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fde90b60-f761-4b02-811f-931fcb9c4c12"
        },
        "item": {
          "id": "0c91e0a0-ddf6-44b5-a34a-f014a423f9b4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bf41dfbc-8c2e-48e3-a8dc-4b6e58fa66c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab70d889-e49e-4ca8-8dc0-b879d5abafca",
        "cursor": {
          "ref": "8604384a-4c7e-4869-af46-ee7f9d57bff4",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4fd2d80b-b9cf-4047-a88e-ea767de27c82"
        },
        "item": {
          "id": "ab70d889-e49e-4ca8-8dc0-b879d5abafca",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0656cbed-14f4-44eb-b719-503e5fbd2866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92657801-4f4f-43e8-8de8-94d9ee35f012",
        "cursor": {
          "ref": "bbc224ef-9c5c-4c4c-91a1-2af3ba024b05",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4f9e3b81-1b2d-4877-9a0c-0aee93f52963"
        },
        "item": {
          "id": "92657801-4f4f-43e8-8de8-94d9ee35f012",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "47021bab-4ccd-4621-86f2-f10e48c82c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47419776-43f2-4d89-9ea3-73336eff304c",
        "cursor": {
          "ref": "d5ab3de8-0288-4fec-9c76-0343f1e896e3",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "843b32aa-540e-45f2-981c-746c169b01d0"
        },
        "item": {
          "id": "47419776-43f2-4d89-9ea3-73336eff304c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "254fa8e8-0417-4f1b-aa71-e65ea2c5d278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7405fd4b-db5c-4b79-8660-4540aececc2b",
        "cursor": {
          "ref": "412a1a3a-97a5-4afc-91ab-cd5084f462d4",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f94edb79-df51-42a6-b522-fae7f6452ff1"
        },
        "item": {
          "id": "7405fd4b-db5c-4b79-8660-4540aececc2b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "85636074-2a84-4522-ab57-02d7e7d97b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b541890-9f34-463b-bf1f-94dc9ba6c17f",
        "cursor": {
          "ref": "85e03ed7-0177-4072-b1ca-9e6d5ef4cd5b",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4a8bf195-ab01-4016-9758-3c50a8407e2c"
        },
        "item": {
          "id": "7b541890-9f34-463b-bf1f-94dc9ba6c17f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ea121ddf-6b3b-4f7c-ba0c-f932172b3f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d2e557-539d-411f-8afb-1a3d93aa80f3",
        "cursor": {
          "ref": "1d89c428-c911-4e05-b4f9-40eeabb1e359",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d205d49f-c75a-4ecf-bf16-e14ecb411ad4"
        },
        "item": {
          "id": "e4d2e557-539d-411f-8afb-1a3d93aa80f3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2cef6573-74af-43b9-8281-c509062d2286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e76fb0a-6e1d-4266-89ca-1ff05c00bdba",
        "cursor": {
          "ref": "dcb02b78-2a6e-4011-9e3f-61861026e683",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "48231d80-e446-48f1-a7b4-8e4f4f024268"
        },
        "item": {
          "id": "2e76fb0a-6e1d-4266-89ca-1ff05c00bdba",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "09fc2c6d-9662-44e0-a135-beff5d60ca88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8789cd58-c891-4aab-aa68-c645eea3fa09",
        "cursor": {
          "ref": "6e7656e5-c849-4915-9d05-8a7ea3de4a78",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "00db093a-77b8-4e2f-a909-8cf833a6868d"
        },
        "item": {
          "id": "8789cd58-c891-4aab-aa68-c645eea3fa09",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c7af9af4-e283-4d7a-8fc2-9fc32057bc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d852fd68-b2a7-4604-9df5-db36a2ed80b8",
        "cursor": {
          "ref": "8a5784b7-c28b-45ef-84ee-7fcea2d767ca",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "874e26e4-0f7c-4f86-a05c-ac548e8e5aac"
        },
        "item": {
          "id": "d852fd68-b2a7-4604-9df5-db36a2ed80b8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8f209e72-a5fa-4776-9c4f-b3b3267349df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb6a8b7-df27-491d-93c9-bd687c06c59f",
        "cursor": {
          "ref": "a1a10a8b-fbd4-457a-b1f7-ea10420bf72e",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c8253e3e-587b-45d7-9676-b52c9bc93aa9"
        },
        "item": {
          "id": "efb6a8b7-df27-491d-93c9-bd687c06c59f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a4434094-15db-45ef-b2ff-1873132ef4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6d609c-52b7-4573-a6c4-98d5715e2fc1",
        "cursor": {
          "ref": "e6765085-de90-4c43-b06d-6c528c6b3956",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eca8278e-7004-4113-adaf-266b93558526"
        },
        "item": {
          "id": "0f6d609c-52b7-4573-a6c4-98d5715e2fc1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7a7694d5-1e95-41d5-bd68-ab12c4023ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b21a731-51e5-4852-a63c-b014d751bbe3",
        "cursor": {
          "ref": "32d0e2b4-7787-4c29-858f-b25b0b2d4d88",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ad542cde-e951-41b8-905a-27b6d92aea0b"
        },
        "item": {
          "id": "3b21a731-51e5-4852-a63c-b014d751bbe3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "39f1eb1b-955f-4917-9a5d-b8388eb28fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dd9d26-85e6-4946-be55-231abcfc41c8",
        "cursor": {
          "ref": "0b67a771-ee90-4bea-9433-aab8ec3b4232",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "747f3f08-a019-41c9-843c-1cca81dd579c"
        },
        "item": {
          "id": "40dd9d26-85e6-4946-be55-231abcfc41c8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bffd035b-97fe-4b85-9c1a-a00da4f82a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239ff774-3170-4d8d-8367-61775d05da80",
        "cursor": {
          "ref": "3101731c-b2f1-4330-9df7-1301ae832734",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7d5cceda-e04f-4ebc-a650-26badb16b3a9"
        },
        "item": {
          "id": "239ff774-3170-4d8d-8367-61775d05da80",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cbebc52d-a483-45e6-9b26-1ae0722a01e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306cc2df-2ef3-4923-af54-a3b1402a1d73",
        "cursor": {
          "ref": "3d45a83f-09c4-4419-be6b-655d9cf4372b",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "15266828-6132-4870-8ae1-98f79a04bcb4"
        },
        "item": {
          "id": "306cc2df-2ef3-4923-af54-a3b1402a1d73",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "92b76d23-b62c-4be7-a990-4217bc6d6978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514b853c-12a7-4230-b025-5c7b21a6f476",
        "cursor": {
          "ref": "4ca1fbc5-2310-4b6d-835b-5f62a513fdb1",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6649e9f0-2c5a-476e-b578-958bd7830523"
        },
        "item": {
          "id": "514b853c-12a7-4230-b025-5c7b21a6f476",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ea741391-b5f1-4d11-8a8d-f02d4e3a814d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c8e78f-86dc-4e8f-930d-8153330d6603",
        "cursor": {
          "ref": "f6128c39-8949-4b60-b41e-11d113305019",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9d247670-ef11-4483-a082-26c000b1d284"
        },
        "item": {
          "id": "a8c8e78f-86dc-4e8f-930d-8153330d6603",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d2c18ed6-fa8d-4b13-aebd-5b904efed98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c0b65d-7969-48a8-bf41-e41d816f8b5c",
        "cursor": {
          "ref": "e1d9016c-7855-45cc-933d-49291a1e7651",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8529a4ad-15b3-4376-a01f-f56c57080570"
        },
        "item": {
          "id": "a9c0b65d-7969-48a8-bf41-e41d816f8b5c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d0f9071c-b9a6-4317-a0c1-540a85c1ee54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87df79d9-6d6c-4c27-9797-a5a894637c82",
        "cursor": {
          "ref": "aefda9d2-c438-4927-a86e-891410169c91",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "24d47e78-27c8-420e-a348-d9687a02ff45"
        },
        "item": {
          "id": "87df79d9-6d6c-4c27-9797-a5a894637c82",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8b9a3516-c6cf-4af3-90b4-41445e2d9cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cb6063-5d32-466b-80e1-310e6dd13257",
        "cursor": {
          "ref": "8e2f476c-0c15-4af1-929a-93ecb801ced1",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "362a87e7-5842-4102-a653-6c53e7c1c2f6"
        },
        "item": {
          "id": "34cb6063-5d32-466b-80e1-310e6dd13257",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3bd0c742-5ddb-4ea0-b9ba-0c6dc55a8fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f3f4f7-2421-422f-99d8-9eb3877a0500",
        "cursor": {
          "ref": "111df5ec-0fa6-4891-8089-293e2fc03caf",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ee0f40d7-11bc-4032-bbef-5ca72f188a30"
        },
        "item": {
          "id": "b1f3f4f7-2421-422f-99d8-9eb3877a0500",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5b854d8e-308c-4491-ae25-0b61d8385ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42024a31-db88-4300-8ae9-82acb59b12de",
        "cursor": {
          "ref": "3e5a94b0-81b7-44df-bffe-5e670c53d8e2",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "568db624-e4f2-4b4d-aa39-d430210dd7ad"
        },
        "item": {
          "id": "42024a31-db88-4300-8ae9-82acb59b12de",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4b06cfad-bd37-4b76-ba3d-c5a9f4dd3ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3adebe3-eb94-43a6-a30c-a974fda2c7ef",
        "cursor": {
          "ref": "81244a43-f0fe-40be-996a-fba9926a1987",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2aaa4fe3-2f7e-45df-a81c-62f05584b21e"
        },
        "item": {
          "id": "f3adebe3-eb94-43a6-a30c-a974fda2c7ef",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8e14a7da-582d-4584-9da5-b29b971251d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f2d059-49cf-4f46-9621-b537737d04f2",
        "cursor": {
          "ref": "b5a386e2-8be0-428e-b35b-e8e07255df88",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3a5bdb60-e324-4a4b-887f-a5226f1010ed"
        },
        "item": {
          "id": "78f2d059-49cf-4f46-9621-b537737d04f2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8082d347-a17a-4982-afb9-77fc0f09cbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52478502-4a7a-40d0-ac89-dfb061cdb2cc",
        "cursor": {
          "ref": "f2250d22-6215-40cc-abda-5694bf699675",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "614e4c65-822a-4576-afd3-4b2427aa5624"
        },
        "item": {
          "id": "52478502-4a7a-40d0-ac89-dfb061cdb2cc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d010595d-0b6f-4987-9f29-4b357fcd662a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ff7bd0-29cc-452c-83f8-2547f58ca2bd",
        "cursor": {
          "ref": "0d9c259d-5528-40d8-8d67-aa82c4f82418",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4a88ab9f-f2d6-4507-b40b-e65d458f4bde"
        },
        "item": {
          "id": "75ff7bd0-29cc-452c-83f8-2547f58ca2bd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fb9b5515-15f8-4e47-ac36-1037437a4481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c2cf2d-6264-4848-ba5f-9949c622fc44",
        "cursor": {
          "ref": "be9d1252-b1fe-47c9-95bc-6e2e2711c322",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f1a521fb-64e4-4859-be29-87df805f8edd"
        },
        "item": {
          "id": "80c2cf2d-6264-4848-ba5f-9949c622fc44",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8cbbd21f-2343-4666-80e8-62aacc306fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d00b043-d836-4935-aab0-2610048cc8f3",
        "cursor": {
          "ref": "3d389286-e294-4848-b678-0d7936a2c35e",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bd3405a9-9297-41df-b7a8-ad010c4851f6"
        },
        "item": {
          "id": "6d00b043-d836-4935-aab0-2610048cc8f3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2a49dde9-29a7-4f22-a190-6039d9db139e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12ae840-d97d-45cd-824a-c3a7f7f8e4f2",
        "cursor": {
          "ref": "2c7431d3-9955-4c62-b4db-9ffd5f63099c",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5be4f4d2-9b20-419a-b803-35f58cfe079b"
        },
        "item": {
          "id": "c12ae840-d97d-45cd-824a-c3a7f7f8e4f2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a8d43f65-90af-4173-a5f8-d4a9297a1dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102fdad5-9018-4d8a-8db1-1045e6343caa",
        "cursor": {
          "ref": "cd6a0b01-ed26-453b-987a-be42a1f16fc8",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "fdea409f-55cb-4669-a9d1-2cbdb4b069a0"
        },
        "item": {
          "id": "102fdad5-9018-4d8a-8db1-1045e6343caa",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e3c57a03-76e1-42f0-9980-276c498c09f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876dc99f-abee-47db-b905-5dda72f05e8b",
        "cursor": {
          "ref": "95960a3d-8eb9-4c57-88d5-a42467aec874",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e1c67767-cbc2-4f5f-a69b-fd82f6bf236d"
        },
        "item": {
          "id": "876dc99f-abee-47db-b905-5dda72f05e8b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ae782e32-e10a-4dd2-aaad-0d5c6cf81ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0f7cca-6d44-44e2-ab35-9d5af3cab122",
        "cursor": {
          "ref": "47503854-cab5-40fb-9176-71e8e4ef43ef",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c2a52da6-ddc2-4fda-a6a2-a05681c6f682"
        },
        "item": {
          "id": "1f0f7cca-6d44-44e2-ab35-9d5af3cab122",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a887979e-73f1-4803-a562-0ad772fdc3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649e06c6-f729-4913-9611-d4ff5127a8da",
        "cursor": {
          "ref": "32c7c7cd-83a2-4ef8-9e31-0bee458e0db7",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e773abd3-7090-4c3b-b69a-24557b863897"
        },
        "item": {
          "id": "649e06c6-f729-4913-9611-d4ff5127a8da",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5a9c5f53-9a7a-44e2-943c-ed3c84dbcaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b658a74-d692-42ea-9d53-adfc892b3e8c",
        "cursor": {
          "ref": "d2de8dc7-7519-4fbd-90b2-383bd1d69423",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "46808bba-fed5-4d4d-9223-2aebe4fd4072"
        },
        "item": {
          "id": "5b658a74-d692-42ea-9d53-adfc892b3e8c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7fe1abc0-a931-4bd7-9055-1518af20a6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8a0846-2e63-4ba5-9393-a9c4b8d16df9",
        "cursor": {
          "ref": "6c6f97ba-aa7a-4f49-a003-801e7c6ce373",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "47d66b32-2eb5-47f4-8f7a-25cb31d3d6d5"
        },
        "item": {
          "id": "9a8a0846-2e63-4ba5-9393-a9c4b8d16df9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "174fd01c-57a0-4b10-b09b-2fccecb5c483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d16141-b84c-42ca-ae59-6d5f0ffe71e5",
        "cursor": {
          "ref": "33d2ce36-fa5e-4966-9af9-ad211c4d6ba6",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a9e5f220-35fc-405b-bca0-b134eb5cd7e1"
        },
        "item": {
          "id": "15d16141-b84c-42ca-ae59-6d5f0ffe71e5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5dcc75c0-a1e7-4c84-889a-b7503508edb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25991123-8026-4b7e-9558-c7ec52234b95",
        "cursor": {
          "ref": "b492f451-064e-4dc9-bb81-65d617902391",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "db06522e-25c6-4344-ac99-d07fce3afe05"
        },
        "item": {
          "id": "25991123-8026-4b7e-9558-c7ec52234b95",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3fb706ec-2f93-4019-99f4-daed27e6414c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf5fb0d-bf44-4db0-bd88-05e102a09ac4",
        "cursor": {
          "ref": "9d2aa83a-50cd-45ab-aba4-3f77dc3f0153",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "29ea0b2f-53b6-430b-8406-d0554a8d55aa"
        },
        "item": {
          "id": "7bf5fb0d-bf44-4db0-bd88-05e102a09ac4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "017084cc-3d96-4d2c-b9da-9ba9447eb241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7225b506-3ee7-44e7-9438-a93e3c8a486b",
        "cursor": {
          "ref": "563bddfc-0ed5-4c7e-9771-30cb48859dc9",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fea08fab-1211-4cb4-aaeb-e20dd51d397e"
        },
        "item": {
          "id": "7225b506-3ee7-44e7-9438-a93e3c8a486b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9fde7cbf-1e18-480f-ba55-c121dea22491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77daa956-2d90-497e-a284-1308c376ea7c",
        "cursor": {
          "ref": "d58bfc10-442a-4b5a-8f6a-d8e34902d223",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "311a381b-eefb-4c36-aacb-9afc2f295af1"
        },
        "item": {
          "id": "77daa956-2d90-497e-a284-1308c376ea7c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "101fb56a-9b62-4df8-add8-73627d4dab39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa48e0d-c85f-496d-b20d-9977f310a705",
        "cursor": {
          "ref": "8187df04-2807-4f46-8ca9-69b21bc139cb",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e98b1f7a-67ca-4fc5-8a14-d1e3daa28a5f"
        },
        "item": {
          "id": "5fa48e0d-c85f-496d-b20d-9977f310a705",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0b0580cb-47ab-44da-9bb1-ce167e8fabdc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 525,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bded4e-410c-41a4-b495-61c46fff3196",
        "cursor": {
          "ref": "bd2d06ac-765b-4afc-a7f9-9bde60e78fe8",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "878a63fa-b256-4bc0-aadb-de1b412b3c31"
        },
        "item": {
          "id": "02bded4e-410c-41a4-b495-61c46fff3196",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dacbe4c6-d268-43e6-8693-515ec992b478",
          "status": "OK",
          "code": 200,
          "responseTime": 523,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "19faab7d-bdd2-41de-831e-25f6c187ab76",
        "cursor": {
          "ref": "21753a64-ac76-46f1-bfd2-dc86bc4f8da0",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "efc49706-915a-425b-af75-9e2dce553696"
        },
        "item": {
          "id": "19faab7d-bdd2-41de-831e-25f6c187ab76",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4b7bcff0-bbfa-44a4-b836-af20ade31da5",
          "status": "OK",
          "code": 200,
          "responseTime": 752,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "077b6e9b-1faa-4d49-9a01-ba178a1c0b1b",
        "cursor": {
          "ref": "699495b2-ed9f-4182-b1d1-ea22b8abe31b",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3fe64203-afcd-46e7-989f-d2bba578a566"
        },
        "item": {
          "id": "077b6e9b-1faa-4d49-9a01-ba178a1c0b1b",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "37d4088b-5c69-4698-8cd7-a18635591581",
          "status": "OK",
          "code": 200,
          "responseTime": 581,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "73322e69-4509-4349-bbad-a9351a67d312",
        "cursor": {
          "ref": "26ddcf10-f654-4f9f-b7dc-dbd6329557a1",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2cb47b00-818c-4a45-8a2b-32bd24021ee5"
        },
        "item": {
          "id": "73322e69-4509-4349-bbad-a9351a67d312",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f7532f17-160b-42a8-8c63-8dfc20952785",
          "status": "OK",
          "code": 200,
          "responseTime": 465,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df5d0f6-26b5-4c2e-bc41-2421787f3908",
        "cursor": {
          "ref": "4589b693-723d-4315-81ab-10c765701d2c",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "810d3b03-7cf5-4db5-b056-538daa9ffb00"
        },
        "item": {
          "id": "0df5d0f6-26b5-4c2e-bc41-2421787f3908",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "be809b2d-029b-40c8-ae0b-d769c04c9e2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df5d0f6-26b5-4c2e-bc41-2421787f3908",
        "cursor": {
          "ref": "4589b693-723d-4315-81ab-10c765701d2c",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "810d3b03-7cf5-4db5-b056-538daa9ffb00"
        },
        "item": {
          "id": "0df5d0f6-26b5-4c2e-bc41-2421787f3908",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "be809b2d-029b-40c8-ae0b-d769c04c9e2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df5d0f6-26b5-4c2e-bc41-2421787f3908",
        "cursor": {
          "ref": "4589b693-723d-4315-81ab-10c765701d2c",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "810d3b03-7cf5-4db5-b056-538daa9ffb00"
        },
        "item": {
          "id": "0df5d0f6-26b5-4c2e-bc41-2421787f3908",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "be809b2d-029b-40c8-ae0b-d769c04c9e2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d06d3e3-6850-41fb-bef4-ea4066a6666f",
        "cursor": {
          "ref": "d019bfd7-d916-4e55-9b8a-9b4d2df45ea5",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "618d9809-5c01-4eb2-a8ba-3ba5aecab266"
        },
        "item": {
          "id": "5d06d3e3-6850-41fb-bef4-ea4066a6666f",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3446ad6c-fdcf-4732-9dbf-68d01f659d04",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 324,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d4ef07-ddce-4aaa-804c-5ad979d7e2f9",
        "cursor": {
          "ref": "65c1e0fd-e465-4085-8c34-ef1169d0432b",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7d558b77-e70a-4863-8bf3-c2fe30f05d2e"
        },
        "item": {
          "id": "10d4ef07-ddce-4aaa-804c-5ad979d7e2f9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d948925a-5d3d-42f7-b0d0-047cc571d559",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d4ef07-ddce-4aaa-804c-5ad979d7e2f9",
        "cursor": {
          "ref": "65c1e0fd-e465-4085-8c34-ef1169d0432b",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7d558b77-e70a-4863-8bf3-c2fe30f05d2e"
        },
        "item": {
          "id": "10d4ef07-ddce-4aaa-804c-5ad979d7e2f9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d948925a-5d3d-42f7-b0d0-047cc571d559",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6c8d2e-5f7c-4aa5-bb6e-3a20b5badb21",
        "cursor": {
          "ref": "ca9c59e5-013c-45b0-89a5-b89e05642677",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eb6e2071-d14b-4411-a394-5991b19772a1"
        },
        "item": {
          "id": "fb6c8d2e-5f7c-4aa5-bb6e-3a20b5badb21",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "686e848f-1d6d-4c7b-88c4-021fa8343af6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 539,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280b5e37-22df-44e3-a7d7-cadd8abfc6f9",
        "cursor": {
          "ref": "194dab08-64c6-4d3b-a56d-0d94fa874e38",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "85b6d820-f970-4eef-808d-c6acb774b2e7"
        },
        "item": {
          "id": "280b5e37-22df-44e3-a7d7-cadd8abfc6f9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d87189b0-486c-42fb-a56a-b9c9c8326a42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280b5e37-22df-44e3-a7d7-cadd8abfc6f9",
        "cursor": {
          "ref": "194dab08-64c6-4d3b-a56d-0d94fa874e38",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "85b6d820-f970-4eef-808d-c6acb774b2e7"
        },
        "item": {
          "id": "280b5e37-22df-44e3-a7d7-cadd8abfc6f9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d87189b0-486c-42fb-a56a-b9c9c8326a42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba298e7-3f0b-43e6-9bce-ebcc415cd9eb",
        "cursor": {
          "ref": "f4bb2f67-b91b-4ed8-b45e-d3fd2974a93f",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f784de87-2b7b-49a9-8859-2e341f0407cb"
        },
        "item": {
          "id": "dba298e7-3f0b-43e6-9bce-ebcc415cd9eb",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "8418a197-a5a1-4635-a7ae-5ab4f91051bc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 606,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}