{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "956c12e9-3d7b-4172-87e2-f7b764172a3f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a1d4671a-8bb2-4cb8-9ef5-0737a3a83fbc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ca8d858-49cb-495d-bb52-bd0b743671e1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b3f85721-993c-4384-99c6-e62207796bcf"
                }
              }
            ]
          },
          {
            "id": "dee6b53f-c190-48ea-a681-c6e2638dfe84",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a7c5904-5ab6-4032-82fa-359a131c9aac",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f2c7dc78-0f71-4315-8b83-0e7c0e25c7e6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "16c634ee-b0c8-4c24-b83d-cbd4326f5d37",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "773bcc71-8b3a-41f5-9c88-f35547595df1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "30060fe7-68b4-4cd6-b91e-80a10f2412b3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e952f55d-8621-48fc-b87b-8197a90c904c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fad03fd9-5f8b-4b48-bdaf-fd568b044ee1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ace93a0-9f22-471a-8bb2-652c18091630",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcbb74a1-4c2f-4da0-b61f-198faef0eae8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5eb4b2de-7703-4d3c-b146-6c4cf778a105",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3cfa27b6-bdbb-4f20-9d53-98d227e525d8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "184e4c5a-7882-4090-a5ca-8a701c959d4e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "36579408-b96c-4167-a370-8b0496350b5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b5c5041-128e-47bd-ad8b-0ba796a876f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39471038-a60f-43b3-a245-368be307f67f"
            }
          }
        ]
      },
      {
        "id": "4f461e12-ba9f-4b07-805a-d1ac3d67a1f7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "06cb0356-7b9c-4d79-801f-9791f2fc9c39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51a3f07d-ba38-48fe-a841-f6d81c48f2aa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c5fcca7b-6d84-4ac7-8445-003ba44b07dd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e721c2e-9626-4d25-84ed-809bdb8c3434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d143773-cfa4-47b4-bf3c-d9ab0d059a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a86494d-6d7d-4884-9306-2218a1acd275",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9b6841-9bf3-41b4-b8f0-aedd49b84876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4f50b09-96a3-4246-8c80-2a302e98213b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9208b93-df1b-4a5f-8140-2241c0c7dd51",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6824032-e1c0-4b22-a090-fceb9cd20647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30465408-5ba6-43da-ac09-e16f1fb5e78c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1fef60ef-b7e8-4da5-8546-0ef1a91041ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4654f98-800b-4040-adbd-98d50745742f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcde5689-0264-4071-91bc-6c294aab3cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ccd40e4-b3ee-4b24-94bf-2e31ece4f35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a9691e-9376-4766-8007-74dfd88d0769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8910196b-f4b5-415a-ad1f-381a6b09e5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dae508a-0fbc-4b0a-b6ab-543267543dc4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717e9d85-a4f4-452f-a77e-b5398f9e6443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86130b0c-3bf1-4eb4-88e8-0b0495e97fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d1d69f-f8a3-439a-bdd5-d4e38893aafe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "4a245cd9-465b-408e-b2b3-9834a63f7073"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "94c459ed-1474-400b-8fa1-5a5fc258ff21",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25fe5617-04a5-4bd8-b87e-e1439bd42b28",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f464392d-56f8-40bf-98bb-49ffdb5da116",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "facb0204-21e9-4648-875e-77b75e8a5b0b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b04c69d8-754b-45cf-a6b2-40a865fea4d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "191e15bc-fc95-47d2-9c46-140926e2daaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "626f8ffd-fef9-424a-b4a3-35642772bf33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "759eaf6f-a339-4cf8-b060-82f461a94ad5"
            }
          }
        ]
      },
      {
        "id": "20d6c8fe-9a35-47d4-9f4c-3272dcab2379",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0a862bc4-2122-46b2-ab0c-01704db6c8e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13029af0-a257-4cdf-909d-fa8adededbbe",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "126a9ed2-891b-43dd-9e44-0455a1c11140",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c11f330-017d-4df5-a52c-47da2172c4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319dec12-ec81-410d-8893-a7c38533157a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e4fc6c-68fc-4c91-9318-020168993922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46b7dfbb-dcb0-4baa-ac3a-f6c3973feef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6d4f15-d0bb-4514-8432-8f3debdf2341",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777b4fbc-7cd1-4d9e-bfb0-adb410639dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce587e7b-6d57-492a-980c-ea538747d6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be047e76-83ab-469d-a1a9-911fee07a6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78f38d93-5a04-466e-bdb9-e543469bd80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ffb5af-e2bf-4cd3-b973-0fe438b5fa6e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11752fe4-abb4-4834-b3fb-2e1d6dd7abeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172c1a15-a017-4d21-b3eb-5c678489ebc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b96139-9e73-43fd-8ad6-352664bcc111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f37e101-06c8-4b00-ae66-808d218ea5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c6da1e-7334-4630-8a26-e780887e2d46",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b55a60-297b-457d-a90c-68a53997fd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea10f6b6-d0df-4ed8-99e3-3c652b98f610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1cfd9e-045c-46b0-b407-8c357ef21316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5b0f7d2-887b-4b68-afc9-12a891d46112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90a0f25-f6f8-4e8f-8d19-a3b22cb3da09",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c405f5e-4931-4f4e-a799-61adffb9865a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecd3145-7633-435c-bce3-74baec0f1a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aa3c30-5b64-4d3e-a3fd-6a15888b186b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "355e52d2-6e2e-4b75-b9d6-c2e29fb66492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea545955-cedf-4c7b-92c4-4451fb26ca02",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb7c48f-3029-499b-88ca-dfb28b77fb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff05eee5-bc68-4367-9fbc-a34fd4b500cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bf105e-e4a4-4f02-a093-23973cb55945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ebe7bc3-cf48-458b-94f6-bf3eace9006d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e4326f-019d-41cf-bbb4-6b611ff2f211",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4205155-6886-400d-8bc3-37075527b6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b13f6e-4a6f-4faa-a17e-7d2aebd1aa32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd40d22-8a1e-4ff6-8340-ccf9863f8ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9218b4c-7f4c-4556-87de-8fb9254246a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df25bfa-86c0-4afa-9a3c-d285ecd6774a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75231e02-9cb1-47bf-865e-f3310a8fbc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1e9a1d-3693-47af-a610-72e469b37a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c2121b-802d-4a6a-b5e9-df794a5eb858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d0af19a-6b39-4cec-8b21-513dbc3573f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed69c5e-0916-4087-8473-1927a3e01c26",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9020b1c1-2b75-44d3-bea7-5ed83fe65265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31dfe505-b2fc-4372-852a-f023dd0d4b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1941648-4066-4961-b38b-3110877e8b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "281e46b9-cebe-47fe-a6ab-a24c25454d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8368b3-1fec-4249-9db2-617d23521340",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65530b18-db0a-4ba0-abd2-c306b70df4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a300b5-280c-4da9-a537-ba8dd153a484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0373ab3-0e5e-4176-af51-4f6f88c2c05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a84c42b-c029-4c26-b22b-22c7922db678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73e35d6-6c64-44b1-ac59-832e20f7138d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb9945b-a82d-4785-94f3-fd9ad43a1366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964c21fd-31a9-498d-ba43-33a2f657d796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d054e06-1c76-4c4f-baff-4d048a6a2cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2b52534-25e1-4007-913d-2c911dde6edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9119f7f-cb05-489b-bb8c-5d8e31736a71",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3ed99b-bb53-4a1c-af1e-18a20965727d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4632b292-c218-4ddc-8ba6-ac3a61cec306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ec068a-ea75-4e02-a02d-ec975a71c657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "188d054d-5556-404f-8e7b-08135d0e51f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bed4f7b-4709-4c9a-9494-bda5fab1c4d1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f49a26-636e-49df-b68b-1fc72b34372b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351fc9ae-d93f-446a-917f-7693322fddda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df13c0de-67ec-4ae2-bb49-b74e88cba40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b2bc168-239e-4497-a5d4-679d97618f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51bcff5-44ba-4ca1-a161-fc6df0593bf4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32514aa-b208-41ee-9ee3-beb2b161fa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce8e4ae-bca9-4b23-bf27-54222681cc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39138ca-9b1b-4a35-8084-f230d5984bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e747aad4-0b90-47ff-a418-00bd84696b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d390d5d-e123-48cc-ac69-12bee289f007",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbeb5050-5cd9-478b-9e3d-05b48b3690f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0282794-9218-41a3-b9c4-53e06950443d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d2cb99-efff-4a75-87b8-0e99648f7200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db735214-b0d5-4c2e-aa54-8b90da316cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8237353-b879-4bc6-95f3-2efb55e01e08",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8868d6-99da-4c49-9929-1a115fdd70d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc53296-032c-4857-9e1d-15333bb9ba85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fda4f6-b3f0-4a6e-9aae-1918365a3247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de551033-632c-4b46-b5ca-fca541139632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7933d2-bd1f-4d0b-be1f-0fe0d7138c97",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c73e5f-62f9-46a7-9ac3-6227351e28ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9768ff3a-5de7-4e5a-94b4-3df23f2af709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4ae986-cc4b-4746-a2f6-34ec97d9d4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb363ac9-cd64-4105-a0e8-630f9c6f7cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a283e1b-563b-49f8-bc06-cc400d85802c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d845458c-af14-4d52-9224-b4c8a7228197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9635d4-f221-427d-8f69-b854cc964654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bde0f76-bd43-4f53-b0d6-931351c548a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf6392b-c71b-4f6b-b084-8670dcdb6c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418d1f2e-5130-4f1c-8cf8-a2082e57b123",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03deea9-0a49-4550-8e9c-819dfdb15a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef796db-3e97-4811-aa2f-8b8be2c16cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813c216d-cd07-46c1-a3ba-8a81e27bd363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1829cf78-3bd2-4cc7-963a-2e958181fc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061a3041-5ba9-4d89-8d38-4f8046219718",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab54bce-70a1-4aad-b71e-431caf256f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca2e54b-3278-428f-8334-4c1ba955fd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cb3660-f45f-4989-846a-bffca1654c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1824df-e20b-4513-ac05-55e5698e29a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8043b04e-a6e0-42a3-b1c0-deb1b433c73d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b501d99b-19e3-4765-8f9b-d5dbbe97b17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23089da-3805-4196-8900-d6879edd072d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96f9072-bb29-4bec-88cc-99fa948483fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86e5f6aa-ae3e-4952-bdbf-88f383b04cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403ad10f-7e49-40d6-932e-18ec10acfd43",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fabfa40-aaf5-47a4-af83-fc42cf3a242f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840ad757-edc4-40b7-88ce-da892e09ccc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3652ec2-73d2-40a8-bd63-e6187b582eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86945e10-f725-4836-b868-c023ea2565a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7213f89-da51-4532-82e0-12ee99e41aa8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073f0b87-31f0-453f-a05a-219c47a2ab98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffaf4115-e492-4fbb-a7dd-80ddec8e2b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6d99ce-bb74-47dc-b5cd-d60adaf05925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b49ca795-826e-493d-8936-a2d93f0fea15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12978e03-1a2f-47ea-bd10-930672324de5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c84652-fb4b-4b15-8bf4-62a16248fc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a96484-9f38-40f4-8d8d-dbf78579301a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1629faf-57b5-4157-800e-52aca558eafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d71a8d6-1b3c-40bb-a380-f38af9d91274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4104f2-d4c2-45a0-bf10-f0344fd7c5b9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba02b2e6-7493-4217-a8c0-b284761f8ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377ac7cf-b740-4221-9d12-37126933a785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2930ce94-6b0d-46f0-a5b9-08d7e498e410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "07330104-a4ae-4793-98ed-5d274d9c6b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab8b189-7742-4264-a145-e09d4a78d013",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ecb758-3714-4107-a188-363e76e25ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ec489b-9794-4ba1-87bf-600970cc3069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ee6706-ed97-48da-81a7-00847ac1c12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a10be03-fa3c-46eb-b48c-b4a94fc6afd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd99897-c2c2-40d8-8440-7639f14d991a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53eba99e-6f1a-45bc-8c08-2dcfa0709a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fc9bce-06f8-416f-bf8d-6361b7a8d424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20ef888-6b54-4e85-806f-bab07311da3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ce2389-8cf7-4c2c-b520-f93f7b693401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d53e7b7-ffa1-4633-84ff-880436c4c1c5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ba7a84-da2d-4983-91fd-60ecb61135f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1704283-1a6a-4d79-b7f2-532cf52a45e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9427a7a6-2d5c-4263-ae73-badf3aa4ec4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "429cd800-04b3-4782-a315-867b1e21e300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5523b9b-ce2f-4467-98e8-14f27e4aa7b6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a40fd7-445a-4647-99ad-3eea8f3c8631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e66b7a-3426-44ae-95dd-2490cf41b445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d575827-13cf-4863-9706-fea63df657e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd996e7-121a-40fe-8222-663cf9b48f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f06b2e-3f83-4078-a597-941115bb1d58",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def6b08d-c84d-4124-9961-acc759fcac96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3f11b7-7a49-42e5-be17-20a009db9763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51a6eb2-0338-4ef3-954d-0687bf40b048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f7426c-29e9-48e1-aaf4-f22398edba31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5860d71c-d575-434d-9fba-fe6b4100e612",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c130a414-28bc-4be8-812d-91e394bb6ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f713bcdf-e7e8-48cf-99c2-2a41745e2a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80189191-7f6c-4c5e-a39d-b823bc44df67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdec1e74-1559-4d95-9521-fedde1168faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80269fb1-14ef-442b-8594-62ee9c7a27e7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94666b70-7432-4f04-aca0-0ed3083004c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9195f51d-c55f-4e3d-b73a-4d14a0f1dc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a85496e-3f41-4c49-bb41-3fc3af160740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "faa8b322-389d-4e12-b818-cb98e9d9de02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90119584-fe8c-462d-bb2a-ed55801f5d1e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24cf3b2-7423-408d-a7b9-8454115d8fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191c6f07-ba5b-4347-ac93-60e7134e5ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d198f8a1-0533-43aa-85a5-2fa400c57b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae166dd3-cf2a-4559-b3dc-9d9d857441b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1859e29b-319f-457d-9c99-ab1df2116d8d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169bf1cc-3957-4599-9340-a6bb32f79866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8f0487-070a-4535-abaa-bf5932a23d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e07748-0797-4359-8143-3aa09f95943e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e92cad7f-b29b-49f9-9591-2880c50184ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cc53cd-4baa-4b48-a460-1ac85c61b644",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5451058a-48f2-4d59-92a1-1570887a7227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d50da6-e5b1-4d4a-96bf-6f503a8261af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99eadef-6f1c-4bfd-8617-0ceed3bf971b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0de6086a-12e0-4f45-8851-d9187560c473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd68a6c-bc39-49eb-9f0f-e82e5a721c6e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29d4967-00e4-42c8-9f16-fae8c2c70c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53e0cad8-692b-48ea-a882-5c13b973657f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a691bc-8cb4-4d1e-9c84-c457113299bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5055e34-e43d-4341-a80f-cd48a47ba822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b47a1d-e1a8-488e-a1ff-b69a436c02f3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b14ffaa-354a-43f8-866f-c08d209a79ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84415bf-0eaa-40d0-bcfd-68eefff0db32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada1ec09-428b-4a6a-977e-2080095571f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9820183b-55d1-4aa2-9f84-ed717955afd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c459e1-ef28-49f2-9d36-75c987a455d8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be266ff9-e247-4097-93bc-ae6e9d557347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0174ff6b-eb2e-4dcd-a65e-905a2d5513f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c4e902-da67-4fee-b2a7-105879d8580b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca0bbc3-6003-4774-a6ab-0563a8480388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b13e94-973a-463b-9d41-dbdfe1e63901",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4539395e-f34d-44c2-9f7e-6d80fbfd58de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6480190-fab2-42c9-91c6-4846fe1df410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ab34d8-5c3d-4b17-99d5-1b9e732ec321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2f7847-446e-4ec0-b303-f94e793cf62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cce0e7-4a62-49c9-833c-8ad84b0c29c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9694866-10e6-4deb-a65f-59c21e1cf835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a775328b-f7e0-4101-a051-64dff9f626e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bcc975-470f-4598-9af8-87f289c1d47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3855f3e4-7b94-4d90-8757-10350a03df82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b21587-4d91-4bdf-8245-e019d6c52913",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fca8e3-2984-448d-a521-f6bf88bfe94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a50ab5-907b-4a9c-9e65-4282ba977d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aedf444-50f6-4623-80e3-77d2a29c8d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61aed4d2-1867-4a13-aa27-f2886b41ef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d48142-4dba-4c15-b38b-6ef60aac72d1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b710cde9-5c06-4f2e-be8c-d7e6ca7741b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99076bd0-3220-4cb6-ab70-3abae0c5ac5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61066cd0-20eb-492e-ab4e-ee31d29bcec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "872c6177-4db2-4fcf-a45e-f3241d689bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4d4d75-cfd2-43a1-8a56-fc83ca595e83",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b73c3a-1134-4c64-9ef2-10f200f96ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6652bece-f232-406e-9f15-ba8aa17bcdbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf5bee6-9036-4277-a446-3016527b9be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c74e83-499b-4d16-bf20-41c8f040e183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ab0081-757a-40b9-a107-c3365e2dd4db",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a57d23-a00a-44ab-99f7-63a6dfcf552e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5975c054-f746-455d-acb7-3ca07cbeb4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14569d16-0f80-4403-86b7-454a59404d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea16e23-66e8-4f05-90dc-3f40b76a9737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ca9459-a3b9-4f15-ab57-f9488c1f3abb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6f8efb-452d-43a5-a390-87c4181ae70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9644a14f-2973-4b64-9900-dcce9ba00c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa88c261-b74d-470b-b433-aa36657da773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a522765-7908-423b-a535-dc0e77401a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848eb5e2-131d-42f1-ab1a-685babf6722a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e989cfd-8803-4adb-a8a4-c9e7fc9080ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdae0980-9fcc-4011-9e1a-e870c962de01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3a6e9b-4d25-448f-9c74-9ec599d769da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01ae1a72-1824-4b67-9a85-5e28dfbbf825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12759487-a193-46bc-9cfd-ccbee1756cdf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfbc6ef-f6bd-4e02-918c-463f95442eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9480c100-32ae-4ec4-8de9-623c43716c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8e8195-e133-4be9-ba00-3388da94b4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fb8e90-5f4b-477f-926a-3abeb7b42d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89301a7f-39a5-415f-91a8-624fedb28262",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51dc94b-a8f4-4428-8efe-4ac89c300254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3ea25e-f284-47f0-9aba-da7ecc7354cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81190614-730e-4a74-b198-1aabbacd2ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "860dfd6b-a402-4940-9712-849f690b485d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84831a8-ba33-445a-9cc8-1915656a7300",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fb1e14-ee6b-45ad-b27f-6ec7fd208d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c648dcc6-94cd-40d5-b027-4854445933d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180c4b4e-661c-4923-94db-37bb2bc094cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02228f80-6a88-469f-91f0-4298365d34b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dd744a-7734-44fc-af73-25dddcbed61d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c006ec80-9c87-49d6-ac25-3ac44393ddc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84a9e37-2d22-4da6-90c6-cef3128d0aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c26441-16ae-4a76-85cb-3a738dce192c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b897119-8703-488b-b976-634d2472aaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7921f43b-344c-4b5e-b64a-b33f0b4f5b6d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeeb95b-01ae-4c1a-83e1-59d44c67c04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb02d3e-1f8d-44f8-ae9a-2c359a3e3297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55d5ea5-aecd-4fc8-b7d3-5fa96baa5751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "03a400ba-e43f-4104-a671-8442ff187a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76535300-8691-475c-9710-01df1995c9db",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f18b1fb-f630-48d7-9b5f-5177ff447a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9bf7fa-ac3f-4960-b0fe-b398a99a9121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70ad86f-96d1-435d-ba7d-a54ea2c2b9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a5e4f8-2324-4aec-9ba6-fa344800e075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cad416-08d3-4ea9-9a7c-b5dd41f9edf9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ea33b1-c6ad-4d36-b82e-9483b9d5479c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e8b4bf-6df0-4995-be03-95ea7a911a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf20bc3-d7e4-421d-84fd-87204ac28e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb3af0a-c61d-4078-9cbe-3aec3becacff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d55852e-06d2-4bcd-80a1-3bf770af051a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb047a84-ce9f-4701-af28-2a220d141d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508759bd-80eb-4259-ad30-c24f3b85a5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02de5ccb-0f7f-47c7-9237-138d800b1809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6155ea53-2c8b-4237-8c14-efc664e38bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd605a9-d3a3-4b73-83ab-a2eca96c8232",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f56ae0-648a-4f6c-863c-70d8c32d22b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15907c94-048c-4fd9-865d-da3bdd3e59a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8de4313-c783-48cc-9c92-cc7f696c9268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "775d3931-da43-4f92-9cc3-d3fc440dbf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be14d16f-a342-4bd0-955a-ab7d08e1a860",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cf0cd0-3cae-4c84-9908-21261473fe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298f721d-7190-4c8a-ab40-1398bbb19a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91ba868-0b15-409d-95d4-b0731fe55839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "279bf4db-5847-4d82-9209-64467e61b66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f9adde-f6d6-46fe-a4b6-8b966b3a13e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766bfc17-a426-46ea-8bc0-cfe8d2fe5e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba53210-1ef5-435e-8b5e-4d1952f52ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d71543e-7a3e-4d55-9fd9-95759213bb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fef4c231-5db4-475b-acdb-68950a4ffd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aeebf05-2961-4e2c-bc94-5882f64183d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bc6d85-1ed3-45a8-87bd-5a8629f870cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a773c7d6-e95c-4ee9-88a2-c5e6b1600091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c297e5a7-834f-4d98-b94b-9e7f9b4a1f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d65c1767-256a-49a2-9c9f-bb69ae319799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c7d18a-6625-41b7-894b-bd647fc6cab8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfaf665-ac47-447a-9b87-ae6176a376cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f22c350-ef3d-43a2-958e-65e7af7cb26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dc9e82-e194-4318-a531-f989555951ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff3f635-98bb-4c62-b9e5-0ebd1071da97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1655ec75-950b-4da9-890d-0a14b71f63ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea33b85-cb17-42c4-bba5-5dfcf46b3924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bdb0ca-fd8c-45d5-ac1e-5ebc11e9ba6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2319bd9a-6e6f-4787-9889-105fd4363aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e630c81-89bb-4166-be65-0429bc840642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43b3f8d-7048-4660-af58-644c291c2b62",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00caed2d-8c8c-4c9b-b122-387ba2be83e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d32286-46b3-4833-bb29-7cf732cf2a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b357336-84d8-41aa-9748-f0a4e4f52e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c669a28-9dc1-4a8e-884b-0f414ae5236b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010ad16d-3d2b-4d03-89c0-044256ec3194",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ce982a-ef67-4ba6-8e43-bec98713e3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8881d7-7dc7-46a5-883c-8d81bb891c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d732992-a9c6-43c4-abaa-d3ce5ff8d200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b1d404-aee2-42f4-8444-2dafb692ed31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e74f49-d11b-4ece-8c89-a5bae2f7d4fb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44fab13-42bc-4179-88b9-a70629ab8cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94aa30fb-6457-4c21-869a-40f20971dac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff1259f-584b-4585-81ec-37f30d636e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "de98d2b7-c313-48db-b358-78002bd14c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f654b28c-d188-4c03-9158-dfd91c4922c1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79e5e3f-d624-4c60-b55e-c66f16b92bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f840eff-b999-4d22-862c-77947ce10d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a04fab4-099a-416d-8d61-839d4edd8956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc37813c-fe8e-4f97-8de0-5bf5eb8b1d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d20b83-f339-41d7-b056-3a91ee9ee946",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1a4d6f-2c64-4f5b-8f43-927d8a452a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1f31a2-3515-4baf-a339-c5c986324f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9120b5d4-7c83-43f2-b74f-667ad70c84cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58366ef8-81c1-4ced-b3cd-2f76d139f6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe10678b-2a9b-4e63-a5fe-5b5611a27238",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620b9071-cbc8-494c-9907-1137579a9125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467f9665-e51a-4b31-8549-16af949daa87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478d03a3-1ea8-4cd8-8416-8f109e60690b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdae0944-a6ba-4638-bf93-54efc7157afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb0f6a2-8675-4e14-afba-54635ce828ad",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e2043d-7f91-4657-b3b1-2809e3528fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da6b4b6-05c5-432c-b197-dc18046f5d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424ec27b-0634-466f-800d-1d9ca8b6589c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65fb15fb-8f28-4348-acfb-e530d4329ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567f0105-1bb0-4117-a1f6-210755dd9b44",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80544855-36fc-4072-b066-b1f2a5bd703f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad86989-bb6c-4ba5-8cdb-113a68e3f821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f259be8-8968-4f56-b1e6-c0889860ee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "91a14464-266b-4011-97b6-36958cf1fb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da0a0d7-f007-4bf3-8f97-4519f75cbbc5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b2d9b2-dacd-4a92-9ac5-265f7b106e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7452045-c5d2-4230-b9a5-db21cc2624cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f65941-4880-4b55-b6de-ad0cfe95ed8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8d7ef1-0efb-4f6b-84ee-14c2ce33d1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3107441c-bd96-4e99-bfe6-6146e40d9b1a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250f2496-1743-45e5-ab82-d69e2264d67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b9ecda-2e9b-4dff-96f7-a0897a2a882b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fd3e48-4df8-4f14-98d7-b4cf9be82adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1aedb2-b768-4fe3-b781-7b54f0ac662f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954766cf-453f-4c43-a490-5f3d5bd0e8a1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9172c047-4166-4190-a95a-c756c25c767c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9076d3e-0988-4d39-a147-625a255b8074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0874467d-6564-4327-bd16-70fabca81457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a9c81b-169b-4a7d-bd5b-b1eea8e0ba74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07edb5a8-a95a-4406-bf54-26f84883fb27",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a3aa56-2bf2-4212-ad3c-daa994c5dd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd714088-a0e6-494f-884f-686358f9b5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e209c55-5493-4716-8213-e09203275b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f00f0b7-f160-4165-aa11-c5628e1f56e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7904cfe-ce40-4f31-ab14-08ceb93d7917",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a582461c-2276-4121-8f76-42e0d58ca53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d78e32-1f7b-4c9f-be20-1a6362d9b5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ad976e-2491-4be0-b53c-f67dab2b02e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "399f381b-bfd7-4609-bbaf-0adad68bd61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f060f9-6dc3-487a-a431-df0c53a04b01",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa641fc3-6c7f-4f36-a792-6fa6c4f0a80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159ebed7-cb3a-474b-a236-634e54e9f198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c420a2-4a85-41af-8cdd-c9e512236d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02a01019-bc88-4e67-ae98-e04d2b47e9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdd299a-96dc-439a-b745-216fe91fb163",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3d9bf3-a658-41b6-adcf-b678981bf02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ef1468-0b81-4074-aacc-89b941f3eb25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f570fd1-5e3d-42ce-9abe-5e440caea20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba8f5cf-d290-4e1d-b3f7-c722f87e3898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ba8664-8a88-44a9-a02d-773270fe3f64",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbce33e-0009-464c-a5a4-e600ce8ee274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ecf596-8eff-46f2-af77-1321c0448372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83cb6bb-c608-49ca-b89e-7822ffa98662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a794684-7c11-4a0c-b802-f9241c50b0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1a1433-f93f-4e46-9377-19cbb8e26c25",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e2a8f9-605e-4cf2-845e-2732e702ae3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd921116-1145-4de7-ba3e-708ed3cae5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64a430e-de2b-44ca-b8df-716d5e933291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acddd199-a646-4397-aa38-ab6b342b6980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57d61c3-a231-4b98-8506-1f973f75db4a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7427f8e-d645-48ac-a942-fee27d6b3469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56980d10-3246-4c0b-a818-ca63bfa13e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c616201e-ce9d-4563-a6f4-10eadf2e04b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f46fe73-1a93-4f40-bb0d-59e649a153bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de870dfc-979d-46c8-969b-8316b6e3929f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d8eaa7-d30a-429e-a2eb-d6262d191b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5a2ec8-0208-4b4c-9549-a9ff9a6217d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ac5312-2aa4-4971-b2a8-72eb89404c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bedd40f-d3a1-4861-9864-eaeb63d0da80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e3e886-dc13-4f5d-b29d-95be6be97922",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7023192-6d36-43be-bcd5-58d90ec4c175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa8af2a-73ae-4060-a4de-171c0a8bf06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b56af4-64a5-4925-a189-1ba840a171c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e024d57-494b-4019-bc6a-804636bb608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2df7fd3-a597-407d-bcd7-26f1aa61d0df",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a365b9-405a-4910-9f5e-3d399b69802c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4772704a-dc71-4941-8247-27965cc1ec72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8312712f-15e6-48ec-b84b-d98f31e4c228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b733d5aa-6f55-4713-966f-9d42061fdb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da10a2a-e850-4911-b19a-174f3805da76",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826ef6de-f0c4-49a7-9717-89e7ee3a28b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343da13f-97e1-4976-ae09-e3423899f3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcb8472-fab4-4430-82f9-f431eb1a8848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40ef222f-c0e7-4dbb-b1e0-4d00a6882821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6edc3c-c5b3-40dd-9138-759c330af172",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da08ff47-086b-4541-853f-fa3dd6c2a860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b3955c-1581-4696-8d92-418df4f736fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612455ac-3351-4c04-9a4e-a6cf65f66f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb56bda2-3ee8-4856-8410-b60251636592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21a7e3a-68c8-47e3-969c-b49b85941bc2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736c5b94-716a-4d60-ad19-c537580a8e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d08f717-01fa-42a7-86c0-384f7409d19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc54f7f-f64d-4e4e-8c2d-21a4127adca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c457e722-5560-4043-90b4-2edd9e81c02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8743f40b-d01d-41f2-a7fe-314a6b9d4329",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e036f078-a37a-4a4c-9f05-43fd971f1ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93db4563-8f6a-424d-9c30-42d7e2ff3d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea731d9-39a6-4d9b-8385-4abeb557220a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88ae828f-f4c6-4b89-b1d7-4c2c71e2a0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f55b3f-998e-4e49-94de-491f88f595b0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cd68d4-0e62-49b4-8d48-20493686d804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a7322c-57fc-4262-93f8-11170a5ca0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feadd4f6-f48c-4c71-b9dc-fa78d428d49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24066b8b-b700-4397-855d-d63a7280345c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1188f3-0ab1-4358-aebb-9d97f2ec392c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9fc9c8-a6fc-48f9-827e-df1b64d1ae5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7c5661-46de-475e-8784-5ea0143778d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75169d6b-557a-4289-a3e9-6d1787687233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82730f99-be71-4a1c-ab37-3cd414d35202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510460ea-0174-489a-8604-188137392f8f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0250518a-1269-4d2a-9111-961abee0bead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63599c26-8cec-4023-a063-e2c8a6fab757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8449b6cb-8c75-44ed-a8bc-c0e7b76883b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "70b1dcc3-df83-494f-a879-971c6e227825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43389e2e-536d-4259-9f6a-30047dc78c4a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba1f7e1-19ec-44ab-82e5-0b8ee13ce2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4531135b-051b-4729-bdbf-798ee4f7fd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48759dfc-684b-459e-85a0-78d7fe95b261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "61e1fe90-6567-450f-824e-311073fd9227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c218d91-0bdc-4360-8ece-1b7f6ccb47c9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317f5ed7-0055-4ef8-bcff-2901fcdccb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a836fc-b581-413b-9580-39e1e0c286ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb7da80-095e-4809-a9eb-c5885e07cae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e75887d-8a68-43d8-9e01-3eb57e10bd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ba999a-75e2-4cdf-91ce-76f242956067",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c421714-2a7a-4774-a491-d5729ee9c691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f29a139-4a1e-45a8-ba44-fd0e186cfa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f53a4ab-7dcb-4aba-971b-36a102bab23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba462957-9f17-48b8-ab17-938ff5274f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6683c638-5841-4c03-9ae5-705e990fbca7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dfa101-b93c-4c51-bb29-36443a582cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b55897df-7a5e-4128-a22b-9051108b43d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5671337b-b5a0-4ec2-a868-4d037bfcf4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3741de9-cc77-4cc6-b8f8-55c592bea2c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7be47994-d481-48c1-b55f-e7711b139f61",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f17d649b-1999-4d35-8d97-4f420308f5da",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af37215b-776c-4677-ad6a-58f0b7d9d303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51851673-102e-4e6b-bc68-e78e2f8a697b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1243a040-fb58-40c4-a2a7-f39d0f836951",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "1e704b8e-794a-4b9e-80bf-160269c1e70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bf6245-540d-479e-b1e1-d6d11aedbcba",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7a1e0b-2801-4d18-82d7-37dc7ce9b410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "304b1eb6-80bd-46c4-99db-6fae57055c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5d7b42-b418-4cb0-ae9f-cae26d978cef",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "075a009d-48b9-4fab-96ce-3cc19e0d7242"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "deb9e464-27f8-408f-9e3c-9d406e6e9315",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2308374f-ee73-4595-8925-3069c33f9d0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b712a182-7f87-4c52-9f90-ce739b2e48b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb1e89c6-632f-42b6-8c3e-63e8410f545a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd57bc1d-32bd-48a1-9686-cc3e98e28e15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5329b045-ae44-4e8c-8cce-f10269575b33"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea53539b-7abe-4bfe-ae3a-28e1e80450e6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d34993a1-5239-489c-a2f9-8abca2723855"
                }
              }
            ]
          },
          {
            "id": "87586ad3-5f3e-479e-add5-cea0178c34a3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8982a9bf-110a-4bf7-bff5-60cdf308a557",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "553636e4-d863-4b75-bd95-3c7d20ab0a17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec718a85-571f-46d9-b0bb-f410224962eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad0e9007-10d3-4ac2-a1a0-8b6c7fa02e61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "15bbd916-409e-4d11-bebc-e7678274867d"
                    }
                  }
                ]
              },
              {
                "id": "2c53a7cb-2bee-47c8-b089-771a0183c65e",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f275ad2-0a4a-4712-9e92-a254c206c2d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aaeff8c0-0f1e-4007-8466-a2a5d9077e0b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e21bf55f-f47d-4f29-b82b-22a18826b610",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c9653c0-2bf6-4761-8edb-8eb0933dbf07"
                    }
                  }
                ]
              },
              {
                "id": "d80fe805-4391-4128-9119-5f5725dfdac6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80fa4725-411b-48f3-9982-1622c70ca438",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88ef2c5c-f777-49f7-945b-02853d71d7ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d0ccce4-728c-4019-acd9-29b7b7b21e9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d9ff5c13-3da3-480a-ae21-0d21a2211725"
                    }
                  }
                ]
              },
              {
                "id": "33c1d722-0efd-44fa-aeb8-1f0a2b80113d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62c98382-7d09-495f-85b7-de97b5411d66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8c10b49-8068-46b1-af59-4e0175d2f1d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db498767-adb9-4604-adb3-731b154cadb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bd20fee5-f7ba-4eba-81f2-45fada993d49"
                    }
                  }
                ]
              },
              {
                "id": "b7d4fae0-6ca0-46cc-860a-7e14f906ebb5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7795200b-7086-4185-8dd7-ef58a5f89a89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee77618b-ade6-48a5-a448-8d54ba5376aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b84dfdb6-d33a-470f-8bbd-99fc054390f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3fbc7fdf-5130-4bd8-8fcf-69fe8efdb78a"
                    }
                  }
                ]
              },
              {
                "id": "633209b6-af27-45c2-9ed5-17c95f2f0f4a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7c6fcf0-5a22-4304-b789-2c7b23c14317",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63af5ffc-8358-4f00-a097-b2201ef6f790"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fbaa37e-e453-49e8-9b42-d5bdd90d9ee0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ccda418-b2ac-4e78-98b8-e41534ee865f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19065f67-06d9-4192-9c42-b2dd76bceb9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d333c7e-bc7e-4d0f-a389-e9922864daff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ea8bb0c-eda2-43de-ab5f-2643ebd5b521",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc8f9c18-8d1b-40c9-a710-c75a17d3fb91"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6577e9d5-a001-415b-a0aa-d763683d8c36",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7d2ba982-8202-46e4-ab27-4dd1bce4d247"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61728536-8051-404f-b83f-c19339211240",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f659021e-20da-44db-95ef-4a68bb497bee"
            }
          }
        ]
      },
      {
        "id": "681e2a09-3a92-4a4d-873f-1b4e07b0891f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "445e70d5-e588-48da-9144-533a6cbe6c48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e47e877-3c97-42ce-9bfa-e67766b1e1c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c35fb20c-5bf8-49b2-b95b-6c4d534acd7d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e974b6cc-3e5e-4305-a801-3488c3052a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068b3df4-52db-4b6e-873f-2e6107ea81f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b3f58c-69f7-4b83-bbcb-d6e4c4a80d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "10952be7-ee39-4386-b76e-a8e9f3ef6db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5f4e71-ea49-4414-8703-1eb51c5f7be8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bc8e6a-141e-4734-b887-631d7c908d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69f55c0-dfff-4d7f-b3a0-4e663eeaf86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a68db3-7c0a-4916-9d5d-3dd5b377d6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23abb4f-53b8-4841-8086-5cd7c274368b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1781bc71-5e3d-46da-a97b-dd75e6f7840d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57eb512-d665-4b7f-bc39-c530de8299ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7eecad-75da-41c4-b70c-76fd3ec64852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a878e5-c8c1-4077-9136-a82de3f8d1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc35d6f-16fc-46c0-903a-c0a10a75968f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa67ab5-1a0f-4005-b2b1-901d715ca7b4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24aca88d-ef0d-4eb6-8781-fe5cbe3693b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f092e1ff-436f-401c-84a8-cffea814c4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f17045d-8fac-4454-b73c-9ac7527ea154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7225f3-d63e-46b7-9a8b-c4a5e65e45a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312fe1c0-a9da-4652-8ca4-c9e0d889f201",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94071c71-9859-48f5-a992-ca58d5aefecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a97d50c-8441-4f5b-8d7f-d2aed7d1c794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0b7016-7a4c-4484-8573-4e4bd718906a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e805c6f-7091-405c-b407-6d704a4b799f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd004b2-403c-4e51-9cad-9b61ee4b51c0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35e22f3-3546-4e85-ba67-b4f5a795f02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c529f8-2972-4cba-8a3b-67220c586b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d66dd8-7e0d-4474-9243-074f335be686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "346d64d7-54bf-4662-8df1-a48b45c2214f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd9a605-6b4f-4138-8d90-7bbe6f65b5d6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986cadd4-015d-4d47-ab6d-20a1b776e61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5191bb56-c3d6-43fb-bc99-8ef50a5adc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9825eb53-eee6-411c-bc64-c90fd55c07a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3650afac-7377-4fda-8065-166fb69fd3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2cde83-e023-4983-bb28-87b9e2c84fa7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef23d791-289a-47f2-8086-7a82dd4dcecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d634c5-92a6-4839-ac5b-b88dbc05eee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1b9de0-1176-4484-ba2d-7b2310961dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cca122-0350-49ff-80ad-9d5d0a4bdf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e72bfac-1fc1-4b09-8747-b4a16fdf482c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb5c4f7-0ff2-4a6e-bf7d-b48ad497be51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851e7750-2399-45e2-99fd-24614a92bcef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38d67b6-75d6-4855-8557-f1d2ca3d3c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55836c2d-31d9-4891-9ff3-323074febc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a316209b-01c5-4eeb-b4c3-8ce25747efec",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6a76ae-aa18-461a-9257-165b48e85014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c3c9a7-9d94-4d41-b4eb-91b76340b600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb65ad25-e3ad-4c1d-a6c3-8ac521b33500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb0e8c6-8022-4e0f-aad9-121652b6c7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8bf8af-75c4-432c-941b-f59bd028bbc8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c8aaba-299e-440b-9c38-fd8e2ccdcb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1978cd6-2b12-4263-808c-729660e34652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b54735-133a-4b90-87bc-80d017449ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e00b6306-a61f-4e7f-888f-f5b47720e439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3019ae87-35ec-4c35-9881-740f3ecde64f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03fb06b-219b-4f22-872b-195a38ddf853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368964e0-5977-4e5a-8c15-87368a77abbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d07d48d-0e94-4a05-85e8-7203743da905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "317e7bdc-1778-4c59-bec5-cc9d0f4256aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a745cc7e-7a95-4b87-b268-df4541a1cd27",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a9d3a9-c289-4e26-a5b8-13eefbff32db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc644467-6bbb-4089-a9c2-74b90b6df286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50174ed1-5d71-421e-8124-c1b94509fd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba212121-5f72-4a4d-9ea7-31abd9bfd76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f83955-5529-43ea-8d30-731ffd2239d6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b07515-9e16-45df-b1b5-935fb965bd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a5be0d-9bb2-4243-806d-fbd9e7e6bbd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a914c03-ad56-40b5-966c-ff0881421690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6449fef9-9d01-49a2-a2ed-ed816d3dc629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbdbd88-329c-4a6c-8814-c2c6656f8c77",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e7f123-bb57-4ed7-a3ce-c8e0f83769b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa0b66d-7d86-4f73-bc1a-82081a389523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7713807d-2873-4f68-b848-423cd846209e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d645f180-0f1e-4f94-a74b-bf3879700944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef8092d-f741-46cf-a6f6-e9893ee3ad63",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca1725a-6d71-4fe0-993f-6c9c3b75506e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0feb43-39a6-4308-8a9d-9c8cca844392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b6273d-e19b-47d6-b5a1-5965a60570ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee0667f-0206-424e-8e52-2fdea3bdabd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55dfbdb-9bc8-48ce-87fa-6ef53b2a0a55",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3dc61f-09d6-42a9-86e6-8035df968fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b725146e-5e15-41e7-a50f-9f996a8c1206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d47379-b496-4969-ae5d-2d92c3f1cf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "40cec2b7-567d-4c82-bb81-44cdb6e46d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161445d7-ab44-49ab-b811-6ec4394b0683",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af96da6c-7a27-4a6d-b6f2-cf833ce598dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca14f8f-69b6-4205-ad16-8829ebbd55b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f36d970-d38e-43d9-ae93-7376e7580092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fe6cf4-e7a5-4357-82a8-7b36faf3b29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39757c5c-11a5-4944-9c68-a560ce01ccf9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8dde55-d004-4fff-8e86-5443adc2b4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6f1ff8-9547-4803-8f4d-90b0b326ca83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f68a821-3c81-4ef3-89c0-c54b6e97a61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe7e983-dfa6-4666-b529-4a6ae671cd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ada2923-38a6-40b2-8aa5-c84be999ed0f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7b8e88-d8bb-4c19-89b7-5a73d19f44eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81207db-1821-4b63-870f-2b1eaed99ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3766a860-4750-4b1c-9071-a8d17f097819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1f35bc-eb89-443f-8b5a-31c87563412a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968270fe-6317-46b8-9017-d940535e843e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26784d50-471f-4a75-9918-6c250e529c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98bff91-e9bd-4ff5-b57f-1601ffb1b065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e327766f-ed7c-427c-a7f1-7815e73c7a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2e0694-909c-4519-b73e-589e63345618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc70d7e-dc78-45bc-b3da-eecd6d50f2c8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359e54a8-5306-47f9-9832-6e99466d1ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36b0f5c-8406-4755-aa37-e1f7dbeb5807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134fa3b8-a94d-495f-954c-807a57fb0047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5824229e-5499-49ad-a9c2-45ab09d234f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0452ff7f-283f-4aaf-b514-0f961234bb85",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dc135f-eaeb-40e8-ac88-ec5adf8ad7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9863c39-20b9-4989-9dcb-ef9091abe368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c78693-3ac0-4686-a29e-a5b5b464a407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "843bf827-eae2-4679-9870-2a5d9c2358f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc54531-f3db-45af-819e-59f76a46a117",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2b9af6-a2bf-4518-9d15-c27180f1c245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a7fece-0d67-4e79-b797-87e6ec41a2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b2e248-cb47-455f-86ee-21f7987af0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa7b830-b7df-41a2-8d78-3bdce72fe7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73096d00-2b05-4d5a-b386-918fd4aaab2b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab44f1d-8f5c-4281-8b53-b4a9200721fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da9ff60-7d56-4d1f-9779-58879a83ab4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a911f16-48ff-49dd-b0af-fabf69febdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "601e2423-9993-4274-8bd2-6c96a6e881c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d7f456-8d6b-432d-9fa5-971d29044205",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668de179-581d-4700-bcc3-944c984abe3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d05bf3e-b09d-488b-8d3b-be49236116ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddf734e-a60d-483c-9e8d-dec329da4493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aceed52-e8cc-4bd9-9c56-08e664d16a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011a3885-2501-42d4-9c58-11916e0a9963",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48409993-c6da-4f4b-b7cc-d8292ce67602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82023111-187a-4b16-acfc-6b6f4f94a39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ce30f2-e955-4060-83a1-b738a41ff1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2aaf027-0f02-4c58-8bfa-a505203b712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87f115c-8fc6-4b34-817e-6dd7bc37db56",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795b96ed-ecb4-4fd8-b372-148fe392015d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ebddc6-756f-4d78-8920-565250ea5106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c7c3d0-2f97-4011-9b20-2ad554282962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "914266b4-5086-42e5-9ee2-0f2aff89a87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf55c26-fd0a-4d78-828d-81abb517302b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46480e9-bad2-4e72-83c3-4acd8d7e822d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f00d57-4729-49dc-8c79-92ec1c375547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27fd93c-2058-4394-bcc3-82b42e95ff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c22e0c-4ae3-4ff9-a42f-de8f00fed318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924e1a5c-ae87-464a-b02c-aed53822bc86",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea243753-5d9a-4ee8-9278-c30cc3149243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7db4c0-f949-4597-85ff-140c5c728144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f04bbd-974a-4edf-a26b-d0693e7935ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59c0497-b9be-418a-ae41-9ce627afd0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edca973d-49c9-496e-8d5c-9d6595e9232d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b28d8ca-8707-47be-906b-4bd57cd211ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10316c3c-8683-457c-a471-1234edf959d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab99f68d-f3eb-4a87-b2f2-848639c414d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d05e141c-0eed-43b9-b2fe-9033680deae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a48504f-6ca5-4089-9425-bfdfd5e77ef0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a304a8-94a6-4588-84a5-d9c8e12ec714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b273b33-6c40-4f13-b040-039e60477653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c031ee0-acc2-4d02-b46e-22a9f8970a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bba6f34c-3392-4618-90fc-6773dfc1acb3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "373002f8-a9a1-46cb-8918-c9a01eccb4f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87ac35f1-c662-47f3-8ed1-1a125031ee17",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fb0359-c731-4d42-a75f-a4d0ce1c4335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc809fcd-dc53-492d-9c36-e0adb5aa4e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622a21b4-ff9b-40e8-92b0-61d89c829d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fce5c202-134e-4121-9a15-bccaf258f209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68b1a61-db9e-4779-b7a4-1e8afd67fe59",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5702439a-d0e6-4103-ac27-23768daceba2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "095cd7e5-1d0c-4212-973a-f517e43d3301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4914e308-f893-4673-bce1-a59562af3dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6d552a7-53b4-4fb6-9076-d2c18b7b402c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a4e57e2-1f5a-4b71-bcb1-60deed66e49f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f29b0a0c-16d8-4907-94e6-25d608badba2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3026a107-256f-4ba7-af24-da79c5377274",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f554391-e2eb-4a0f-a7dd-7a73efe099f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7ebb52e-867c-4e1c-86b7-16bb8c44123d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "add08fdc-509a-4f59-b0b2-39c00f701e73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbd69be1-99a1-4e48-b510-bd5ddec55aee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54b70dac-c632-4bd7-8b97-be3ca8fbe829"
            }
          }
        ]
      },
      {
        "id": "69965fdb-bfda-4575-a84b-8b2d53f1b8d5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8c5dfe7d-bb81-49fc-a765-66256ad5fa80",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db3d0688-2e1b-4c6b-897e-d1f5edb883c2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93649bff-bc7e-4dc4-a621-7619399fb77d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca22765-e389-4684-834f-fab7c414f51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffc0b23-9993-40fe-8bdc-fa9899654ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946e7a01-bfcd-4810-b72f-6131cfc61760",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a6c539-1b38-4e19-a6d3-65c62fbbf9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f28866a-6697-4c87-b955-e46066c84b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251a5d3c-7001-45f7-9ec0-041222d98a4d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04934e1-2aff-4844-bede-605498a2f538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6b0922-2bfc-4270-9d85-f2bb4c38f44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319ef722-1d3a-426d-9fa3-0ba9f21f74dd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba110b8-8822-4844-8d65-02e8a16f12ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0465ba4e-a124-4c5f-94ca-57b41800c28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8525714-a70c-4bfb-a3d5-f7a3b64f471d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a58cb4-6541-4a0c-bb93-8dd7aa0d4a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d978b0dd-f409-4ca1-be8f-325bdf858948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b01f4e-be9a-4d42-a5f3-10d6eac49a30",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c133503c-0486-4939-84d2-3381fb61d92a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50db45b6-8d61-4bf9-93e2-441fe91e0189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678a8e22-4885-4f8d-9c96-1baba0276568",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f7da32-7725-4520-95df-9f685c2b9f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dadbefee-7330-404d-8f83-c9487bf08b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a358e5c8-5cc6-421d-9388-1dfa7ae60416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600dfeda-7dbf-4913-897c-7b4357008ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ecbf77-bc6c-415c-80a8-28ac7ece4aad",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e569468a-db7f-40ef-a5c1-a34aaef68aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb926c7-7532-4331-ba0b-e1115fb04deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6d14e7-086c-4ec2-901a-362902e8f8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d3c53f-5f4e-496c-b939-681c13fb67d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e0ac9e-7a1e-41e8-8b50-014c4e575e08",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0aa8b16-fe27-4ab6-8656-4430128a56e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf705e1-f998-404f-b7a2-52083ba45728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba19fda5-41fd-4fee-b83f-83b866f8a426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040d08cd-1440-4451-9344-2c06f58c054a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5688d771-d8ac-413a-b91a-42386a218a54",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498aaad0-eaff-410f-92a9-7901552406db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b0771f-4e0d-443e-86d4-8e5e7b74fdb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23931113-ac87-453c-b9df-f30d90bc3074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5661690e-7423-4211-b036-3a0a4ff811fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd03cdee-1df0-4a07-8000-24181e1a2f7f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a838803-cdd5-40f7-b669-191037debf0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5b65d7-152b-4de2-9881-3fbd56708e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1247cee1-4495-4203-acd7-fc53e15d930f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57778e85-68b6-4def-9af2-22dba0755149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3639720-79fe-42fa-a05a-a916b64e8695",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d1c318-0a57-4174-b776-46ad9d85c3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d9abc3-1b7c-49fb-8059-f835a48fb9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73c4583-e87a-4d24-95d5-04e5ff251e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c150e68b-19d4-4fc1-89e8-8c03d2c1b13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5e1baa-6cfa-4dc5-b125-a26000e6b74a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdc992b-1008-47e9-b654-79e7674674cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ff1343-16d9-47ea-a6c8-f7938fc42ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb6a10c-0683-4d6d-80e2-95391fb4b093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f90ee8-02ad-49f4-a2e9-a54e0bdf2b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bf9b92-8f2e-4ae9-9d95-5cc221468eeb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9562f8f-7145-413c-84df-a98b03a040b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e86077-3df1-48ec-a690-677761a414f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16fb4c8-090a-4882-9fdb-5c8bf5edc764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a762233-aaee-4bd8-b173-75c6bb606dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3763da-0070-4e00-8782-81e911567e9b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e77c5ef-9a13-45c3-a0a2-0fa71556a206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c05cfac-345c-4827-b4df-2d355c0adb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cc1b0e-f80d-4a2c-a2ec-dfbb960fe74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9446eedf-d059-41a3-b3a0-38d9a0ee968e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d58b79f-8ac4-4c4d-9471-3b64b2f5d1f2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c283ee2-6cb0-4e46-a648-32603d7bc5e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0358d11-46f9-4a75-ae89-1bb0dff87514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de5db65-3397-4c6e-9179-3a40f62f0d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c653fdbd-0805-4e16-97c7-c6d2b7b45131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8b516c-a994-4428-8935-7ae98a15606b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df79eae4-a843-4661-aab3-a7a59da7abe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f52d60-dacd-402e-9286-b3f6818c088b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db21be8d-41ab-4dc5-973a-fa2e6ad85670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8303724e-3fc4-42c1-94d9-95c3386368c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2523a8f-3e27-4251-b8de-ad537f7986f3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55a84e3-8b46-45dd-8d65-ae41bf2011df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e8e8a4-df84-4d9d-961f-1165cc203b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79541816-1a9a-4bee-98c7-92b241e5777e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f27191-002d-4798-b420-17a617b82db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee484828-647b-40e8-aa2e-143479e73a11",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851f19c5-9532-4b25-a1c5-338ae79a61fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf98a199-b681-4d55-b3cc-65bcbea5709f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfeea310-8d72-4648-9b3b-f892f9733955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046a4d47-7245-472e-9a36-14f259b06e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277bde81-4712-4737-ae38-eb1045186220",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d7dc5e-49a3-4f5e-af63-001a1cf9766a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5138a83c-8d88-4c0e-8563-dafb6ca6a185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df23a845-5a42-48dc-9ddf-8451f9ddc424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c09d9a3-e641-4006-b78f-9cccc6809e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54515fe-28a1-49dd-ad2c-fca13198c784",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63389678-d6d3-4982-9611-03ab966f1b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d62b7cb-cbc5-4c12-9af3-3638f5c7a296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "600afd3a-c9d9-4963-917f-99313369adcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab98382-b19c-4aa8-9849-9a0efd89088e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61434a8-4439-43ce-9697-03f87d9c2bf9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a540490-9586-4a1c-a10f-e02660e75bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d364f7b-4bbd-4c5c-b559-b1d17d56092d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72042339-d571-49bb-aa55-b203361ffe97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cd734c-6047-4a79-814e-637e2101b752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6eaf18-25ae-47ba-8039-a0ff04541927",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea60216-9915-4c32-95d2-b9d69efc625c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ee0cb0-5438-47fe-954f-e4ab8e32bd2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfa4f79-7c78-4096-bbb8-65d281faffbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d2d7eb-b08b-40a5-8e3f-056502e0fa7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f8a053-7153-441e-a92d-f6ab3c5ab559",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3b8726-b866-4013-a129-79251cb46fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80cfe2b-99e8-49fa-b156-770a88e51696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653dd3f6-bed8-4fcd-be49-4ed66ed95cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7222b736-92df-4eb5-a255-743a97cfc2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcb7139-605d-4c18-b58c-07eaf42b688d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8a7ec8-568c-45b4-8c05-29b1c77a0036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11dff84-fbf8-4eda-808d-678e69031625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1605573b-264f-46ca-9524-e63f0f5b69d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0a8677-780c-4eb6-b792-f154c74973c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52e7bef-a10b-4b44-bf07-c047368b122e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27334198-a82d-407c-a991-f0f356d850c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee1d1fc8-83ef-410f-8015-be873cf20c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a220c43d-b77d-4ecb-863a-4ad016694fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20ff33d-a389-4b3a-8fff-d20ed8651191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcb820f-52a8-4942-bd84-8411bdf048e7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd8f418-067c-4675-9400-5b7da0d735ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f653892-2369-4509-b9a4-516c748ff55e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fc8e56-15f6-4f4e-a8e7-cf08ce95ffbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f6a0eb-4ca4-491c-a40d-865ed2a0b522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11896b0d-6319-4600-a8c3-c26ef3c995b3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587a0261-5dd3-4dea-b8e5-5f7db2e03420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca79828-d667-4e6f-96fb-6ed5858b00f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cc1c6b-7e23-47b0-818c-b54619c85601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7f5fb6-2946-442a-94f0-61adc0a400de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c16f0ac-7285-4b4c-ade5-a0fb21d9cadc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69a2331-c645-4496-8d76-72301439eb45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "380e72be-f914-48b3-84c5-41c6d4fd7c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fcd9cb-e022-42a8-813e-18232998191a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35f1bec-b2f8-4953-98ae-d65aa9cd6ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30abc5f-a3f4-40dd-af04-60d8db5c1eb1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4304372-8f62-4eb4-8fc5-c858aff43419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf71bf2e-1252-4370-bd31-3533af29a45a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce49fa3-1315-43e6-8252-71f8fa52dfa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51743aa-fb2a-47cb-8816-d259898de587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3205d745-7251-4a08-b07b-03d0609eec4e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5002d5-0c74-46c6-b9c4-bf737576aa3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187b7875-feb9-497c-86f3-caf135272c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef1f9d6-9f90-416e-93fc-11f9330ca092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631cbed0-b5d5-4928-ac7c-5972653f3711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57cbd72-675f-4966-b63f-79bfba993007",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be8cd42-e783-4445-8a10-6fd8b4e55bbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6ffeb8f-4ec4-4250-8e64-4f2ec5e2e775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684f2427-261b-494e-86b4-c8a808b354b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123dfcb0-a34b-4f95-921d-fe7c4f4b4583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41617dfb-dc96-4f03-b766-27d74967aed5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0d800f-7a5d-4f9c-b477-14c137c0e3f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b12a46f5-5fcf-4cc4-af51-6e233be2c334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1644070-e8f0-43ea-9173-274a737d14db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da995e20-9b63-4eb6-8295-632a8551a6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366d591b-e6e2-419e-9218-acc47a929e88",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659c6c60-7b3f-4d22-8511-75ac53f3bebc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4e09896-b129-4fe8-80c3-9615eaa05064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e789136-81f2-4ea8-86dd-dd9d27d08017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d0bcde-fb99-44f1-986d-a2c3d5ca7afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899901ed-d29a-42b0-9f21-89a80f0ebee2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d1df4b-cb44-4794-a561-90d5c9a72afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1443d5fc-99e7-431e-ade8-407700fcb475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc19956-3676-4809-94da-437038202c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afae195d-eb66-4024-8737-1488fcc491c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6371b53a-739b-4504-b716-03bb398f8db3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df351e92-22a6-4fdd-b7d8-0886a969f271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1901f76c-dcba-4170-a42c-d4f3f824ddfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b75ed2-4a26-4b69-b3bd-e34c96cc97bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65720da-532a-46a0-8443-7c903b016e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09de1dd3-f76a-4bd8-a51c-124159d473b0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96efe0b1-482e-4bc4-9785-5dfb90864e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05db4d1e-6249-4832-ae6c-163cc1e0dda5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "364ced1a-a706-48b9-985e-caa415e4f257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4323294-d55d-4adf-80ab-592c9d23f5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076e08e7-3fea-429f-ac55-398e5fc0c11a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78248dcb-e834-45cc-bfd1-3dcb71256ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765d334d-a5ab-486a-be6f-b8c819747823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9435397a-5036-4146-a776-831a7c05bc10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eec5aef-0eae-4dec-85aa-2350b25e1942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d56cf21-e390-41b6-bfba-3f388ba29a50",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d22aa7-588b-4bc5-9d71-9b87bcfa49b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3892755b-9663-44fd-925e-a4cdce88e1fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0673414-aafe-49f3-bd42-c08d62daea51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dcdc3b-3821-4223-adb8-f2d5db56a0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143efad8-3aca-434f-b7b7-1db7c9e2b03c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7debac-5e7a-4dc8-8da9-c304661133ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3803770-3b03-4dbe-805f-b0c0d1df687a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76cf16f-0108-49a6-b46d-50b73f2a63cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929e5f80-25d2-4c14-9ddf-414f926fbabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89999627-65ee-4555-8238-71574fac9bde",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb707e53-40b6-495c-9df9-aecd659c6d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa356272-d150-4391-af69-5b065f7bca1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b835dc-020c-4aa7-893c-c0efda29aead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61326397-1df7-4311-be40-5d0d8443b1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5810d5a1-8f00-4e42-b428-fba7a4783f8a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54580cbd-fe2b-426d-bab0-7248f378b59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da20793e-dd16-4176-b48d-f8268831d5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c290de-11ee-40d1-9e22-000f119ea3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab505228-ee2b-445b-a564-a718047d84ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ea474e-2c85-4b7b-a498-b5bccd38a0c1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1951ce-d165-4d81-94b8-8d7db24c863f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9749bbb7-11c9-4f26-9733-23094f6fb7c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed11c1c-7a45-4589-b6c9-1fdfbcc8e6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c490569-3bf3-4209-ab52-12afb11dbcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163de8bc-c54e-42b0-8811-f5d16065c2a7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5be9ec-d131-443b-a199-fade4830ed6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0bf588b-d2fd-43f8-bcfc-c6139c03cd34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43a0356-76d7-47d8-b3c4-97f46d79dfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b764b343-7908-434f-829e-6f3a17f3800a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6db437e-9b66-4e41-ad9f-ad6c2605edc0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69961380-3e36-4a52-8f65-552ef30446bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830a455e-f3ec-4fb1-b810-746682de1039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9843f2-7e47-494d-91de-4d953458b42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafd306d-6f31-4af6-9fc5-a9ad123c98b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315c99b3-d60d-489d-a31a-5bfc3b40700e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4dad83-296b-49b7-8608-7bafa94181e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133a7113-b49c-4d03-afe8-c90646f558ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e2ffd6-5fc4-4a96-81b1-dba5baecbdd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f682cb1-c515-453f-a32a-1e2e22e941a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86471696-24f4-49e6-bcc8-74023eca18cb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a76bcf5-b916-4fd0-8336-91a086208511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569743ba-b935-47b8-be5f-277472f924d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f96e8c-9b74-42f5-8f8e-a7bbcd3a47c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcee84d-0e3b-4646-8fcf-987384ff7389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8408eaf-3abc-4554-a4c1-e8ea55559a07",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5a4b55-882c-453a-9add-8973c0218e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d13be6f-1a75-42c3-a896-13f72d256de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0935095-eb29-4888-b165-e0be3c0d85f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ed853c-2e3b-4911-a90e-e9b3c9a629c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89ed9f0-ee2f-468d-93b4-2cd921aafcf1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2b0022-4230-4275-83ac-a11c612ce490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d44a04-0926-47a3-b607-e529febd1d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd94e71f-ae6b-4ea5-bd5a-2e0437e82650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f389164-3bc3-45ea-9d81-a28e727ea539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb587ea5-05a4-403e-81e2-4a51bff605e2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2372650c-56c1-4fa6-9cbd-7fd63a946c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2dcde98-c21b-42e1-9ed0-859b8705913a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d42acf-8578-480d-af61-0759c1625802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20a62c5-45bc-4b4c-b3a6-957a143aa7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cd1e2a-7cdd-4535-b482-dedaa4063b9f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d79eef-46bb-4a0f-ab84-932e51ced707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba4e60c-51b9-4171-9bca-43d2f47aef8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44dc677-721b-41e9-980f-59fc2fc99a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88abdea-998a-41e4-81f3-a2ce43d56c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fbbb92-316c-4efd-9b56-a9e429f1d53e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e22666-b2ac-4536-bede-191639248581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffbab58-c8c0-48c7-89de-7599c9f2a18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be78ca0-5978-4ce6-9c3c-cdf29c893414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb8ac92-71c6-4c46-9d41-ea77ee7c21ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad1a4b6-7648-4d5b-b295-089274f81633",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9155cbaa-2b03-4245-a568-ffbdaa845c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8583f689-639a-40c3-bcb8-5526f20312ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac0a9df-9bfb-4cd1-813f-f0c5f9b82f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f349e26-29ad-4a0a-8c5c-b0c9a4c7669b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e73316-5bcd-4c52-99e8-f1dc7ee63943",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5ed736-cf15-458b-94ac-07dc75a490cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30971ffb-7438-463a-889b-71f6618f81e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f1798b-7029-4a77-ab76-41a96d1c624e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394289e0-f895-4043-99ef-c177d7088644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb6f60a-5b06-4a19-b34a-e370230d41e3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c10a39-d95d-4100-b49e-69f841d762c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92720415-fa4b-4538-88a3-b90dd5945cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71888f8-1bc9-4057-b71e-e99e82354949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8172420-f36e-4d3c-8e59-239cc1d9e1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5213eb8b-9d8a-4597-981e-42887c304a0e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2804f82e-1265-4ec8-bcb3-586ad1a71f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355da60f-2908-4e41-b62d-97f08b6a9aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5e2a91-ef0d-48be-83f2-822c52d9b90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c6c646-c496-4dd2-b22f-14144a29df62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc20d9ca-aeab-4c57-a5b5-4449ef875ed8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff6bbce-dc3e-4648-9cfb-5afd165bede7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a63477-f956-480f-b452-6a2a1139b083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ff271e-a677-4311-8445-fcfddc2fbfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0b983d-0ac3-4e9f-9d68-1615893f4009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e03db49-1ed5-4f5e-8fe4-16886c19265c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac599b1-11c7-40a2-aefe-58cdcb8f6e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dedcba9-777a-4237-9657-c90862dff784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7076e04-14c5-4642-8b30-e784ea44fdb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad97131e-c7f8-4573-92f0-0badfd902ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f42854-3db4-4479-bcb5-14798e57bd5b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4da5001-83fb-44ec-aa42-a83cf58591c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94638e1-c250-40c4-8b55-10a43c8fa924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4faf9b8-d867-4d7d-a30f-c610a2f553de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ad4bbe-52c6-4ac7-871c-9a595206983f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda703f4-cc9b-4596-afaa-ecc8526dee95",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97639c30-207d-48e2-82ad-1ac9291c9f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beaab056-72ab-4920-83ac-6c18c69140a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38331123-4865-432d-8710-b16dfe19892a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e31308-4a0c-45aa-8c7d-714298063324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78373b7-c40e-414d-a569-d72872b1c73f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b50b1e-970d-4133-96f5-7b2252a678da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f8c0a3-f950-4269-a45b-fa8969058b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd35bcf-1507-44f9-8314-e3b6f3d4b517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5269670c-0e09-4a0d-a33f-736716c3b0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eab4083-6c37-435d-942b-cab187256cd0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad5c75c-9991-47de-975b-c39b696df2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6728c9-6160-4913-bcab-a1eed16e1807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bd339e-a4dd-4c32-a140-fdd036b6274c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1350d907-42ab-43be-b43f-bc9c0bcd12ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ace240-7b4e-4aa5-b3df-8d7f73339108",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33e76a5-5d15-4215-959b-132855063945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d798c705-3884-443c-aaea-a045c0cc7e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23e38d1-8c2d-43e4-b19f-4981b031e412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f103fdda-51f2-4076-9603-5e2e3aeb3bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a7c1b0-7981-4ba4-bfa5-c99e5bfb853d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01989ff5-185f-4ee0-bdb9-d0e7a05dc917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90410bf7-b4c5-40ea-8660-ff280d373a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a96567-52b5-42a5-be63-0a1b40aee06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3244bda-4034-4cb8-932e-bd87da5350a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfbb018-0dff-4feb-b3a2-1bd88467a4d7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9eccbd-cc19-4de4-9137-df67feda9050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "783ddb85-7534-43fd-a0c0-c2c3301b15e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b1b039-af80-4b8f-92a4-eb02c07e6c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcc82c4-3ffd-49fd-85ca-93a61350b943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b4b553-a496-4b29-90be-ab1811b3740c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d3cd1d-c9fd-4739-880d-a6a27390a09d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7a28079-8434-451c-93d7-4a6ad9c5a45e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400d5622-28d1-4afc-afb9-0beb303f8e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c36402-4189-4254-b59c-3ef92d58bf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bf31fa-04c5-40a4-b8aa-d10d8ade9c2d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dc6a25-8e90-499e-bde1-809728d9224a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e06b7ca-58cc-46a3-a003-2fc96589e834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4228e6-ab5e-46ff-9ef4-2203ff7ff08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0f25a8-b1cb-44f1-a3eb-e012da55223b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c780066-d9d0-499d-b716-ca29e2eb1cff",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da77fc7-b671-473c-bc10-cf6692301aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2123ad65-ade1-47de-af4f-634b0e8b6f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a469c02-bb4f-4c82-801d-ff207f0d9470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7664c8f-195a-4596-b36a-74191dc64538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01842d0-0a21-4c80-9ac6-7166824be620",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576ba30d-0a9f-4775-8448-9917875e38a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e7a5465-61f8-4dc4-8599-a8d21789245a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab4da94-1e8f-4b83-8cc9-adc6edaa5026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00d7bf4-7f3c-4555-a487-2cc7ded5a7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26587ca2-733b-4320-bc3b-c07a540bfb3a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a797bac-ae89-4124-8d44-9650602cdc8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e54d5a9-c37c-4ee5-8e85-da4350575044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1f834c-1eaa-472f-b7e4-f1c3c5005475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6440b5-6178-4250-85db-c1703213ebfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c480a2-fb60-48e6-82a2-1b482ead79d8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8ed086-de9f-45dd-bc19-be0c98e6c534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19c825d9-482e-4c04-9e9d-6f530e3096b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5609e2ca-d4c8-4ff8-998b-db3166ef4e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101bbda4-1f3e-46e8-a980-ee7f86e0c0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc60b31-4935-4f20-8301-39529e4e6142",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241f85e4-57c7-4855-a3ed-2747fc857666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95b90bd0-1333-4ffa-9d77-a5897d4dbb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db90aa62-d431-482d-a631-4a51d11a9d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc56556-30f0-4422-9fa7-8e039ea82862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1082a5c-0831-41b5-b216-5bf1d62f96f4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01dd472-c8b7-4e79-b5d8-7201059f5315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21082208-6b1f-40ae-92d8-65222594f290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e43a029-05b8-4571-b7b2-771b5f14b3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce92ff25-59cf-4e62-bdb3-a8a9ed0a97d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d98166-e401-44d8-ab96-682f50d072da",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb73faf0-5dbd-42b8-8800-69ffe50e8f5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35acb2d7-3e6f-4db3-a060-295e9fcd9c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8cf9bf-f1cc-44f8-a602-99f0573c38e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0436b7e1-2409-4d26-8e22-b6879a64e648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a0652f-6638-472e-a761-34777c56ebb0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c56bca-7dfb-427f-9e70-739039a1c2b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2777d35-f57b-406d-99e9-a08d31f7f971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b516fd-0ca6-4a8f-9485-dde081a48e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e12a4b-263b-4e36-bb9b-d83779bce669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eac2b66-940f-4017-af9d-14b8db371dec",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde8c072-633f-435a-995f-088924357986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef7e75d-d8c5-44b5-b821-df3df80e6464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b688b5-1c3f-4099-be83-6036a6b3ff8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68c7379-f227-4dc6-8e14-1cf00fe0ff25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a87006-9335-42ee-af2f-2569efcf66d1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c220f4-5826-4983-8e11-4ce0dcf16e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dac7eae-56db-4bf7-9519-518505c78658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f30f6f-84d2-4bf0-9f8d-a67bcaacc857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6386ba85-6842-4b4b-b6f4-cb9afb77505a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5a5805-b92f-4720-b0fa-c183cdb31ba1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e894a77f-3d15-4532-818c-dcf64febc9fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3666436b-73b6-41b4-ae38-6dbf03adf36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f86f85-6b7a-4452-bdb2-e41b92beeaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07670379-83d0-493a-b844-e93a4c8b383b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43104f4-02ce-402e-9f90-686e9f15f50c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f307c4dd-e63a-4377-9f42-f4bf09afd446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eb920a6-70fc-4782-a4e7-977111952208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d94a87-6e8c-42cb-95bd-21d36d3b4eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ecb471-29cf-4b05-ad3d-bd4492df6f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9969b47-2f3a-4184-ba9b-9ba253540489",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f5e1e9-5531-4314-ad29-ea786712fa6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3b94889-c806-470e-9b5a-86c6a4871b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7fc0b4-d2f0-4e42-9872-559a568fe181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e75824-9c98-469f-aefc-aabd0527ba85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c267c3d-5fee-4ac6-9114-f89a8d415f9b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9590b56d-3f3b-4917-a4c3-b2ffb8a45472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f61be988-765e-460d-bc96-0ac943e205cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabf8beb-4491-4a2c-a318-a8f15524d9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a5895f-49f8-4b9a-9448-9d2035f9669b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d007a65a-24b6-43e0-a3e8-87a4cb38f01c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ee336c-434e-47ba-97e4-58a7d94e22dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943dba9d-7126-4241-8756-e75f5b81529d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4f4a74-7edd-4e37-81aa-b33ffbf530cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8546db36-036b-4405-8f6c-ade49872c1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299caddf-9b56-45db-a17b-ea8ce27b4094",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c696720-b609-4ce6-af2b-ee726908a8ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89082937-694c-4a6e-a726-e3a9d17e91f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb032ae-168b-49ae-b9cc-b54ea6d78d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e759d24-fb00-46df-8ce2-3e1231335cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc90361-accf-46bd-bf0f-5d3a23de0b76",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a9c287-0a17-42ea-b508-b4ab9cb96997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7658446-7dbf-4a3d-a052-19e0b851c17b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dad2fa-0dde-4066-88d5-d66bb16a6975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465f28d1-a209-4e45-994e-c55e52f81707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0761b850-1826-4762-a721-b5c6590bf9ce",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15626e76-06fa-4f48-bab8-27a7aa23fe89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "621f5b2f-512b-4fa1-a53f-c5db2746ae3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d76f5a-269a-409c-87ec-1e9867bbc409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d935f5-beb1-48c3-a0e6-6a70a23f7326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95679162-21f4-48b9-a72e-79e75c911ac3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da34677-0d76-4929-9c77-983d5c198572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2bca37-71a2-4aa3-944e-05ae64484d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a193cc84-85f8-445f-88f8-85635ba60006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1208701b-561f-4f1e-8846-e23a6fff642d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caef8c8f-03a2-4ec9-9107-718084e8025e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4505cf-7608-4fd1-b2d3-f5c5f4b5c40d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56874975-59e2-46e7-ba96-d84e975d4a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b701ca5-3fe9-428b-b3a0-0d65c5b0b69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041bad08-0f0a-4112-9d0a-7a0892beba0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bd2197-ca16-4144-8dcb-d89694b6cd41",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40831cc4-a025-4dc7-9eb0-be339d40dde4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f364fa7e-8fc1-49ae-bba1-4a3f658399ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b43fee-8bb0-4f11-96e3-bfdd32dc6ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e8c49b-c6b5-4eb3-9545-f648c5e039b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df15793-8c94-428c-bdc9-ee16b735959b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c6e985-8b45-4d2d-a07f-4cceb42bb444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5913804-8d57-486e-be22-1421f9adba5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac4f166-32ac-4534-b6e6-68d06f1f8ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7473682c-d9f7-426f-b47a-32273d2fd47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096b4ad0-dd61-4cb1-bf17-66c3d5b96786",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4955f020-0314-4e7e-822f-9c7dc4b4efc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "481944f0-074d-4df5-bbf3-1fe206a9191c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51100c4c-55c1-4867-a921-2b92fc54d5ae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5fe9b4-b641-47d8-9a61-c8023f88a988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2479ad6d-b9a4-4659-aa4a-d0c56b8dce9e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aafc12c-75e5-4e96-9a9f-c23ef145f74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ff9d05-b7e1-4024-a6f9-cae259724024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6ad231-d681-47b9-aea4-8f808d53ddaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865cc6f3-4977-41f6-8d8d-de54b54a7177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761d55bf-bb4b-427d-b502-d153d26d1d25",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f920157-0f75-4262-a516-5369483611f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f59e6a5-ec53-4a84-978a-53db84a34bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a45e09-1c84-4350-807c-37a8fe79233f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3bd2e0-ac30-4e63-a5d0-febf9018cb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0535a597-a20f-4ae2-90cf-ba3bae247a6d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07889213-9d25-4c38-a198-1ccfd80913fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97037d9f-6442-4789-ac17-da64080b4055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe9f14e-b710-44ff-a093-bfed06b48823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2bd247-844f-438c-be4e-f8d5a3751b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa950e0-6d8c-4e49-872e-bbad6f50a51f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff773e61-b200-4bce-9d28-f86772f10380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5f1df79-fb08-473e-acc7-838e23a3184c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac95146-ef23-4720-baaa-63ad3f13ddd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ba2426-dded-4901-af96-4092e7c75b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8f46ba-d177-43e0-bdae-a2d44f0d7ce4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85586074-63cf-4c41-9b71-dfa8bbed7994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa7e7c1-3909-4a99-8c23-74d7228f70e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d4e1e8-f3c4-4038-9f3f-6a89ac688f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12edff21-0e35-4c38-b2e3-e5e35c1d4563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c55eec5-33ef-4eb9-bb00-48d3ab95d8dd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22091cae-4651-462d-b053-5ba8a1f10f1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81d7ce54-f7cd-4bcc-ad8f-0c254076c000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34773d7-8ef6-4b29-8090-0aa603154d9e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802e8471-171e-445c-819c-ae4f06f9c5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60896fe6-d1cf-4b89-88b2-69031acd30f0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cafc96-6769-48b3-8307-db5b52bcd041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80f76761-064a-4cae-88b5-f98dfb3182b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5802863-8202-44aa-86f9-84694b6010f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c3b129-a5a8-4a03-a0c3-f0b3acde798e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0aeff59e-d75f-4093-8050-855195410418",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c9a4395-3d65-49a3-8a68-c56077bff59a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdb055e2-db18-45a0-b533-398cd0a082e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f24f4f33-e7bd-4c8c-af24-6068c01ee935"
                    }
                  }
                ]
              },
              {
                "id": "55d6d232-e208-465f-be4e-13d94994a432",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7bd4f0d6-2d9d-4841-b61b-db9a8305dbcf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6275f4-ed41-422e-8517-d861d65dc52b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "26718ddb-d52c-4021-8a3a-e9397c00ee97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e004ba3-7ba9-47cd-9e99-e722bbd88c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b26151b-a804-432e-a386-5e29b68e75cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3a2816-76ad-47f0-b047-b152f073da4f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036166f0-82de-4861-979c-949235c12062",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a51b1ede-d74c-440e-8da1-8b4298242b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0351c3a-6ac9-47db-a5a2-50441f1aba67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31bbaa0f-57d4-48b6-9124-8cf2f4257a55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1237e008-6bfe-4697-a08c-02deb4cf08ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c232cab0-25fc-43b2-9cfb-d240cb7786df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94921b66-e880-4dad-946a-4b1eb6385e80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6be97878-64d3-4efe-9f53-46148c479430"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "cbeb3dcb-91c0-43e0-8d4e-836d8bfa40dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e4157bd8-66db-470d-b258-4772c20ca7f0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79cd1b08-ec17-4210-9083-dec9f2607691",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c86f3067-bb4e-4b31-b6dd-ecdc7c025822"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c03ead88-2f5f-437a-9e99-86dc062211b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d65e4209-8477-46e0-bf02-07cf3182b0dd"
                    }
                  }
                ]
              },
              {
                "id": "e3f3db54-946a-43ce-bd24-ec2a75a8b733",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "035f2404-7069-4a6d-ac4d-d7f36629ba16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e0ea266-2296-4cfd-ade7-4c439bdd9f47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eac7455-2c35-47f6-b6ab-eba8c9c23ce2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b75c700-90a9-40c4-87c7-8e2a701850ae"
                    }
                  }
                ]
              },
              {
                "id": "10234cc6-d101-4aa8-950f-1122fda05de0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b37a1209-1888-4fdc-97cb-66e28be628f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0690b62e-f1ee-4457-84c1-a3691e6227b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f427da0-b85b-43e2-be12-ad95f5da8a3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d55189a-022f-401d-b82b-b691e2aaf15e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f0f35e2-3e70-437c-a7ba-2f9e1f688c4c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bf40ef90-d4c4-4b8f-a0f8-dcf3acea0ee4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90766ac9-1c85-4406-85be-7c040ad5167d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ef82fc9-1d07-4400-94d0-8389529781ac"
            }
          }
        ]
      },
      {
        "id": "78a3e7d8-3d8c-49a7-ba7d-217a462ca2f2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a8c2fb11-e40b-4910-85fb-e9d51ff1e818",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fba52681-7c47-4781-8b45-ad18b4f714be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c03be90-5893-4138-99f4-1eae6f553a49",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2887c0d0-18d0-443b-ac8e-e1cb2ab7aa95",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ee2d59db-0a79-4555-b2eb-eee60a573801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d157fb2-bf01-42b0-850a-11db93475fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6414bbab-542a-4113-b6ad-5a692c3327ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936226b8-e9c7-4721-83f6-19d53aca4065",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c3ba93-db67-401a-9489-29231c202941",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "78b3b589-b481-4c87-9915-8ebccad9a6e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0748ef8-bfb4-4179-aa85-d732ab6b132b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a756c30f-a4a7-48cd-9c3a-9496849abc26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78639174-64f9-4766-b116-64f4ee6888bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "038ac698-da2e-41ac-b5f6-d352c5cc2ef0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "903b0e97-195a-48a6-a59a-9db5909fd453",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59c40c26-1b73-4ae2-b996-9295d3466ff8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebde59f5-1182-43f3-92d6-7d287d4def0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e94dd404-eb6a-4ba9-8465-63a15a571382"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d971f8e7-96a3-4357-b552-ac50936c6ec0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4a8326d-bad4-4d7b-9f8b-96a31022d83b"
            }
          }
        ]
      },
      {
        "id": "66e7e6f6-6fbd-46fa-b77a-51f54a4f24d7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c41ce3a2-2963-4612-8776-f81e4916a1a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65a036a5-6ff5-4ae4-b46c-a75c9d3d4467",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e95779b-fc2d-45df-a0f1-16c5d9a49bff",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da32ccb-09be-4834-bde9-be9afd4ee931",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d76b9ffc-63e6-4487-9827-77fbf702bda9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883af05a-47ca-4442-9486-5f0b6a376b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63c38a74-c7b7-4d8a-8230-e9ae4bdd7bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7999c59-a40c-4b94-b0ef-f955ea286ad7",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4d1b54-38c6-4463-b3d7-4e21ceef8a2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4e33931f-2e80-4286-8780-b722d552922d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3051fbeb-74ef-4512-88f1-397976e881f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "622151a2-7d61-4185-9769-88210ea7aa2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c2b8a89-aa74-4167-875a-d3b8618cd567",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18f3a26c-bd9d-403c-b0b8-1472e71e19fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09399e86-5ed9-4150-b21a-0fd2fc15bf53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b538ce3-4241-452f-b34b-b99f234327c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "388928f3-599b-4283-9d6e-30d0790eaea3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7c077502-bb5c-492d-bb9f-1af595afd042"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6606c18-565a-45f5-b44c-6769999bb325",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e62b56c1-a986-44fc-ac8a-8a82b1d04d51"
            }
          }
        ]
      },
      {
        "id": "c5c142c0-e6af-453d-9cb0-b3b65ef1c271",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6f7c117c-a8a2-43ec-8325-2bbaa6000d8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3926d13-6a36-42b8-8c9b-2268660f6a01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6968592d-a47c-42e0-be9c-13d78c1c398c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab404e7-f5b7-470a-b062-bef7c1ae89be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "430bc881-aec8-4407-9a7d-9c8966a51785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6c799d-ac3c-441e-bab9-74ff67619ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "344030b0-80a3-4188-b4f5-5b878b2c67ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33603903-709f-402c-b3d5-b2632cbd6e99",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fba3d4-bfd3-434b-9f28-9018601107bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d9d1c4eb-760b-4269-9063-d940f382bb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535a5fb8-0502-43b0-9acb-a58428651a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72dab898-8ec1-4213-94f0-35bcfee36896"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad80c6bc-6dfd-4e91-92e8-aebd95d06716",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b58a7b68-075e-4edd-ae48-5c2ce544fd60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e64c5d5c-dec2-4eb5-a52f-db51c7fb0efd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4914f828-22d8-4263-9225-be9d20357f1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "913713b6-8959-43e0-86df-ff800b1f09c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "47f55b07-0a40-4403-ac72-ebbf592fe1c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11a0bf41-21cb-4735-90ec-3f59c8c80191",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2efa520-4b0c-4a88-8dba-8b5672252822"
            }
          }
        ]
      },
      {
        "id": "a6e23fad-6fc5-4096-8bb2-840f0d81c4fe",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0771303c-8a25-4b4b-8a93-507c6ea15586",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49d8d38f-6fde-4e24-9e92-fa1611c1d5f7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "32c9d102-1477-46db-ade8-3edc9d4d3608",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cd1e218-948d-4a21-9d94-85315a694896",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cc5492c-e16c-4c51-a7df-1a7fb6cd31ca",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 7
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 1035.592307692308,
      "responseMin": 10,
      "responseMax": 51229,
      "responseSd": 3606.297677879534,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1667868398698,
      "completed": 1667868683402
    },
    "executions": [
      {
        "id": "a1d4671a-8bb2-4cb8-9ef5-0737a3a83fbc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ad61ee4d-2be6-4587-bd9f-3352c5a212f3",
          "httpRequestId": "20641b5f-9030-4f17-982d-089cb044a57c"
        },
        "item": {
          "id": "a1d4671a-8bb2-4cb8-9ef5-0737a3a83fbc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7d79011f-0da9-469c-9525-828103d0a93e",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "dee6b53f-c190-48ea-a681-c6e2638dfe84",
        "cursor": {
          "ref": "3c09389f-d7fc-417e-a526-8fa2240d9649",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "169a0bcd-72d6-4f30-be67-128f1e7f9fbc"
        },
        "item": {
          "id": "dee6b53f-c190-48ea-a681-c6e2638dfe84",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a9cfae15-3cb3-4da7-a319-5cbbd7ee51fb",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "30060fe7-68b4-4cd6-b91e-80a10f2412b3",
        "cursor": {
          "ref": "491f9351-c3c5-4777-abc2-c20c2dba56ea",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2c9861f8-f358-4552-8f4b-c75d4d8b6866"
        },
        "item": {
          "id": "30060fe7-68b4-4cd6-b91e-80a10f2412b3",
          "name": "did_json"
        },
        "response": {
          "id": "eabdb766-6d16-4ba1-9efe-f542a567f829",
          "status": "OK",
          "code": 200,
          "responseTime": 727,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fcca7b-6d84-4ac7-8445-003ba44b07dd",
        "cursor": {
          "ref": "d326ae30-786e-414c-aa17-b511f9018f60",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d26f50d-7f19-44d1-b554-b9f722308947"
        },
        "item": {
          "id": "c5fcca7b-6d84-4ac7-8445-003ba44b07dd",
          "name": "did:invalid"
        },
        "response": {
          "id": "17c2cb2e-2c4f-4198-b709-7331d99a75a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fcca7b-6d84-4ac7-8445-003ba44b07dd",
        "cursor": {
          "ref": "d326ae30-786e-414c-aa17-b511f9018f60",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d26f50d-7f19-44d1-b554-b9f722308947"
        },
        "item": {
          "id": "c5fcca7b-6d84-4ac7-8445-003ba44b07dd",
          "name": "did:invalid"
        },
        "response": {
          "id": "17c2cb2e-2c4f-4198-b709-7331d99a75a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a86494d-6d7d-4884-9306-2218a1acd275",
        "cursor": {
          "ref": "cb82d519-2d4c-4931-9b01-0ef430fabc15",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "27f6552e-1b00-46eb-b813-c6fa7628bbbe"
        },
        "item": {
          "id": "2a86494d-6d7d-4884-9306-2218a1acd275",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eb2f5a3d-c5a7-4bc1-9408-db28d90b64db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 603,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9208b93-df1b-4a5f-8140-2241c0c7dd51",
        "cursor": {
          "ref": "f1a3489f-9ecd-4216-93ab-6d5ba29bccce",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7938d7c2-7511-4c9f-93ff-77909b2ccb64"
        },
        "item": {
          "id": "d9208b93-df1b-4a5f-8140-2241c0c7dd51",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "67fcf64e-2c86-4935-945d-05d99fe91af5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 479,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4654f98-800b-4040-adbd-98d50745742f",
        "cursor": {
          "ref": "d5a79f68-609d-493f-bf39-33ccf29e0be4",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4560fb8e-9eec-4569-9b18-a512539d683c"
        },
        "item": {
          "id": "a4654f98-800b-4040-adbd-98d50745742f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b58210fa-ef38-4446-aefc-a3b0c06a6b2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dae508a-0fbc-4b0a-b6ab-543267543dc4",
        "cursor": {
          "ref": "a5ceeaba-d572-40b7-bc31-ea906d7189f4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7ee30133-4e5a-4c11-91e0-194ec671f284"
        },
        "item": {
          "id": "4dae508a-0fbc-4b0a-b6ab-543267543dc4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c53da6cf-ae9c-4ddd-8465-ca1a5e2178fa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 470,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dae508a-0fbc-4b0a-b6ab-543267543dc4",
        "cursor": {
          "ref": "a5ceeaba-d572-40b7-bc31-ea906d7189f4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7ee30133-4e5a-4c11-91e0-194ec671f284"
        },
        "item": {
          "id": "4dae508a-0fbc-4b0a-b6ab-543267543dc4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c53da6cf-ae9c-4ddd-8465-ca1a5e2178fa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 470,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fe5617-04a5-4bd8-b87e-e1439bd42b28",
        "cursor": {
          "ref": "e84c0576-bb00-46c4-a12b-b9003a11156d",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "33736545-6bb4-4125-a4f7-fbdf5803c556"
        },
        "item": {
          "id": "25fe5617-04a5-4bd8-b87e-e1439bd42b28",
          "name": "identifiers"
        },
        "response": {
          "id": "945ac0fc-96b2-4889-b78b-c011588d6d71",
          "status": "OK",
          "code": 200,
          "responseTime": 714,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126a9ed2-891b-43dd-9e44-0455a1c11140",
        "cursor": {
          "ref": "a5bb5b06-4001-40a4-8b9d-e5d3494182ad",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "24b30307-9a50-4d60-b8ae-bf3c5d001a15"
        },
        "item": {
          "id": "126a9ed2-891b-43dd-9e44-0455a1c11140",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8a1fa7c1-9dc4-4c3a-ae58-eb64a1d70424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126a9ed2-891b-43dd-9e44-0455a1c11140",
        "cursor": {
          "ref": "a5bb5b06-4001-40a4-8b9d-e5d3494182ad",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "24b30307-9a50-4d60-b8ae-bf3c5d001a15"
        },
        "item": {
          "id": "126a9ed2-891b-43dd-9e44-0455a1c11140",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8a1fa7c1-9dc4-4c3a-ae58-eb64a1d70424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6d4f15-d0bb-4514-8432-8f3debdf2341",
        "cursor": {
          "ref": "4de08f91-0800-4c0b-80fc-7b7e15252d43",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a5bd4389-3f1e-447a-ab33-15787dd6f756"
        },
        "item": {
          "id": "ad6d4f15-d0bb-4514-8432-8f3debdf2341",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e8d92244-9ac8-464d-90be-33ec4500c4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ffb5af-e2bf-4cd3-b973-0fe438b5fa6e",
        "cursor": {
          "ref": "57c12806-a70f-4deb-8240-5581658d9efd",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0190238f-76c9-44cb-8f21-e3b09d6f09bf"
        },
        "item": {
          "id": "f6ffb5af-e2bf-4cd3-b973-0fe438b5fa6e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d70d6dc9-f99c-4b60-a7b1-4a68c6eb59cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c6da1e-7334-4630-8a26-e780887e2d46",
        "cursor": {
          "ref": "38e82ba7-ae00-41dd-a2f5-7596cb49c74c",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3e1624ce-beec-4e4e-b4e8-c8195f1fa20d"
        },
        "item": {
          "id": "91c6da1e-7334-4630-8a26-e780887e2d46",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "aee16910-8048-4ea6-b96b-0d55a8935303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90a0f25-f6f8-4e8f-8d19-a3b22cb3da09",
        "cursor": {
          "ref": "2204cced-2c53-47ff-9b74-aec72800e002",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e195117a-636c-4ef9-94a9-44aacb2ec77c"
        },
        "item": {
          "id": "c90a0f25-f6f8-4e8f-8d19-a3b22cb3da09",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e8e53e59-3418-4cbf-b74e-bb87a3da4e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea545955-cedf-4c7b-92c4-4451fb26ca02",
        "cursor": {
          "ref": "2072ab6a-2d3b-4d15-9145-18abf26968ba",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "85905ae6-3cf9-4a5b-ad75-04db472ab65a"
        },
        "item": {
          "id": "ea545955-cedf-4c7b-92c4-4451fb26ca02",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e96234cb-52fd-4e93-b5be-ba9ed6c48e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e4326f-019d-41cf-bbb4-6b611ff2f211",
        "cursor": {
          "ref": "bb165e94-ec34-4b8a-b8c3-6226cabd24ae",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "13b9ca5d-22ab-41bc-a7fa-805ae434a441"
        },
        "item": {
          "id": "82e4326f-019d-41cf-bbb4-6b611ff2f211",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dbd9c370-459c-46d4-9dbe-c96777d8078d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df25bfa-86c0-4afa-9a3c-d285ecd6774a",
        "cursor": {
          "ref": "d1971b64-8196-4b9c-a50f-4f6c04dc143d",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6ffef7c9-71c2-46bf-942d-ba3759165241"
        },
        "item": {
          "id": "9df25bfa-86c0-4afa-9a3c-d285ecd6774a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "216a9392-069c-491f-8498-098f47c2fe6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed69c5e-0916-4087-8473-1927a3e01c26",
        "cursor": {
          "ref": "2781d73b-0fb5-4582-86eb-6be4c559bc2c",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e4f0f1ff-2cb8-439c-b6f8-d621e12ba49c"
        },
        "item": {
          "id": "3ed69c5e-0916-4087-8473-1927a3e01c26",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a9f813a0-034d-4d41-ac6f-c9077d802ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8368b3-1fec-4249-9db2-617d23521340",
        "cursor": {
          "ref": "bb94847e-26da-4ea3-b190-0fea1fbd447c",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f71639d8-4f0f-47a8-b06e-886dc1c9d9cc"
        },
        "item": {
          "id": "fb8368b3-1fec-4249-9db2-617d23521340",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0075f600-4f21-49f3-a831-8a4cde2d0813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73e35d6-6c64-44b1-ac59-832e20f7138d",
        "cursor": {
          "ref": "7c2352bc-b89b-4087-971c-2c6e4947b05f",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "db0dd793-be4c-4b96-ad7a-60c7472ab4d2"
        },
        "item": {
          "id": "e73e35d6-6c64-44b1-ac59-832e20f7138d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1c5f34d3-851b-4ba5-99a8-eba87fc2a73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9119f7f-cb05-489b-bb8c-5d8e31736a71",
        "cursor": {
          "ref": "7fc7b912-a77f-43f1-90a4-fd140816fa70",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f2b5dc53-6800-4326-97da-97e2469c766c"
        },
        "item": {
          "id": "f9119f7f-cb05-489b-bb8c-5d8e31736a71",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a2ed414a-91cc-4f8d-bb6f-0f15b8dc5e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bed4f7b-4709-4c9a-9494-bda5fab1c4d1",
        "cursor": {
          "ref": "66a5d3de-f8b0-4182-9626-350f621b18a8",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4d455cf3-e897-489f-8777-2235d2d3036d"
        },
        "item": {
          "id": "0bed4f7b-4709-4c9a-9494-bda5fab1c4d1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f94b388a-0c36-4054-8ec6-d9b067ce4998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51bcff5-44ba-4ca1-a161-fc6df0593bf4",
        "cursor": {
          "ref": "3026befe-7340-474b-acb5-a92cc142afd7",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "99edd887-e771-405b-86bd-5d5b56b6fbf5"
        },
        "item": {
          "id": "e51bcff5-44ba-4ca1-a161-fc6df0593bf4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "76bfd985-2e27-4787-9e3d-9dfe71913fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d390d5d-e123-48cc-ac69-12bee289f007",
        "cursor": {
          "ref": "bad9a4f3-8e38-4448-89c4-318e972a805c",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "40946f22-fd87-4640-a743-a53850b01129"
        },
        "item": {
          "id": "6d390d5d-e123-48cc-ac69-12bee289f007",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "227fabcc-2d18-40ba-817f-b3cc3a8e0aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8237353-b879-4bc6-95f3-2efb55e01e08",
        "cursor": {
          "ref": "ca3d5ae4-41ce-42d1-8d52-83b9178e8c11",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "20d3b95d-c39e-4fed-a26d-8e0b29fd7355"
        },
        "item": {
          "id": "d8237353-b879-4bc6-95f3-2efb55e01e08",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "419853cb-954c-48ed-9d34-4cd65a902f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7933d2-bd1f-4d0b-be1f-0fe0d7138c97",
        "cursor": {
          "ref": "2d71d6b1-6a0f-4c43-a39d-589159a424a4",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4c619e31-517a-4e51-9220-e201787c8b6d"
        },
        "item": {
          "id": "5d7933d2-bd1f-4d0b-be1f-0fe0d7138c97",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c4d976ed-2cf8-4a83-87ac-b07b9013e3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a283e1b-563b-49f8-bc06-cc400d85802c",
        "cursor": {
          "ref": "833c6284-605f-4746-83fc-c28b2b776183",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8d2dd4df-dadd-4a3e-b965-c322a8982e84"
        },
        "item": {
          "id": "6a283e1b-563b-49f8-bc06-cc400d85802c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4c741f5a-f18f-4d41-87d6-68771350f879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418d1f2e-5130-4f1c-8cf8-a2082e57b123",
        "cursor": {
          "ref": "7c9c023e-0633-433e-ab19-d3f6d520c3df",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "86ae3d80-35d8-413a-9552-6c9ea0971574"
        },
        "item": {
          "id": "418d1f2e-5130-4f1c-8cf8-a2082e57b123",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5492fa05-d1e2-4aeb-8c29-3276cab38bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061a3041-5ba9-4d89-8d38-4f8046219718",
        "cursor": {
          "ref": "7c969efe-1002-4a2d-b955-56af658a340e",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "04e5eadf-e8b4-42df-965a-0b5ed8318bca"
        },
        "item": {
          "id": "061a3041-5ba9-4d89-8d38-4f8046219718",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3e05f66e-3905-4851-8c6a-bee4313df323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8043b04e-a6e0-42a3-b1c0-deb1b433c73d",
        "cursor": {
          "ref": "f6c90993-3b7a-4a04-a6ea-6a0221929b52",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a10ac5d0-2ec1-437a-83d2-8ac4d1ecac77"
        },
        "item": {
          "id": "8043b04e-a6e0-42a3-b1c0-deb1b433c73d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "83a2fc3d-f857-41f9-ae74-90f75e09300d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403ad10f-7e49-40d6-932e-18ec10acfd43",
        "cursor": {
          "ref": "066299ba-7a24-4a45-aadf-179b5c00470e",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a9f35338-bd91-4b8c-b0e5-bcc08e743198"
        },
        "item": {
          "id": "403ad10f-7e49-40d6-932e-18ec10acfd43",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e6986057-bfa0-4a22-ad6d-434d37c81633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7213f89-da51-4532-82e0-12ee99e41aa8",
        "cursor": {
          "ref": "a50335cd-899f-4275-9a2f-c9848f2c8a3f",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1b57ba37-1397-45af-9d50-35286519cd08"
        },
        "item": {
          "id": "c7213f89-da51-4532-82e0-12ee99e41aa8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a0d38259-9f32-4e4d-a123-d05892cb7c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12978e03-1a2f-47ea-bd10-930672324de5",
        "cursor": {
          "ref": "57ae8dc6-0ae4-4a7a-af6e-1652bc6dd031",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c268a4cf-82d5-486c-858d-dc72b4fc64e5"
        },
        "item": {
          "id": "12978e03-1a2f-47ea-bd10-930672324de5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6fc19b9f-6d39-41b0-9101-7d2ce16dd8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4104f2-d4c2-45a0-bf10-f0344fd7c5b9",
        "cursor": {
          "ref": "03c50c69-8088-4d6e-81c3-14d70c9a7714",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "60b3aba2-aeb4-457a-99c6-3c3e38c0099e"
        },
        "item": {
          "id": "4e4104f2-d4c2-45a0-bf10-f0344fd7c5b9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a91e33ca-3139-403c-9cdd-a5bac12148cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab8b189-7742-4264-a145-e09d4a78d013",
        "cursor": {
          "ref": "3551cbd3-1935-4b3d-8c93-7a88da0e7ace",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "70859a47-fc91-4c2b-be6f-699cf6c7aa6f"
        },
        "item": {
          "id": "5ab8b189-7742-4264-a145-e09d4a78d013",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cbcef75d-cfae-460d-b6ba-ced6bd5f1a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd99897-c2c2-40d8-8440-7639f14d991a",
        "cursor": {
          "ref": "68a78ed4-cf64-4842-adda-3f1c97369dd3",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e74d0dee-6e3b-4e6d-a492-8c5f56e9853a"
        },
        "item": {
          "id": "ccd99897-c2c2-40d8-8440-7639f14d991a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "df783952-2768-49fc-a421-edaca36274f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d53e7b7-ffa1-4633-84ff-880436c4c1c5",
        "cursor": {
          "ref": "c792049d-ec5b-4c12-bb8b-1ea05d3f658a",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "242bfc0f-be4d-4aa1-a41b-00020da3b6e9"
        },
        "item": {
          "id": "8d53e7b7-ffa1-4633-84ff-880436c4c1c5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "51cb2b49-eb28-40ae-87a8-5a837f995376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5523b9b-ce2f-4467-98e8-14f27e4aa7b6",
        "cursor": {
          "ref": "5348f694-f7ab-4f6c-8ea4-01e4a05c5102",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a1065b8f-9489-4168-b932-2115f3a98b4b"
        },
        "item": {
          "id": "d5523b9b-ce2f-4467-98e8-14f27e4aa7b6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "67e9b2b5-d508-403c-b5c1-b524456a0e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f06b2e-3f83-4078-a597-941115bb1d58",
        "cursor": {
          "ref": "ffe4cde3-b6b9-49b5-b8f8-39e97528d89f",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "84a5a489-b9fb-4e70-9ebf-443a33367705"
        },
        "item": {
          "id": "12f06b2e-3f83-4078-a597-941115bb1d58",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5310668c-6d42-4b8e-9123-68baeb8ff8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5860d71c-d575-434d-9fba-fe6b4100e612",
        "cursor": {
          "ref": "f1607457-99e9-41df-a291-b344d7cc2f3e",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "87e704b1-31bc-49d4-b275-b48deda176ca"
        },
        "item": {
          "id": "5860d71c-d575-434d-9fba-fe6b4100e612",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "69374f1f-31ae-428e-832d-62412b9e1ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80269fb1-14ef-442b-8594-62ee9c7a27e7",
        "cursor": {
          "ref": "cee909ec-6dc6-461c-93ce-e51cc71ceb13",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a3498d52-0ea9-4a7a-a55b-6588440408af"
        },
        "item": {
          "id": "80269fb1-14ef-442b-8594-62ee9c7a27e7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ea345741-69c3-4c96-ac23-11c66651dd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90119584-fe8c-462d-bb2a-ed55801f5d1e",
        "cursor": {
          "ref": "1d1ccbca-0201-444e-a0ba-b95b766ac4a1",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "caac5a65-d4f2-4d06-bb22-341ed49f83bb"
        },
        "item": {
          "id": "90119584-fe8c-462d-bb2a-ed55801f5d1e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "58df8049-d61d-4093-9e09-7d9e74db4583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1859e29b-319f-457d-9c99-ab1df2116d8d",
        "cursor": {
          "ref": "7c3136c6-06d5-419f-bd8b-70327c878e0a",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3500ce0a-19f9-4496-9703-45a97b4c2359"
        },
        "item": {
          "id": "1859e29b-319f-457d-9c99-ab1df2116d8d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "163356a5-0da2-4e13-9221-3ecc1efd47ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cc53cd-4baa-4b48-a460-1ac85c61b644",
        "cursor": {
          "ref": "e61f7879-641f-4b58-b82c-635b1ed04385",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e35f9f2d-5c3c-4894-bd97-4f8c61038acb"
        },
        "item": {
          "id": "f1cc53cd-4baa-4b48-a460-1ac85c61b644",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b5dcc66f-0e4c-400f-81df-f83a96ea537e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd68a6c-bc39-49eb-9f0f-e82e5a721c6e",
        "cursor": {
          "ref": "a5bff30f-dda8-4a63-85bf-d59e3c8f2a1c",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "19152c9f-282f-4f0b-a26a-426214584549"
        },
        "item": {
          "id": "3dd68a6c-bc39-49eb-9f0f-e82e5a721c6e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1df55742-c2f1-44fe-b71a-daa863a8d6d8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 597,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b47a1d-e1a8-488e-a1ff-b69a436c02f3",
        "cursor": {
          "ref": "762523a1-cc14-42f8-a676-645829cc4e50",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bba10fea-2845-4072-9c06-9528640d19aa"
        },
        "item": {
          "id": "06b47a1d-e1a8-488e-a1ff-b69a436c02f3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6b5ffeb8-f701-4145-b493-8c6172413373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c459e1-ef28-49f2-9d36-75c987a455d8",
        "cursor": {
          "ref": "3a8f4ba9-472a-42a0-84f2-b72ebf52c0c4",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3caa2b36-3682-44f2-98d4-d61bae08ef4d"
        },
        "item": {
          "id": "49c459e1-ef28-49f2-9d36-75c987a455d8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "83da7b46-379f-410e-98b8-3d26506aeb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b13e94-973a-463b-9d41-dbdfe1e63901",
        "cursor": {
          "ref": "76bb7981-4178-4d14-b3c3-e4067fdc8400",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "60e78933-c95e-4efe-bf39-73bfc5d549c2"
        },
        "item": {
          "id": "a0b13e94-973a-463b-9d41-dbdfe1e63901",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "370736a3-1bf3-4cab-bb10-852478c67335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cce0e7-4a62-49c9-833c-8ad84b0c29c4",
        "cursor": {
          "ref": "ab6d6cc3-9ca9-415f-aa7a-9ea045c184a5",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "82e21daf-7428-47dd-bb83-44f401590167"
        },
        "item": {
          "id": "a4cce0e7-4a62-49c9-833c-8ad84b0c29c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8839ad37-b09e-42ce-959b-57865fbf896f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b21587-4d91-4bdf-8245-e019d6c52913",
        "cursor": {
          "ref": "c7730286-8cf5-4c95-bd22-210ab6066c34",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "aa2b6d69-4ed8-4b39-915d-b58de4e266e6"
        },
        "item": {
          "id": "39b21587-4d91-4bdf-8245-e019d6c52913",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "62c6aad1-ebb3-45fb-97d2-b9b64d9810e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d48142-4dba-4c15-b38b-6ef60aac72d1",
        "cursor": {
          "ref": "dca4f7c8-2e16-4f7d-b34c-4d7494020469",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "43d4b284-7575-4126-9f88-4288c43a0637"
        },
        "item": {
          "id": "37d48142-4dba-4c15-b38b-6ef60aac72d1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "10ad307f-9c43-49b3-b6f0-5d6134715cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 932,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4d4d75-cfd2-43a1-8a56-fc83ca595e83",
        "cursor": {
          "ref": "b21c08cb-6f1d-4a50-afdf-e9a49855e3a4",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "77b9d556-a861-44e9-bdc5-a5d148c07962"
        },
        "item": {
          "id": "dc4d4d75-cfd2-43a1-8a56-fc83ca595e83",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fd2c2fab-5b7e-4a61-a67e-7d03ffb2cf41",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1105,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ab0081-757a-40b9-a107-c3365e2dd4db",
        "cursor": {
          "ref": "ff1d7621-a646-4b16-9f22-0bd0b047c240",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "deb1413d-45df-410b-854b-1baa04e6bc82"
        },
        "item": {
          "id": "c1ab0081-757a-40b9-a107-c3365e2dd4db",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e3d2d3c3-8619-46bc-8d5e-e63bd9f05b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ca9459-a3b9-4f15-ab57-f9488c1f3abb",
        "cursor": {
          "ref": "86541db8-0203-438a-a308-b3ee7509a119",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7d51fe3d-de63-455a-b7f6-faa3e27f0126"
        },
        "item": {
          "id": "c6ca9459-a3b9-4f15-ab57-f9488c1f3abb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "64c56ca9-3a9b-463d-b6f0-810e507f699a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848eb5e2-131d-42f1-ab1a-685babf6722a",
        "cursor": {
          "ref": "85ad4aee-175e-4e84-a43b-eba5b0e3ddb0",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6fef1df7-6223-4962-9faf-a79b4861ee7d"
        },
        "item": {
          "id": "848eb5e2-131d-42f1-ab1a-685babf6722a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f2e52107-0294-412d-8a06-2e5ef368fe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12759487-a193-46bc-9cfd-ccbee1756cdf",
        "cursor": {
          "ref": "25fc729d-b3d2-4443-b50e-334e0fdd10f2",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e09cf459-4de1-4b85-a309-f4c332ca3481"
        },
        "item": {
          "id": "12759487-a193-46bc-9cfd-ccbee1756cdf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4fa9f70f-92ff-44ba-9f21-a4636cc9e25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89301a7f-39a5-415f-91a8-624fedb28262",
        "cursor": {
          "ref": "ce17bee4-9878-4665-9e9d-e5d92d5daa9a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "df131fe0-2ae6-4256-b60e-74ce63ce9a6e"
        },
        "item": {
          "id": "89301a7f-39a5-415f-91a8-624fedb28262",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9cb13bfd-19a0-4945-bce5-6bc49907649e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84831a8-ba33-445a-9cc8-1915656a7300",
        "cursor": {
          "ref": "28128bc6-9f54-486e-8e9d-57f678061967",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e68ad89f-2119-48d8-b243-55fe9d899c81"
        },
        "item": {
          "id": "c84831a8-ba33-445a-9cc8-1915656a7300",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e7f88e9b-0756-4555-8082-f453486aad94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dd744a-7734-44fc-af73-25dddcbed61d",
        "cursor": {
          "ref": "62c084bd-b72e-4584-a6c8-ed70f0e5c974",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "824019de-dcfd-466d-9682-92ea51d9f816"
        },
        "item": {
          "id": "c5dd744a-7734-44fc-af73-25dddcbed61d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ce37615c-9739-42f9-8bde-70d95fd822b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7921f43b-344c-4b5e-b64a-b33f0b4f5b6d",
        "cursor": {
          "ref": "add3ecc2-e4a1-4ca0-86b6-8b70cfdcd19c",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9597df81-c921-415c-bcd3-de4cb0cc573f"
        },
        "item": {
          "id": "7921f43b-344c-4b5e-b64a-b33f0b4f5b6d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "481caf88-5481-490e-afc3-76d3da6c469f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76535300-8691-475c-9710-01df1995c9db",
        "cursor": {
          "ref": "f15d6bcb-ffbb-41f5-90f7-d52fac1e19d8",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8989dfe0-5868-4497-af39-97f523097a75"
        },
        "item": {
          "id": "76535300-8691-475c-9710-01df1995c9db",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "25086804-82ec-4383-bb7f-40eb27374510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cad416-08d3-4ea9-9a7c-b5dd41f9edf9",
        "cursor": {
          "ref": "72f53b67-e4e4-400d-bae1-4d14967078a4",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "169df011-e728-48be-b6aa-a5af7a58e370"
        },
        "item": {
          "id": "e3cad416-08d3-4ea9-9a7c-b5dd41f9edf9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2882b6ee-ce14-44ae-bc01-c211b98c8dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d55852e-06d2-4bcd-80a1-3bf770af051a",
        "cursor": {
          "ref": "a96444c5-fd00-4d4e-8d44-8693d699244f",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "79121233-cf04-4572-80f7-e962abb6754b"
        },
        "item": {
          "id": "8d55852e-06d2-4bcd-80a1-3bf770af051a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c794da92-d9b5-4a15-b884-071b0be01ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd605a9-d3a3-4b73-83ab-a2eca96c8232",
        "cursor": {
          "ref": "668bf92b-74b2-48ca-91b3-d0565dbb9ed4",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f80da1d4-a392-46d2-8605-48f5b044d8f5"
        },
        "item": {
          "id": "4cd605a9-d3a3-4b73-83ab-a2eca96c8232",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9b07c0db-af1e-4618-8b20-820f4e2d54e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be14d16f-a342-4bd0-955a-ab7d08e1a860",
        "cursor": {
          "ref": "58f28863-645c-4d73-925e-7e2e942aa7b6",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3533a74a-5891-4b62-b786-32c37af90f42"
        },
        "item": {
          "id": "be14d16f-a342-4bd0-955a-ab7d08e1a860",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a41091c5-38d1-436b-af2f-e013ada5c9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f9adde-f6d6-46fe-a4b6-8b966b3a13e1",
        "cursor": {
          "ref": "4ec3a99a-96a4-4b39-b089-3645653897c2",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "27d27ff6-b5a2-4321-ac89-8e1d5e381702"
        },
        "item": {
          "id": "60f9adde-f6d6-46fe-a4b6-8b966b3a13e1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bef696a0-0f07-4b3f-8e74-487280775af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aeebf05-2961-4e2c-bc94-5882f64183d3",
        "cursor": {
          "ref": "e2f2376b-2803-4741-bbb2-c9c8df45ab8c",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9bfb7ef9-25c1-4f4e-88c6-b1f760669d07"
        },
        "item": {
          "id": "2aeebf05-2961-4e2c-bc94-5882f64183d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8d3ad67c-676b-457b-a1e4-0fce277538aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c7d18a-6625-41b7-894b-bd647fc6cab8",
        "cursor": {
          "ref": "35d8fd56-e41b-4ba0-a561-8fbeb1111cbf",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "35c84afd-4728-4cdf-8182-5c4a17fab8a0"
        },
        "item": {
          "id": "78c7d18a-6625-41b7-894b-bd647fc6cab8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "228271d1-c07d-4587-9287-0473f6c53084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1655ec75-950b-4da9-890d-0a14b71f63ad",
        "cursor": {
          "ref": "ecf1f5dc-dd3a-481e-acb5-e4a68acf79ac",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e924be9e-d68b-42c8-80a1-072ea3508a74"
        },
        "item": {
          "id": "1655ec75-950b-4da9-890d-0a14b71f63ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8a2b5deb-6465-494b-863c-dc8ced3205ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43b3f8d-7048-4660-af58-644c291c2b62",
        "cursor": {
          "ref": "7193294f-7491-4cd1-8484-f9fcb5bb18b6",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "31ae1ae3-fcea-4ef4-9c4a-42db30359d37"
        },
        "item": {
          "id": "d43b3f8d-7048-4660-af58-644c291c2b62",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b027e6d2-d68f-4f8a-a90d-0211fda473f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1039,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010ad16d-3d2b-4d03-89c0-044256ec3194",
        "cursor": {
          "ref": "a6e85ba7-3525-48c9-8963-0213c85865c0",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1d0de2f7-7423-4c63-b4e2-7011e7380d36"
        },
        "item": {
          "id": "010ad16d-3d2b-4d03-89c0-044256ec3194",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0d71142d-17bb-47de-bb99-2961dd54b9a5",
          "status": "Created",
          "code": 201,
          "responseTime": 2479,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "f9e74f49-d11b-4ece-8c89-a5bae2f7d4fb",
        "cursor": {
          "ref": "cd0e2765-b920-46dd-ab8b-2d2b4f5a53df",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "97965ed9-7f82-429b-b588-4e8420e367b4"
        },
        "item": {
          "id": "f9e74f49-d11b-4ece-8c89-a5bae2f7d4fb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fd203d12-6c0b-46b1-8659-a1dfcdfe87af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f654b28c-d188-4c03-9158-dfd91c4922c1",
        "cursor": {
          "ref": "8251307d-bca2-4e09-9e84-9fb4f323b739",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cb650a75-7ab1-439d-8ba2-a7428570a499"
        },
        "item": {
          "id": "f654b28c-d188-4c03-9158-dfd91c4922c1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8c13555f-1cbd-4544-b17d-e8c338c43428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d20b83-f339-41d7-b056-3a91ee9ee946",
        "cursor": {
          "ref": "189e5a05-6b94-4fd7-bbfe-5fa9d5ac4934",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "12023b7b-b5ed-4c69-8b70-e56911c69491"
        },
        "item": {
          "id": "06d20b83-f339-41d7-b056-3a91ee9ee946",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5ec18b22-b1b4-412b-9b38-9722687873d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1174,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe10678b-2a9b-4e63-a5fe-5b5611a27238",
        "cursor": {
          "ref": "ffe1d2c7-f2ad-45cb-9231-91899d42c7ab",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fd4401fa-83a4-4c24-be18-0e95383247ae"
        },
        "item": {
          "id": "fe10678b-2a9b-4e63-a5fe-5b5611a27238",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "635f01da-427d-4f35-a5c1-b4644e1aaf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1018,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb0f6a2-8675-4e14-afba-54635ce828ad",
        "cursor": {
          "ref": "efacc085-e30c-4246-afe6-6439e2dfe8d1",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9fc3c312-bed1-4011-a70d-33e0ade63e55"
        },
        "item": {
          "id": "5eb0f6a2-8675-4e14-afba-54635ce828ad",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dba6dcd6-5da4-438f-aa7c-cbd5177d8ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1036,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567f0105-1bb0-4117-a1f6-210755dd9b44",
        "cursor": {
          "ref": "a74e4644-6a38-4c87-b7da-5c2a4c89937a",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c8587658-6e00-463a-b4cf-3a678a673a14"
        },
        "item": {
          "id": "567f0105-1bb0-4117-a1f6-210755dd9b44",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "23377d92-f105-4e5b-a03c-1b27b34b56af",
          "status": "Created",
          "code": 201,
          "responseTime": 2814,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "9da0a0d7-f007-4bf3-8f97-4519f75cbbc5",
        "cursor": {
          "ref": "0bd759d3-86cf-43c4-93ea-a6084f2d4963",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e4b3adf4-706c-4f0a-ab8d-eff951377e0a"
        },
        "item": {
          "id": "9da0a0d7-f007-4bf3-8f97-4519f75cbbc5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3e66ee3c-81a4-47ad-a00f-51f02fabef23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3107441c-bd96-4e99-bfe6-6146e40d9b1a",
        "cursor": {
          "ref": "331657b0-09ad-497b-9c27-2fabca3b3ede",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9fb6741b-aaf6-4ab3-b33f-fb5b5a723e0c"
        },
        "item": {
          "id": "3107441c-bd96-4e99-bfe6-6146e40d9b1a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8bd5de87-9adb-4d01-b9e6-b4c4fd739f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954766cf-453f-4c43-a490-5f3d5bd0e8a1",
        "cursor": {
          "ref": "c869aa09-c285-4a92-a340-b831d8227744",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4fb42822-e200-4943-89bb-2cdcdaa751bc"
        },
        "item": {
          "id": "954766cf-453f-4c43-a490-5f3d5bd0e8a1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "68791892-fef1-4221-adaa-6e5f59015999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07edb5a8-a95a-4406-bf54-26f84883fb27",
        "cursor": {
          "ref": "0a027d7b-899e-4b0b-801d-f29e616fa862",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7ded803c-c553-42e5-aae2-ce296589ebaf"
        },
        "item": {
          "id": "07edb5a8-a95a-4406-bf54-26f84883fb27",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d29e1c01-6fa0-4067-9a52-417c2c3fd515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7904cfe-ce40-4f31-ab14-08ceb93d7917",
        "cursor": {
          "ref": "803a56de-7c0c-4b83-aa1d-70b5243c1aef",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "818ee758-f911-4be0-9b36-6a271749c699"
        },
        "item": {
          "id": "c7904cfe-ce40-4f31-ab14-08ceb93d7917",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d6c11f79-7629-4caa-9bc2-0cca4220dff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f060f9-6dc3-487a-a431-df0c53a04b01",
        "cursor": {
          "ref": "8b3381d4-eb1c-4051-a896-b49d3f737b48",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9db3a26e-8930-46e9-91c8-dd057a709f02"
        },
        "item": {
          "id": "96f060f9-6dc3-487a-a431-df0c53a04b01",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "01ec3c99-ffce-4c81-92d5-145de41316d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdd299a-96dc-439a-b745-216fe91fb163",
        "cursor": {
          "ref": "640a7edc-f872-4899-8d05-de21e1bde841",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "911fe98f-9f41-4270-8d6a-0f403deb6887"
        },
        "item": {
          "id": "ffdd299a-96dc-439a-b745-216fe91fb163",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "15782520-cfbe-4b44-8484-b2f148005966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ba8664-8a88-44a9-a02d-773270fe3f64",
        "cursor": {
          "ref": "b70e1eb9-77c2-49da-ba6f-cf38a9a8dadd",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1ed5d437-8e5b-4f74-ad80-fd3c5ac7552a"
        },
        "item": {
          "id": "38ba8664-8a88-44a9-a02d-773270fe3f64",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9f4b49aa-3216-42ca-a496-15a250e2c4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1a1433-f93f-4e46-9377-19cbb8e26c25",
        "cursor": {
          "ref": "bada5262-136b-44c5-b0f3-10b171fbdc54",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "08749ab4-7e94-4d51-9e3e-15c6bddc1266"
        },
        "item": {
          "id": "cf1a1433-f93f-4e46-9377-19cbb8e26c25",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8e5d03e9-e02c-482f-8e30-1e90dc50318f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57d61c3-a231-4b98-8506-1f973f75db4a",
        "cursor": {
          "ref": "d1497f01-d77c-423f-99f6-12003c2722b0",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5410c2a4-c3a7-4f41-9eeb-c0971cda7ca1"
        },
        "item": {
          "id": "b57d61c3-a231-4b98-8506-1f973f75db4a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e23472f9-1d4e-4623-95ee-5ef627720ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de870dfc-979d-46c8-969b-8316b6e3929f",
        "cursor": {
          "ref": "852f4707-49ef-4b72-962e-f7737454bd76",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6044eecc-7be3-432f-9a39-3cc10848e269"
        },
        "item": {
          "id": "de870dfc-979d-46c8-969b-8316b6e3929f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "24ce2028-360d-4005-a5c0-ad872b6f8e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e3e886-dc13-4f5d-b29d-95be6be97922",
        "cursor": {
          "ref": "72592272-f658-451e-ac0c-7ea6ac5d490f",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "562bb1a3-025b-47cf-8e10-49670206794b"
        },
        "item": {
          "id": "f7e3e886-dc13-4f5d-b29d-95be6be97922",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "924d781d-b319-4513-8469-7cdf47a7f042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2df7fd3-a597-407d-bcd7-26f1aa61d0df",
        "cursor": {
          "ref": "c862f6d5-13c2-499c-8a71-b197e8d04b69",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3fc3e614-9ae0-46f8-b90f-9561395356e2"
        },
        "item": {
          "id": "f2df7fd3-a597-407d-bcd7-26f1aa61d0df",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fdd2b7af-84da-43c2-8254-ce12565fa2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da10a2a-e850-4911-b19a-174f3805da76",
        "cursor": {
          "ref": "71978bfb-62a0-4cca-a8f7-3109f883f5ee",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "82a2059a-0dbf-4e48-bc9f-3101cb3f843e"
        },
        "item": {
          "id": "0da10a2a-e850-4911-b19a-174f3805da76",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "789ddf2b-2873-46d4-9468-266eac512bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6edc3c-c5b3-40dd-9138-759c330af172",
        "cursor": {
          "ref": "35e7316c-f1df-4fa5-800b-8559f6a96cac",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "794f3f87-b6f3-4585-856e-1c7a965ec1dd"
        },
        "item": {
          "id": "ec6edc3c-c5b3-40dd-9138-759c330af172",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5826d678-314e-45d7-b570-251f86ae1744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1258,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21a7e3a-68c8-47e3-969c-b49b85941bc2",
        "cursor": {
          "ref": "8e55a606-6a47-4d05-a562-fa6c16a3f4e6",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "55eeac71-3993-4fcc-835d-5a02b9bba0b7"
        },
        "item": {
          "id": "c21a7e3a-68c8-47e3-969c-b49b85941bc2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f209094f-378a-41cb-815e-82011d8d8bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3856,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8743f40b-d01d-41f2-a7fe-314a6b9d4329",
        "cursor": {
          "ref": "fb2a5772-c0e9-4531-92a8-9f61c5175ba8",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dffc077b-0faf-493c-a332-81c5392c07e4"
        },
        "item": {
          "id": "8743f40b-d01d-41f2-a7fe-314a6b9d4329",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2b0fdf48-7c82-43e2-9b01-a59e9fb7a1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f55b3f-998e-4e49-94de-491f88f595b0",
        "cursor": {
          "ref": "c709d894-7980-4cc6-9014-5e674f3b38aa",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "294ff7e1-51aa-441a-843c-f15c3877ca20"
        },
        "item": {
          "id": "31f55b3f-998e-4e49-94de-491f88f595b0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b71414b8-0e1c-43ab-a282-a97da17721ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 951,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1188f3-0ab1-4358-aebb-9d97f2ec392c",
        "cursor": {
          "ref": "9cc4af40-aea4-4ba2-87a5-aea1bbfb795a",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "14bb6b3d-d818-4da7-8dd5-92c1cd36de9e"
        },
        "item": {
          "id": "0b1188f3-0ab1-4358-aebb-9d97f2ec392c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1c805268-15ac-421d-a65b-1ad4bfeea1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510460ea-0174-489a-8604-188137392f8f",
        "cursor": {
          "ref": "0f0912c4-d976-461e-8418-932712c38b36",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e007527-92f8-4755-b587-836799060eba"
        },
        "item": {
          "id": "510460ea-0174-489a-8604-188137392f8f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4e562788-70c6-4dd5-a82c-50d8c4cc8b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43389e2e-536d-4259-9f6a-30047dc78c4a",
        "cursor": {
          "ref": "91b37192-aae5-4380-9b95-33438b6b4d6c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "552399c7-1e45-4fed-9b3a-0645af0ca1e9"
        },
        "item": {
          "id": "43389e2e-536d-4259-9f6a-30047dc78c4a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "eb28290a-e1c6-4e6a-b216-765cd81509a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c218d91-0bdc-4360-8ece-1b7f6ccb47c9",
        "cursor": {
          "ref": "56d7c3b8-b375-4e8d-ab7a-453a08c58354",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7e54f2cc-6dbe-407d-8fc7-70fd1f73a3b9"
        },
        "item": {
          "id": "4c218d91-0bdc-4360-8ece-1b7f6ccb47c9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c8855f8d-73b7-4ab8-872c-277046959b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1197,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ba999a-75e2-4cdf-91ce-76f242956067",
        "cursor": {
          "ref": "bd4516e2-b850-40b6-952e-1ef0c897a6f0",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2e22d319-7356-4e0e-bc02-28ef6907da51"
        },
        "item": {
          "id": "49ba999a-75e2-4cdf-91ce-76f242956067",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e83cf228-94b4-47a8-a069-3c328f9e455c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6683c638-5841-4c03-9ae5-705e990fbca7",
        "cursor": {
          "ref": "2167493d-93b2-439e-b916-04002136339e",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8334eb09-4e59-43da-a7f6-b5ef43a5666a"
        },
        "item": {
          "id": "6683c638-5841-4c03-9ae5-705e990fbca7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ee92235f-2bf9-4031-8e1b-54e4ad3d3b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17d649b-1999-4d35-8d97-4f420308f5da",
        "cursor": {
          "ref": "7ddd3a92-aa01-4860-89cb-7dd7977884bc",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "83ba19c5-1c43-438b-b56e-ee3986b57253"
        },
        "item": {
          "id": "f17d649b-1999-4d35-8d97-4f420308f5da",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3b86c25b-5dac-43b6-9ec0-b70ea46ee8b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bf6245-540d-479e-b1e1-d6d11aedbcba",
        "cursor": {
          "ref": "96c875db-908c-4a34-b6db-87171ac94ec9",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "401d629a-3629-4a41-8db1-aa644e8ed67e"
        },
        "item": {
          "id": "a6bf6245-540d-479e-b1e1-d6d11aedbcba",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b3d4e21d-5101-447c-a1d0-22b7cc025118",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 906,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8982a9bf-110a-4bf7-bff5-60cdf308a557",
        "cursor": {
          "ref": "2e2f53c1-4207-481f-95fc-1acea3ce4965",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3af191dd-8981-4214-828d-33157cce680f"
        },
        "item": {
          "id": "8982a9bf-110a-4bf7-bff5-60cdf308a557",
          "name": "credentials_issue"
        },
        "response": {
          "id": "feeffd95-6d49-4ec8-8871-b442117e9669",
          "status": "Created",
          "code": 201,
          "responseTime": 51229,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "expected 49888 to be below 10000",
              "stack": "AssertionError: expected 49888 to be below 10000\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "2c53a7cb-2bee-47c8-b089-771a0183c65e",
        "cursor": {
          "ref": "f9164911-45dc-41f1-8015-bd63b689dd93",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "20b5d38a-faba-42c6-b8e2-ce073e67af83"
        },
        "item": {
          "id": "2c53a7cb-2bee-47c8-b089-771a0183c65e",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "b2a407b0-21d4-418a-b3f7-882821dd9127",
          "status": "Created",
          "code": 201,
          "responseTime": 19192,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80fe805-4391-4128-9119-5f5725dfdac6",
        "cursor": {
          "ref": "e3d05453-3a95-4b20-b146-bf432c6fb439",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "42f04c06-da61-426a-8db4-793486ae8f58"
        },
        "item": {
          "id": "d80fe805-4391-4128-9119-5f5725dfdac6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3a246d60-87d2-4eeb-8d29-f12e42fb0ea2",
          "status": "Created",
          "code": 201,
          "responseTime": 10413,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c1d722-0efd-44fa-aeb8-1f0a2b80113d",
        "cursor": {
          "ref": "98fff9ef-3678-4d25-9ece-73123ae5676b",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dd5d8249-be1b-48df-8df2-1d1405d717d0"
        },
        "item": {
          "id": "33c1d722-0efd-44fa-aeb8-1f0a2b80113d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d9605bfb-6324-44c1-acd8-5344b803acf6",
          "status": "Created",
          "code": 201,
          "responseTime": 8868,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d4fae0-6ca0-46cc-860a-7e14f906ebb5",
        "cursor": {
          "ref": "1f460cd9-693b-41d1-937b-9cd789e187d5",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "73a09f14-ff9a-4aa6-8bce-70309da00455"
        },
        "item": {
          "id": "b7d4fae0-6ca0-46cc-860a-7e14f906ebb5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "17faadbf-5234-4eb4-b04f-2cf3b4cc822f",
          "status": "Created",
          "code": 201,
          "responseTime": 6403,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "633209b6-af27-45c2-9ed5-17c95f2f0f4a",
        "cursor": {
          "ref": "0123d253-aa12-461e-a0bb-d536d2a1f854",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1729121f-8e9b-4484-a426-d43a28214e9b"
        },
        "item": {
          "id": "633209b6-af27-45c2-9ed5-17c95f2f0f4a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "27a4caf9-c066-4cf6-b786-e04968c664cb",
          "status": "Created",
          "code": 201,
          "responseTime": 6145,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35fb20c-5bf8-49b2-b95b-6c4d534acd7d",
        "cursor": {
          "ref": "b17c8bee-d8fb-49b5-ae99-a5ef6d62a4de",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7b104633-11cc-47e8-a480-4b3b7dbc8168"
        },
        "item": {
          "id": "c35fb20c-5bf8-49b2-b95b-6c4d534acd7d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a1f95e77-eb0e-410a-9dc4-0f4c85a70594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35fb20c-5bf8-49b2-b95b-6c4d534acd7d",
        "cursor": {
          "ref": "b17c8bee-d8fb-49b5-ae99-a5ef6d62a4de",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7b104633-11cc-47e8-a480-4b3b7dbc8168"
        },
        "item": {
          "id": "c35fb20c-5bf8-49b2-b95b-6c4d534acd7d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a1f95e77-eb0e-410a-9dc4-0f4c85a70594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5f4e71-ea49-4414-8703-1eb51c5f7be8",
        "cursor": {
          "ref": "c4dc7661-804a-4f1e-b21b-3ab86ab28898",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7afadc03-92b6-4e06-9d53-44294b5f4610"
        },
        "item": {
          "id": "eb5f4e71-ea49-4414-8703-1eb51c5f7be8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a36b0f24-ca40-4833-9f40-f88c57d0bf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1781bc71-5e3d-46da-a97b-dd75e6f7840d",
        "cursor": {
          "ref": "540b977e-6096-42b2-89a2-7cb49b7faea6",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e8adff79-4e2f-41b1-9104-45f6850b3ff5"
        },
        "item": {
          "id": "1781bc71-5e3d-46da-a97b-dd75e6f7840d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f119aec3-da49-4757-b18c-b41813e48291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1064,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa67ab5-1a0f-4005-b2b1-901d715ca7b4",
        "cursor": {
          "ref": "9df7e83f-8aa7-4de1-94be-a5510c4e554e",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d2b3f307-3f97-4d55-b10d-dceddd703892"
        },
        "item": {
          "id": "5aa67ab5-1a0f-4005-b2b1-901d715ca7b4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d16a42d1-ed93-44e8-9926-52d33f922f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312fe1c0-a9da-4652-8ca4-c9e0d889f201",
        "cursor": {
          "ref": "c1b55bfa-7cc1-4ac8-9b8a-992390c3bcfb",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4a49fbda-31dd-416d-89cb-b3607800cb7b"
        },
        "item": {
          "id": "312fe1c0-a9da-4652-8ca4-c9e0d889f201",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f0082122-f4f7-47c6-9190-e5e2c7ba77bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1580,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd004b2-403c-4e51-9cad-9b61ee4b51c0",
        "cursor": {
          "ref": "6344c1be-1e49-4ce0-8773-90344faaa312",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "44c835db-adbb-419a-9a46-faa0250b32dd"
        },
        "item": {
          "id": "8bd004b2-403c-4e51-9cad-9b61ee4b51c0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "80476087-f3c5-4730-a359-754c4cac4215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1461,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd9a605-6b4f-4138-8d90-7bbe6f65b5d6",
        "cursor": {
          "ref": "e9a61831-6ae5-4fbf-a3e0-dd6577f9733a",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "eedfdaba-b0fd-4ea4-a54a-8a3c327efb2f"
        },
        "item": {
          "id": "fbd9a605-6b4f-4138-8d90-7bbe6f65b5d6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7a0319f5-9d92-4706-897c-af4b45d98a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2065,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2cde83-e023-4983-bb28-87b9e2c84fa7",
        "cursor": {
          "ref": "753b0c2a-f4c3-4a93-963e-86da26924e84",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "876607e1-4fda-4952-9ce2-dd91ad5d7ac9"
        },
        "item": {
          "id": "ce2cde83-e023-4983-bb28-87b9e2c84fa7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7d76b8b9-8392-4368-8572-64c4f1758df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1039,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e72bfac-1fc1-4b09-8747-b4a16fdf482c",
        "cursor": {
          "ref": "c5c5a261-eeac-4a9a-b3b1-0566c364fbd3",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e667cfa1-f829-4918-848a-b00b354de2ea"
        },
        "item": {
          "id": "0e72bfac-1fc1-4b09-8747-b4a16fdf482c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "59e6c848-104c-439f-b64e-374b4100a3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1813,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a316209b-01c5-4eeb-b4c3-8ce25747efec",
        "cursor": {
          "ref": "37091e2b-6f9a-4506-b9a4-2e42233b5819",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c533ec82-c1d4-4fba-8ed8-1686d73933e5"
        },
        "item": {
          "id": "a316209b-01c5-4eeb-b4c3-8ce25747efec",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f497429e-1c04-4441-a3f2-6fbe57e54805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12138,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8bf8af-75c4-432c-941b-f59bd028bbc8",
        "cursor": {
          "ref": "1ef23817-475c-4107-9f72-408673b34172",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e02f52b3-26f2-4339-bc8f-95768182ca0a"
        },
        "item": {
          "id": "4f8bf8af-75c4-432c-941b-f59bd028bbc8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fb06a25c-75f1-4c54-b183-640709690f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10705,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3019ae87-35ec-4c35-9881-740f3ecde64f",
        "cursor": {
          "ref": "3a6f955e-906b-4a1a-8ddf-40414c5a5d19",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b9938a57-48da-45f3-bc27-f950dddf8a2b"
        },
        "item": {
          "id": "3019ae87-35ec-4c35-9881-740f3ecde64f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8f1f2947-a511-4052-a3a5-9744855a230c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1915,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a745cc7e-7a95-4b87-b268-df4541a1cd27",
        "cursor": {
          "ref": "925cac72-cca1-477b-8f2d-1e16a7d1cf3a",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "80db1043-08cf-4910-a1e9-db2079d65bd9"
        },
        "item": {
          "id": "a745cc7e-7a95-4b87-b268-df4541a1cd27",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0a243191-d90e-477d-9e7d-dd5d9aff96c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1866,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f83955-5529-43ea-8d30-731ffd2239d6",
        "cursor": {
          "ref": "426f858e-3721-4f33-ab4d-dc02a3982cf4",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8d9bf803-3bd8-49f6-b3b3-0f544b05d17d"
        },
        "item": {
          "id": "23f83955-5529-43ea-8d30-731ffd2239d6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "74716291-9c0b-434c-9a09-cf48080b960a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbdbd88-329c-4a6c-8814-c2c6656f8c77",
        "cursor": {
          "ref": "cca0544e-1c82-4e1a-a5e1-6eb647f99d80",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "455cce25-d49f-4fad-8928-b56332829b44"
        },
        "item": {
          "id": "fcbdbd88-329c-4a6c-8814-c2c6656f8c77",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c7a7bbe8-3313-4e44-a50c-b4d916afcc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef8092d-f741-46cf-a6f6-e9893ee3ad63",
        "cursor": {
          "ref": "c12c4554-d585-4950-908d-ff088e5e282c",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f46823d6-c82f-457d-8d5e-a4c8fd354bbe"
        },
        "item": {
          "id": "3ef8092d-f741-46cf-a6f6-e9893ee3ad63",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c75c7900-09d4-43b9-8c8a-992ecf3dd4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55dfbdb-9bc8-48ce-87fa-6ef53b2a0a55",
        "cursor": {
          "ref": "6f7ad380-d6ca-41a7-aba7-ed95643fdd63",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0a9c4a73-44b6-49d0-8f6d-d9c6ca01e1d8"
        },
        "item": {
          "id": "c55dfbdb-9bc8-48ce-87fa-6ef53b2a0a55",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "87ba8e23-79ab-40df-9f8e-6abb5e4d1340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161445d7-ab44-49ab-b811-6ec4394b0683",
        "cursor": {
          "ref": "4ce5f977-61ae-4715-a8b4-25012b27a203",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c604ccc0-6f83-4c44-b2da-c3b6bf8b5349"
        },
        "item": {
          "id": "161445d7-ab44-49ab-b811-6ec4394b0683",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "745fc3d2-4e92-47ec-aad4-809eb797c706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39757c5c-11a5-4944-9c68-a560ce01ccf9",
        "cursor": {
          "ref": "ee16afe2-3142-432d-b6b5-a75f7ed07054",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7bddb0d2-4e47-4727-856a-7073e6fa3f8e"
        },
        "item": {
          "id": "39757c5c-11a5-4944-9c68-a560ce01ccf9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6a3d3aac-dbf1-42e5-90dd-affecbc225ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1152,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ada2923-38a6-40b2-8aa5-c84be999ed0f",
        "cursor": {
          "ref": "f185cc39-d4d8-4bcb-bee6-0a67bffe8e0a",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "09205c93-2618-4b08-b1e3-22cb1889d8b5"
        },
        "item": {
          "id": "0ada2923-38a6-40b2-8aa5-c84be999ed0f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "65adf22e-538c-4811-b29a-332cb15da965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968270fe-6317-46b8-9017-d940535e843e",
        "cursor": {
          "ref": "3a4ff432-b1ce-4e4b-82cd-6af451cd8092",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3ff476b0-4940-4cb3-aebf-dad2605084bb"
        },
        "item": {
          "id": "968270fe-6317-46b8-9017-d940535e843e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8e3b9702-2559-4678-9b3e-47494e5c8bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc70d7e-dc78-45bc-b3da-eecd6d50f2c8",
        "cursor": {
          "ref": "88bcd5ed-dc2d-4a4a-a951-9ea675b98279",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e0fb8bdc-47f4-4c2c-8df5-b79639fc5314"
        },
        "item": {
          "id": "6cc70d7e-dc78-45bc-b3da-eecd6d50f2c8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3c00cee1-e70b-4cca-a9bc-e560ba167791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0452ff7f-283f-4aaf-b514-0f961234bb85",
        "cursor": {
          "ref": "0acc7a97-0c49-467e-8f03-30f5fca6aff3",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a53a1e6f-7521-44e0-ae91-85e59a10a774"
        },
        "item": {
          "id": "0452ff7f-283f-4aaf-b514-0f961234bb85",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "90fc5469-3c29-4d0e-b3c4-61a41e76a4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc54531-f3db-45af-819e-59f76a46a117",
        "cursor": {
          "ref": "bd46d06a-6e24-4cd1-973f-520a91c6d342",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4b3e0894-6c73-49f7-ab37-f4d3db89382c"
        },
        "item": {
          "id": "7dc54531-f3db-45af-819e-59f76a46a117",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "47b8fa24-ff06-4b1b-8aa4-9326b323f2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73096d00-2b05-4d5a-b386-918fd4aaab2b",
        "cursor": {
          "ref": "43455bfb-8079-40c5-abbb-99b09d983cea",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cd80933d-8d41-4b4b-92cf-d4924520df76"
        },
        "item": {
          "id": "73096d00-2b05-4d5a-b386-918fd4aaab2b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e702bcac-492a-41cc-abeb-557b47a9754c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d7f456-8d6b-432d-9fa5-971d29044205",
        "cursor": {
          "ref": "1c333dcb-f2a4-49d8-a53c-494e61287fda",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b7fb3cd3-2627-41e5-8c32-21b1a6a40958"
        },
        "item": {
          "id": "18d7f456-8d6b-432d-9fa5-971d29044205",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "26ac176f-5710-4f76-8c72-3badcef519b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011a3885-2501-42d4-9c58-11916e0a9963",
        "cursor": {
          "ref": "ab8f2767-ebb9-4e11-8c7e-abf0c0366b5e",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "534a7eb5-da04-4155-a7c3-6561fc38443b"
        },
        "item": {
          "id": "011a3885-2501-42d4-9c58-11916e0a9963",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b53f3b66-ed8b-4c99-aca6-8221e3812697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87f115c-8fc6-4b34-817e-6dd7bc37db56",
        "cursor": {
          "ref": "cf850b3b-dd53-4374-a0b7-a9c42b73e653",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4ab4ea0e-a3ee-41ed-b325-a472a94f9f35"
        },
        "item": {
          "id": "d87f115c-8fc6-4b34-817e-6dd7bc37db56",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ecdcd0cb-a987-43c4-9c4a-4194c1d09eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf55c26-fd0a-4d78-828d-81abb517302b",
        "cursor": {
          "ref": "a6d30f1b-aa81-41ee-bac5-9281561de718",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d16eff5a-ac6e-4dc8-aa5a-d51715377106"
        },
        "item": {
          "id": "6bf55c26-fd0a-4d78-828d-81abb517302b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "89f61971-9e6a-497f-ba8b-d6235ff8217e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924e1a5c-ae87-464a-b02c-aed53822bc86",
        "cursor": {
          "ref": "156947ba-1a21-400f-8e60-2f80af1fec77",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "941bf60b-59c9-4c23-bd81-ce2a5a717c94"
        },
        "item": {
          "id": "924e1a5c-ae87-464a-b02c-aed53822bc86",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "779e6b48-709d-4c5d-9fd1-1f962031dae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edca973d-49c9-496e-8d5c-9d6595e9232d",
        "cursor": {
          "ref": "13e80f02-386b-40d1-9d85-ec90ee1b32e7",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2871ed90-3734-4432-87c5-b893dfbb7020"
        },
        "item": {
          "id": "edca973d-49c9-496e-8d5c-9d6595e9232d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b59e7a15-b8cc-49ef-8551-e1bb5db55d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1081,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a48504f-6ca5-4089-9425-bfdfd5e77ef0",
        "cursor": {
          "ref": "d8033283-3d26-4ff2-9a52-8ef125ac4e72",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "46b0a0c4-3be3-4b43-bd77-b9a0ab13f77a"
        },
        "item": {
          "id": "4a48504f-6ca5-4089-9425-bfdfd5e77ef0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cfbec3d9-0571-4d48-9139-319d83d99b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ac35f1-c662-47f3-8ed1-1a125031ee17",
        "cursor": {
          "ref": "9dcec80a-7570-4720-a317-009ef55285e2",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2abfeff9-3382-48f9-b315-9f2f34983612"
        },
        "item": {
          "id": "87ac35f1-c662-47f3-8ed1-1a125031ee17",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "03044128-adf0-4b6f-bab6-6ddfa1eb6b80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68b1a61-db9e-4779-b7a4-1e8afd67fe59",
        "cursor": {
          "ref": "f1dc1f53-0d69-4b03-afa9-7b6b72399351",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "61eda4f8-dd47-46a3-bb33-ac32180e76a0"
        },
        "item": {
          "id": "a68b1a61-db9e-4779-b7a4-1e8afd67fe59",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "595fae35-4559-4595-b6f1-30fde3692c13",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 492,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93649bff-bc7e-4dc4-a621-7619399fb77d",
        "cursor": {
          "ref": "b254017a-93f6-4e61-8fcb-b6ceea62cc3a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b715df06-658f-412b-b01d-5c36be212bd6"
        },
        "item": {
          "id": "93649bff-bc7e-4dc4-a621-7619399fb77d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "927d5b30-5392-48c1-be47-9e1cfe75082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93649bff-bc7e-4dc4-a621-7619399fb77d",
        "cursor": {
          "ref": "b254017a-93f6-4e61-8fcb-b6ceea62cc3a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b715df06-658f-412b-b01d-5c36be212bd6"
        },
        "item": {
          "id": "93649bff-bc7e-4dc4-a621-7619399fb77d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "927d5b30-5392-48c1-be47-9e1cfe75082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946e7a01-bfcd-4810-b72f-6131cfc61760",
        "cursor": {
          "ref": "81d9ce74-e181-4443-a885-8e196ac05993",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8389ba8a-b819-4d10-9001-eec5e579c764"
        },
        "item": {
          "id": "946e7a01-bfcd-4810-b72f-6131cfc61760",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "88d4eaef-fa26-463a-a4e6-4a5fcef0108e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1193,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "251a5d3c-7001-45f7-9ec0-041222d98a4d",
        "cursor": {
          "ref": "d4ff9396-2b49-4e6b-8ac0-697b7c07b3b0",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d4b58542-7be7-46c3-bdf4-9706d5ab856e"
        },
        "item": {
          "id": "251a5d3c-7001-45f7-9ec0-041222d98a4d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "86fff220-0bc3-4337-a91a-877dd2943155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319ef722-1d3a-426d-9fa3-0ba9f21f74dd",
        "cursor": {
          "ref": "a79db310-21e7-4a33-89d0-1930a9d91000",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bf50a88b-9fbb-4c5c-8986-b3d34742a828"
        },
        "item": {
          "id": "319ef722-1d3a-426d-9fa3-0ba9f21f74dd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "01c33d9a-acce-477b-91bf-8aadeb611802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8525714-a70c-4bfb-a3d5-f7a3b64f471d",
        "cursor": {
          "ref": "c5111a18-1390-4e3e-95a9-600984f0a96d",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4cea56af-0170-43ec-a15d-590c62d62328"
        },
        "item": {
          "id": "c8525714-a70c-4bfb-a3d5-f7a3b64f471d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "73735dbc-14c8-41f8-892f-96df571533ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b01f4e-be9a-4d42-a5f3-10d6eac49a30",
        "cursor": {
          "ref": "be98d719-7acd-4c42-bfb7-6f26bf753d1f",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e73daa1b-405b-49c8-81f9-c47d72246571"
        },
        "item": {
          "id": "79b01f4e-be9a-4d42-a5f3-10d6eac49a30",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4ff77b3b-8359-44c7-bf3a-e7dda54f79f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678a8e22-4885-4f8d-9c96-1baba0276568",
        "cursor": {
          "ref": "c0e4822f-f431-4d86-aaff-f22620834f6a",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "048e435d-3ab6-4a1c-81ff-68b88eae894c"
        },
        "item": {
          "id": "678a8e22-4885-4f8d-9c96-1baba0276568",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2b9e4f5c-a0e0-4d0d-990f-2613b1cacc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ecbf77-bc6c-415c-80a8-28ac7ece4aad",
        "cursor": {
          "ref": "5e4d9de1-8d09-4cee-9bf6-93e2966abbf4",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1da11dc3-130a-4865-b362-450d35bd0481"
        },
        "item": {
          "id": "e4ecbf77-bc6c-415c-80a8-28ac7ece4aad",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "dc563acd-9d21-4f15-847c-ace424e3650c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e0ac9e-7a1e-41e8-8b50-014c4e575e08",
        "cursor": {
          "ref": "0a33818f-d87d-4063-8eeb-1ad19d608538",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bc756782-6c4e-4a6d-92e1-f9433b109ce5"
        },
        "item": {
          "id": "46e0ac9e-7a1e-41e8-8b50-014c4e575e08",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0fff28c4-c030-45b5-9839-fee20545e62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5688d771-d8ac-413a-b91a-42386a218a54",
        "cursor": {
          "ref": "67b5e8dd-fc9a-4a93-ab59-ca2f2a7d5b44",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d101423b-acd7-4c2e-8398-6371c9d6bc5b"
        },
        "item": {
          "id": "5688d771-d8ac-413a-b91a-42386a218a54",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d3584c75-b108-47ba-b975-d5fa28e50c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd03cdee-1df0-4a07-8000-24181e1a2f7f",
        "cursor": {
          "ref": "3330676a-4992-4865-a074-3ab4e6de758e",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ee452fed-190c-4ca7-8dc7-35f7d092c567"
        },
        "item": {
          "id": "dd03cdee-1df0-4a07-8000-24181e1a2f7f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d73c5bc5-d540-42a2-8101-c9298fe9c1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3639720-79fe-42fa-a05a-a916b64e8695",
        "cursor": {
          "ref": "b3af7c94-12d1-4917-b538-316ce8234790",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "969bb9d7-3ba0-4d27-9cb9-9f05e4acb10b"
        },
        "item": {
          "id": "b3639720-79fe-42fa-a05a-a916b64e8695",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d6ac4486-e8cf-4a1b-b91f-c289c1c0681a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5e1baa-6cfa-4dc5-b125-a26000e6b74a",
        "cursor": {
          "ref": "d5fa9b4b-4761-4a8e-b18c-f77579771314",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "df396384-59a8-4f9f-882c-d839351bbae0"
        },
        "item": {
          "id": "4c5e1baa-6cfa-4dc5-b125-a26000e6b74a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b4c1c83e-12f4-43c6-81f2-4ef0e9c953bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bf9b92-8f2e-4ae9-9d95-5cc221468eeb",
        "cursor": {
          "ref": "2f8737d6-0c58-4a8c-b1d3-1608dad82eb5",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "21dd91c0-60f8-4e22-94a6-65b70ec5f17b"
        },
        "item": {
          "id": "40bf9b92-8f2e-4ae9-9d95-5cc221468eeb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7057e2ba-cbd6-4cc1-938e-44948b227e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3763da-0070-4e00-8782-81e911567e9b",
        "cursor": {
          "ref": "a5dae30b-725e-46c4-8328-55b9092582d7",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ae5ac9ce-b99e-4318-b467-dda5615336fd"
        },
        "item": {
          "id": "ab3763da-0070-4e00-8782-81e911567e9b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f00196df-bbb7-481d-b48a-e53c5015c5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d58b79f-8ac4-4c4d-9471-3b64b2f5d1f2",
        "cursor": {
          "ref": "412cc0cc-19e7-4974-81ba-46c5df16c33e",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8741748d-e743-4209-b022-6dc7ab28af5f"
        },
        "item": {
          "id": "9d58b79f-8ac4-4c4d-9471-3b64b2f5d1f2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "82c04d7f-b0d2-409b-9241-78512fc66c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8b516c-a994-4428-8935-7ae98a15606b",
        "cursor": {
          "ref": "59b852bb-2f8f-47fd-83bc-c0836d12230e",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5c2ac27e-f366-4e2a-805f-594bf3b3642c"
        },
        "item": {
          "id": "2e8b516c-a994-4428-8935-7ae98a15606b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cecb2a52-cb5c-4e6d-9ecb-6405516fffa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2523a8f-3e27-4251-b8de-ad537f7986f3",
        "cursor": {
          "ref": "9bfa0988-ca17-469b-b688-6c1cea33883a",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "06b26b27-ea74-421e-9fc5-4261c2b84a6f"
        },
        "item": {
          "id": "f2523a8f-3e27-4251-b8de-ad537f7986f3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cfd7ffe2-83a2-4db8-a6e6-520111e44bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee484828-647b-40e8-aa2e-143479e73a11",
        "cursor": {
          "ref": "290655ba-5e1a-4842-b308-ac511762addc",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "35a97b48-e82c-451c-abc7-faf5221666e2"
        },
        "item": {
          "id": "ee484828-647b-40e8-aa2e-143479e73a11",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5c9906a1-6272-487c-a212-30cbcadf6664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277bde81-4712-4737-ae38-eb1045186220",
        "cursor": {
          "ref": "5021b9e7-35fd-4477-a67e-39f1088c852a",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "523a9346-d4af-4e2d-8f45-077360023638"
        },
        "item": {
          "id": "277bde81-4712-4737-ae38-eb1045186220",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3557dd1f-1aa4-44f2-8efb-8420717acd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54515fe-28a1-49dd-ad2c-fca13198c784",
        "cursor": {
          "ref": "f80ca5ff-25ae-4269-b9b2-0e9e2a2553f1",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aa04b87b-2695-4566-933f-c2c24a121d6f"
        },
        "item": {
          "id": "d54515fe-28a1-49dd-ad2c-fca13198c784",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "959e139f-6472-4647-a227-4dae1295c94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61434a8-4439-43ce-9697-03f87d9c2bf9",
        "cursor": {
          "ref": "d16e7d5c-16eb-471d-8341-ed89d364ca48",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ab02a056-e553-4303-b45b-59e3ec9b09e3"
        },
        "item": {
          "id": "c61434a8-4439-43ce-9697-03f87d9c2bf9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2a06fb64-c9d3-4fe3-939d-a203a49652f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6eaf18-25ae-47ba-8039-a0ff04541927",
        "cursor": {
          "ref": "370c1297-e27d-44d3-944c-9ef7236a2b1f",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d6b6e882-06f8-4924-8f87-c75aeab6b279"
        },
        "item": {
          "id": "5a6eaf18-25ae-47ba-8039-a0ff04541927",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e133a6a3-ea33-46ee-aeaa-13b91389e516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f8a053-7153-441e-a92d-f6ab3c5ab559",
        "cursor": {
          "ref": "a704d6b1-940b-4e23-b020-351ba5463ff6",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c5ed97be-1bc6-4f15-8e1f-5f26964be710"
        },
        "item": {
          "id": "57f8a053-7153-441e-a92d-f6ab3c5ab559",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c916e130-71af-4726-8a83-cb709a9a5d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcb7139-605d-4c18-b58c-07eaf42b688d",
        "cursor": {
          "ref": "50f5d4f1-e963-4b2f-aeb8-f536fa894a66",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9201cd6d-3766-434a-a4ea-fac2f6224de2"
        },
        "item": {
          "id": "7fcb7139-605d-4c18-b58c-07eaf42b688d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2e3922fe-5c66-451b-8220-ded3196e2727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52e7bef-a10b-4b44-bf07-c047368b122e",
        "cursor": {
          "ref": "85761c9a-1377-443e-ae55-bda36b025127",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0d2c4376-c190-40f1-ab63-6fd1f7191ba2"
        },
        "item": {
          "id": "c52e7bef-a10b-4b44-bf07-c047368b122e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "29d91ad0-596c-4bf4-b420-c6ccac8d8928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcb820f-52a8-4942-bd84-8411bdf048e7",
        "cursor": {
          "ref": "b3b85048-7411-48c5-a9ec-34775341ef30",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7f2f7d40-9d87-421e-8c77-644449449813"
        },
        "item": {
          "id": "2bcb820f-52a8-4942-bd84-8411bdf048e7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5ef92881-2690-46a1-960e-78cbadda3abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11896b0d-6319-4600-a8c3-c26ef3c995b3",
        "cursor": {
          "ref": "24c1801b-ae04-40fc-b2c6-c25ea3f8b7e2",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "05e1548e-e103-441d-a3d1-7763354b660c"
        },
        "item": {
          "id": "11896b0d-6319-4600-a8c3-c26ef3c995b3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cbb97057-8705-4ec4-abcd-75a5eae4e2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c16f0ac-7285-4b4c-ade5-a0fb21d9cadc",
        "cursor": {
          "ref": "f260748a-f2e6-4700-8d89-fc69afe44e68",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "58f59816-ccea-4f6c-ab57-8c1e29041e33"
        },
        "item": {
          "id": "8c16f0ac-7285-4b4c-ade5-a0fb21d9cadc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7835da38-17e0-44b9-bc25-a00d23881300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30abc5f-a3f4-40dd-af04-60d8db5c1eb1",
        "cursor": {
          "ref": "3769f777-3fb1-42e6-9b6c-7efb51d02299",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "79d72dcd-db10-4c43-bb85-6f988972eb78"
        },
        "item": {
          "id": "f30abc5f-a3f4-40dd-af04-60d8db5c1eb1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "22a45f27-1601-41df-bbb3-7769fb7b72da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3205d745-7251-4a08-b07b-03d0609eec4e",
        "cursor": {
          "ref": "6e35bac9-6b39-4118-9546-910711cac7a5",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a3dd4446-4e80-45be-a21f-a3cc11927241"
        },
        "item": {
          "id": "3205d745-7251-4a08-b07b-03d0609eec4e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ca10ee47-a2e9-415d-aa16-4fc777a0d8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57cbd72-675f-4966-b63f-79bfba993007",
        "cursor": {
          "ref": "924386b3-cb0b-4fc5-9c79-a1bfeb5a8ef7",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fde9f970-a093-46b1-9ab8-300bb498e52e"
        },
        "item": {
          "id": "a57cbd72-675f-4966-b63f-79bfba993007",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "71b7a1f7-58fa-4f3c-8356-1aae214632c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41617dfb-dc96-4f03-b766-27d74967aed5",
        "cursor": {
          "ref": "02d9357e-98d1-4919-ab69-c4cf3ddb4019",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c35c84b1-1584-44d0-93fe-748182f7710b"
        },
        "item": {
          "id": "41617dfb-dc96-4f03-b766-27d74967aed5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5ba0aa18-8097-4571-acd5-f524bfa795f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366d591b-e6e2-419e-9218-acc47a929e88",
        "cursor": {
          "ref": "3fe09772-f2a9-43e0-bc43-64c0ec6c1e48",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d8761912-c792-45df-9cbe-a90b0226c6cb"
        },
        "item": {
          "id": "366d591b-e6e2-419e-9218-acc47a929e88",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "063be134-c606-4035-9cf9-b7cb895b6eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899901ed-d29a-42b0-9f21-89a80f0ebee2",
        "cursor": {
          "ref": "ace99249-d53d-4507-8ea6-349d690caadf",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "de40bcc4-b7a3-4f2f-8f63-4ade4bc07041"
        },
        "item": {
          "id": "899901ed-d29a-42b0-9f21-89a80f0ebee2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "38f885fa-5737-4591-87d1-9e4a8e7f19a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6371b53a-739b-4504-b716-03bb398f8db3",
        "cursor": {
          "ref": "5628ae16-f44a-46e6-8e0e-902c23a4682e",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2923ed37-bd86-4470-9e23-d9c5c9ad2c6b"
        },
        "item": {
          "id": "6371b53a-739b-4504-b716-03bb398f8db3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2595edeb-9904-493e-8348-f21845d5d7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09de1dd3-f76a-4bd8-a51c-124159d473b0",
        "cursor": {
          "ref": "f63505a7-9098-45be-8908-faefcad2df87",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b5294909-21a1-446b-8338-7e0b6ebdd77a"
        },
        "item": {
          "id": "09de1dd3-f76a-4bd8-a51c-124159d473b0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c1c386a0-fdbc-4c7b-9433-17d47fb81fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076e08e7-3fea-429f-ac55-398e5fc0c11a",
        "cursor": {
          "ref": "083a2b45-3327-420c-8c74-75368dd3c314",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a740cca9-9030-4387-b3d6-2499d33be6ae"
        },
        "item": {
          "id": "076e08e7-3fea-429f-ac55-398e5fc0c11a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c0c74584-0d08-4412-8462-d3a99bc07767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d56cf21-e390-41b6-bfba-3f388ba29a50",
        "cursor": {
          "ref": "9c141883-c5bf-4255-838a-68af0b511a10",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "66b75597-744d-4ae6-8ce0-764a28954ef6"
        },
        "item": {
          "id": "7d56cf21-e390-41b6-bfba-3f388ba29a50",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2da18cef-9810-4e4f-86fd-9e5057fdd7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143efad8-3aca-434f-b7b7-1db7c9e2b03c",
        "cursor": {
          "ref": "ab379dde-5537-4f14-b377-511274aa4157",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e2d08a27-9daa-45ac-b64b-29ef96e4f6c8"
        },
        "item": {
          "id": "143efad8-3aca-434f-b7b7-1db7c9e2b03c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "776bb839-355f-4983-a8ab-ab61d20dc103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89999627-65ee-4555-8238-71574fac9bde",
        "cursor": {
          "ref": "5cb394dc-678f-4931-9373-aa78022d6cd7",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "51035aac-ed8a-486b-9e16-1d8d39f16fdd"
        },
        "item": {
          "id": "89999627-65ee-4555-8238-71574fac9bde",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4ca09a6e-a50e-423e-b54c-f04fd263317a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5810d5a1-8f00-4e42-b428-fba7a4783f8a",
        "cursor": {
          "ref": "be4a105a-2d83-4c05-aa3c-23d89cf5cf18",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0fdcef3b-d6e9-4b2e-a397-f4aaa6c56ad1"
        },
        "item": {
          "id": "5810d5a1-8f00-4e42-b428-fba7a4783f8a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fd2886b1-7686-49e5-987a-703233a337ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ea474e-2c85-4b7b-a498-b5bccd38a0c1",
        "cursor": {
          "ref": "b8dc0531-c2ca-40a9-8691-935f3037afdb",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "920390ba-dd7a-4a2f-94c4-9880b91c268c"
        },
        "item": {
          "id": "e9ea474e-2c85-4b7b-a498-b5bccd38a0c1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "967fd7fc-1ec4-4457-875e-9fe7dbbb9a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163de8bc-c54e-42b0-8811-f5d16065c2a7",
        "cursor": {
          "ref": "893ec2e2-d394-474a-9c2a-5ed823b801e3",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "64dc953c-defd-41e9-bbde-3c8902ed496c"
        },
        "item": {
          "id": "163de8bc-c54e-42b0-8811-f5d16065c2a7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "88a1c4e2-3e7f-48ef-a113-ecec15419574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6db437e-9b66-4e41-ad9f-ad6c2605edc0",
        "cursor": {
          "ref": "deb9713e-0fc7-4a2b-a274-bf8709911fd2",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3435b2fa-c9af-4937-b311-f4181c11fc0e"
        },
        "item": {
          "id": "a6db437e-9b66-4e41-ad9f-ad6c2605edc0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6e1868d7-c895-45f1-9de1-d8baef409331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315c99b3-d60d-489d-a31a-5bfc3b40700e",
        "cursor": {
          "ref": "b4bb7502-b74c-4abb-bf03-c50b0698f240",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9b4f9c06-c3c9-446d-a413-6700d4b8f9c5"
        },
        "item": {
          "id": "315c99b3-d60d-489d-a31a-5bfc3b40700e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9a204ede-9765-446d-b49a-5f94ec3fdaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86471696-24f4-49e6-bcc8-74023eca18cb",
        "cursor": {
          "ref": "7d7ccf3a-1590-4840-a580-f63756cfc896",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2f8a63a4-c4bc-4c93-a8bf-3da81979d665"
        },
        "item": {
          "id": "86471696-24f4-49e6-bcc8-74023eca18cb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c57f3314-3cd5-4553-8731-0d3672f81b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8408eaf-3abc-4554-a4c1-e8ea55559a07",
        "cursor": {
          "ref": "06226d83-7e31-41e6-ad36-5113536f99e5",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f8decaf7-fd6c-4fbb-923c-52d48aeede8b"
        },
        "item": {
          "id": "b8408eaf-3abc-4554-a4c1-e8ea55559a07",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "10067424-1696-43fa-8cec-9bb13050301b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89ed9f0-ee2f-468d-93b4-2cd921aafcf1",
        "cursor": {
          "ref": "e35cf80d-f847-43c0-a0c7-58e8bac734ef",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "690b8f90-4ef5-4ede-9a39-fa67426a7098"
        },
        "item": {
          "id": "c89ed9f0-ee2f-468d-93b4-2cd921aafcf1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7a9b938f-5518-46fa-9bfd-a6a372041a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb587ea5-05a4-403e-81e2-4a51bff605e2",
        "cursor": {
          "ref": "0077dced-8eb4-4bc5-bbcb-f6bc7872d7ef",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3f0a96a9-9586-4300-a236-756014d69a4e"
        },
        "item": {
          "id": "cb587ea5-05a4-403e-81e2-4a51bff605e2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4ad2deac-ecc4-4f88-bcbc-a19a9ded1200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cd1e2a-7cdd-4535-b482-dedaa4063b9f",
        "cursor": {
          "ref": "5feec55a-61e8-4f31-87a2-91dff55e8ff0",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6ecf4f7a-22e8-468d-9218-087e2b5f76ea"
        },
        "item": {
          "id": "31cd1e2a-7cdd-4535-b482-dedaa4063b9f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "031183e0-2e5a-46b6-8b75-cb4fb5c2521a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fbbb92-316c-4efd-9b56-a9e429f1d53e",
        "cursor": {
          "ref": "b321ff05-2e09-44a9-bcc8-8fd05861334a",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f2fcb916-1d74-4d3e-9a7e-63a1677e35ee"
        },
        "item": {
          "id": "95fbbb92-316c-4efd-9b56-a9e429f1d53e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9573bc63-fcee-4805-a685-9251ef0183f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad1a4b6-7648-4d5b-b295-089274f81633",
        "cursor": {
          "ref": "007d7186-f955-41c8-9be7-392d5ad2fd36",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "690d6247-cd76-4a41-9e08-e5b2e2a83668"
        },
        "item": {
          "id": "dad1a4b6-7648-4d5b-b295-089274f81633",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6503717d-feec-4e39-9de5-7d5013fa699b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e73316-5bcd-4c52-99e8-f1dc7ee63943",
        "cursor": {
          "ref": "1e27d170-3d5e-49ea-b779-a8a5caf5f7b9",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ba7f7495-b07c-4522-a438-438e7cdc8cd5"
        },
        "item": {
          "id": "a6e73316-5bcd-4c52-99e8-f1dc7ee63943",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3d179fa2-c88a-44aa-bb41-dff432f3feb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb6f60a-5b06-4a19-b34a-e370230d41e3",
        "cursor": {
          "ref": "2cecc9d1-c42c-4942-84f5-8c93ca010ae0",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "65cf8486-9cc9-4168-9b55-dcf6ab8a731d"
        },
        "item": {
          "id": "ddb6f60a-5b06-4a19-b34a-e370230d41e3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e6fde4c3-320f-46f2-aeec-cf8237ec8a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5213eb8b-9d8a-4597-981e-42887c304a0e",
        "cursor": {
          "ref": "3b82f0fc-f096-4eff-91d4-3cd8f43a6c87",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "94c973e7-7f40-4965-8277-ddb1bcb1ae86"
        },
        "item": {
          "id": "5213eb8b-9d8a-4597-981e-42887c304a0e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "28d80d1c-5528-4ce0-aada-6c730f9b4eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc20d9ca-aeab-4c57-a5b5-4449ef875ed8",
        "cursor": {
          "ref": "2591f933-e852-4296-a2a6-88b3c11c7202",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ee886d62-ee44-416b-a1dd-3048599999f2"
        },
        "item": {
          "id": "bc20d9ca-aeab-4c57-a5b5-4449ef875ed8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ed8a2e18-531e-4086-81bb-45058528141c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e03db49-1ed5-4f5e-8fe4-16886c19265c",
        "cursor": {
          "ref": "091dd694-9974-4dff-9caa-8ca9c4be6b71",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8bd38048-14e2-4530-9339-1efadf7a58f9"
        },
        "item": {
          "id": "3e03db49-1ed5-4f5e-8fe4-16886c19265c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "19559ec7-bc0e-4682-bc89-d0fb6bbe860c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f42854-3db4-4479-bcb5-14798e57bd5b",
        "cursor": {
          "ref": "91ca0e9e-221c-46af-90c1-41e64f2e38b8",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1b332d6c-daf6-4271-954c-25ef5bb6dc47"
        },
        "item": {
          "id": "61f42854-3db4-4479-bcb5-14798e57bd5b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "92a5aad6-8717-44ea-b61b-f2b65a157867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda703f4-cc9b-4596-afaa-ecc8526dee95",
        "cursor": {
          "ref": "4667656b-0d55-4aef-8101-6695f89ff66b",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f751658d-ef42-4b7c-ae37-0eb9d1838b1f"
        },
        "item": {
          "id": "bda703f4-cc9b-4596-afaa-ecc8526dee95",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9ae018df-ba29-4672-a2f3-8e006253900b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78373b7-c40e-414d-a569-d72872b1c73f",
        "cursor": {
          "ref": "5ec72b61-7333-4fef-bf28-1083ce55869e",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "948f19a1-dffa-4764-a8f0-c5de08a5fd59"
        },
        "item": {
          "id": "e78373b7-c40e-414d-a569-d72872b1c73f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "154cc677-689c-4146-9e73-92b9889457b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eab4083-6c37-435d-942b-cab187256cd0",
        "cursor": {
          "ref": "579e3acd-5c09-41b8-a341-d8102412f6e7",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f8ed169b-5482-4778-b051-a56e8c77cb24"
        },
        "item": {
          "id": "5eab4083-6c37-435d-942b-cab187256cd0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fcdd91d1-0e08-4d65-b5c3-47062ac57088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ace240-7b4e-4aa5-b3df-8d7f73339108",
        "cursor": {
          "ref": "af9b5d83-97fd-49e3-ad6b-bb7bf70e843b",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c3bbeda5-84b5-4d9c-8175-00c343ac0627"
        },
        "item": {
          "id": "b3ace240-7b4e-4aa5-b3df-8d7f73339108",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b7adfa91-2a55-4f8a-bb98-64d3d414ef10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a7c1b0-7981-4ba4-bfa5-c99e5bfb853d",
        "cursor": {
          "ref": "234c32dc-0a2c-4714-a8cb-0cf67ae85c9a",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b04528e2-1b9e-429b-8664-ce004836c03e"
        },
        "item": {
          "id": "73a7c1b0-7981-4ba4-bfa5-c99e5bfb853d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d87f9191-221b-4cd8-9b35-418e48cc19fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfbb018-0dff-4feb-b3a2-1bd88467a4d7",
        "cursor": {
          "ref": "0832720f-0a35-423c-813f-605285044fe4",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "01ca0e42-36f4-4353-9830-c4204af4c0ff"
        },
        "item": {
          "id": "6cfbb018-0dff-4feb-b3a2-1bd88467a4d7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "43f34e13-6c82-4a9a-b47f-a9b3d2d1eab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1204,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b4b553-a496-4b29-90be-ab1811b3740c",
        "cursor": {
          "ref": "830726bf-5bad-4ee1-a213-e45a50afc6aa",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c6f5aa0b-caec-45c3-a0a3-cc4bd5639313"
        },
        "item": {
          "id": "c2b4b553-a496-4b29-90be-ab1811b3740c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bb9a20c4-eb10-4213-9982-39ab57a3db31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1501,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bf31fa-04c5-40a4-b8aa-d10d8ade9c2d",
        "cursor": {
          "ref": "30180b17-f8c9-4066-9af7-6e76d6c6845c",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d9a1dac5-0471-457a-a864-cd8d1e9e4729"
        },
        "item": {
          "id": "f4bf31fa-04c5-40a4-b8aa-d10d8ade9c2d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "af16d987-81fc-418d-a552-a6b0eb064d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c780066-d9d0-499d-b716-ca29e2eb1cff",
        "cursor": {
          "ref": "397a456f-0c2c-4d61-85c7-a556f26ac8d2",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ed6ad3ca-9460-49d1-b308-317f3ff44cac"
        },
        "item": {
          "id": "6c780066-d9d0-499d-b716-ca29e2eb1cff",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bf2e8df3-dd17-4eb1-b2e9-257bae2e85c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01842d0-0a21-4c80-9ac6-7166824be620",
        "cursor": {
          "ref": "6d0d92ee-4d73-4157-a772-4689aafc491d",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f6396b10-a7f2-4e43-9605-3177bdd8d4c7"
        },
        "item": {
          "id": "c01842d0-0a21-4c80-9ac6-7166824be620",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8b4b16f3-51b0-4b60-b46d-c464eeba7e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1332,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26587ca2-733b-4320-bc3b-c07a540bfb3a",
        "cursor": {
          "ref": "2ad9b166-8595-4f41-874e-89942cd950f3",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "42c86c21-974d-492e-b12d-6d666d4fb0fc"
        },
        "item": {
          "id": "26587ca2-733b-4320-bc3b-c07a540bfb3a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6e194eab-84b5-47e6-ba6a-68ea4a338889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c480a2-fb60-48e6-82a2-1b482ead79d8",
        "cursor": {
          "ref": "16d32f91-8929-444b-8b67-d3c372cc69c5",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "29614c40-6f92-44df-a172-2c73110de720"
        },
        "item": {
          "id": "53c480a2-fb60-48e6-82a2-1b482ead79d8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7d87dcaa-9b80-4972-b71f-435ef0db3371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1178,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc60b31-4935-4f20-8301-39529e4e6142",
        "cursor": {
          "ref": "f25b7a8b-3a8d-4473-b392-69d1a9f41aec",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4fdb9555-bc64-461a-a185-00e10e284db4"
        },
        "item": {
          "id": "2fc60b31-4935-4f20-8301-39529e4e6142",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "13407634-d805-4c34-ab6f-5838c4950fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1082a5c-0831-41b5-b216-5bf1d62f96f4",
        "cursor": {
          "ref": "c528cd72-abf9-460b-bf19-65cdd16d3368",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "60502c16-5f9b-470c-82a9-25899bf9acb7"
        },
        "item": {
          "id": "c1082a5c-0831-41b5-b216-5bf1d62f96f4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0dbc3862-995d-459f-9462-52efb304abe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d98166-e401-44d8-ab96-682f50d072da",
        "cursor": {
          "ref": "54f177d6-0e36-43aa-8940-62da0d48154f",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "12c015ed-2693-4bb5-97fc-6fb9aa77048e"
        },
        "item": {
          "id": "c4d98166-e401-44d8-ab96-682f50d072da",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "75417b7b-7b63-4048-86ca-4910d74d9778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a0652f-6638-472e-a761-34777c56ebb0",
        "cursor": {
          "ref": "47d0a2ec-6199-43b5-9d42-fb2999f64189",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6c7c7a33-4700-4a0d-a9ed-5b7ffcebbb20"
        },
        "item": {
          "id": "35a0652f-6638-472e-a761-34777c56ebb0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a4efc13f-a421-429a-86a9-8bf4a4fcc9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eac2b66-940f-4017-af9d-14b8db371dec",
        "cursor": {
          "ref": "d6e082bb-205a-4047-acdd-7aed7bbbc16e",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cc2d18e8-4401-47cb-93e4-d203110d3127"
        },
        "item": {
          "id": "6eac2b66-940f-4017-af9d-14b8db371dec",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2cedb440-932e-4979-a597-c0ac38ec08b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a87006-9335-42ee-af2f-2569efcf66d1",
        "cursor": {
          "ref": "bf5af66c-b1bb-4dc0-bdde-915e0073a36a",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "753b1f0c-b286-403b-8c63-5cca37f3c3bf"
        },
        "item": {
          "id": "08a87006-9335-42ee-af2f-2569efcf66d1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fe7c014f-7c86-4468-8cd7-d465196da629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5a5805-b92f-4720-b0fa-c183cdb31ba1",
        "cursor": {
          "ref": "b85a55a1-a55d-42bc-8d8f-f7455ecd801e",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1fd82311-c576-4250-93d8-c2e944be93a0"
        },
        "item": {
          "id": "7c5a5805-b92f-4720-b0fa-c183cdb31ba1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0fad0fb5-364c-4c3c-a4fd-ee444e5e7935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43104f4-02ce-402e-9f90-686e9f15f50c",
        "cursor": {
          "ref": "1321b998-4496-4462-a249-499540f9b5c4",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "febe5b5b-07b6-4085-81f0-ee24733100c4"
        },
        "item": {
          "id": "e43104f4-02ce-402e-9f90-686e9f15f50c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c8f560b6-405d-4f62-b534-79cfdabc66f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9969b47-2f3a-4184-ba9b-9ba253540489",
        "cursor": {
          "ref": "e871bf1c-017e-4b1c-8baa-63877571bc18",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "424b5b52-cfad-48f9-97e1-8189fb1c6599"
        },
        "item": {
          "id": "a9969b47-2f3a-4184-ba9b-9ba253540489",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d7da9bac-ad0f-4753-ad95-2fce2e2d9e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c267c3d-5fee-4ac6-9114-f89a8d415f9b",
        "cursor": {
          "ref": "34b9f357-be59-472b-becd-53f42a359e42",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "515d6ea8-2e5d-454f-9d9f-a40b81c207ea"
        },
        "item": {
          "id": "8c267c3d-5fee-4ac6-9114-f89a8d415f9b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b504dbe5-7769-405e-a268-77c2c687bdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d007a65a-24b6-43e0-a3e8-87a4cb38f01c",
        "cursor": {
          "ref": "cf42c245-645c-4d67-8985-6762f9b84127",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f2fa75e4-6c36-423d-aa88-0115e8209a41"
        },
        "item": {
          "id": "d007a65a-24b6-43e0-a3e8-87a4cb38f01c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "474011f0-c8b3-481b-a996-96743ad67d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299caddf-9b56-45db-a17b-ea8ce27b4094",
        "cursor": {
          "ref": "4d6fb3cc-40b9-4435-afc8-aa0fc1a9e200",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ead25200-1806-4ace-8099-3a5f6ab878db"
        },
        "item": {
          "id": "299caddf-9b56-45db-a17b-ea8ce27b4094",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6ab5e2a4-8ada-4ca8-99c7-fe0efc364ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc90361-accf-46bd-bf0f-5d3a23de0b76",
        "cursor": {
          "ref": "10d221b9-adc1-4c47-83f0-e14a99c3ee95",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e8f9b119-34c4-485a-b4b3-4e2ce36c8e69"
        },
        "item": {
          "id": "1fc90361-accf-46bd-bf0f-5d3a23de0b76",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "26b5bbd0-3660-4e43-8afe-2724db5e9081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0761b850-1826-4762-a721-b5c6590bf9ce",
        "cursor": {
          "ref": "17be4d3f-972e-4981-88e3-affbdc5cad22",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6389e892-8b75-4cc0-8626-45e80a51ccfd"
        },
        "item": {
          "id": "0761b850-1826-4762-a721-b5c6590bf9ce",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9faad573-0f79-452f-963f-68e9fdabcc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95679162-21f4-48b9-a72e-79e75c911ac3",
        "cursor": {
          "ref": "94d6a999-0e50-4a76-8fe8-4b78a9794c7f",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b086c0ff-1c69-4192-b52c-b10eefab7f56"
        },
        "item": {
          "id": "95679162-21f4-48b9-a72e-79e75c911ac3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8fc8d203-69b3-42e3-9c83-9132832ca4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caef8c8f-03a2-4ec9-9107-718084e8025e",
        "cursor": {
          "ref": "e49b0bd2-35a3-412f-a90a-79a0c66a36ad",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f0b80596-54d6-48b4-a339-7cecbedc07b3"
        },
        "item": {
          "id": "caef8c8f-03a2-4ec9-9107-718084e8025e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "04bba244-0a82-4bd7-859d-fef42949cccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bd2197-ca16-4144-8dcb-d89694b6cd41",
        "cursor": {
          "ref": "8d807d66-2413-43e9-b7c5-aa2123ac51b9",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "069b9e69-f5ea-420e-a44b-fe9d77fbc4e0"
        },
        "item": {
          "id": "94bd2197-ca16-4144-8dcb-d89694b6cd41",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d609baaa-9d2b-4cce-88a9-5d3a93caa3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df15793-8c94-428c-bdc9-ee16b735959b",
        "cursor": {
          "ref": "455bb295-7a57-426d-8900-57e488d3e56f",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fcccfc72-b5c0-48c8-96b2-e7d6fbfd0e7d"
        },
        "item": {
          "id": "9df15793-8c94-428c-bdc9-ee16b735959b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "85b9f1b7-4ec9-45e6-a4f3-766c182f5771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096b4ad0-dd61-4cb1-bf17-66c3d5b96786",
        "cursor": {
          "ref": "3a447a36-d6ea-45a0-b092-fbf0faff661b",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6b5e65b3-f91c-411c-9070-45c1badb0890"
        },
        "item": {
          "id": "096b4ad0-dd61-4cb1-bf17-66c3d5b96786",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ff318d18-9f3c-41bb-9781-2735f2ed00d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2479ad6d-b9a4-4659-aa4a-d0c56b8dce9e",
        "cursor": {
          "ref": "258b0260-d559-43f7-ae08-db13cd576405",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d5e27045-2aa0-49c3-9cc3-d10f4850c537"
        },
        "item": {
          "id": "2479ad6d-b9a4-4659-aa4a-d0c56b8dce9e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "737e6d05-50cf-48ae-b294-0cf633c8a3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761d55bf-bb4b-427d-b502-d153d26d1d25",
        "cursor": {
          "ref": "b86553a2-73d5-4a12-a92a-582ec0b8f819",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6a1f41b1-1272-450c-ba51-cc0a14ae6cbc"
        },
        "item": {
          "id": "761d55bf-bb4b-427d-b502-d153d26d1d25",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0fbe4ba8-5eac-4721-ac1e-896d15c18ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0535a597-a20f-4ae2-90cf-ba3bae247a6d",
        "cursor": {
          "ref": "ada724b0-3f10-49e7-80c1-0b1633822e16",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4fb9725a-c7ef-4a7a-8c85-7f96d53729a8"
        },
        "item": {
          "id": "0535a597-a20f-4ae2-90cf-ba3bae247a6d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "76ff90c5-bff1-4c08-b3d9-b2f5319df5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa950e0-6d8c-4e49-872e-bbad6f50a51f",
        "cursor": {
          "ref": "90a5fa18-1380-41c9-842b-bddc7822b5cf",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "64feafeb-6053-4c17-9115-15e9654fe371"
        },
        "item": {
          "id": "5aa950e0-6d8c-4e49-872e-bbad6f50a51f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "08ac1fc1-f4ce-4578-827c-93c347dae154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8f46ba-d177-43e0-bdae-a2d44f0d7ce4",
        "cursor": {
          "ref": "741be16c-578f-4dd9-bc43-590b9b796af3",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1aa8f278-6a4b-4089-913e-8739b775f2fb"
        },
        "item": {
          "id": "3e8f46ba-d177-43e0-bdae-a2d44f0d7ce4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9ee45ba2-a042-4733-869e-f9d7848ef85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c55eec5-33ef-4eb9-bb00-48d3ab95d8dd",
        "cursor": {
          "ref": "e0e2a8be-c4e4-4676-92c2-bee93db44797",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b300b10b-3e19-46d0-ba71-6e974168b1ab"
        },
        "item": {
          "id": "4c55eec5-33ef-4eb9-bb00-48d3ab95d8dd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5c20d4c4-70b0-4179-99cd-fe7c829b8cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60896fe6-d1cf-4b89-88b2-69031acd30f0",
        "cursor": {
          "ref": "25932e51-89a4-40b9-b000-aab1bc506f8b",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "119804cb-14e9-44fe-8b51-9c9e28cc1b57"
        },
        "item": {
          "id": "60896fe6-d1cf-4b89-88b2-69031acd30f0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "59aaefda-9456-4a74-ab6e-7e2784fe77df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd4f0d6-2d9d-4841-b61b-db9a8305dbcf",
        "cursor": {
          "ref": "b3ce6a70-53e2-4dba-8488-b702a0f3d4cc",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "011ff928-2123-42ae-8e3a-3cb449fc9676"
        },
        "item": {
          "id": "7bd4f0d6-2d9d-4841-b61b-db9a8305dbcf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ec07e95c-1521-4d71-8967-01a31ac47633",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3a2816-76ad-47f0-b047-b152f073da4f",
        "cursor": {
          "ref": "365a8d3e-f3fa-422d-b270-06e0f70a7509",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "16911069-f4c5-4669-a431-00cd6a15660c"
        },
        "item": {
          "id": "dd3a2816-76ad-47f0-b047-b152f073da4f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "518e70fc-c682-415e-83bd-7156682dd03e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 273,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4157bd8-66db-470d-b258-4772c20ca7f0",
        "cursor": {
          "ref": "57b7c1eb-cf35-4d8d-82f0-5c649b1279a5",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "aae18a7a-99b0-4e99-a4ec-600178fb7936"
        },
        "item": {
          "id": "e4157bd8-66db-470d-b258-4772c20ca7f0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a7eae884-dc3a-4236-a29a-f1b1a6323a6d",
          "status": "OK",
          "code": 200,
          "responseTime": 401,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f3db54-946a-43ce-bd24-ec2a75a8b733",
        "cursor": {
          "ref": "9597636d-84af-49f2-bd28-0ad68473a8a1",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "45cb55b2-7b0a-4527-bf7d-3d8dac1ff664"
        },
        "item": {
          "id": "e3f3db54-946a-43ce-bd24-ec2a75a8b733",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "97634a7b-0264-4a80-9334-e9346bddb88f",
          "status": "OK",
          "code": 200,
          "responseTime": 377,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10234cc6-d101-4aa8-950f-1122fda05de0",
        "cursor": {
          "ref": "b0d7084f-d02d-4a01-8116-dacf5c118575",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "50d3ef47-9b25-48bd-bf88-d162de50d750"
        },
        "item": {
          "id": "10234cc6-d101-4aa8-950f-1122fda05de0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ba0ce67e-32a2-45f9-aef3-f53ce088bc2f",
          "status": "OK",
          "code": 200,
          "responseTime": 369,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c03be90-5893-4138-99f4-1eae6f553a49",
        "cursor": {
          "ref": "720d65f6-c1d1-4d30-b5e8-f68fb58ba68c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9d17f81c-872e-412c-bcd6-67b40fa20f38"
        },
        "item": {
          "id": "1c03be90-5893-4138-99f4-1eae6f553a49",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "152bfa94-c71c-463e-923f-9edf603f5a3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c03be90-5893-4138-99f4-1eae6f553a49",
        "cursor": {
          "ref": "720d65f6-c1d1-4d30-b5e8-f68fb58ba68c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9d17f81c-872e-412c-bcd6-67b40fa20f38"
        },
        "item": {
          "id": "1c03be90-5893-4138-99f4-1eae6f553a49",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "152bfa94-c71c-463e-923f-9edf603f5a3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c03be90-5893-4138-99f4-1eae6f553a49",
        "cursor": {
          "ref": "720d65f6-c1d1-4d30-b5e8-f68fb58ba68c",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9d17f81c-872e-412c-bcd6-67b40fa20f38"
        },
        "item": {
          "id": "1c03be90-5893-4138-99f4-1eae6f553a49",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "152bfa94-c71c-463e-923f-9edf603f5a3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936226b8-e9c7-4721-83f6-19d53aca4065",
        "cursor": {
          "ref": "41920309-a8b6-41f6-8105-92ea113938ca",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "75862989-9604-46d6-8e81-21fdc32c5954"
        },
        "item": {
          "id": "936226b8-e9c7-4721-83f6-19d53aca4065",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "777f447e-942d-48d9-8d5b-5db8660d10ae",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 285,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e95779b-fc2d-45df-a0f1-16c5d9a49bff",
        "cursor": {
          "ref": "7e7f35fd-94c9-45f6-8f81-073ce6b7378f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "22bd01e2-2c35-4377-a075-efed4d5976c0"
        },
        "item": {
          "id": "4e95779b-fc2d-45df-a0f1-16c5d9a49bff",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7ad46981-d24e-4c4f-8934-4e7322c536d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e95779b-fc2d-45df-a0f1-16c5d9a49bff",
        "cursor": {
          "ref": "7e7f35fd-94c9-45f6-8f81-073ce6b7378f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "22bd01e2-2c35-4377-a075-efed4d5976c0"
        },
        "item": {
          "id": "4e95779b-fc2d-45df-a0f1-16c5d9a49bff",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7ad46981-d24e-4c4f-8934-4e7322c536d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7999c59-a40c-4b94-b0ef-f955ea286ad7",
        "cursor": {
          "ref": "69bdec5f-268c-4c75-8f99-dc540351faa0",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5daab85c-c325-47df-946a-cdef420cd67b"
        },
        "item": {
          "id": "c7999c59-a40c-4b94-b0ef-f955ea286ad7",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d6c49716-cb0a-4485-8791-303bf857eaaf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 537,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6968592d-a47c-42e0-be9c-13d78c1c398c",
        "cursor": {
          "ref": "9f77aa90-0f02-4de9-836c-bbe66cb8a387",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f9f95cfd-6e48-456a-b10d-052f3e2d8ee4"
        },
        "item": {
          "id": "6968592d-a47c-42e0-be9c-13d78c1c398c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "02a9cb93-701d-4c35-900d-f1183a7c7264",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6968592d-a47c-42e0-be9c-13d78c1c398c",
        "cursor": {
          "ref": "9f77aa90-0f02-4de9-836c-bbe66cb8a387",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f9f95cfd-6e48-456a-b10d-052f3e2d8ee4"
        },
        "item": {
          "id": "6968592d-a47c-42e0-be9c-13d78c1c398c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "02a9cb93-701d-4c35-900d-f1183a7c7264",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33603903-709f-402c-b3d5-b2632cbd6e99",
        "cursor": {
          "ref": "7f98f519-7231-49d5-b3f6-83fd5d55cda2",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "787e0dba-1671-4363-9f25-55c4ec610e61"
        },
        "item": {
          "id": "33603903-709f-402c-b3d5-b2632cbd6e99",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c82fb701-8683-42c2-b336-864d64b97f14",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 504,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}