{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b67c1879-04ad-4203-b3e9-4c876ba756bd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d9deb604-d992-441b-9a61-4404d87444bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa42f99b-c3ca-4255-b642-b53b82440afd",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a200eb2f-ed3b-4b9b-b0a6-bed4417d4ae6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ed6f573-7621-4645-8363-cd32e519eaa7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "25c7d928-0cc4-46c7-865a-a952e07cc6ec",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "70e88bf4-08f3-4152-b00a-f4d38c19c5a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48b5b31b-2d2e-4e82-89e4-e23ee0f32a52",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6e0280c-e088-47c2-8331-d294228ad317",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846f3bd6-b366-4951-bf9a-ba210ecb2704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48d55354-0fef-4989-a000-cd631b0f7cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d73e6c-8eb8-4e22-94b0-8497367033c0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d932476f-81aa-4ce7-9693-78c20d806fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01d3c771-891e-4438-9c4f-1533d5542751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b847019e-72a7-4c49-b6b4-4292d757f519",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346a1150-754d-4423-9873-ebcc4d7ba0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7eb7e994-2b2f-4dbb-b40b-329af5748b86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09b94e4a-96cb-4e53-9cdb-36eaeec8d98c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fb20259-5c71-45aa-92a3-3c603eebb0b1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6208a49d-8b95-4e0d-aca2-39ff45133dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9ef0f60-f2bd-4488-b002-1650c87ce76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0698908d-0730-4934-b326-71dc42330a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251b2bcf-7adb-4075-afb3-373513e7bad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f22f7d-37be-4dce-a2bc-218b6503a9f8",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e29752-c50d-4b15-b7c9-cb2e26a04435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03f1c62b-d576-4e9d-bbeb-47d23aaae3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755a1a96-3583-4ca1-bf2c-59100200a3c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d5e8ae92-4376-406c-a853-3ca27ff223d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "15e79a2b-b7f7-4fed-8dc6-4d5cec99bbfa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f09e52bb-475a-47a3-8c8c-580af0c394a6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "017cf1f2-52bd-435f-8c13-e5b680b12547",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "457d9554-395c-4987-b810-c66b048431df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dafafa8d-3b20-4cf6-8200-53f2dfeffb35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "eee8c3d8-55fb-4c7f-9e64-9423257821e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d80e1ef-ca7d-4896-bba7-a4ab99caf811",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f26e710a-c994-4daa-ad41-f56d1548b457"
            }
          }
        ]
      },
      {
        "id": "5ea47257-9a60-4d28-b000-6bc702db7a1b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cf2f2b4d-fcd0-4d81-bb34-d618bd09dfb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcee306a-e173-45af-80da-ab231678b4b0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c75c0a60-3237-474e-b032-16b8e0e04456",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4eb8d6-10ee-4fc2-b787-c0faf567871f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b8c7b1-3cbd-4153-bda3-469a98eab613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf07e2f-71da-40e8-9e63-f591fcb13614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "762d1a0b-8546-436e-b2eb-9ab95b8f6efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27210bbb-47e5-44fe-94d4-ce8655dd78b2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1c25d1-36b3-494f-8632-9736a8cff19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf524ad-575e-42b2-b41e-0263dc327c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee8cc0d-94b1-4472-b631-60630d642abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de0ad330-b64e-4b47-ac0d-a4e04ac5e1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beda53bc-a944-462a-a0d5-b9305c7ed5fb",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b04a60-c60e-4805-9632-983d8dfab84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d7f421-36e3-4054-bf75-e8014813fdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76250dac-4d6d-4f5f-9e4a-380c224ef993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "640a5e91-c19c-4d74-825a-9f9c7607337a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240dc03e-339a-463c-a07c-5752b02d0dbb",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f67ee1c-9b7a-4683-bd44-11e0db8a0d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a43391-0d96-43d1-9bb7-1f8d8193da62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b5e0cb-6473-4788-b279-6df86189ad7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c48291e-f8d4-418b-bb05-3e6734b48196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383e16e2-831d-425b-8c90-ad28caf85e6f",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665ba5cc-8013-4bb0-b5f1-75043eaab5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ad4144-a644-49cb-b97f-bc3df9df8541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7f6b78-d62a-4915-84b6-c5dbce33dc9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70a7c6e0-9295-424e-989e-99b1e30bf460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77022999-7477-4d5d-9ae6-78372486f54c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214e5cf4-1c1d-40c7-a9cc-e02cb6b24769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3132157-e1b4-4389-8dfa-c8af5efe150d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c54f00d-2932-4a96-91db-d9f82a767578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6e4de3-b463-46b7-8499-37b540fe66f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8490cf6-a274-451c-81c2-361ede01c3d5",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8b651a-722c-4727-8c32-a1d8987f8118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68448944-61f3-483e-99d3-17ea93e7b334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb57719-0ae0-483f-804b-0b031d741b7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4d7cfe-cfdb-4138-b16f-1785b09c7f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebea10b-3e84-4620-8861-cb5064f435bf",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eceea0-f462-4d52-abfe-ff08b9984b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18fd560a-9484-4d99-a560-46572779920d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f0bab1-e305-41b9-b0c1-a08f091b5983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2898fbd2-119d-48aa-9f66-5d9d23e4fc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bf19c9-85bb-4d59-affe-ba573cc4901d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e8ba20-7bea-4c28-9bfb-a14d23d9403f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa0d960-997d-47f7-960d-5672215abb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fce7451-36e2-401f-a2f3-0009ebdcc0ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6964811-2ef9-488e-9cb9-a35173faea67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2328eb3-7690-4161-825a-69b4528479bb",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb70f8c2-44de-417a-8b0d-b7975125445b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7c00dd-bcff-46aa-b2e7-f150cad214a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f7cd2d-920c-4d67-a016-e20badde457b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e0595cb-a582-4edb-a388-1c1a50ef3123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3713be05-a034-4dc8-8857-eb2814a70684",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb32762-2d1f-40f7-a45a-266ddbe9fab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188ef83c-c8e5-4336-8ab6-31e558638480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3682e519-d004-4912-bcb4-412da76c23d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "5f347b71-1fc0-4e9b-8600-6e582baa6749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9d71bd-81e3-4f0c-91cb-3bc37f2a6d4f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135c436c-41cf-4d42-8df0-902d2a629c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc90e807-852a-4ae6-96ed-3d63162c6c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f6ab7b-f742-45fe-a60e-f7086235c1a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "c0d8e140-7e3e-4b7c-b65a-be6e37b8e62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ca3e9a-c920-4aab-92fe-ff34a2b074d0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e9e47b-cb26-4145-95a1-5b1c55780c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd7c843-4d23-4057-9bb2-2063cf877cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3458ca27-947f-4b33-a514-9d8aabd26859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c58810-fe11-41bd-81b7-820093d16a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6ccf3e-87b7-4bb3-a50c-413eea9b93a2",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34233307-a57e-4112-b2a3-f1404ad191fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b708b9-241b-4a19-b025-003ceb7d81ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622ad1f8-9a87-43a9-8fb4-58442add09d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59c4965-eb88-4351-b671-dc2d43873ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fe62fb-379a-4f11-9abd-705a25028708",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b2678e-d424-47e9-a695-75e19dac7bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6757344-7b70-4dba-bee8-4c9a8c11d2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fa112f-3d3e-40ba-bf46-82579ca4db51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "e47949d4-db9b-47ec-b438-529ae54f84fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e574e6-a3e9-4f81-a8ff-eb8f17cf22a6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f2952b-c5ca-4ae0-9109-83b5cfad3bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b88735f-3615-4701-b42e-466e9b8a9dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fa8b08-b470-4e3e-a236-1dce3d0eb861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "7471e511-b205-400f-ad1f-2774510c3eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831af02e-1de2-40cd-aea0-1b828fc6690e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbb5b50-e2b0-4a04-a288-38f105265c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e74668-e133-4f1f-b67c-61010c694422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f04b9c-b76f-44ed-9fd0-03a439bc5b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b8c3fe-09cd-4316-b170-9dc2059c80d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d534c5-084d-4f73-9ba4-8a63ab0a5fc2",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61d1087-76c7-44ae-8110-cd7f16144490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed40eec-a41e-482b-b065-bc8eb7a2fc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09415efc-e02d-453c-9869-f79228a92149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05dec5df-5586-440c-b74f-a962f3d72012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97826c1f-8c3a-4334-836a-0685428a3dea",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a35a1a8-c424-4e64-a798-3f968615e0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce5c93d-c60c-42a5-a7b9-9eac37b8ab28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a51123-0a64-4bf3-a280-c030315f43ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00bbb6cf-8ca0-4f41-8d91-159e04103e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771eb8a1-0979-4cc5-af4a-7e648f8749f7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd304c2-b87c-4901-81fd-2d0baf879f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f088c8f0-f09d-4e94-b171-1421a2cc2ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63256f38-1e13-4be4-a48d-7df7b33198c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4061da8-e6eb-4d48-9f60-4a9880d0baa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eae198b-3be3-4f3e-8f14-7e3e8bf2221a",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4338849d-21b4-43d2-b02f-14a19705f1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265124ff-4cbd-46f6-a8d3-2b09b76ac21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f374c8d-c725-494a-8189-5127b695469b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88dcfc23-3e64-4685-91b2-a31162b7bbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1962c8a5-c3d1-40f1-a47f-46483c16e75c",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76659610-bc21-41c3-9fcd-e3fc915a7969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6caea7-5396-4850-b091-55af6c6c1925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8baaf7-669e-4c05-ba0f-af5862fb2474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad8c2e5a-c5a5-4c94-bb13-118284cd1dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c0e88f-0b4e-4d21-bb42-fd6d2ac9a3f0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "156dd561-b77b-461b-a5c8-e851838791bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013b4b57-fdab-44c0-ae7d-82691bab68db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f88e0da-2646-4f03-ade1-42c8e4a944a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69931230-defb-4c21-b3a5-0f848bc80d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320b26ed-65be-411a-9c9a-4765a3c3939a",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ae3962-b5a2-4d80-be53-50e57f789c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64f3acc-1f03-4b91-8893-fab68ad6b30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481aab91-1b35-45ea-92ca-f6985e5bce74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34393d5d-adcf-4e32-b31f-7c9e1b9fee67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338e3470-855a-4830-bbc3-813f13f063d8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45875d82-f441-492c-93e9-4490aacede41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef8ba78-f5e7-4192-9fc0-734706264874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651fbc46-e80a-4f14-bac3-ae03a2a2b9e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba09e15-c310-449e-b536-e26d43138780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db265f8-2a8f-48ae-afbe-e854cbe0ec8e",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea10e54a-ac8f-4e80-9100-39acbc3e2870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce33d3a-6b5c-4bc2-9dd8-1f2d889818cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36845201-b555-4451-9200-8249b1b8f4a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04be1fb-a18c-4917-a1d3-1a4f4d8da0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb9a080-cb61-4a42-97e8-63504dcf8299",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0b83df-b761-4bef-af5d-3fbe1dad3085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a95ee6-14fa-4c3a-a74c-4ad7ffa34c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad14586f-0eba-4e97-86c7-2db53ebd5d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63fc35c1-3877-405f-9aab-c8bbad03bae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960441f0-4972-43e9-bab5-1dee6c121c84",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752c49d6-02d8-4e5d-9eb4-c67e52a705e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e97e091-dc3d-4edf-9ec5-b5add6e1cf47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124823d8-719a-4277-bf5e-fd1b78a5c029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f119816-eae5-4fab-b224-ed215ab4a696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1593445c-c075-4c23-b112-d10c53324926",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5c558c-ea23-401d-80e3-ae32b609e0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306cc9e5-cd3a-4454-bfa5-bfdf609635b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446798ed-2f9a-4b40-b32b-de2cc3c201dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc1c90d-2615-472f-bfa3-0b3dd8755c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa85ee32-a2b7-4091-92bd-6a0c355e5986",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafd27e8-70e4-4f9c-89a3-05f4517ae7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c4cf47-e547-4e55-b9d0-79ebe5d3bbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5775cd5-76a0-4d39-b2f3-7026fc485fa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba986e1-f15e-43ae-91a9-04b7a5a76f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd197192-4982-4621-83f8-6e2aacfda568",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d80f7ff-a43c-4661-a808-4a7dd884739d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "518337f6-2c4d-406d-8ace-005f0f1f9f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ab967c-8cc3-4aac-9ef1-2fad072da794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cb9f835-1dd7-4048-b6a7-96c208837980"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77165dbc-571d-43a6-9c58-f55f434684f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ace634db-d7b3-42bc-bfb7-03124fd85334",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8c4b6d-1dd8-497d-b58d-58cb404bfeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4f36e7c-439a-4eaa-b624-8ee500764d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d3ca5e-3b2a-407b-af2c-a3e40469a369",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fb30d547-a6f1-44c6-a657-8ecf3c77a44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b70a521-94cc-44b1-abdc-ab0a2603c523",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95acea2f-ad8b-47d0-9b8d-51ce7de0f67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72d3d504-b00a-4a1f-87f9-7ae02d6beff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5360918d-82ee-4fe3-aad6-714fdd07ac46",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "10e8a997-0698-4578-9898-859b0a63b5d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2547456-b3c2-4b62-b790-9276d1c64bbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76e12bfe-be32-4f78-abef-2d3d6a0317a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9c36bd5-eab9-4699-a2f7-690e347a6128",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d32ff482-74a5-41c2-a09b-1c807efe657a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e80e5ac-ebb9-4cf2-9c2b-174c512520e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b27992fa-a95f-4fbf-86bb-c5ccec0f0c4f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4de74c8-5bcb-434f-83f0-092d68e1fc6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ae5c2a7-c8a9-4d5c-b499-ca35cce79652"
                }
              }
            ]
          },
          {
            "id": "17c931d9-b693-450c-ae08-257ad1d19897",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1cf2aaa-fb95-4473-aa6f-6d6450bbaa54",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55905010-6cbd-4d40-b94e-b8d2aa885a02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7c1baad-5259-4a64-97bf-c2414b853c7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0e54806-4a57-431f-a193-8118e11f6c52",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "0b0accd4-212c-4326-86e8-a10fa7797f39"
                    }
                  }
                ]
              },
              {
                "id": "1a6f6e93-5e59-464b-bdcb-d1e04fcf65fc",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdda89d8-1d89-40a1-a0e5-af738dee3623",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f4701cb-3a2b-446b-b6f6-ea9fab006035"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a42f446a-4739-4fde-a664-ae27efa16dcb",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "17f6a804-f426-4270-811e-4f403e07a8c7"
                    }
                  }
                ]
              },
              {
                "id": "10a7ff86-ce7b-4da5-b50a-92f06b2c2f77",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8409738f-835d-495a-b59d-47b685e9f08c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f506f798-8b30-4fb6-8630-3f198d943d2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb9e36eb-68b7-4a4d-8b90-a8b644ee2efc",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "48a1aed2-1e8f-49de-99c0-fbd43a10103f"
                    }
                  }
                ]
              },
              {
                "id": "30e0b4c2-fc3f-4210-a980-fdcc6c013df1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b98e6806-04c3-4d54-aa0c-790106b26704",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78e6de66-9105-4b3f-94ae-158751a2fa9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b3b4862-3ca2-4421-a653-eaed9c1405c4",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "802e1b72-6d56-465d-b854-dba738c4e438"
                    }
                  }
                ]
              },
              {
                "id": "53091940-bfd1-4b36-9f94-1bd0dea65c86",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67bf86fa-07ec-4b76-88fd-cdf0dbf2cef7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7c1c1a1-f6c6-4c93-90a1-dde46d2e53b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2482b9b2-99da-4529-8114-12f8d941868b",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "1812ffbe-1f60-4c42-b23d-0c73295fc160"
                    }
                  }
                ]
              },
              {
                "id": "d5706176-f676-44b1-9cb4-30cb6779c9e4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54c20f21-57c0-4702-ad05-01e388a28a37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32059181-5313-4aa4-9902-161fc2724746"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0eb0147c-1727-4540-a8b7-5a2eeb7cab06",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "db5dfca3-1f7e-4352-b3bb-d0144f66c2cb"
                    }
                  }
                ]
              },
              {
                "id": "ceb06b7a-b533-4799-8e70-9e489b6c9630",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e2cf520-2592-4577-9c3f-8ee947adbc8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "747f2569-3cb6-4a53-bf76-59f4113ba36a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54dd54f2-f0b5-4b75-a1f4-980919f40ff9",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "5fb75bbf-4565-4024-be99-7eb552eae655"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c73e690-3fe3-45ec-bb2d-709900206cfd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e8bff4b-b950-40aa-a71b-cf0b241f4a51"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc09ee28-4b65-4d8f-8732-0a42ff45578c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29757002-e69b-43c3-9c6d-b43c6694f4e9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82b52e68-82f3-4afd-a294-f64c4b52115c",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "239314d0-6797-4526-91e0-ed6a7924fb29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e03b15ee-efb8-41a7-b532-6703c7fdccbc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c06983bb-d5c8-4872-a93e-4a3c691af98b"
            }
          }
        ]
      },
      {
        "id": "84a886cf-b6ec-4111-84e8-4692b11cf1df",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5ccce878-bc13-4d5f-b9c8-d557df034eec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83b202df-1c25-4c27-be0b-d619efa2c370",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "708bb9b5-1f72-4f46-9b97-10cec544752d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f6d94b-de73-4e23-8d5f-e61c1a3302d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cba6fee-824e-4c33-aded-f6d2a7f17343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "169427ac-ae23-4200-8bf1-b6df4988d5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47e10f8d-cca4-495e-bedc-393b22c38ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a244ef80-5403-47e2-9368-6d51d1bb8bdf",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b269ed-6ddb-4c27-b6ff-fd0cca5988ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "11a37819-cce7-44f5-a99a-99b646a8156c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3549fd13-6557-4ea8-86ea-ad2d8e46f39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd5e3150-6ee8-4b45-a4b7-8fe25cfc4707"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbbe5304-f0a7-4b56-aacc-b22bd84eb4c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be6c1eb3-76bc-4f48-99bf-513f005ebe85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fae6f6c9-b563-47a3-b8a3-1a5651a46208",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00374506-2906-421c-8ef9-2acaf0691bcd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ffca88b-5940-4938-9506-7e18b2c38317",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "3cf6a474-52ae-4979-9c42-5dcc17f2e039"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a645410f-bb00-475f-bba5-8f0313215421",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f422f4d-c8e3-44f0-be75-e4a3284af278"
            }
          }
        ]
      },
      {
        "id": "f495bd18-184d-4158-9d18-b67365cd2322",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f5e3b9bc-3b2f-4a04-becc-bdd7b1204f73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ed978f8-88fc-4fd6-92b9-be75196273b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f73ae640-9520-4fb1-b7f4-7b113cc1d457",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe768eb5-043c-4af6-8380-ab56f6072dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5ae13c-a36a-4ecd-b15e-5b93eb0da00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014d9fab-1f3c-4d11-bf22-9c13d8582f68",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c41a24-8e97-40ea-a13d-90f2f81aacca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f176de5-5937-4fe7-909c-426cd7b7668b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cd8e34-a8e2-4e57-bce5-e598642f2193",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80054b88-5efa-47ca-b4c4-416200ef052b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8402cc4b-e24c-44bc-b029-ac0b57bba511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67d76d4-7a0a-4f71-962e-161bf8d1cc18",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec422e9c-fcbf-4ab9-87ba-37b4eebe32f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9b7d26-058d-4a27-aff1-3ab61daa760c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f49004-b3b5-4707-b244-23939b8ec3a8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9294ac34-c24b-4e9c-9636-36445a2be50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806be14e-97e2-46d0-ac2c-3d315e1d6f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd9a4ec-96d0-40dd-a853-667836036970",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f9cd5b-949e-4fc9-b188-1896f1be1817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8b6965-21da-44ea-b9c2-aa236c1b720a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07783a98-c00a-4a25-80ac-4bfbf73e35c7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582ac07f-627f-428a-8fbe-4e84df367cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956ee5ea-af2e-4fa6-838f-e0628d2cb291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d66f40-ab51-42b9-a286-aa2243ff6198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f671de9-95cc-4a36-be4c-8380d162c7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b1a691-26c5-401e-8e7a-eef3b3b3d8cf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86e2c8d-7b9f-423f-a8be-86ce1d367c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a29268e-cec9-44f5-942c-178a8d6a2a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05831d03-c0de-4cac-886d-852d4358f978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df45e80c-c65c-43cf-bd83-8d4b1b2b94a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3ab8ad-c576-4966-b57c-13d2a6e49f36",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4383124-75fb-4a49-9fad-1325a69b3bf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a84908a-406b-4f0c-a769-6af3ae6d3ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969173ff-4e8a-47b2-b3fc-8d7053a88e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f33056c-87e4-40e9-a004-57ec9ba90ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcd9b4c-746d-4de8-a6c3-8011c86ef75e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd14b99-c48a-4f9d-9db4-fd4849904283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29bec2cf-19fd-4181-8710-831c0cc116e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "152add4e-591b-4a8f-9641-784b0b8678a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88deaa60-68c6-4c19-b72e-4e825d2f4589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d228810f-019a-425a-a434-32452ee35449",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ef7665-e38c-4ab9-9325-f21588249d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99394c00-7284-4c2f-9ed7-b4951973cd77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d42d80-edd4-4a1d-9a83-5b42d5eb5969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ceaaec-a5c8-4a7a-ab83-11689891febc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2d68ae-d724-4e37-b4b0-e7ab3d58e393",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8c1628-359e-484e-848e-20bd6c282979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1883e5-6955-4aa3-acc9-d9b2b2b4ac39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07ccdd7-9cdc-4cd0-a3cb-27f522f843d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cefbe2df-38db-4e25-a192-31a359db60b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ba7edc-5b7c-4079-9de9-62a3e5256880",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02245ff9-348d-4c41-b71d-2d6f1822d83f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da020131-e7a4-4da1-9df0-f11845d43b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b12c3a0-bfda-419e-b8b5-4698be2cdfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72e625c-72cd-4151-a0e5-ab8153193dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec71235-a07d-4cea-8c87-d2ad37e0d33e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affd3d15-be16-4c7c-9a92-408dc6892427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bae67c0-313b-4148-9846-a2f33c3c6d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a579e8ef-af6d-4b29-b055-aae72ea7102d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f33a62-c6d2-46a2-b678-f77aa5f34d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50950c13-ea38-4896-9e4d-38642a113778",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9405299-fe4f-4498-b569-7fa76b94dfde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0428ed1-c91a-4acb-81a6-433e4469eadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a7c72a-dcf9-4da7-8e82-85d217f726b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fe5bc8-b6f3-4d16-af3d-8067fc2e84c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c423fc12-1144-4eff-9821-edb09da2c846",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc85265-ab00-4be1-80f3-10f59a08d83b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78ebccf5-cc5f-4715-8e80-d6de6883d435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ca64cb-ce59-4c35-b5a9-1a708cbca390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e44099-ea47-4ddd-a819-ba0cf8683f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f806de6-8a6d-4772-b5bb-66f195f4c9a5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf55f89-3b7f-46c6-8e0d-e7bbf576c58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b33d83-ad0b-437a-afab-c30e52e52b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb30462-b6a7-4a2f-b81e-5dbc100a518f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9f5f82-4ae7-486e-a221-1c4c9cf72f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c934dc66-df14-442c-a6f1-c80e63b25fef",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6e7250-ee91-4027-b550-3984b645e1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67859365-6ce4-492c-a26b-8a1d0f4572e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac65e37-69d4-4005-91c1-534bc520e7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b21fc02-d16f-4100-a490-fff2dde12c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa17a4b-c3ab-4636-a9dd-8b17a846be89",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16588ae2-6ea5-4358-90cb-dbd64312076b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ae89ca-cfeb-4db3-b7bc-bc967a350ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c62e1f-6d8c-46db-be85-ba4ced942f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e9fece-3fa7-4335-8ae2-1bd8b47a14b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc560b00-2280-4d89-9255-1bebc7a6606a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa3f9b7-c6e4-48d7-b2be-5c4c3d2f1b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a2b855-2af9-4816-ad5a-e520b8503bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcae27e6-8343-4f79-b96b-681dca80ced1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abd2beb-02f7-42c1-b2dd-bf19f6346390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e49f723-5c4f-4e1d-b452-aaf35ad049e1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118abbe5-b1fc-4f5f-b0f5-1290948ae5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796b1bb7-f1bb-4583-bc27-fd4638b221d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe96f6c-daa1-46d2-a050-7ac4028fb939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae4b431-e8ec-423a-8f47-4a2a8f5c5bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7fcee7-33e3-4768-bd63-766604edaf1c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19558008-5261-4102-a226-5f7ca52b256c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d404b25-b1cd-4742-b0dc-9392b60a1237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e2e7b0-25a6-47ef-8a8e-cbb74c2fceb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679f0f47-6a1c-4364-a671-61402d11876f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c6cbbf-d8a1-4e37-ae77-d9d42a8cf00f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cdd178-cf51-49b6-b7c5-60673e7bb8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff2d604-9086-4ea0-8c8d-92e0686a9f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcb132e-636a-4bd4-9dbd-fd822c00b4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0c246e-0d78-4a6d-8680-007c8245d470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113f9804-4158-41a1-b577-af4ca27dd376",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9118f55-e1c1-4cb7-b35a-4e512980629a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e155e394-2185-4c98-8d93-564aebe1d7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d477531-0b25-4d10-a4c4-7087f95405ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1c1a62-7065-4cb4-bf0b-30480db977db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4b9d3b-57ed-439b-9151-2f92c3b903fe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56be5fb2-1777-4260-ba2b-baf17c50c8a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69e0d95-cb3d-4311-b33d-ba112945ab0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f13f98-55a8-4624-8ff5-e3eb505a340e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f863e829-dcc9-413e-ad90-548fbe008f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701a57db-3b09-4bc6-8371-9145abcbfdaa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8956a9e6-c35b-421c-9694-8df34cb24f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abddd9c7-c133-451b-aeab-7c1d863aef8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f611277c-ddfb-4f84-ad79-d880b0dba992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bc75df-b627-4248-978e-aa3373f416b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4a44ed-3d93-4a9a-8c30-1603f484c75d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab8fd55-5494-46d1-bf5b-a6186c3aa98c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10fb9b24-1e43-4826-9d2f-bd6940a56b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed692ce7-3b22-44b2-801e-88d99548af67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c796d2b4-2dad-4160-b223-5ba21526f92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3f8b89-f4fb-4394-b42c-e94f17c83088",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6d37c5-c44b-425e-9fb6-af4869fdb770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8058edad-aebf-48fd-87c1-5ed05123bd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70490bd0-4525-42e2-8541-c676eed3cfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79b9adb-43f3-4380-8a0c-eb97ad34ea93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfee62ba-b5bb-4a6d-a149-ecd09319d30d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3d40dd-a3d7-4d1f-bf2a-75e913335178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "605b94b2-d250-40af-9db6-e248265e0419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074c421f-5642-4f74-a1b3-4aa10902c0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b5ed56-2105-4f58-986c-2fe2409424be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebfcbb2-4492-4c3c-a7c5-e3b464d8d8bd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faf3734-6b9a-4756-a953-5827c70d0b37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe07d0d-7f4d-40c0-a036-0a295a2714df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be2dbec-fb97-40e4-8138-b59b2a030ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77e5a71-3a12-4755-b713-562ffa89da59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff894c4-d39e-4e0a-8b11-5fa96a1a104a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ceb79a-11fb-4bba-8c27-b8a8c58bdbcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acdb67b2-9cbc-4b5b-b733-f9dd00feca03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86a3e7a-99b8-4767-8439-2950df2b1813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6b3e51-d71b-4b86-a954-e49456ace0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2e4458-38dd-44b0-8ee4-26606bf2ba99",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5671fb-2606-448e-86bd-725edd71f5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c562876a-6e54-4f75-be29-5747296f9ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c1a93f-e05d-4341-8c72-607cabd8cf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f809b04e-86ea-4068-888c-3576e8618874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdda4eed-29d3-4458-a015-f62cc79c070c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c5fe0f-c538-4c81-9810-f69418a893f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c74ad4-067c-45fe-affe-5bfc630e1fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9288ec-7d7e-4153-90ee-5cf64ae68b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444f0ffc-ac8c-4404-8f9c-e55ec506664e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd84c14-000b-432a-826c-fed9914d49e2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a4151c-8d99-4397-8a16-b5cbe811b177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058b077c-530b-4166-b211-6f84abde203d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a6bb9c-deaa-47f7-8308-d7fb10ddafeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8046473-a81a-47b0-be7e-7caf620e9167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6876ff7b-0acd-41b0-a7aa-7a7f08306174",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797bd831-d70c-4803-bbba-6aa1b75d4551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97fbffa-c07a-421c-8f53-00c37fab55b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237d6313-a696-43a7-af7d-fb86a5e10c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109c7b30-0d02-49ef-9c0c-03d8bcf0e78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed235d5-97cc-4d4e-85a9-a53073983843",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3d9885-8063-447e-b657-2926837929a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d816fde-463f-4ce1-9232-232f0aed3d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d364eaf-f225-432e-b5b3-48c90e26d88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d95465-0371-4d4f-80ad-5e8282d2befb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5909eb45-b383-4e77-bbb8-87f666cbc9b9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8647c7-0153-416f-a2db-b1d3e20c92a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4d8e7a-9a57-4810-b34d-d360322620e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab985d31-61fd-460d-8d43-bb5a01bbd5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687ccf53-b40b-4ad3-894d-550fab75bd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a57a5a2-e139-4f2a-9228-1fdb9ab8563d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2024bd-642f-4f8a-b8d2-d35fe0fed70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa4c5c6-b42b-488b-9b86-fb70c08b00ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504cbc62-d895-4119-9b56-a187c953f946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c500ca7d-463d-47e9-af0c-a9f094b77b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b64500-0908-4fc1-993b-6122f8623091",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cfad91-6e82-4f88-91d8-2950efda72c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969747a8-66da-4026-ae8c-cb71fd3faaf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0accdb03-9998-4401-88ec-6cfa21b7139b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e19d4aa-31fa-429b-a92e-69d66a1458d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbeee34-0226-4329-9417-8372dbdeea7e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db4c4ae-62d0-4b49-8cbd-b95047db7001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17091e9-1fa1-43ef-83ce-e62e1a5e8583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a592262-e17b-496c-942e-5db203bc8626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c16dbb-a615-47c8-be07-557a54e9805c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68dbdd9-3a68-4aeb-aa77-07d259918d83",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb92ff8-2c4b-4c76-b042-ad6589b017b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6aeec01-0766-4d0c-99aa-dd6521e4b68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02a8efe-06a7-4837-99e5-75e7418d92ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2770765b-9eb5-4b99-af79-9468528c9dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a273b3-9bfd-468e-8cd0-e7512275b66e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923f95a2-1a2e-4ff0-9c7a-54a4e8cab94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3d67b1-f4c4-4059-bc3d-21954b26e92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f9f846-a8c0-4514-b8bc-3e8e90c4d3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e2d1e4-dec1-4b1f-959b-74e96bea8945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b152e3-c43a-4d5e-950c-4956a85c5e97",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e86910-e21e-43ea-a293-afce9f8de6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37047333-7af6-49ef-9ac9-bc800045d90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fac3545-a0b6-429e-8fd6-62687c562320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de0d8a3-6db2-4105-8b1c-c9cda1fbce07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9c2b68-6769-4dd1-9010-423029cf84ea",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6108a1-1d9f-44e6-8a79-7b6fb4999185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacebf8f-b2a7-4787-8365-29af6972248e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a424f62b-bb43-41fe-9a77-aa9a005fff07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb3cd63-7429-4b7b-9de0-88424a6719a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa0b380-cd40-4ee1-af35-a47dc73785e2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c81aaf-de1d-4829-aa01-66437df6cb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f370aac2-9177-4761-902f-cbeb8c8047db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cd820a-dd38-49f4-a882-25f84edd4f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd08ca02-1f57-43fa-8533-11495bad471e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a520635-dd8c-4e5f-8d14-b6db2bfe1bdd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fff7a83-3838-4c96-84ca-cd33bbeda475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98dfe837-f2e1-4bea-8326-ff8a9445007c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b22d65a-6e85-438b-a9fc-ecc9d94d089c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318e33a8-116f-4918-9bfa-2b1de970c422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58c76ad-0347-47f2-94a0-e2162c524d26",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ce7c97-8472-4473-b029-fbb7712506a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168bb692-78f1-4d07-91de-cff5c0c87834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1e6b40-8ffe-4032-ab6a-0c3d8553e032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f4c829-00e0-413b-91d4-2a604ab5bfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4fa9f1-87ed-4237-9336-62020b2b7ec3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cc5f17-0873-4c65-8224-393ed46155f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51375a65-366e-436a-952b-ff31c17a26e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d066b4f3-0516-44db-bd2c-ee383df878cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5527444-eb2d-45fa-bc02-9897b6ec0d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8a3c16-b2aa-475a-9c79-e4e6ee407cba",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc9d31a-4b52-44ab-8714-61baa8203a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d446b8ba-f14c-4115-86f6-0d0b48921fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f43cb28-2dda-471b-88b0-74cc919287fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59c509f-d2d3-4366-9639-1379cd748d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1868c9c-b2d8-436e-b795-6d8b9c869d6c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b691c5d7-b205-421a-9cf6-9d7d495de32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4fd811-49cd-45d3-b883-e3bf8aad4e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c6a7c5-8f1d-4ba4-8b56-0e57f0d809f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a83c092-7340-4701-9eeb-cc8e6089e0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea223f18-8df1-418f-b99c-d28deab4734c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563d407c-1b13-415b-aece-0a59d913913a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b96acb-0719-4a40-9ad0-1ec4e6c8115a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecb78d1-30ab-4963-be27-713e926692ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05abaa8-12fe-4cfe-bf0d-19e9fad17826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a7ff05-7b5f-41cf-bcee-9c4a91b82fdb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91d346e-fb8f-4256-a3f6-6433e7c094da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46603e7-f95b-4c2b-b4f8-1abd66554f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc02059-fae2-4914-944e-26dee10c1bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d93fa9b-34b1-4e18-b45c-c44a22ddbc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe832354-9ffd-4bb6-998c-d578c82a7896",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b00b3a-e167-4e8c-88a3-343c0aa8ce11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356e9b19-42ed-460f-9312-c402ddc5d870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea953d76-c238-4ae2-9567-493c9c6dbea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f167fddd-9855-4924-950c-0b0ef79fe88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e60fd95-19dd-4120-9157-8f0dc14d4525",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebc9501-5bd0-45e4-97cd-fe6ade8f175c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d94300-43ba-47f7-affd-e4fedae3f173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8945dc12-2bad-4753-862e-fb4f451a3d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde51366-ace0-4f63-9ac9-5943e6f61f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4bb4bd-479f-4fef-a357-04b8d223ffb6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f93140-b828-46ae-8806-0d71ffc1d05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352ed787-aed6-4d53-8b76-748ed641df3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bfbbb9-eb29-43e3-b2d2-2d08194332fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065a44d0-ddab-4d26-9c73-4f761c7f3ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2311ec68-629a-4930-810b-d98659da8a63",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb279991-09d4-4186-a478-3caa7ba92bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea74da3f-f1aa-4510-9cda-a09ecf70b45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46389d2a-7aae-4402-8a28-ef0ea107e750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4240c040-8bf9-4d9c-ae9b-c0946c291b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00926974-f5c0-4718-bc91-bb5d9dc79c80",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d3f12c-a277-40ee-98fc-8e6f83834b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc87fc0-ac96-4bd4-90d4-80dca7adca8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4256aa-9b16-45e9-92f4-7aaaed63bf79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8217c1-5689-4f0e-b226-3ea3c82104b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25197e8f-80dd-4df8-a98b-0f88a749afd8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2f7190-0dad-4fa6-a3e1-4c1029c748bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856741ba-a296-4441-94d7-64cc761849e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419294ff-2b28-44d2-b7b1-ad9f0e5831ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b73b06-7b07-4585-8631-935a249e0248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6288bff4-e9df-4599-9097-75cc97eddf1c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96abaa64-d1e8-4aeb-98c8-bfac710d9d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15f705c-532f-44b7-ab22-be59d10aabcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f97c99-3ecf-489c-9428-6f87d06d44a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8d1192-741e-4751-958b-7feae3ced123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f399eb-0184-4cc0-ada5-2d8ce047be9b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654246fb-a93d-4791-9fd2-7b317cb67e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310eca63-1351-4194-998c-dd64a6238262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f21d51d-c360-4152-9f53-10760ebcb321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5047050-6766-48e8-b3b6-ebdaeab7ff86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbea570-a73c-4afd-8ef9-8e0a90e8076f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c159759-1a04-43ae-a727-07b4ee17c263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33dcf8b-93d4-4e41-8c8d-c04bc05ea357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ae7d4b-6534-4bdd-b6f1-fef9efd3ebb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559a318a-208e-4fd2-b615-99310af2c29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6440a722-7b78-4f92-afab-327cfa0a645d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e34207-bc75-4553-aa43-fa8dbf9f3b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d4db55-2b0c-43ae-9b75-f63477fcae6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de04a2d-d45d-40f6-becf-5d3ff8339694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2863a7e6-14f0-4917-9cb4-3266d75b4312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc68ea3-5357-4c67-9813-8e122166229e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca5cede-ae4b-4d68-b0a9-b0010b4a5184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93a737b-f736-4bb6-8146-f7ac3034ebb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521480a7-eb16-4ed0-aa1b-0090f485dc75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e66e437-ac4d-4eaf-8679-d27c6db6d0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417b4d81-de5a-449d-9cf6-1345a832e615",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0735e5e-7be9-4c58-8b8a-1673f1c1fa83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d156391-39e5-499b-b5a4-78d57ba10899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18416b53-6063-4719-b472-ed8a4830cc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4882fd5e-a0f2-4747-aaf2-f243025a496e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07332f5b-2d89-4441-bf7f-d8b1b02a6f05",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48a8ade-c658-4f7a-965a-e3cc7d286bab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f548816-606c-4607-be45-db0fa22c10f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b665b723-83dc-4cd2-8b29-50a59707340e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb9ca7d-e7e0-42f1-9d89-a7dfbd510013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3fb278-2a5c-4067-8243-1d4d44c86be6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bce92c-7437-41f7-98a0-c169a1b18305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76479668-0199-4b92-923d-7948ecdea387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66de6bcf-5ad7-4c56-8ab9-fb7a79be0094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef72aae-6c88-405b-a0da-b1434dc80092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5440e1-6c71-42dd-9ef3-0c777b443504",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28649505-6087-428f-b9f8-a90cc2850537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37902d7d-38f6-44dd-acce-4b9423e06f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafb105c-16f2-4015-a086-150fd00e2ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd18bac-d8b1-49be-b6e7-ad783f177283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339fab7d-9003-41f9-824c-59628b46eb78",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bdaa56-295e-4ae0-877f-e3a1cfe666d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02681967-64d0-40eb-8ab4-ddd9a42c1cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af224fef-66d6-4f11-8fa2-a2083f094d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e14b07-2d4a-4978-80f7-ac4a8904cf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6cf740-b0bc-4d03-bd13-50adb5484af8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d097a47-8003-43ae-b223-6585a51c8cd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed1de94f-bf86-47bf-8f80-bb1c2ddf562a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71907eac-72b5-4942-828e-c26a7d74e7a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80db80b0-0e4a-4e9c-995d-34c0a7a9ebf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396790f0-c917-4be9-a26c-12d58fab5f03",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e107bf1-855e-49dc-87f5-b2604499f34c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1195278c-7fd1-4236-8fe1-981a3624893b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47783074-5e03-4f8f-adf8-d31a1761cbc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e77aab-0e37-46ed-8640-e15300373be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf390cd-79fd-45c2-9bd8-318dc7018b37",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c9cd71-faa4-446b-9c79-f0052f62dd59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6bd6fc-b760-442d-9bc0-d4c6764c2018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15f11a3-0ae1-4873-80a5-494514413ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbd4292-09c4-48cb-b42d-fdd969c1b4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de88ae9-909e-4239-979e-43ca55a66159",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155e2c31-67ab-42d8-865f-303c30d8a962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e8fd1eb-0739-4fb6-b8a4-a5d160055cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb47382-013d-41bf-a08c-15b09ce3729e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d6fa0f-203b-4f37-a749-4cef19396e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5d730f-714d-4516-a389-78128876ed4e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7978ace-76c5-4b6e-8d8a-057c9a69dbe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc10ee1f-84e9-4d71-b3f2-01a28ba1d9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c04aaa-ade8-4b01-b2f7-0d74e295a06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f4af17-f093-4b2c-881c-33187052224f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f7da78-1baa-4c80-b897-c8f6762eb723",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578e8849-2f08-4b10-884d-af3fdfd379e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59feab9a-aaa2-45ed-adf9-b884fa789ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf998bd-bcf0-49dc-9fdd-305f56d6fa0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d56cdbf-0182-4d2c-a58c-06bc64c91f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fbf39d-6997-4507-aab6-82876ac9dbe1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5886d636-114f-4d52-aa3f-0b8be815d2b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee4bbc7-30d5-4735-915c-64d4bfecefe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8050b4ba-ef34-445b-99d2-9dff447dae5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1841df26-df26-4217-b2b9-915739db470d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da9c92-773b-4a03-ac6d-cb549c9c9a2d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdde83e1-4050-4b66-913e-6d5d2f6e7d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed73171-4774-4b2f-9de5-1471f458b416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8318fa5f-9ce7-4569-8600-9ba3d437be0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee50f6b-9cd2-4d13-91e1-005afbc7981d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69016849-036b-4204-b073-5edd3acba951",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182b25a3-df67-4492-bce6-369a82e7b744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0631d998-bc42-4dfd-8205-e23b81b5e25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1553aaba-481f-43e6-adec-a4cbd7b21613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8a42d6-63a6-49bd-8186-2dfc37bdf578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccf3285-1fab-4c28-bfa1-76fd4f06ac84",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993d3d23-e367-47d3-a10a-f6ce472aa43d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91edec87-c1d1-407c-9fa8-1f8b4e17628a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e27734d-50d9-4a7d-b2eb-d4201de70993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a2a511-cf33-49a8-9bb8-033409e2887a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d8c464-7bbc-4585-9654-e29d9980ba6e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c853ca38-5745-4bde-9e6a-1f5a618dab6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e421a5a4-657d-44eb-92aa-6f4a1770480a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c60c41-c1e2-4174-9d0c-17878658bb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9333c60a-dd4b-4e32-b677-dedee4d86af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb77c31-46bc-4fa1-b309-80caabd68db9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83e974f-8377-4c87-acaa-1ac4b17e851c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b4e9f5a-1ea5-4a68-a742-32e8d75a0c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be5c34d-172a-4fe1-be57-83bfde248afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5886863-9d63-45a8-a0b2-ada56726b6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a474f8dd-82ce-4cc6-9a21-22711c60453e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcd341c-4f62-46d2-9ea9-80fbb5a054c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f1f9694-ca5a-49be-b75b-59c852b5bfe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc7ffa0-eb56-423c-bda9-58775c18ee4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb9c101-c74e-4636-be94-dc146d8e586f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6821be6-855b-4831-9f97-d4c866ef56ac",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa960ec-4f2b-4851-bd21-837ad4644003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbfe83c3-8e98-48b2-afc7-ba268f25f689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3e77b0-5ea3-418b-a338-069ff4a2307a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd588d88-99f0-44b1-90f8-5c679115e47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db46de92-8884-4a6f-b370-a0f2e4388323",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504ec1e1-bfcd-4baf-aa43-13e5dbde9942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b1bffe-8419-43c4-9850-361a12ebd4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17f7f14-1a1b-4977-ac8a-1415b0c3a0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81747e94-4fe4-442f-9d48-08aa6c215e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adebd28-c378-42e4-a953-33784e2f4d56",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd37757-6adb-46e0-b92d-e1545e1a48e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa4451da-3ff0-435f-9547-b1176ba99a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fce8080-9cec-4a2a-93e4-4eca2a04f0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f75efde-1bc8-476e-89fc-d3971f0bc0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f3b986-2267-4cde-911e-e2d0b8cee524",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dce31f-366b-42cf-b4f5-763f319fef37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d94061-f9c3-47e4-bda4-081ac02083b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d681331-4fb1-4fae-9b48-6ec7a2327131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bdb901-dff2-4094-a3d3-208ca24f7792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d117877b-d32a-4416-8383-06cb56b693d9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7495b49-745d-4fcf-b225-9844f8a8f901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4a940e-1386-420b-91c8-027a43656523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6debd1-e180-4b4f-a660-f7078d7853da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8d8c27-20ea-4ecc-a82e-ba5e2286d568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6287e751-10df-4bfe-9f02-e7a3325124fa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b584e7f8-8507-4e02-af79-7c7cb9bd7970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8523896-72c5-4292-ad3b-9f9e3031d505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae883ab-5d62-4a03-bc84-09da0f566aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e4e8ab-6b7b-4f15-8e53-f5769ecc0542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724b5cdd-7d77-49ea-9fe8-247f0a45883d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae66735e-04d7-4768-8f9c-fc51eedf0bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d15e9076-c819-4d88-b968-922ec32bacb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac38c79-3f24-4f23-91a4-d95d229bd349",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29def620-85bb-42fe-939c-5993be032e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9b1042-9e53-4442-a856-b74d4c9e9ea8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c29911-fc74-4f1c-802d-bb1deb38cddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b360c7a3-f3d1-43cc-ae72-6302080bd245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf39a8d-5545-4a65-b837-d24dfb950cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991d135f-cb5f-47d5-9946-fc99cf2d2dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6a4991-82fd-4938-99cd-10d893ee9e96",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e8e3f4-b18a-4175-9059-80efd4b966ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8892821c-ceba-46e8-85e2-5d635735e7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e2b1c9-d665-4b90-974f-b8535a462c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e344277-df77-48d2-a28a-a62fc05596fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0231ca8-3b9b-415b-8ec7-f42878500089",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd10291-08ac-4ac2-ab07-eb1f3729cbe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f605536-6b3d-4d95-9563-13b1f7cf26ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa28637-d715-479a-ac42-eb202d2c82ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d01f7f-53c4-4ab3-8936-6d71b8042f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22da341a-b533-468d-8190-7b1c04421792",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650e9283-5474-476c-b8cf-3dc4904c5500",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c41d846e-d690-4609-be7b-a8b6d055aa2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b10048-219a-49f1-b503-f6482c98e9a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94226e9-cf91-405f-8854-60f1cb166f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df009ce-d6c3-4181-b562-27cefd424462",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436458ca-5ff4-49f0-b6a2-297b463a9e6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de52dbad-f49c-4079-8336-eb082088c82d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e46ad6d-3310-41f2-a9d1-51901d659c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dadf9573-5cee-4c5e-872a-b4d77700b442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a549e54e-846b-4564-af6e-20bf08b87c9c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5e7131-72a0-4050-97c9-f88ffa2ab50e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a33418-d7df-46d3-bbec-3e50c46ac4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dc1f56-8aa2-4fbc-a3ef-92b303ff5033",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efec9ad-90cc-4564-8755-59e777e25627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f846099-4abe-4c36-9566-bd15dba6a29e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e304e036-c0be-4801-82dc-d78a0e8ae7ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7377ff82-64a9-4bdf-a2b7-039791ecbdb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b24c3e5-fd7e-40d9-b8f0-0e60e3ce405f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf365f9d-ac89-42d8-90e9-239e755f1a87"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1d8cd10-94f4-4c6d-ab77-b3599b612210",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d98e499-688f-4cd6-a7e2-0fa8b9b7baae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb1f8594-8623-4186-a8cc-0191db369abd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e64bab8-0f1a-4e83-bf3a-87a06e54951e"
                    }
                  }
                ]
              },
              {
                "id": "41a5d5ef-ff3c-4eb3-8b20-4304d57f3bc3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62e722c3-c5b8-48cf-9768-30ade4e314fc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f695be-6a59-4067-ab42-e884e8d5c1ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5388ade9-b9c7-47cf-bf74-30b5f3636367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e45957-d35b-41aa-a0ae-ec476b0c4cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b94cbfc-032b-4bda-bcb4-d35046dab896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20df76c8-4fd3-404c-9a79-bbf2d2577e49",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1aae0f-52c9-40b8-a87b-756e60a487d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0802058b-be8e-48da-b473-6cda73ad7fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7c5c0c-2b29-44e2-b127-a03bdaf827fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebcb5f40-8b5e-4007-8226-45a7797b470b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1aba808-60aa-417a-b684-c89ab19fa403",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d1d9ad1-7c77-40e9-a804-928e2aa84cbb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc6e12a5-4b83-41a7-8c45-c04822a1cbdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb8c9bec-06a0-4102-88cf-dbf0b6b0e779"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "c1209e92-2893-4195-9797-4fd7af280051",
            "name": "Positive Testing",
            "item": [
              {
                "id": "faf3ee22-bbc4-4ecd-ab4c-9c4a3136c7fd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12286ace-9d9a-4b75-8fee-c968b64de23d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92786db3-21ae-4e4a-b228-4d90d02d4bea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d225861-6ebb-416f-8687-dfe36a0d12f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95122483-3f6a-45e2-8178-73008f0be295"
                    }
                  }
                ]
              },
              {
                "id": "68692935-9036-48f4-90d0-a339200b3f89",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57007336-7d78-4eec-b99b-ec1962bc4eeb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ae5b532-81d0-49a9-849c-e18dc86987a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e48f712-1f96-4515-9d08-07f5e72b6029",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af751026-4d10-4937-bdb7-eab4834e5ca5"
                    }
                  }
                ]
              },
              {
                "id": "4c0fbd8d-83ba-40ad-81fd-789bf478e03f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d7fbf8f-9005-4ec4-9bb9-64a0503a88cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69e9e120-d229-42cf-93ea-9dbfbcdd17c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5439e26-e29f-4d35-9b97-94a7853ad979",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87332b3a-4d8f-4cc6-804a-67d4cd13fd76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c13fe8d-fae1-4e08-9a11-6c4b10f7a3a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "741f8b91-0f7f-4f32-8755-622b80e2a9ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35db2a1b-c430-4392-bfbb-8b2e6a887a26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a967ff89-72b2-489e-a500-404eb11552f3"
            }
          }
        ]
      },
      {
        "id": "621972ed-279c-450a-b9ef-c50c7d25dc0e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "681e26e4-c09a-4791-9812-d3be15ef01e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81d1c68e-02bc-492f-a976-35f5335adc27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42a32a35-a372-4100-80cd-c20c5837d6c9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f428b2d8-e9fe-4fc8-bb7b-3609c941e924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c790fc-2735-4bc7-8c7f-c50e140366ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361e7bf7-5926-4786-89ad-13a477e0e810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef80a1e9-4a25-40e0-8a2e-0ee7d8f5ad73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d931e26-4c57-412f-9e6f-735a37090ceb",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62b6483-9b6d-4b9f-8ee6-3d0752b5b739",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "f9fe7293-f85e-4f4c-a0e6-ce7cd9bea8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea35fff-2afa-420a-8b0f-0479d79da8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "952884a8-c722-4dab-b99f-b68db10f8538"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ff85230-e7a4-45b7-86f4-3b41ae08605d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ba0f2fc-4498-44f8-af3b-6a37b52446a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "169323a3-2442-4f21-b471-96ed4fdab633",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e0adff7-a235-4066-8f15-3b79d7050260"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2205ad80-e901-4252-b6c2-e6d6b174c254",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "a4f70745-d4dc-49b1-8d78-06242e7918aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd4b4585-200b-47aa-b0e7-3a074f176350",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85fccc00-6c46-4608-a2f6-f471e69df6d4"
            }
          }
        ]
      },
      {
        "id": "76e8760d-0539-451e-84b1-72f4eac24b90",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "52c0ddc7-f231-47cd-8a48-7c7542a5c56e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10e2e5fc-3dd9-4665-81c1-1073c07be619",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c952117a-af44-4405-9eb4-0487b98fb860",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fb4ed1-fe1c-4e9a-8163-a2f71ad32305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae02ce2-426d-4cc9-83ba-775f09c4bd4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024c100b-d509-40d1-8e32-4e736314fd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "113561b9-c789-43da-9b2d-c4e7f976dcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73abefb-23f1-4a2e-b09e-bcac27badd8a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e48be85-85b7-4aab-b0bf-95bb2fcfcc12",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "bd2c8665-b5fc-4103-807d-b9922f3d49f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de66c58-8f51-4893-b0cd-6567f6c18a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41880ef4-c742-4098-b887-e00a26794ded"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "530f20a4-9b37-4046-bd13-677b608d186f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54c92855-3db8-4452-8876-a4175afc5d38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "092f3bf9-9e07-4f23-ad66-b4e00b6a52fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6df3d717-8e52-440f-9b6d-ff3daff8cb33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6657cc45-6b64-4a98-8406-522073b99409",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "67744700-6e84-4f82-9097-d40153f095a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28b501bd-d652-4ec5-973e-3a9bbb8d6593",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35eb984a-42dd-4a56-af57-e39a283c8f60"
            }
          }
        ]
      },
      {
        "id": "c66a46d1-da71-4d3d-b807-1b4c9f9e8938",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1bc76565-f037-4d0e-a764-b9c6c79a2cf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11e83b88-4f8b-4787-8cdf-176cd277be13",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f61ea1ff-4be9-4481-b318-e95802bf6cb8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5305b08-cb06-4d9f-b003-ef125243b6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2eb012-16c0-4621-8bf1-4afa731a7a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759a53ee-aff2-480c-bda9-306411cd68f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2b99669-9fd0-4098-a1b2-ad6fc64b5e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10e025a-f2f4-49a1-af37-23715716c542",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ad46fc-751b-4c4c-a2ec-ac24220b00e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "5115c367-d2f5-4141-b422-1bd85145684b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47837a23-89b4-4406-a8f2-737a3a76449a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27383cc4-258f-4893-8c25-1481773a05ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43fd3c27-c186-488f-b1a5-e0728301855d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd6c0aec-51a2-4b7c-9f00-bb6b07e9c3b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80ca0618-d281-4aed-bb18-f16a68722f1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88567a60-51b2-43c0-9348-c364968ac39f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17fafb0e-b358-4f17-96de-42c7471edf1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "94064851-7e9b-44f7-93b9-5db97e9da501"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8485946-d048-4db0-b264-e1aab66ec80e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbcb2273-c337-4fd4-a60a-0f2d86c74ef8"
            }
          }
        ]
      },
      {
        "id": "5c3b9316-d729-4dce-9705-4a82492c7713",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "344b75ce-660a-4bc7-b336-d72605cd7fe2",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1211,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 203,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 155,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 315,
        "pending": 0,
        "failed": 8
      },
      "testScripts": {
        "total": 611,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 600,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 73.66009852216744,
      "responseMin": 4,
      "responseMax": 1118,
      "responseSd": 148.11168643663336,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1664413418674,
      "completed": 1664413441106
    },
    "executions": [
      {
        "id": "aa42f99b-c3ca-4255-b642-b53b82440afd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 155,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5818daa0-c443-463a-8470-358cfaa26d81",
          "httpRequestId": "019092f9-3068-49b4-aded-3b4154024fc3"
        },
        "item": {
          "id": "aa42f99b-c3ca-4255-b642-b53b82440afd",
          "name": "did_json"
        },
        "response": {
          "id": "4ebf8978-b4c9-46c4-9e49-cd41fe15794c",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 1369
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e0280c-e088-47c2-8331-d294228ad317",
        "cursor": {
          "ref": "b61a2fbe-74f6-4fc3-9dd2-bc82343171d9",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6eda0147-8e44-4773-9207-588c8e523006"
        },
        "item": {
          "id": "d6e0280c-e088-47c2-8331-d294228ad317",
          "name": "did:invalid"
        },
        "response": {
          "id": "83817919-d390-44b6-b787-7b275d752f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e0280c-e088-47c2-8331-d294228ad317",
        "cursor": {
          "ref": "b61a2fbe-74f6-4fc3-9dd2-bc82343171d9",
          "length": 155,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6eda0147-8e44-4773-9207-588c8e523006"
        },
        "item": {
          "id": "d6e0280c-e088-47c2-8331-d294228ad317",
          "name": "did:invalid"
        },
        "response": {
          "id": "83817919-d390-44b6-b787-7b275d752f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d73e6c-8eb8-4e22-94b0-8497367033c0",
        "cursor": {
          "ref": "9ae16085-7443-4d86-94c5-43acbf496c55",
          "length": 155,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1db29866-8b63-48c7-9fd0-24d27b5085d2"
        },
        "item": {
          "id": "65d73e6c-8eb8-4e22-94b0-8497367033c0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0d00172e-9545-4db1-b0e4-07fa6e0c6977",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b847019e-72a7-4c49-b6b4-4292d757f519",
        "cursor": {
          "ref": "38cb4868-6bde-40bb-9f22-9ee78ba92441",
          "length": 155,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "799fe2d2-4ee2-4dd6-965a-4dbf0cc90c8d"
        },
        "item": {
          "id": "b847019e-72a7-4c49-b6b4-4292d757f519",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e30a04f9-6b5b-44bf-95e9-2b8cf81d81f6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb20259-5c71-45aa-92a3-3c603eebb0b1",
        "cursor": {
          "ref": "c1e335ba-b03a-48f5-b4b3-e11cb2c4a387",
          "length": 155,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "34a2c224-9c4a-4bbd-8309-55ef692b2a35"
        },
        "item": {
          "id": "4fb20259-5c71-45aa-92a3-3c603eebb0b1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5d36c719-a48b-4029-8cd1-a916a36011c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f22f7d-37be-4dce-a2bc-218b6503a9f8",
        "cursor": {
          "ref": "cb36d5b9-b11c-41ec-8afb-44281a8c49d5",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "287520eb-50c3-4973-a751-06ac0915f4a5"
        },
        "item": {
          "id": "88f22f7d-37be-4dce-a2bc-218b6503a9f8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b120a20d-02db-473a-83cc-634e5474e044",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f22f7d-37be-4dce-a2bc-218b6503a9f8",
        "cursor": {
          "ref": "cb36d5b9-b11c-41ec-8afb-44281a8c49d5",
          "length": 155,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "287520eb-50c3-4973-a751-06ac0915f4a5"
        },
        "item": {
          "id": "88f22f7d-37be-4dce-a2bc-218b6503a9f8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b120a20d-02db-473a-83cc-634e5474e044",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 6,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09e52bb-475a-47a3-8c8c-580af0c394a6",
        "cursor": {
          "ref": "817bab9e-0016-4fa9-82ba-6a6e85b165b9",
          "length": 155,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c170876a-62c9-4949-8cba-be028e6c39f3"
        },
        "item": {
          "id": "f09e52bb-475a-47a3-8c8c-580af0c394a6",
          "name": "identifiers"
        },
        "response": {
          "id": "9518d71e-63f1-47f2-abda-644e25fd8886",
          "status": "OK",
          "code": 200,
          "responseTime": 245,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75c0a60-3237-474e-b032-16b8e0e04456",
        "cursor": {
          "ref": "99a19c8b-fa21-4dc5-997c-04dbfc622a19",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e959fa40-dc00-4ea6-b362-2dec9eb0dc55"
        },
        "item": {
          "id": "c75c0a60-3237-474e-b032-16b8e0e04456",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ea8d6865-32af-4477-87b7-45d1c657b791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75c0a60-3237-474e-b032-16b8e0e04456",
        "cursor": {
          "ref": "99a19c8b-fa21-4dc5-997c-04dbfc622a19",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e959fa40-dc00-4ea6-b362-2dec9eb0dc55"
        },
        "item": {
          "id": "c75c0a60-3237-474e-b032-16b8e0e04456",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ea8d6865-32af-4477-87b7-45d1c657b791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75c0a60-3237-474e-b032-16b8e0e04456",
        "cursor": {
          "ref": "99a19c8b-fa21-4dc5-997c-04dbfc622a19",
          "length": 155,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e959fa40-dc00-4ea6-b362-2dec9eb0dc55"
        },
        "item": {
          "id": "c75c0a60-3237-474e-b032-16b8e0e04456",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ea8d6865-32af-4477-87b7-45d1c657b791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27210bbb-47e5-44fe-94d4-ce8655dd78b2",
        "cursor": {
          "ref": "ac5fc8e4-3e8b-49b6-a511-d1fdd4e1ed26",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cda4840b-ab01-4587-b8f2-d0e4499e1b6b"
        },
        "item": {
          "id": "27210bbb-47e5-44fe-94d4-ce8655dd78b2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bb236397-c4cb-4ed0-86de-864fc3c72308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27210bbb-47e5-44fe-94d4-ce8655dd78b2",
        "cursor": {
          "ref": "ac5fc8e4-3e8b-49b6-a511-d1fdd4e1ed26",
          "length": 155,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cda4840b-ab01-4587-b8f2-d0e4499e1b6b"
        },
        "item": {
          "id": "27210bbb-47e5-44fe-94d4-ce8655dd78b2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bb236397-c4cb-4ed0-86de-864fc3c72308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beda53bc-a944-462a-a0d5-b9305c7ed5fb",
        "cursor": {
          "ref": "f2a7b4e3-bf3c-4180-b6dc-3873e57f7789",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b0bd10ad-013d-49bd-935c-250d370f0add"
        },
        "item": {
          "id": "beda53bc-a944-462a-a0d5-b9305c7ed5fb",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "9a0ad852-925f-4f40-8114-12563e62c675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beda53bc-a944-462a-a0d5-b9305c7ed5fb",
        "cursor": {
          "ref": "f2a7b4e3-bf3c-4180-b6dc-3873e57f7789",
          "length": 155,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b0bd10ad-013d-49bd-935c-250d370f0add"
        },
        "item": {
          "id": "beda53bc-a944-462a-a0d5-b9305c7ed5fb",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "9a0ad852-925f-4f40-8114-12563e62c675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240dc03e-339a-463c-a07c-5752b02d0dbb",
        "cursor": {
          "ref": "fc2e19e7-4747-40dd-9c49-84e7d3be93b5",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fe38b909-000e-4908-8b6d-15bd72218cf9"
        },
        "item": {
          "id": "240dc03e-339a-463c-a07c-5752b02d0dbb",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "fd1f5766-01a2-4aec-8808-c35ae9e53fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240dc03e-339a-463c-a07c-5752b02d0dbb",
        "cursor": {
          "ref": "fc2e19e7-4747-40dd-9c49-84e7d3be93b5",
          "length": 155,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fe38b909-000e-4908-8b6d-15bd72218cf9"
        },
        "item": {
          "id": "240dc03e-339a-463c-a07c-5752b02d0dbb",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "fd1f5766-01a2-4aec-8808-c35ae9e53fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383e16e2-831d-425b-8c90-ad28caf85e6f",
        "cursor": {
          "ref": "2087c09b-a54f-48c0-9ea5-379a4b2b8ff6",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "52ec1caf-8cd0-4f6f-8423-c0d924bd5fe2"
        },
        "item": {
          "id": "383e16e2-831d-425b-8c90-ad28caf85e6f",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "15c70f56-51f5-49ca-be5c-28c8b0d07d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383e16e2-831d-425b-8c90-ad28caf85e6f",
        "cursor": {
          "ref": "2087c09b-a54f-48c0-9ea5-379a4b2b8ff6",
          "length": 155,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "52ec1caf-8cd0-4f6f-8423-c0d924bd5fe2"
        },
        "item": {
          "id": "383e16e2-831d-425b-8c90-ad28caf85e6f",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "15c70f56-51f5-49ca-be5c-28c8b0d07d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77022999-7477-4d5d-9ae6-78372486f54c",
        "cursor": {
          "ref": "5ce2019b-55ff-4a08-acbf-71aec8fb7127",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8aeb1e77-a622-446e-b15b-6f864ae10004"
        },
        "item": {
          "id": "77022999-7477-4d5d-9ae6-78372486f54c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "77cf9ad4-9717-4358-b2fa-df79b04be4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77022999-7477-4d5d-9ae6-78372486f54c",
        "cursor": {
          "ref": "5ce2019b-55ff-4a08-acbf-71aec8fb7127",
          "length": 155,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8aeb1e77-a622-446e-b15b-6f864ae10004"
        },
        "item": {
          "id": "77022999-7477-4d5d-9ae6-78372486f54c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "77cf9ad4-9717-4358-b2fa-df79b04be4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8490cf6-a274-451c-81c2-361ede01c3d5",
        "cursor": {
          "ref": "3f2719af-ad10-4246-97c9-10b84b4900ff",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b5320f7e-0f12-433e-96db-880792b31d95"
        },
        "item": {
          "id": "c8490cf6-a274-451c-81c2-361ede01c3d5",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "f01a2d73-cb76-4c88-a112-2221659828dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8490cf6-a274-451c-81c2-361ede01c3d5",
        "cursor": {
          "ref": "3f2719af-ad10-4246-97c9-10b84b4900ff",
          "length": 155,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b5320f7e-0f12-433e-96db-880792b31d95"
        },
        "item": {
          "id": "c8490cf6-a274-451c-81c2-361ede01c3d5",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "f01a2d73-cb76-4c88-a112-2221659828dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebea10b-3e84-4620-8861-cb5064f435bf",
        "cursor": {
          "ref": "3df2b369-076d-4696-b6f3-cf7e6c78e642",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e094b661-5287-4c21-a848-17b48a27faca"
        },
        "item": {
          "id": "3ebea10b-3e84-4620-8861-cb5064f435bf",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "4b5d1d16-2de2-4d05-a284-373a39fb5c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebea10b-3e84-4620-8861-cb5064f435bf",
        "cursor": {
          "ref": "3df2b369-076d-4696-b6f3-cf7e6c78e642",
          "length": 155,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e094b661-5287-4c21-a848-17b48a27faca"
        },
        "item": {
          "id": "3ebea10b-3e84-4620-8861-cb5064f435bf",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "4b5d1d16-2de2-4d05-a284-373a39fb5c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bf19c9-85bb-4d59-affe-ba573cc4901d",
        "cursor": {
          "ref": "5b74a3cd-0555-4ebb-af57-ea8a0b2102b9",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "73e0effc-1593-44b4-8817-5916cfa6aa3c"
        },
        "item": {
          "id": "02bf19c9-85bb-4d59-affe-ba573cc4901d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a01fa8e8-f676-474d-9317-e3a593ecbaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bf19c9-85bb-4d59-affe-ba573cc4901d",
        "cursor": {
          "ref": "5b74a3cd-0555-4ebb-af57-ea8a0b2102b9",
          "length": 155,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "73e0effc-1593-44b4-8817-5916cfa6aa3c"
        },
        "item": {
          "id": "02bf19c9-85bb-4d59-affe-ba573cc4901d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a01fa8e8-f676-474d-9317-e3a593ecbaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2328eb3-7690-4161-825a-69b4528479bb",
        "cursor": {
          "ref": "d51274ab-e47f-44ae-8123-768893c9ddea",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "799a3881-8155-4092-b85b-e9cbcd620bc2"
        },
        "item": {
          "id": "f2328eb3-7690-4161-825a-69b4528479bb",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "a5c7d0b3-f244-4518-a2d2-0c6ae9ec89a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2328eb3-7690-4161-825a-69b4528479bb",
        "cursor": {
          "ref": "d51274ab-e47f-44ae-8123-768893c9ddea",
          "length": 155,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "799a3881-8155-4092-b85b-e9cbcd620bc2"
        },
        "item": {
          "id": "f2328eb3-7690-4161-825a-69b4528479bb",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "a5c7d0b3-f244-4518-a2d2-0c6ae9ec89a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3713be05-a034-4dc8-8857-eb2814a70684",
        "cursor": {
          "ref": "93c5450c-5f83-4430-9f42-3e50b7e90e3d",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "93c84a39-285e-48c9-806e-d5ddbc26ed53"
        },
        "item": {
          "id": "3713be05-a034-4dc8-8857-eb2814a70684",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "0656617b-262d-4b66-ac04-cddf53f5f2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3713be05-a034-4dc8-8857-eb2814a70684",
        "cursor": {
          "ref": "93c5450c-5f83-4430-9f42-3e50b7e90e3d",
          "length": 155,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "93c84a39-285e-48c9-806e-d5ddbc26ed53"
        },
        "item": {
          "id": "3713be05-a034-4dc8-8857-eb2814a70684",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "0656617b-262d-4b66-ac04-cddf53f5f2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9d71bd-81e3-4f0c-91cb-3bc37f2a6d4f",
        "cursor": {
          "ref": "edd44d75-c15d-4399-aa02-799a6970dd54",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "95f44252-9236-46ab-b441-2747c30545e9"
        },
        "item": {
          "id": "4a9d71bd-81e3-4f0c-91cb-3bc37f2a6d4f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "97a9dbf1-4235-4351-ad82-33427ae3ec06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9d71bd-81e3-4f0c-91cb-3bc37f2a6d4f",
        "cursor": {
          "ref": "edd44d75-c15d-4399-aa02-799a6970dd54",
          "length": 155,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "95f44252-9236-46ab-b441-2747c30545e9"
        },
        "item": {
          "id": "4a9d71bd-81e3-4f0c-91cb-3bc37f2a6d4f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "97a9dbf1-4235-4351-ad82-33427ae3ec06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ca3e9a-c920-4aab-92fe-ff34a2b074d0",
        "cursor": {
          "ref": "fe33fe9f-b0f8-46dd-aaf2-3142f7093bc2",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e7fdcbc4-8939-4395-b555-e835c4156f30"
        },
        "item": {
          "id": "b1ca3e9a-c920-4aab-92fe-ff34a2b074d0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fbbcbff6-f40d-4014-aac7-750c853cd3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ca3e9a-c920-4aab-92fe-ff34a2b074d0",
        "cursor": {
          "ref": "fe33fe9f-b0f8-46dd-aaf2-3142f7093bc2",
          "length": 155,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e7fdcbc4-8939-4395-b555-e835c4156f30"
        },
        "item": {
          "id": "b1ca3e9a-c920-4aab-92fe-ff34a2b074d0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fbbcbff6-f40d-4014-aac7-750c853cd3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6ccf3e-87b7-4bb3-a50c-413eea9b93a2",
        "cursor": {
          "ref": "ebd6611c-f1e7-4955-bf61-a8aaca1fdad3",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c016e7d7-5335-415b-a1c0-0ffc25b81fa1"
        },
        "item": {
          "id": "ce6ccf3e-87b7-4bb3-a50c-413eea9b93a2",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "de43f728-1490-4d48-a11c-82f3c136e210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6ccf3e-87b7-4bb3-a50c-413eea9b93a2",
        "cursor": {
          "ref": "ebd6611c-f1e7-4955-bf61-a8aaca1fdad3",
          "length": 155,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c016e7d7-5335-415b-a1c0-0ffc25b81fa1"
        },
        "item": {
          "id": "ce6ccf3e-87b7-4bb3-a50c-413eea9b93a2",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "de43f728-1490-4d48-a11c-82f3c136e210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fe62fb-379a-4f11-9abd-705a25028708",
        "cursor": {
          "ref": "57df1a7e-bc59-4dcf-a87f-a5d525555401",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0b98b7a4-22c6-42cf-80c5-b5adf622f509"
        },
        "item": {
          "id": "84fe62fb-379a-4f11-9abd-705a25028708",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "1d050204-39e9-4bc8-8ec3-fee26da5c96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fe62fb-379a-4f11-9abd-705a25028708",
        "cursor": {
          "ref": "57df1a7e-bc59-4dcf-a87f-a5d525555401",
          "length": 155,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0b98b7a4-22c6-42cf-80c5-b5adf622f509"
        },
        "item": {
          "id": "84fe62fb-379a-4f11-9abd-705a25028708",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "1d050204-39e9-4bc8-8ec3-fee26da5c96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e574e6-a3e9-4f81-a8ff-eb8f17cf22a6",
        "cursor": {
          "ref": "2216e81c-ba54-433a-833f-cfce64dc6e94",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d6dca046-23a8-4525-ae3c-eb80bc4f6269"
        },
        "item": {
          "id": "77e574e6-a3e9-4f81-a8ff-eb8f17cf22a6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d306ba96-436b-42d1-89f8-b3e76519b943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e574e6-a3e9-4f81-a8ff-eb8f17cf22a6",
        "cursor": {
          "ref": "2216e81c-ba54-433a-833f-cfce64dc6e94",
          "length": 155,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d6dca046-23a8-4525-ae3c-eb80bc4f6269"
        },
        "item": {
          "id": "77e574e6-a3e9-4f81-a8ff-eb8f17cf22a6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d306ba96-436b-42d1-89f8-b3e76519b943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831af02e-1de2-40cd-aea0-1b828fc6690e",
        "cursor": {
          "ref": "274c0560-91d8-4f4f-a8d4-a82bef29b722",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6627d1da-81a0-42a7-897f-1825f205ba17"
        },
        "item": {
          "id": "831af02e-1de2-40cd-aea0-1b828fc6690e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b527cba4-e902-4b69-ab92-06f7f1144271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831af02e-1de2-40cd-aea0-1b828fc6690e",
        "cursor": {
          "ref": "274c0560-91d8-4f4f-a8d4-a82bef29b722",
          "length": 155,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6627d1da-81a0-42a7-897f-1825f205ba17"
        },
        "item": {
          "id": "831af02e-1de2-40cd-aea0-1b828fc6690e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b527cba4-e902-4b69-ab92-06f7f1144271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d534c5-084d-4f73-9ba4-8a63ab0a5fc2",
        "cursor": {
          "ref": "14d43379-80d4-41ea-af76-2c587697659c",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8eebb4d0-11f9-42fc-a820-e0ed90d51910"
        },
        "item": {
          "id": "83d534c5-084d-4f73-9ba4-8a63ab0a5fc2",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "4865504d-f2a9-4214-ad5d-e6e0dc227baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d534c5-084d-4f73-9ba4-8a63ab0a5fc2",
        "cursor": {
          "ref": "14d43379-80d4-41ea-af76-2c587697659c",
          "length": 155,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8eebb4d0-11f9-42fc-a820-e0ed90d51910"
        },
        "item": {
          "id": "83d534c5-084d-4f73-9ba4-8a63ab0a5fc2",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "4865504d-f2a9-4214-ad5d-e6e0dc227baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97826c1f-8c3a-4334-836a-0685428a3dea",
        "cursor": {
          "ref": "faa457b2-7b31-4613-bd10-c2458df23bfe",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5bd96899-36da-429e-88f1-addc1e878f21"
        },
        "item": {
          "id": "97826c1f-8c3a-4334-836a-0685428a3dea",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "99b9742c-c977-4faa-9a16-310f7ea1f84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97826c1f-8c3a-4334-836a-0685428a3dea",
        "cursor": {
          "ref": "faa457b2-7b31-4613-bd10-c2458df23bfe",
          "length": 155,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5bd96899-36da-429e-88f1-addc1e878f21"
        },
        "item": {
          "id": "97826c1f-8c3a-4334-836a-0685428a3dea",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "99b9742c-c977-4faa-9a16-310f7ea1f84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771eb8a1-0979-4cc5-af4a-7e648f8749f7",
        "cursor": {
          "ref": "0d769b38-217c-47a5-b7bb-9e9e9a9e4f6b",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8e1aad78-ceb6-42af-b0d8-833c9fab13fb"
        },
        "item": {
          "id": "771eb8a1-0979-4cc5-af4a-7e648f8749f7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5e6f0891-c549-4213-99a4-86f388677dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771eb8a1-0979-4cc5-af4a-7e648f8749f7",
        "cursor": {
          "ref": "0d769b38-217c-47a5-b7bb-9e9e9a9e4f6b",
          "length": 155,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8e1aad78-ceb6-42af-b0d8-833c9fab13fb"
        },
        "item": {
          "id": "771eb8a1-0979-4cc5-af4a-7e648f8749f7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5e6f0891-c549-4213-99a4-86f388677dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eae198b-3be3-4f3e-8f14-7e3e8bf2221a",
        "cursor": {
          "ref": "249c75ad-5d9c-4990-84b1-d4380bceddbb",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a4ac8d84-4a7e-4be2-80cb-0591bbc7e479"
        },
        "item": {
          "id": "8eae198b-3be3-4f3e-8f14-7e3e8bf2221a",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "561d20cf-b687-4e11-9f33-543a7e83fe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eae198b-3be3-4f3e-8f14-7e3e8bf2221a",
        "cursor": {
          "ref": "249c75ad-5d9c-4990-84b1-d4380bceddbb",
          "length": 155,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a4ac8d84-4a7e-4be2-80cb-0591bbc7e479"
        },
        "item": {
          "id": "8eae198b-3be3-4f3e-8f14-7e3e8bf2221a",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "561d20cf-b687-4e11-9f33-543a7e83fe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1962c8a5-c3d1-40f1-a47f-46483c16e75c",
        "cursor": {
          "ref": "24eb5c35-ce27-45d8-8837-e3f93e8a1fb6",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "05331025-aeac-4be0-95d5-6f22ca3b45d9"
        },
        "item": {
          "id": "1962c8a5-c3d1-40f1-a47f-46483c16e75c",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "4e9f6d3e-978e-4a3f-b93a-b51fec7fa085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1962c8a5-c3d1-40f1-a47f-46483c16e75c",
        "cursor": {
          "ref": "24eb5c35-ce27-45d8-8837-e3f93e8a1fb6",
          "length": 155,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "05331025-aeac-4be0-95d5-6f22ca3b45d9"
        },
        "item": {
          "id": "1962c8a5-c3d1-40f1-a47f-46483c16e75c",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "4e9f6d3e-978e-4a3f-b93a-b51fec7fa085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c0e88f-0b4e-4d21-bb42-fd6d2ac9a3f0",
        "cursor": {
          "ref": "1b3ac6cb-61f4-4037-8fd9-bb1e95eddfc3",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "263ee38b-43b8-4dd5-b14f-879ca011ff3b"
        },
        "item": {
          "id": "09c0e88f-0b4e-4d21-bb42-fd6d2ac9a3f0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b3c57df7-40ac-4d15-9818-90ce78acac1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c0e88f-0b4e-4d21-bb42-fd6d2ac9a3f0",
        "cursor": {
          "ref": "1b3ac6cb-61f4-4037-8fd9-bb1e95eddfc3",
          "length": 155,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "263ee38b-43b8-4dd5-b14f-879ca011ff3b"
        },
        "item": {
          "id": "09c0e88f-0b4e-4d21-bb42-fd6d2ac9a3f0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b3c57df7-40ac-4d15-9818-90ce78acac1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320b26ed-65be-411a-9c9a-4765a3c3939a",
        "cursor": {
          "ref": "95c9d9d6-193a-4c49-a0a0-8b0dd81977cb",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2f5072e3-6c1b-45de-b574-84f0059be373"
        },
        "item": {
          "id": "320b26ed-65be-411a-9c9a-4765a3c3939a",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "568a771a-b6ec-4b9a-8a21-e8969bfeba96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320b26ed-65be-411a-9c9a-4765a3c3939a",
        "cursor": {
          "ref": "95c9d9d6-193a-4c49-a0a0-8b0dd81977cb",
          "length": 155,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2f5072e3-6c1b-45de-b574-84f0059be373"
        },
        "item": {
          "id": "320b26ed-65be-411a-9c9a-4765a3c3939a",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "568a771a-b6ec-4b9a-8a21-e8969bfeba96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338e3470-855a-4830-bbc3-813f13f063d8",
        "cursor": {
          "ref": "ff83f831-6803-4d80-9e3a-3f2c78173b33",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c10ceea0-5800-4f79-a7cb-20a92072c49f"
        },
        "item": {
          "id": "338e3470-855a-4830-bbc3-813f13f063d8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e3f2c2f2-f6f3-4035-af07-ba3f3d62600e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338e3470-855a-4830-bbc3-813f13f063d8",
        "cursor": {
          "ref": "ff83f831-6803-4d80-9e3a-3f2c78173b33",
          "length": 155,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c10ceea0-5800-4f79-a7cb-20a92072c49f"
        },
        "item": {
          "id": "338e3470-855a-4830-bbc3-813f13f063d8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e3f2c2f2-f6f3-4035-af07-ba3f3d62600e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db265f8-2a8f-48ae-afbe-e854cbe0ec8e",
        "cursor": {
          "ref": "1566d771-a5c4-4cc7-87c8-ae8a0e51361b",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d5e53e96-1274-4b73-9fc9-7f98b2b72d2a"
        },
        "item": {
          "id": "4db265f8-2a8f-48ae-afbe-e854cbe0ec8e",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "323f69d6-fdcc-40e1-a503-ad937acb0521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db265f8-2a8f-48ae-afbe-e854cbe0ec8e",
        "cursor": {
          "ref": "1566d771-a5c4-4cc7-87c8-ae8a0e51361b",
          "length": 155,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d5e53e96-1274-4b73-9fc9-7f98b2b72d2a"
        },
        "item": {
          "id": "4db265f8-2a8f-48ae-afbe-e854cbe0ec8e",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "323f69d6-fdcc-40e1-a503-ad937acb0521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb9a080-cb61-4a42-97e8-63504dcf8299",
        "cursor": {
          "ref": "7a351ccb-665c-4610-88cd-1c1f157b8c50",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4da15ed6-c01a-4db5-b3cf-6ee061bffdfb"
        },
        "item": {
          "id": "7eb9a080-cb61-4a42-97e8-63504dcf8299",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "65a04697-cb2d-4808-9208-9a156e27d8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb9a080-cb61-4a42-97e8-63504dcf8299",
        "cursor": {
          "ref": "7a351ccb-665c-4610-88cd-1c1f157b8c50",
          "length": 155,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4da15ed6-c01a-4db5-b3cf-6ee061bffdfb"
        },
        "item": {
          "id": "7eb9a080-cb61-4a42-97e8-63504dcf8299",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "65a04697-cb2d-4808-9208-9a156e27d8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960441f0-4972-43e9-bab5-1dee6c121c84",
        "cursor": {
          "ref": "5e55707b-51d2-4431-95e9-6de136ca0e6f",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8473ebc7-ac9c-4e7a-945e-af80b9030b4e"
        },
        "item": {
          "id": "960441f0-4972-43e9-bab5-1dee6c121c84",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "1da8220e-867a-47a6-836d-6c16ae183e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960441f0-4972-43e9-bab5-1dee6c121c84",
        "cursor": {
          "ref": "5e55707b-51d2-4431-95e9-6de136ca0e6f",
          "length": 155,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8473ebc7-ac9c-4e7a-945e-af80b9030b4e"
        },
        "item": {
          "id": "960441f0-4972-43e9-bab5-1dee6c121c84",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "1da8220e-867a-47a6-836d-6c16ae183e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1593445c-c075-4c23-b112-d10c53324926",
        "cursor": {
          "ref": "ffe75523-1241-4c88-88bf-8b938e51f73e",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bfae1ae5-3756-49b2-92c4-37601e9d5bc4"
        },
        "item": {
          "id": "1593445c-c075-4c23-b112-d10c53324926",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "f4237d99-12af-42db-9b20-4154603217c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1593445c-c075-4c23-b112-d10c53324926",
        "cursor": {
          "ref": "ffe75523-1241-4c88-88bf-8b938e51f73e",
          "length": 155,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bfae1ae5-3756-49b2-92c4-37601e9d5bc4"
        },
        "item": {
          "id": "1593445c-c075-4c23-b112-d10c53324926",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "f4237d99-12af-42db-9b20-4154603217c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa85ee32-a2b7-4091-92bd-6a0c355e5986",
        "cursor": {
          "ref": "9e614ea0-be66-448a-9144-558f8359145a",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "18c9d525-da23-4f0c-a452-7a3e108e5b12"
        },
        "item": {
          "id": "fa85ee32-a2b7-4091-92bd-6a0c355e5986",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "c7f6a60a-b53f-435a-8b50-ef4edc81cd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa85ee32-a2b7-4091-92bd-6a0c355e5986",
        "cursor": {
          "ref": "9e614ea0-be66-448a-9144-558f8359145a",
          "length": 155,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "18c9d525-da23-4f0c-a452-7a3e108e5b12"
        },
        "item": {
          "id": "fa85ee32-a2b7-4091-92bd-6a0c355e5986",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "c7f6a60a-b53f-435a-8b50-ef4edc81cd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd197192-4982-4621-83f8-6e2aacfda568",
        "cursor": {
          "ref": "1f0cd504-8bee-4441-8478-744ee65add9e",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ba3e46f3-5f18-404f-bd52-a6b9ffb74844"
        },
        "item": {
          "id": "cd197192-4982-4621-83f8-6e2aacfda568",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "5a17028a-8c67-4dab-9f6d-d1148dc569ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd197192-4982-4621-83f8-6e2aacfda568",
        "cursor": {
          "ref": "1f0cd504-8bee-4441-8478-744ee65add9e",
          "length": 155,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ba3e46f3-5f18-404f-bd52-a6b9ffb74844"
        },
        "item": {
          "id": "cd197192-4982-4621-83f8-6e2aacfda568",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "5a17028a-8c67-4dab-9f6d-d1148dc569ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace634db-d7b3-42bc-bfb7-03124fd85334",
        "cursor": {
          "ref": "6ac5819f-9f12-4044-9c2c-8a9cb34937e4",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8d7f71eb-6d1e-4b1f-a20e-176011a2a40c"
        },
        "item": {
          "id": "ace634db-d7b3-42bc-bfb7-03124fd85334",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0938b0c4-87dc-448f-bdc1-8a145e41e10c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace634db-d7b3-42bc-bfb7-03124fd85334",
        "cursor": {
          "ref": "6ac5819f-9f12-4044-9c2c-8a9cb34937e4",
          "length": 155,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8d7f71eb-6d1e-4b1f-a20e-176011a2a40c"
        },
        "item": {
          "id": "ace634db-d7b3-42bc-bfb7-03124fd85334",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0938b0c4-87dc-448f-bdc1-8a145e41e10c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b70a521-94cc-44b1-abdc-ab0a2603c523",
        "cursor": {
          "ref": "0f0668a0-a782-42d8-bb8a-f80ddcec41c4",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9a7d8120-ce10-4fe8-960c-c111a2805b74"
        },
        "item": {
          "id": "9b70a521-94cc-44b1-abdc-ab0a2603c523",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "08ff38a3-20ba-49e7-86a2-99bc30192f8e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b70a521-94cc-44b1-abdc-ab0a2603c523",
        "cursor": {
          "ref": "0f0668a0-a782-42d8-bb8a-f80ddcec41c4",
          "length": 155,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9a7d8120-ce10-4fe8-960c-c111a2805b74"
        },
        "item": {
          "id": "9b70a521-94cc-44b1-abdc-ab0a2603c523",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "08ff38a3-20ba-49e7-86a2-99bc30192f8e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cf2aaa-fb95-4473-aa6f-6d6450bbaa54",
        "cursor": {
          "ref": "cc4dcaa5-7e11-4158-8e6f-ab93221873bd",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "de044e6a-64c2-4676-8055-69f9a298b6ad"
        },
        "item": {
          "id": "e1cf2aaa-fb95-4473-aa6f-6d6450bbaa54",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e74205ef-c531-4ea4-bff9-81b1fde2a807",
          "status": "Created",
          "code": 201,
          "responseTime": 333,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cf2aaa-fb95-4473-aa6f-6d6450bbaa54",
        "cursor": {
          "ref": "cc4dcaa5-7e11-4158-8e6f-ab93221873bd",
          "length": 155,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "de044e6a-64c2-4676-8055-69f9a298b6ad"
        },
        "item": {
          "id": "e1cf2aaa-fb95-4473-aa6f-6d6450bbaa54",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e74205ef-c531-4ea4-bff9-81b1fde2a807",
          "status": "Created",
          "code": 201,
          "responseTime": 333,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6f6e93-5e59-464b-bdcb-d1e04fcf65fc",
        "cursor": {
          "ref": "301b16c1-7de6-4353-a4a9-eb8d7355b266",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b25aaef0-b2ee-4bd1-99f2-256ef40d12f3"
        },
        "item": {
          "id": "1a6f6e93-5e59-464b-bdcb-d1e04fcf65fc",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "d499c679-a4a2-48eb-a6b4-e6415f96221e",
          "status": "Created",
          "code": 201,
          "responseTime": 306,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6f6e93-5e59-464b-bdcb-d1e04fcf65fc",
        "cursor": {
          "ref": "301b16c1-7de6-4353-a4a9-eb8d7355b266",
          "length": 155,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b25aaef0-b2ee-4bd1-99f2-256ef40d12f3"
        },
        "item": {
          "id": "1a6f6e93-5e59-464b-bdcb-d1e04fcf65fc",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "d499c679-a4a2-48eb-a6b4-e6415f96221e",
          "status": "Created",
          "code": 201,
          "responseTime": 306,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a7ff86-ce7b-4da5-b50a-92f06b2c2f77",
        "cursor": {
          "ref": "03cc545c-7edb-48d8-89a5-33a5bed0d63d",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "70b201f8-b9fa-4bbc-a75d-53799dfdfa55"
        },
        "item": {
          "id": "10a7ff86-ce7b-4da5-b50a-92f06b2c2f77",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f154c0c4-bdb1-4c38-94d1-6e932606894c",
          "status": "Created",
          "code": 201,
          "responseTime": 313,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a7ff86-ce7b-4da5-b50a-92f06b2c2f77",
        "cursor": {
          "ref": "03cc545c-7edb-48d8-89a5-33a5bed0d63d",
          "length": 155,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "70b201f8-b9fa-4bbc-a75d-53799dfdfa55"
        },
        "item": {
          "id": "10a7ff86-ce7b-4da5-b50a-92f06b2c2f77",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f154c0c4-bdb1-4c38-94d1-6e932606894c",
          "status": "Created",
          "code": 201,
          "responseTime": 313,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e0b4c2-fc3f-4210-a980-fdcc6c013df1",
        "cursor": {
          "ref": "57150820-ef94-40e1-a5a7-873f15299ba6",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d3a7fd83-3d79-4b20-a412-2aa05aab5856"
        },
        "item": {
          "id": "30e0b4c2-fc3f-4210-a980-fdcc6c013df1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0f5cf497-8fbf-40b9-a113-6fbf14b7284d",
          "status": "Created",
          "code": 201,
          "responseTime": 304,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e0b4c2-fc3f-4210-a980-fdcc6c013df1",
        "cursor": {
          "ref": "57150820-ef94-40e1-a5a7-873f15299ba6",
          "length": 155,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d3a7fd83-3d79-4b20-a412-2aa05aab5856"
        },
        "item": {
          "id": "30e0b4c2-fc3f-4210-a980-fdcc6c013df1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0f5cf497-8fbf-40b9-a113-6fbf14b7284d",
          "status": "Created",
          "code": 201,
          "responseTime": 304,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "53091940-bfd1-4b36-9f94-1bd0dea65c86",
        "cursor": {
          "ref": "e2bf1444-617f-4caa-a1b6-c6058f4c8d51",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "63d1dfe1-0c89-4dd7-a90f-04bffda6fc3a"
        },
        "item": {
          "id": "53091940-bfd1-4b36-9f94-1bd0dea65c86",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "edd28d42-d18b-489c-ac5e-f2d8b78c0439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "53091940-bfd1-4b36-9f94-1bd0dea65c86",
        "cursor": {
          "ref": "e2bf1444-617f-4caa-a1b6-c6058f4c8d51",
          "length": 155,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "63d1dfe1-0c89-4dd7-a90f-04bffda6fc3a"
        },
        "item": {
          "id": "53091940-bfd1-4b36-9f94-1bd0dea65c86",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "edd28d42-d18b-489c-ac5e-f2d8b78c0439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "d5706176-f676-44b1-9cb4-30cb6779c9e4",
        "cursor": {
          "ref": "7acfba0f-1aa8-4302-b973-04cbf69b2507",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "103db0f6-45aa-41d9-a29b-190ad2e945bc"
        },
        "item": {
          "id": "d5706176-f676-44b1-9cb4-30cb6779c9e4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c12d3aec-fdd6-4765-828c-53152f4ebc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "d5706176-f676-44b1-9cb4-30cb6779c9e4",
        "cursor": {
          "ref": "7acfba0f-1aa8-4302-b973-04cbf69b2507",
          "length": 155,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "103db0f6-45aa-41d9-a29b-190ad2e945bc"
        },
        "item": {
          "id": "d5706176-f676-44b1-9cb4-30cb6779c9e4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c12d3aec-fdd6-4765-828c-53152f4ebc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "ceb06b7a-b533-4799-8e70-9e489b6c9630",
        "cursor": {
          "ref": "e2d71566-86db-435a-bcd2-524b2e31000d",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c56a74bc-8c1e-4550-a050-f358c1d1247c"
        },
        "item": {
          "id": "ceb06b7a-b533-4799-8e70-9e489b6c9630",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "02749c52-ef46-4128-b322-672afcd8a723",
          "status": "Created",
          "code": 201,
          "responseTime": 301,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb06b7a-b533-4799-8e70-9e489b6c9630",
        "cursor": {
          "ref": "e2d71566-86db-435a-bcd2-524b2e31000d",
          "length": 155,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c56a74bc-8c1e-4550-a050-f358c1d1247c"
        },
        "item": {
          "id": "ceb06b7a-b533-4799-8e70-9e489b6c9630",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "02749c52-ef46-4128-b322-672afcd8a723",
          "status": "Created",
          "code": 201,
          "responseTime": 301,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708bb9b5-1f72-4f46-9b97-10cec544752d",
        "cursor": {
          "ref": "eb347eab-6f20-407d-aefb-d16471712107",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b007c0c0-602a-4db1-a363-f8306549db95"
        },
        "item": {
          "id": "708bb9b5-1f72-4f46-9b97-10cec544752d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f4562837-2749-4a26-af30-3adb4b7e85d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708bb9b5-1f72-4f46-9b97-10cec544752d",
        "cursor": {
          "ref": "eb347eab-6f20-407d-aefb-d16471712107",
          "length": 155,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b007c0c0-602a-4db1-a363-f8306549db95"
        },
        "item": {
          "id": "708bb9b5-1f72-4f46-9b97-10cec544752d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f4562837-2749-4a26-af30-3adb4b7e85d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a244ef80-5403-47e2-9368-6d51d1bb8bdf",
        "cursor": {
          "ref": "00634222-e48f-43dd-9cb0-13a54549fb55",
          "length": 155,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9c8489b0-0841-4c1a-b7c9-7576a57df696"
        },
        "item": {
          "id": "a244ef80-5403-47e2-9368-6d51d1bb8bdf",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "77a4c46e-d984-4a88-a8b8-381016d9eb73",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73ae640-9520-4fb1-b7f4-7b113cc1d457",
        "cursor": {
          "ref": "caae9995-bdc2-4538-9b62-211f734ce640",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b2f74367-8863-44cc-b32a-b216cbae102a"
        },
        "item": {
          "id": "f73ae640-9520-4fb1-b7f4-7b113cc1d457",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cc6f258f-a374-4b62-9a95-3ccc9eea947f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73ae640-9520-4fb1-b7f4-7b113cc1d457",
        "cursor": {
          "ref": "caae9995-bdc2-4538-9b62-211f734ce640",
          "length": 155,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b2f74367-8863-44cc-b32a-b216cbae102a"
        },
        "item": {
          "id": "f73ae640-9520-4fb1-b7f4-7b113cc1d457",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cc6f258f-a374-4b62-9a95-3ccc9eea947f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014d9fab-1f3c-4d11-bf22-9c13d8582f68",
        "cursor": {
          "ref": "2f7149ab-69a7-4ccb-b35a-790d76449a14",
          "length": 155,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "260b15a5-6ded-49ec-99bb-27093e0e49ca"
        },
        "item": {
          "id": "014d9fab-1f3c-4d11-bf22-9c13d8582f68",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b4bbdb75-cc6a-4b4d-8e8e-cc71c19eaf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cd8e34-a8e2-4e57-bce5-e598642f2193",
        "cursor": {
          "ref": "e689ef13-cb35-4623-afc7-ec4728eaddf2",
          "length": 155,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9788e194-c02c-4d49-b1c7-3bb31145d184"
        },
        "item": {
          "id": "c7cd8e34-a8e2-4e57-bce5-e598642f2193",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7e1d63a4-8fbe-480b-b103-369f722a106a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67d76d4-7a0a-4f71-962e-161bf8d1cc18",
        "cursor": {
          "ref": "9fdafe05-a66d-4deb-b344-2e7ef8720a7a",
          "length": 155,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "81601a8a-528b-42ba-b6c8-95bfc8af4e13"
        },
        "item": {
          "id": "d67d76d4-7a0a-4f71-962e-161bf8d1cc18",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e034e893-fd88-4abb-8ce4-412352e3807f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f49004-b3b5-4707-b244-23939b8ec3a8",
        "cursor": {
          "ref": "5e8db2a8-112d-4cbb-8273-0f613c1d8e26",
          "length": 155,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "48073184-26ac-4947-aecd-125e2e4ed4a5"
        },
        "item": {
          "id": "b7f49004-b3b5-4707-b244-23939b8ec3a8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "419f9934-47ce-415a-ab8f-3b9914cf043f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd9a4ec-96d0-40dd-a853-667836036970",
        "cursor": {
          "ref": "29148d10-61af-41e3-8c0a-133f15044cbe",
          "length": 155,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4be8e7ad-0098-4ac5-b203-f204c9ed2ac8"
        },
        "item": {
          "id": "3cd9a4ec-96d0-40dd-a853-667836036970",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9e281f7b-db2d-414c-9e9f-75eed60627f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07783a98-c00a-4a25-80ac-4bfbf73e35c7",
        "cursor": {
          "ref": "e3cc0157-cf71-4ba8-b066-45c2c457edec",
          "length": 155,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "98fa9dca-926c-438b-b05c-7a33feafd364"
        },
        "item": {
          "id": "07783a98-c00a-4a25-80ac-4bfbf73e35c7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "072f1721-982c-48e5-a6f4-62aff7737037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b1a691-26c5-401e-8e7a-eef3b3b3d8cf",
        "cursor": {
          "ref": "3180b79a-62fe-4e0a-9288-b14140e05c82",
          "length": 155,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1d0b0b2d-7f30-4a1a-b722-ee8e32253e16"
        },
        "item": {
          "id": "38b1a691-26c5-401e-8e7a-eef3b3b3d8cf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cf4b2f13-96dd-4132-a5e7-3fe2c6941045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3ab8ad-c576-4966-b57c-13d2a6e49f36",
        "cursor": {
          "ref": "00740ea3-750f-4fda-aa69-2a39a210d3af",
          "length": 155,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "44877bb5-6dbf-4196-86a4-4e0278582e10"
        },
        "item": {
          "id": "6e3ab8ad-c576-4966-b57c-13d2a6e49f36",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6e5d9988-5f6e-40fb-b4d6-3c9d889eedc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcd9b4c-746d-4de8-a6c3-8011c86ef75e",
        "cursor": {
          "ref": "9229e929-4637-40c0-b870-7f2f181632ea",
          "length": 155,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e2eb97d6-3741-4eda-90ee-863ef3782962"
        },
        "item": {
          "id": "0fcd9b4c-746d-4de8-a6c3-8011c86ef75e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "63e57041-9038-4cbb-81eb-254e2e4c8f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d228810f-019a-425a-a434-32452ee35449",
        "cursor": {
          "ref": "fcd49012-4421-4151-8345-a89324e38ac5",
          "length": 155,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "808bb35e-7a74-4948-9ab5-72f89b6cf663"
        },
        "item": {
          "id": "d228810f-019a-425a-a434-32452ee35449",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c45966b8-eed8-4e8f-a2b1-94a92488b68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2d68ae-d724-4e37-b4b0-e7ab3d58e393",
        "cursor": {
          "ref": "34ab5faf-d24c-4e2f-b558-d11c95dde579",
          "length": 155,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d529a516-a890-43bc-8530-fa6cd2cf8307"
        },
        "item": {
          "id": "aa2d68ae-d724-4e37-b4b0-e7ab3d58e393",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "11c51406-992e-4897-8c2f-4c5455a19345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ba7edc-5b7c-4079-9de9-62a3e5256880",
        "cursor": {
          "ref": "ddeed3f4-be8d-4a53-b06a-35a6f4eb0952",
          "length": 155,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "37befdfc-f198-4b7d-8195-c696cbc678f6"
        },
        "item": {
          "id": "08ba7edc-5b7c-4079-9de9-62a3e5256880",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6d28833c-cca1-4b60-b692-63a12fa5a82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec71235-a07d-4cea-8c87-d2ad37e0d33e",
        "cursor": {
          "ref": "cc1c6367-1199-486a-af5f-a33ba11664de",
          "length": 155,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "48f4c331-5fa3-43fe-8ff7-3b1cdba078e8"
        },
        "item": {
          "id": "5ec71235-a07d-4cea-8c87-d2ad37e0d33e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1ee14382-40a5-4916-ad13-74369e3529d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50950c13-ea38-4896-9e4d-38642a113778",
        "cursor": {
          "ref": "4ae60d3d-9c73-4ac8-b67e-1637fb6fa32e",
          "length": 155,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3649389b-f5a9-44b9-9a5b-27bd767588f3"
        },
        "item": {
          "id": "50950c13-ea38-4896-9e4d-38642a113778",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5968c04e-21f2-4680-972d-12d94347e28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c423fc12-1144-4eff-9821-edb09da2c846",
        "cursor": {
          "ref": "42f79597-ce2f-40b7-8ed4-961e895932ea",
          "length": 155,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "db3e0fcd-17a6-4255-80c7-9b8de8627e36"
        },
        "item": {
          "id": "c423fc12-1144-4eff-9821-edb09da2c846",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cebd42bf-797f-4a7d-aba2-54cac0e9c4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f806de6-8a6d-4772-b5bb-66f195f4c9a5",
        "cursor": {
          "ref": "181cb83b-dc29-4f3e-9f49-5d4c323cf382",
          "length": 155,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0d33eafe-2443-4de0-a0eb-919a6a431a12"
        },
        "item": {
          "id": "9f806de6-8a6d-4772-b5bb-66f195f4c9a5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6bca686b-6ab3-4707-9f4a-3089a6596f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c934dc66-df14-442c-a6f1-c80e63b25fef",
        "cursor": {
          "ref": "9ca171f1-bdf7-40d5-aa31-614370d47e8e",
          "length": 155,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a57e312b-57ad-44f5-8769-11aa512b7e78"
        },
        "item": {
          "id": "c934dc66-df14-442c-a6f1-c80e63b25fef",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a7cb0f33-53c1-49a6-b45f-389a3fe8ef03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa17a4b-c3ab-4636-a9dd-8b17a846be89",
        "cursor": {
          "ref": "34deb8e9-3492-4c65-8b67-d8a644a5787f",
          "length": 155,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "09462843-e82c-433f-8604-146128ba3795"
        },
        "item": {
          "id": "7aa17a4b-c3ab-4636-a9dd-8b17a846be89",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "db341bc3-c18b-4766-8df2-0e7307c47722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc560b00-2280-4d89-9255-1bebc7a6606a",
        "cursor": {
          "ref": "3661e62c-2497-4958-92a6-0e2df7c6dedb",
          "length": 155,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "590ed65a-0bed-40bf-ac79-28235848bb7d"
        },
        "item": {
          "id": "bc560b00-2280-4d89-9255-1bebc7a6606a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "123dab78-95f2-4f51-8d6a-316f5e4230eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e49f723-5c4f-4e1d-b452-aaf35ad049e1",
        "cursor": {
          "ref": "c272ad2b-905e-42b2-b176-eaac05936a4d",
          "length": 155,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d153d62b-7035-4bed-8382-f7ad681f6886"
        },
        "item": {
          "id": "2e49f723-5c4f-4e1d-b452-aaf35ad049e1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9764a2fb-59d0-48ba-89b4-0d2a98806fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7fcee7-33e3-4768-bd63-766604edaf1c",
        "cursor": {
          "ref": "13762be3-d577-4ac6-afaf-04261235c3ac",
          "length": 155,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b7dab586-df14-4965-ad6d-c7161a11225b"
        },
        "item": {
          "id": "2c7fcee7-33e3-4768-bd63-766604edaf1c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bb12a828-6677-4eaf-9f55-6d8350ad2181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c6cbbf-d8a1-4e37-ae77-d9d42a8cf00f",
        "cursor": {
          "ref": "d87f4b67-a2a7-4c38-8046-ba049a2d2db0",
          "length": 155,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "751831fd-773b-40d3-af1c-dd575a713877"
        },
        "item": {
          "id": "a0c6cbbf-d8a1-4e37-ae77-d9d42a8cf00f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e682ecaa-f6c6-4edf-8d06-54dd6fffee70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113f9804-4158-41a1-b577-af4ca27dd376",
        "cursor": {
          "ref": "dd9ff4b3-f4a6-4a49-b1e2-7dc9b7314f46",
          "length": 155,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5a2abcff-4a03-4214-9b0f-56c4ad22d535"
        },
        "item": {
          "id": "113f9804-4158-41a1-b577-af4ca27dd376",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2c0656ff-f395-4447-aa15-1b134d5f0bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4b9d3b-57ed-439b-9151-2f92c3b903fe",
        "cursor": {
          "ref": "5c9f06b9-3cab-41a2-92b5-3e61fcf21078",
          "length": 155,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9575353a-a07e-40c4-aa9e-8e27b7957653"
        },
        "item": {
          "id": "de4b9d3b-57ed-439b-9151-2f92c3b903fe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f3295089-0404-4ca6-9b2f-045963f680c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701a57db-3b09-4bc6-8371-9145abcbfdaa",
        "cursor": {
          "ref": "6cf44937-5790-42f8-83d8-40b38652e67e",
          "length": 155,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9ebb1a1e-66f8-432d-ab1d-b294abb7d14d"
        },
        "item": {
          "id": "701a57db-3b09-4bc6-8371-9145abcbfdaa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5f695586-2914-4a3c-83e4-7e74678f5c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4a44ed-3d93-4a9a-8c30-1603f484c75d",
        "cursor": {
          "ref": "6dac7dc3-1c1e-4ab2-9c75-80f75fd5e83a",
          "length": 155,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "35fef4a6-e4c2-44ad-833c-da509d85959b"
        },
        "item": {
          "id": "7b4a44ed-3d93-4a9a-8c30-1603f484c75d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e8687932-731c-4d09-a67e-0f4ecb40cbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3f8b89-f4fb-4394-b42c-e94f17c83088",
        "cursor": {
          "ref": "e204288a-a566-4dfc-9922-834ef0035575",
          "length": 155,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "93fb3d38-be7d-4651-b62e-4cbbb08e7c95"
        },
        "item": {
          "id": "1a3f8b89-f4fb-4394-b42c-e94f17c83088",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9d269331-d875-4e73-ad26-869798fd3047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfee62ba-b5bb-4a6d-a149-ecd09319d30d",
        "cursor": {
          "ref": "47e02464-a522-459e-a9f7-7063e04122bf",
          "length": 155,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6f477063-36ac-4dae-bc2a-14f84f756af4"
        },
        "item": {
          "id": "bfee62ba-b5bb-4a6d-a149-ecd09319d30d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0e4b6b94-e985-4695-b1bc-4cfbc1b3653a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebfcbb2-4492-4c3c-a7c5-e3b464d8d8bd",
        "cursor": {
          "ref": "a11e2a97-7ec3-4d5c-bcc7-764a4de8114f",
          "length": 155,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b86678de-063f-439c-9a60-3338a2aa2e0d"
        },
        "item": {
          "id": "bebfcbb2-4492-4c3c-a7c5-e3b464d8d8bd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "443b9cd4-da16-4015-a375-dc1ee6e65114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff894c4-d39e-4e0a-8b11-5fa96a1a104a",
        "cursor": {
          "ref": "41cf678f-6844-4fa8-b656-386016bdd135",
          "length": 155,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "08bac3a1-0ba7-4d08-b106-f10b3a6fd2fd"
        },
        "item": {
          "id": "4ff894c4-d39e-4e0a-8b11-5fa96a1a104a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bcf442f9-9d8c-44f3-ae96-5b5cdd9dfb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2e4458-38dd-44b0-8ee4-26606bf2ba99",
        "cursor": {
          "ref": "198ab5d8-d0fc-489b-8e3c-599c80c98ec2",
          "length": 155,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "368fc175-9097-49e1-acb2-c1afe91c0e0e"
        },
        "item": {
          "id": "1a2e4458-38dd-44b0-8ee4-26606bf2ba99",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "64487a6e-52ac-458c-8f14-692bdbc8d2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdda4eed-29d3-4458-a015-f62cc79c070c",
        "cursor": {
          "ref": "f7d8171b-2e78-43f0-8671-1c13d7fc8f4e",
          "length": 155,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fd865abe-85ed-4b9c-9f1c-45a735184b92"
        },
        "item": {
          "id": "fdda4eed-29d3-4458-a015-f62cc79c070c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "350d61fc-e226-4c3c-b9c1-12f396abf086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd84c14-000b-432a-826c-fed9914d49e2",
        "cursor": {
          "ref": "698b0695-5c33-4db0-bda6-6697530f4036",
          "length": 155,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "600b5c2e-d7f2-41a9-b890-167cd0f73318"
        },
        "item": {
          "id": "acd84c14-000b-432a-826c-fed9914d49e2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "813ac9a9-605d-4421-b5bb-ff015e02ce9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6876ff7b-0acd-41b0-a7aa-7a7f08306174",
        "cursor": {
          "ref": "c8559e7c-290e-42ff-a5cf-ea2379d2cfa4",
          "length": 155,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bae0e6f7-0186-4597-a5f8-b328ef150d26"
        },
        "item": {
          "id": "6876ff7b-0acd-41b0-a7aa-7a7f08306174",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9745985c-8eee-4fce-8ee4-2381b080000b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed235d5-97cc-4d4e-85a9-a53073983843",
        "cursor": {
          "ref": "d1a1f827-c69e-418a-95f8-759e7bd1c90d",
          "length": 155,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ac864898-f2c8-43a8-8fa5-d2bf2b2ef6f6"
        },
        "item": {
          "id": "fed235d5-97cc-4d4e-85a9-a53073983843",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "94de5947-f7c1-4dad-8b84-0076a7d38a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5909eb45-b383-4e77-bbb8-87f666cbc9b9",
        "cursor": {
          "ref": "f914cc58-b836-4951-8629-bb6d91cdb952",
          "length": 155,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "64b6f81c-27ba-40bb-8835-8e21ae721ba9"
        },
        "item": {
          "id": "5909eb45-b383-4e77-bbb8-87f666cbc9b9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9b55fb78-2cb3-4a71-9b9a-bc37bad4fd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a57a5a2-e139-4f2a-9228-1fdb9ab8563d",
        "cursor": {
          "ref": "161224dd-a1fc-486e-b42e-a6da0310d563",
          "length": 155,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0c16dc83-b9bc-4bb7-8c19-73a921e305b6"
        },
        "item": {
          "id": "6a57a5a2-e139-4f2a-9228-1fdb9ab8563d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ec42b611-fd9c-48cb-abd7-766c372c666d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b64500-0908-4fc1-993b-6122f8623091",
        "cursor": {
          "ref": "38a8ee15-433d-40e3-84d4-2f8063ac0a4d",
          "length": 155,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7284d51f-671d-4613-a86a-95987c20ecd8"
        },
        "item": {
          "id": "69b64500-0908-4fc1-993b-6122f8623091",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bc665a4e-1ea9-42f7-b942-02beb62ec525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbeee34-0226-4329-9417-8372dbdeea7e",
        "cursor": {
          "ref": "e19d2738-824e-43e8-98ac-4d89570c2990",
          "length": 155,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d8f33290-608b-4c7a-b2f5-d85137c40ea8"
        },
        "item": {
          "id": "1cbeee34-0226-4329-9417-8372dbdeea7e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "98a556af-5cde-4068-ab67-02db30e29110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68dbdd9-3a68-4aeb-aa77-07d259918d83",
        "cursor": {
          "ref": "fdfa4c69-0046-48ff-b527-9d8efc7d1b14",
          "length": 155,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "40546b4c-123c-4a62-a3a6-e631b522a5e2"
        },
        "item": {
          "id": "e68dbdd9-3a68-4aeb-aa77-07d259918d83",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e9c2e1ca-5598-497e-b389-03700fae4251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a273b3-9bfd-468e-8cd0-e7512275b66e",
        "cursor": {
          "ref": "fc8057f4-f5af-4103-86ac-50d72ade0aaf",
          "length": 155,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f60db8e5-3f57-4d9d-b8cf-82195bbfec89"
        },
        "item": {
          "id": "70a273b3-9bfd-468e-8cd0-e7512275b66e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7a16ed63-a08d-40a0-8886-59790e044d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b152e3-c43a-4d5e-950c-4956a85c5e97",
        "cursor": {
          "ref": "1e004bd5-49eb-4765-b28a-e5d67f5a70ea",
          "length": 155,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "af838c43-2177-43ed-8956-483aa311aaea"
        },
        "item": {
          "id": "08b152e3-c43a-4d5e-950c-4956a85c5e97",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "19a9c9a6-8213-49bc-9d35-2645c1c3c3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9c2b68-6769-4dd1-9010-423029cf84ea",
        "cursor": {
          "ref": "ea311aab-1c2e-462c-b521-2737e00205aa",
          "length": 155,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "55217b50-0f59-4e54-9905-3988abc8ad66"
        },
        "item": {
          "id": "cd9c2b68-6769-4dd1-9010-423029cf84ea",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8a48d618-3d8b-470e-bfa4-6c3c0f97c1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa0b380-cd40-4ee1-af35-a47dc73785e2",
        "cursor": {
          "ref": "39dbd3dc-a5fc-444b-a561-8b5665847848",
          "length": 155,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "25e9b4b0-9604-4206-93bf-0a07b8213643"
        },
        "item": {
          "id": "2aa0b380-cd40-4ee1-af35-a47dc73785e2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c066e8ad-065b-443d-a34d-7a2db14a58b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a520635-dd8c-4e5f-8d14-b6db2bfe1bdd",
        "cursor": {
          "ref": "a6e20a26-ec7a-4916-aad7-d53e0f446dfe",
          "length": 155,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "face8f40-e391-4b9b-a176-8cde695d6e36"
        },
        "item": {
          "id": "8a520635-dd8c-4e5f-8d14-b6db2bfe1bdd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8dd5abc5-b534-4077-bc8c-31b1c70a46cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58c76ad-0347-47f2-94a0-e2162c524d26",
        "cursor": {
          "ref": "f62b55e8-0c4f-48e5-868a-ac813b4118d6",
          "length": 155,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f1121d44-9a16-44f6-b7c5-bb285a7df1a6"
        },
        "item": {
          "id": "a58c76ad-0347-47f2-94a0-e2162c524d26",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fe4155b8-96d1-4dcf-8259-da18e1423d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4fa9f1-87ed-4237-9336-62020b2b7ec3",
        "cursor": {
          "ref": "c8a32d06-d561-4581-b7f2-090bc9c12cb3",
          "length": 155,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c1677fc2-e8a8-4b51-a47d-ef4533261571"
        },
        "item": {
          "id": "8c4fa9f1-87ed-4237-9336-62020b2b7ec3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6e04f4e2-a2d3-4649-a0c1-aa82dea1e818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8a3c16-b2aa-475a-9c79-e4e6ee407cba",
        "cursor": {
          "ref": "3c03ab3f-0083-47bd-8f76-c02b90f03889",
          "length": 155,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "22085c25-4926-4c49-97fd-714357194337"
        },
        "item": {
          "id": "bc8a3c16-b2aa-475a-9c79-e4e6ee407cba",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7f46e11d-5765-4b4b-a68d-0a78574b3d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1868c9c-b2d8-436e-b795-6d8b9c869d6c",
        "cursor": {
          "ref": "4ebdd630-122c-4004-8e13-a8edb136ed9c",
          "length": 155,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "17ebceb6-f5f6-4947-b61a-174247701b7f"
        },
        "item": {
          "id": "b1868c9c-b2d8-436e-b795-6d8b9c869d6c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b3bf7237-3939-417a-9081-06fcab854a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea223f18-8df1-418f-b99c-d28deab4734c",
        "cursor": {
          "ref": "09687306-f9f1-4d6b-a370-6a85a7146e59",
          "length": 155,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2e1385dd-835d-45b5-986c-f332aa25e9c1"
        },
        "item": {
          "id": "ea223f18-8df1-418f-b99c-d28deab4734c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "91b54912-9341-4ba1-b074-793a3e4d4469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a7ff05-7b5f-41cf-bcee-9c4a91b82fdb",
        "cursor": {
          "ref": "4a2bd5ce-f486-4218-80d4-261d818d1cdc",
          "length": 155,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8b6d8a4f-bee0-4b62-8f2f-fc4abfb86453"
        },
        "item": {
          "id": "50a7ff05-7b5f-41cf-bcee-9c4a91b82fdb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "85461206-e8fe-4136-869a-753088f0a425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe832354-9ffd-4bb6-998c-d578c82a7896",
        "cursor": {
          "ref": "93883178-3e01-4736-adfe-7131e13f46f5",
          "length": 155,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d8c55d6c-a218-40e1-a589-61b151882851"
        },
        "item": {
          "id": "fe832354-9ffd-4bb6-998c-d578c82a7896",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "66b9a4b8-bd47-4625-b928-522cff9f77e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e60fd95-19dd-4120-9157-8f0dc14d4525",
        "cursor": {
          "ref": "6ce93e00-adc3-44c2-96a9-c6814b252642",
          "length": 155,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "97230c6c-0ba5-4495-8a7f-74db7d9f2ab2"
        },
        "item": {
          "id": "8e60fd95-19dd-4120-9157-8f0dc14d4525",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "004bb9e3-71d9-4a85-909e-89d0fd94116d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4bb4bd-479f-4fef-a357-04b8d223ffb6",
        "cursor": {
          "ref": "de7727b2-b51d-4de4-ba88-d72b7c96429e",
          "length": 155,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c3e02d88-8fb1-4306-a159-72e2796e64bb"
        },
        "item": {
          "id": "9c4bb4bd-479f-4fef-a357-04b8d223ffb6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bae4e180-75f9-42d3-a823-86347ffe4aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2311ec68-629a-4930-810b-d98659da8a63",
        "cursor": {
          "ref": "882a9ba4-5436-4792-86cc-ef57228e19fa",
          "length": 155,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "879b0386-f14f-4e7f-9c40-fd2dd4ec2241"
        },
        "item": {
          "id": "2311ec68-629a-4930-810b-d98659da8a63",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "60ebabff-3411-4ac4-9457-631a4fe385d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00926974-f5c0-4718-bc91-bb5d9dc79c80",
        "cursor": {
          "ref": "bde62a16-d26c-4733-bfeb-004d66507be3",
          "length": 155,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d7171ad1-587b-40c4-a887-6b68fcdb9c18"
        },
        "item": {
          "id": "00926974-f5c0-4718-bc91-bb5d9dc79c80",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8e3930a2-e5ea-4f9c-9d84-2e92d2de935e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25197e8f-80dd-4df8-a98b-0f88a749afd8",
        "cursor": {
          "ref": "506fc3aa-a07d-4fdb-8397-ba9ca7988715",
          "length": 155,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "08facc76-53af-41e6-b523-f183c8e56625"
        },
        "item": {
          "id": "25197e8f-80dd-4df8-a98b-0f88a749afd8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0ff161c1-d2eb-4ae6-bd6e-0f846c085e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6288bff4-e9df-4599-9097-75cc97eddf1c",
        "cursor": {
          "ref": "9ce7e5eb-e146-41fb-9e88-ef1b7eea5ea6",
          "length": 155,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "998e653e-9bf0-496d-bc5a-575cd0f90b27"
        },
        "item": {
          "id": "6288bff4-e9df-4599-9097-75cc97eddf1c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "43324ff1-0a93-4981-8b10-74f16b643876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f399eb-0184-4cc0-ada5-2d8ce047be9b",
        "cursor": {
          "ref": "74b037d6-3086-4647-8495-471ca19f9612",
          "length": 155,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d8a74e31-20c6-482e-b93b-8d47f72de3fb"
        },
        "item": {
          "id": "03f399eb-0184-4cc0-ada5-2d8ce047be9b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bf8fcdbf-e2b5-4c41-bedf-feb06036cb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbea570-a73c-4afd-8ef9-8e0a90e8076f",
        "cursor": {
          "ref": "c5c2540b-0628-4801-8103-f1465a44ce47",
          "length": 155,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "31b2183c-a5a4-45ed-886a-772e3da056b5"
        },
        "item": {
          "id": "8bbea570-a73c-4afd-8ef9-8e0a90e8076f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "732f41ac-42ae-4a34-9385-beee221e1073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6440a722-7b78-4f92-afab-327cfa0a645d",
        "cursor": {
          "ref": "0c68946d-1c35-41ef-a2c6-3d3931cff14c",
          "length": 155,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "10487bc7-6097-43e8-b06c-efa699e8a578"
        },
        "item": {
          "id": "6440a722-7b78-4f92-afab-327cfa0a645d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "330ad776-c41f-4f25-9758-66122dae8508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc68ea3-5357-4c67-9813-8e122166229e",
        "cursor": {
          "ref": "1eb17a5c-5f11-474c-81ab-43fa284c4c9e",
          "length": 155,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f8d47a6d-fc01-422e-9763-e5a825cff360"
        },
        "item": {
          "id": "3cc68ea3-5357-4c67-9813-8e122166229e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "86b820a3-45d4-4775-bcf4-28f8a2f587f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417b4d81-de5a-449d-9cf6-1345a832e615",
        "cursor": {
          "ref": "383b1c7d-95f5-4420-9ba3-9511b767ac98",
          "length": 155,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1a0864b6-e4f5-454a-8c2b-1e20555cfdc3"
        },
        "item": {
          "id": "417b4d81-de5a-449d-9cf6-1345a832e615",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "40fef2f2-82ea-433d-9d02-a01cb2bff209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07332f5b-2d89-4441-bf7f-d8b1b02a6f05",
        "cursor": {
          "ref": "1877b555-a0af-4283-b886-094a360a8ba3",
          "length": 155,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c2fda5d7-550a-4845-9bf6-a31aa49c9e7c"
        },
        "item": {
          "id": "07332f5b-2d89-4441-bf7f-d8b1b02a6f05",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "88d0fe53-30d0-4570-9323-1ff6dd53d0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3fb278-2a5c-4067-8243-1d4d44c86be6",
        "cursor": {
          "ref": "39f34db2-745f-412c-90bd-cd12feb04ad1",
          "length": 155,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f0430738-ced4-4b55-a1f0-df83ea03abb5"
        },
        "item": {
          "id": "1c3fb278-2a5c-4067-8243-1d4d44c86be6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4a125f12-57d3-446a-a007-590d9e3b9887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5440e1-6c71-42dd-9ef3-0c777b443504",
        "cursor": {
          "ref": "5787eb87-aeb6-41c5-be81-881a56d559f5",
          "length": 155,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "40853200-8dd8-4b40-a5ba-b12f5de4d083"
        },
        "item": {
          "id": "bd5440e1-6c71-42dd-9ef3-0c777b443504",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9d68dfdf-0ddc-4d64-9dce-4215da713bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339fab7d-9003-41f9-824c-59628b46eb78",
        "cursor": {
          "ref": "5bbfd04b-7714-4645-ad33-5537fdd075db",
          "length": 155,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d9007217-4d0a-468e-ba4d-7e08f5583765"
        },
        "item": {
          "id": "339fab7d-9003-41f9-824c-59628b46eb78",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "de489573-928d-4646-b1fb-927d5dc4fda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6cf740-b0bc-4d03-bd13-50adb5484af8",
        "cursor": {
          "ref": "a165937f-8088-4c23-9c0b-cb9f3555115e",
          "length": 155,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c02daed3-c27d-4cc5-89d6-4bb6780389db"
        },
        "item": {
          "id": "8f6cf740-b0bc-4d03-bd13-50adb5484af8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a72af1bf-d81e-429c-ba9f-52b188f460b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396790f0-c917-4be9-a26c-12d58fab5f03",
        "cursor": {
          "ref": "7cc8afaa-088b-4839-9369-1aea1effc1b0",
          "length": 155,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "88a6cf50-a221-48db-951f-ffa9abd9bf2d"
        },
        "item": {
          "id": "396790f0-c917-4be9-a26c-12d58fab5f03",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a112606e-7c90-4aed-96bb-cbf0c9594c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf390cd-79fd-45c2-9bd8-318dc7018b37",
        "cursor": {
          "ref": "6e97dea6-b161-426e-b70a-1d985c26029c",
          "length": 155,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "82d4faf0-4dda-4e2f-93dd-3b56a3888d10"
        },
        "item": {
          "id": "fcf390cd-79fd-45c2-9bd8-318dc7018b37",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "76cd7b5e-b48d-4e61-94f2-6a19ed65a119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de88ae9-909e-4239-979e-43ca55a66159",
        "cursor": {
          "ref": "fd92f951-4e04-4077-88e4-ddf0f1f0c9dd",
          "length": 155,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bb413ba2-98e9-4263-a89e-dc128ba23870"
        },
        "item": {
          "id": "6de88ae9-909e-4239-979e-43ca55a66159",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7f6fa031-7cb8-4396-9c64-2ba280abfe50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5d730f-714d-4516-a389-78128876ed4e",
        "cursor": {
          "ref": "712b1c5e-4758-4ba0-a4d6-b292d0e74155",
          "length": 155,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0df7ba5e-27cf-4a2d-bb54-612432e71a99"
        },
        "item": {
          "id": "3c5d730f-714d-4516-a389-78128876ed4e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "94f54272-3085-4868-9e42-2c44e7a468fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f7da78-1baa-4c80-b897-c8f6762eb723",
        "cursor": {
          "ref": "194b6bfd-bf82-4b39-910b-c08e07236abb",
          "length": 155,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "54a19c4b-dce9-45c6-af46-cd134a1b3971"
        },
        "item": {
          "id": "44f7da78-1baa-4c80-b897-c8f6762eb723",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3886899f-e1ee-430a-91a0-a026d5ae5e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fbf39d-6997-4507-aab6-82876ac9dbe1",
        "cursor": {
          "ref": "510dac81-f17a-42bb-b64e-ccc8165839c7",
          "length": 155,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7d002d0d-c304-41f6-9916-8e787e9a4a63"
        },
        "item": {
          "id": "c4fbf39d-6997-4507-aab6-82876ac9dbe1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "59f6b3c3-380a-42d6-a078-a0421e953813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da9c92-773b-4a03-ac6d-cb549c9c9a2d",
        "cursor": {
          "ref": "e9b57ab7-c569-4c98-9e14-c0bb92923645",
          "length": 155,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d3798681-da75-45b8-89e0-f96f6ea640a7"
        },
        "item": {
          "id": "68da9c92-773b-4a03-ac6d-cb549c9c9a2d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e80c30b0-3d2f-4c5d-963b-a484487f086f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69016849-036b-4204-b073-5edd3acba951",
        "cursor": {
          "ref": "f55a4edc-ec54-4201-a578-2148d71d551e",
          "length": 155,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "53a5af6a-3517-430b-81ce-01a6dfc07dae"
        },
        "item": {
          "id": "69016849-036b-4204-b073-5edd3acba951",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3024da65-472b-43ba-9450-e2cbee0a377a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccf3285-1fab-4c28-bfa1-76fd4f06ac84",
        "cursor": {
          "ref": "c6d2dd82-6e25-40ec-9ec6-ef908e9d6595",
          "length": 155,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3b7a49ae-d79a-4b3d-8071-6e1fc1b36b08"
        },
        "item": {
          "id": "8ccf3285-1fab-4c28-bfa1-76fd4f06ac84",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b1191833-52af-4858-bd06-4f31eaecb9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d8c464-7bbc-4585-9654-e29d9980ba6e",
        "cursor": {
          "ref": "423c4c1d-344c-4f03-9a94-634c86aa00f5",
          "length": 155,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0a519818-8a1c-4f31-a26e-6a5ed8ff0457"
        },
        "item": {
          "id": "26d8c464-7bbc-4585-9654-e29d9980ba6e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "84af342e-4037-42e0-b7cf-e1b0f7da529b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb77c31-46bc-4fa1-b309-80caabd68db9",
        "cursor": {
          "ref": "3fc98040-4428-4894-ab0b-2d12c361db6f",
          "length": 155,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "acf8802a-cb0a-43be-b1d3-d2be2a764c56"
        },
        "item": {
          "id": "eeb77c31-46bc-4fa1-b309-80caabd68db9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6cfcafdb-8b00-41a8-96c9-89a79d3f3b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a474f8dd-82ce-4cc6-9a21-22711c60453e",
        "cursor": {
          "ref": "572bdc47-f4eb-4f0a-acb6-1061f2802d09",
          "length": 155,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "18b535e6-e360-4ae2-b3d8-0c18e64c6d3b"
        },
        "item": {
          "id": "a474f8dd-82ce-4cc6-9a21-22711c60453e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "66cb26cb-7b1e-47aa-9df5-a3f0ae666156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6821be6-855b-4831-9f97-d4c866ef56ac",
        "cursor": {
          "ref": "ae3fd019-61e6-43d5-9e7d-626dfd3632ca",
          "length": 155,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4aa0e8db-b71e-4c09-acdb-2551c667dfb5"
        },
        "item": {
          "id": "d6821be6-855b-4831-9f97-d4c866ef56ac",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9b33ac22-6e26-4c7b-947d-82e1a2aa3b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db46de92-8884-4a6f-b370-a0f2e4388323",
        "cursor": {
          "ref": "6c48803b-8ba3-4aee-8609-5e646b572243",
          "length": 155,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f3c4753e-2b3a-461d-bd92-a05929692503"
        },
        "item": {
          "id": "db46de92-8884-4a6f-b370-a0f2e4388323",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6b45e38d-52a7-447a-8f02-eb81203ca958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adebd28-c378-42e4-a953-33784e2f4d56",
        "cursor": {
          "ref": "18987d16-eb35-44a7-8186-8d78f7ee82ab",
          "length": 155,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ff2539b4-e696-4750-9e74-6dbfd376b16d"
        },
        "item": {
          "id": "0adebd28-c378-42e4-a953-33784e2f4d56",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d669c246-dd4a-4a30-862b-3831644deacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f3b986-2267-4cde-911e-e2d0b8cee524",
        "cursor": {
          "ref": "c9c38011-fd46-497d-b84d-651579484e5a",
          "length": 155,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b60e4e69-2e59-4174-a062-baf335f4cff1"
        },
        "item": {
          "id": "95f3b986-2267-4cde-911e-e2d0b8cee524",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5a57bb75-b6bb-4798-930b-f05617b28365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d117877b-d32a-4416-8383-06cb56b693d9",
        "cursor": {
          "ref": "2f2b7900-b8e5-4890-9434-4030aea7eae4",
          "length": 155,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6035348b-0387-4378-b475-bb5e5cf1d66a"
        },
        "item": {
          "id": "d117877b-d32a-4416-8383-06cb56b693d9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0813f51e-c091-41a0-8c1e-a2efc952b203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6287e751-10df-4bfe-9f02-e7a3325124fa",
        "cursor": {
          "ref": "daa88f82-e69d-4565-8a4d-6632da310350",
          "length": 155,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "393be12e-bb3e-46f9-bcca-265cbcdfb666"
        },
        "item": {
          "id": "6287e751-10df-4bfe-9f02-e7a3325124fa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "79b0ead2-6282-4c0a-8486-d43ad78d00e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724b5cdd-7d77-49ea-9fe8-247f0a45883d",
        "cursor": {
          "ref": "f33e301e-3ba3-435b-9ffa-f89e2a6e831b",
          "length": 155,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "df412d4b-7432-44f8-b88a-f99dfbc3227c"
        },
        "item": {
          "id": "724b5cdd-7d77-49ea-9fe8-247f0a45883d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "adc3396a-029b-43e7-a7a9-3884b1f6e8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9b1042-9e53-4442-a856-b74d4c9e9ea8",
        "cursor": {
          "ref": "f31fd473-3c1f-4e7f-99d3-3767786490ed",
          "length": 155,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "631bf5e1-5b4c-44a5-9d3e-2a08e5a93250"
        },
        "item": {
          "id": "bb9b1042-9e53-4442-a856-b74d4c9e9ea8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0da6f43e-205a-4349-a07d-f585f377a498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6a4991-82fd-4938-99cd-10d893ee9e96",
        "cursor": {
          "ref": "8716b4bf-003d-429c-a21b-bc68d809fe26",
          "length": 155,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5bcfd214-dbe4-4cd6-9069-b9392be54ca6"
        },
        "item": {
          "id": "ed6a4991-82fd-4938-99cd-10d893ee9e96",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a55c7fd6-c601-4668-a2d9-8e9be2bb88b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0231ca8-3b9b-415b-8ec7-f42878500089",
        "cursor": {
          "ref": "c2752c2a-e3ce-4ac5-aa2f-2e951eba2300",
          "length": 155,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7e0ff1db-361e-43b5-9d98-f7e043daa6ad"
        },
        "item": {
          "id": "f0231ca8-3b9b-415b-8ec7-f42878500089",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "825bc570-df13-4844-9cf7-bdb5e1e490d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22da341a-b533-468d-8190-7b1c04421792",
        "cursor": {
          "ref": "519dff1b-3d60-4837-bdb8-23d51d0c9c38",
          "length": 155,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dc09cc07-8c90-4968-bd92-d952a40facd1"
        },
        "item": {
          "id": "22da341a-b533-468d-8190-7b1c04421792",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1091238e-1b2c-4a87-838d-62c0038fd784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df009ce-d6c3-4181-b562-27cefd424462",
        "cursor": {
          "ref": "958acccb-c36a-404f-b1d1-c133decc0228",
          "length": 155,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2d4e18f0-fe8e-4c6c-9aa6-351a0800c0ce"
        },
        "item": {
          "id": "8df009ce-d6c3-4181-b562-27cefd424462",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c6218be9-cba2-498a-b911-ed45efe31bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a549e54e-846b-4564-af6e-20bf08b87c9c",
        "cursor": {
          "ref": "f96a32c3-e723-4dff-a406-43e633c79ebd",
          "length": 155,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "52f5bfca-5eb3-410b-81c5-cd789100e085"
        },
        "item": {
          "id": "a549e54e-846b-4564-af6e-20bf08b87c9c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5942b028-180f-4671-9f21-ffb37b72c0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f846099-4abe-4c36-9566-bd15dba6a29e",
        "cursor": {
          "ref": "5750cf8d-e762-413d-b1b5-75c8819b97ee",
          "length": 155,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d0902636-4d6b-4ea3-99bc-bb1d953d06ad"
        },
        "item": {
          "id": "3f846099-4abe-4c36-9566-bd15dba6a29e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "968317b2-8aaf-4c8e-9380-c92988c14b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e722c3-c5b8-48cf-9768-30ade4e314fc",
        "cursor": {
          "ref": "48a0adfc-ae9b-42fb-9e88-9449f4d055c1",
          "length": 155,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "24272a03-dcd1-46d0-9b63-3dca8841482e"
        },
        "item": {
          "id": "62e722c3-c5b8-48cf-9768-30ade4e314fc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "41efbcf8-4069-4e91-b898-c44c63072f56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20df76c8-4fd3-404c-9a79-bbf2d2577e49",
        "cursor": {
          "ref": "3cb8bf22-e2b3-43ec-a4ea-1e5d4b99c3fa",
          "length": 155,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2bd148fc-4818-46e7-a39d-c0975934ff22"
        },
        "item": {
          "id": "20df76c8-4fd3-404c-9a79-bbf2d2577e49",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "14511431-b94d-46f8-a6ed-bae8e60a9c40",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 14,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf3ee22-bbc4-4ecd-ab4c-9c4a3136c7fd",
        "cursor": {
          "ref": "f6e9563c-393b-4b26-b5ca-12ffeea7ac69",
          "length": 155,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ebe11d70-02bd-41fb-8bfe-6c3169e73ee8"
        },
        "item": {
          "id": "faf3ee22-bbc4-4ecd-ab4c-9c4a3136c7fd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2d517953-0201-4dc3-ba86-7f3d2aafec9d",
          "status": "OK",
          "code": 200,
          "responseTime": 983,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68692935-9036-48f4-90d0-a339200b3f89",
        "cursor": {
          "ref": "94db74ad-5649-4b3d-8c3f-8713008834c8",
          "length": 155,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f33ffc41-8deb-4bfc-8953-2cf881da0be1"
        },
        "item": {
          "id": "68692935-9036-48f4-90d0-a339200b3f89",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "040bc313-7a15-4029-bd91-4d374c509bdc",
          "status": "OK",
          "code": 200,
          "responseTime": 578,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0fbd8d-83ba-40ad-81fd-789bf478e03f",
        "cursor": {
          "ref": "bae35ced-fd8b-4d5d-bc81-57f84bfa7ed1",
          "length": 155,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "18b31a45-5708-462c-afd8-0889cd912157"
        },
        "item": {
          "id": "4c0fbd8d-83ba-40ad-81fd-789bf478e03f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c81fc020-b1f0-47cc-9bb3-eba2e3effe17",
          "status": "OK",
          "code": 200,
          "responseTime": 1118,
          "responseSize": 18
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a32a35-a372-4100-80cd-c20c5837d6c9",
        "cursor": {
          "ref": "49ee4a71-5f05-44ef-84af-3179c9487857",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d9cf384a-cc8c-419f-8e40-e2ee6baf58a2"
        },
        "item": {
          "id": "42a32a35-a372-4100-80cd-c20c5837d6c9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8ca4ec57-5802-4fb4-819b-f908f9c50145",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a32a35-a372-4100-80cd-c20c5837d6c9",
        "cursor": {
          "ref": "49ee4a71-5f05-44ef-84af-3179c9487857",
          "length": 155,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d9cf384a-cc8c-419f-8e40-e2ee6baf58a2"
        },
        "item": {
          "id": "42a32a35-a372-4100-80cd-c20c5837d6c9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8ca4ec57-5802-4fb4-819b-f908f9c50145",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d931e26-4c57-412f-9e6f-735a37090ceb",
        "cursor": {
          "ref": "88efee14-8a35-492a-9fca-c8b1d241a43d",
          "length": 155,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a0ada220-4a10-4628-bc79-6b3922ebb5fd"
        },
        "item": {
          "id": "9d931e26-4c57-412f-9e6f-735a37090ceb",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "7efa3884-a6a9-442a-98c6-85412857e073",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 14,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c952117a-af44-4405-9eb4-0487b98fb860",
        "cursor": {
          "ref": "021ed59e-966d-4abf-8f9f-356d4d2b4ac0",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c23bbcd3-c889-4345-b710-4520199578ea"
        },
        "item": {
          "id": "c952117a-af44-4405-9eb4-0487b98fb860",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f30050ab-c55f-4b76-8f77-a41237d4a109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "c952117a-af44-4405-9eb4-0487b98fb860",
        "cursor": {
          "ref": "021ed59e-966d-4abf-8f9f-356d4d2b4ac0",
          "length": 155,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c23bbcd3-c889-4345-b710-4520199578ea"
        },
        "item": {
          "id": "c952117a-af44-4405-9eb4-0487b98fb860",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f30050ab-c55f-4b76-8f77-a41237d4a109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:152)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:152)"
            }
          }
        ]
      },
      {
        "id": "f73abefb-23f1-4a2e-b09e-bcac27badd8a",
        "cursor": {
          "ref": "acf5cf36-8d22-4db1-b406-ff2aac0427cb",
          "length": 155,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0ef59b47-2d4b-4ce1-9e44-7bb65c654d38"
        },
        "item": {
          "id": "f73abefb-23f1-4a2e-b09e-bcac27badd8a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a23098d6-f1fc-4ff0-b514-d9fab6d61d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:153)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:153)"
            }
          }
        ]
      },
      {
        "id": "f61ea1ff-4be9-4481-b318-e95802bf6cb8",
        "cursor": {
          "ref": "d0ca5a11-47a0-4a46-85a0-36e1433ea008",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "af1fb153-3c92-4852-91bc-c60a50ec60b9"
        },
        "item": {
          "id": "f61ea1ff-4be9-4481-b318-e95802bf6cb8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1f22fc5a-1675-440f-a2e9-a484a38ac0a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61ea1ff-4be9-4481-b318-e95802bf6cb8",
        "cursor": {
          "ref": "d0ca5a11-47a0-4a46-85a0-36e1433ea008",
          "length": 155,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "af1fb153-3c92-4852-91bc-c60a50ec60b9"
        },
        "item": {
          "id": "f61ea1ff-4be9-4481-b318-e95802bf6cb8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1f22fc5a-1675-440f-a2e9-a484a38ac0a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10e025a-f2f4-49a1-af37-23715716c542",
        "cursor": {
          "ref": "e9e7704f-12a7-4090-b1f6-9153731ba1fe",
          "length": 155,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "476298f6-fdba-487d-bdbe-69d2f1a5fbdb"
        },
        "item": {
          "id": "e10e025a-f2f4-49a1-af37-23715716c542",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "f31f2381-d44c-4769-bde0-a2f68155f2bf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}